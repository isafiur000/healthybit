' Gambas class file

Private MySocket As Socket
Private $sType As String

Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me, "False")
  txtLog.Text = ""
  If modGlobalSetting.ShowSettingFromDB("MessageLog/SecureChat") = "Yes" Then
    chklog.Value = True
  Endif

End

Public Sub _new(userid As String, newIP As String, sType As String)

  $sType = sType

  If $sType = "conn" Then
    MySocket = New Socket As "MySocket"
    Me.Title = "Client:"
    MySocket.Host = newIP
    MySocket.Port = modAppSupport.GetSelectedPort(userid)
    MySocket.Connect()
  Else If $sType = "acc" Then
    Me.Title = "Server:"
    MySocket = modAppSupport.FindServerSocket(modHelpVariable.$LogInCategory).Accept()
    MySocket.Blocking = False
    txtmsg.Text = modGeneral.GetCurrentUserFromIP(MySocket.LocalHost) & " and " & modGeneral.GetCurrentUserFromIP(MySocket.RemoteHost) & " are connected"
  Endif

End

'ready for client socket
Public Sub MySocket_Ready()

  Dim strData As String

  strData = modGeneral.GetCurrentUserFromIP(MySocket.LocalHost) & " and " & modGeneral.GetCurrentUserFromIP(MySocket.RemoteHost) & " are connected"
  Write #MySocket, strData, Len(strData)
  txtmsg.Text = strData

End

Public Sub MySocket_Error()

  Dim xx As String

  If $sType = "conn" Then
    Select Case MySocket.Status
      Case Net.CannotCreateSocket
        xx = ("The system does not allow to create a socket")
      Case Net.HostNotFound
        xx = ("Host not Found")
      Case Net.ConnectionRefused
        xx = ("Unable to Connect. Connection Refused")
      Case Net.CannotRead
        xx = ("Error Reading Data")
      Case Net.CannotWrite
        xx = ("Error Writing Data")
    End Select

  Else If $sType = "acc" Then
    xx = "Unable to bind socket"
  Endif

  txtmsg.Text = xx

End

'read server socket
Public Sub Socket_Read()

  Dim sCad As String

  Read #MySocket, sCad, Lof(MySocket)
  txtLog.Text = txtLog.Text & modGeneral.GetCurrentUserFromIP(MySocket.RemoteHost) & ": " & sCad & Chr(13) & Chr(10)

End

'read client socket
Public Sub MySocket_Read()

  Dim sCad As String

  If MySocket.Status = Net.Connected Then
    Read #MySocket, sCad, Lof(MySocket)
    txtLog.Text = txtLog.Text & modGeneral.GetCurrentUserFromIP(MySocket.RemoteHost) & ": " & sCad & Chr(13) & Chr(10)
  Endif

End

Public Sub btnsend_Click()

  If chklog.Value = True Then
    modAppSupport.SaveMessageLog(modGeneral.GetCurrentUserFromIP(MySocket.RemoteHost), txtsend.Text, Me.Title)
  Endif
  SendData(txtsend.Text)
  txtsend.Text = ""
  txtsend.SetFocus

End

'on sending data
Private Sub SendData(strData As String)

  If MySocket.Status = Net.Connected Then
    Write #MySocket, strData, Len(strData)
    txtLog.Text = txtLog.Text & modGeneral.GetCurrentUserFromIP(MySocket.LocalHost) & ": " & strData & Chr(13) & Chr(10)
  Endif

End

Public Sub Form_Close()

  SendData("Disconnected")
  If MySocket.Status > 0 Then Close #MySocket

End
