' Gambas class file

Private $rData As Result
Private $DepartLst As String[]

Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me)
  cmbvisit.List = ["New", "Follow-up"]
  cmbtype.List = ["Test", "Service", "Procedure", "Equipment", "Radio", "Others"]
  cmbtypeextra.List = ["AllTime", "Before", "After"]
  cmbpayable.List = ["Enable", "Disable"]
  $DepartLst = modGeneral.GetDepartmentsForOPDBoth()
  cmbpackage.List = modNonMedical.FillDiscountCombo()

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub Form_KeyRelease()

  modGeneralmain.GoToNextControlTab()

End

Public Sub cmbpackage_Click()

  cmbbilmode.Text = modNonMedical.GetDiscBindBillMode(cmbpackage.Text)

End

Public Sub btnaddept_Click()

  lstdepart.List = GridListView("Select Departments", $DepartLst)

End

Public Sub btncleardept_Click()

  lstdepart.Clear()

End

Public Sub btnrefresh_Click()

  If cmbpackage.Text Then
    FillGroupGrid()
    cmbtype.SetFocus
  Endif

End

Public Sub btnrefreshrate_Click()

  If cmbbilmode.Text Then
    FillRateGrid()
    cmbtype.SetFocus
  Endif

End

Private Sub FillGroupGrid()

  Dim sql As String

  sql = "select fldid,fldgroup,flddisctype,fldfollow,flditemname,flditemqty,fldexitemtype,fldcutoff,fldbillingmode from tblautogroup where flddisctype=&1"
  $rData = modDatabase.$myConn.Exec(sql, cmbpackage.Text)
  FillGridData()

End

Private Sub FillRateGrid()

  Dim sql As String

  sql = "select fldid,fldgroup,flddisctype,fldfollow,flditemname,flditemqty,fldexitemtype,fldcutoff,fldbillingmode from tblautogroup where fldbillingmode=&1"
  $rData = modDatabase.$myConn.Exec(sql, cmbbilmode.Text)
  FillGridData()

End

Private Sub FillGridData()

  Dim Column As Integer
  Dim fld As ResultField

  GridView1.Clear
  GridView1.Columns.Count = $rData.Fields.Count
  GridView1.Rows.Count = $rData.Count

  For Each $rData
    Column = 0
    For Each fld In $rData.Fields
      modGeneralMain.GridExplicitDecoration(GridView1, $rData.Index, Column)
      GridView1[$rData.Index, Column].Text = $rData[fld.Name]
      Column = Column + 1
    Next
  Next
  GridView1.Row = 0

  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 1
    .Columns[1].Width = 125 * modBasic.$AppWidthRatio
    .Columns[2].Width = 125 * modBasic.$AppWidthRatio
    .Columns[3].Width = 75 * modBasic.$AppWidthRatio
    .Columns[4].Width = 225 * modBasic.$AppWidthRatio
    .Columns[5].Width = 50 * modBasic.$AppWidthRatio
    .Columns[6].Width = 100 * modBasic.$AppWidthRatio
    .Columns[7].Width = 100 * modBasic.$AppWidthRatio
    .Columns[8].Width = 1

    .Columns[1].Text = "Department"
    .Columns[2].Text = "Package"
    .Columns[3].Text = "Visit"
    .Columns[4].Text = "Particulars"
    .Columns[5].Text = "QTY"
    .Columns[6].Text = "Timing"
    .Columns[7].Text = "CutOff"
  End With

End

Public Sub GridView1_Click()

  Dim res As Result

  res = modDatabase.$myConn.Exec("select fldgroup,flddisctype,fldbillingmode,fldfollow,flditemtype,flditemname,flditemqty,fldexitemtype,fldcutoff,fldpayable from tblautogroup where fldid=&1", GridView1[GridView1.Row, 0].Text)                                                 ''
  If res.Available Then
    cmbpackage.Text = res["flddisctype"]
    cmbbilmode.Text = res["fldbillingmode"]
    cmbvisit.Text = res["fldfollow"]
    cmbtype.Text = res["flditemtype"]
    cmbtest.Text = res["flditemname"]
    txtqty.Value = res["flditemqty"]
    cmbtypeextra.Text = res["fldexitemtype"]
    dtextra.Value = res["fldcutoff"]
    cmbpayable.Text = res["fldpayable"]
  Endif

End

Public Sub cmbtype_Click()

  If cmbbilmode.Text And If cmbtype.Text Then
    cmbtest.List = modNonMedical.NonStockBillActiveItemArray(modNonMedical.GetBillItemCategoryFromCombo(cmbtype.Text), cmbbilmode.Text)
  Endif

End

Public Sub cmbtest_GotFocus()

  Dim xLst As String[]

  If cmbbilmode.Text And If cmbtype.Text Then
    If Not cmbtest.Text Then
      If modBasic.$ItemListFormat = "GridView" Then
        xLst = modNonMedical.NonStockBillActiveItemArray(modNonMedical.GetBillItemCategoryFromCombo(cmbtype.Text), cmbbilmode.Text)
        If xLst.Count Then
          cmbtest.Text = GridViewNew("Select Particulars", xLst, False, cmbtest, GridView1.Height)
        Endif
      Endif
    Endif
  Endif

End

Public Sub cmbtype_GotFocus()

  cmbtest.Clear()

End

Public Sub btnBrOK_KeyRelease()

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    btnBrOK_Click()
  Endif

End

Public Sub btnBrOK_Click()

  Dim res As Result
  Dim xdept As String

  If lstdepart.List.Count And If cmbtest.Text And If cmbtype.Text And If cmbbilmode.Text Then
    For Each xdept In lstdepart.List
      res = modDatabase.$myConn.Create("tblautogroup")
      res["fldgroup"] = xdept
      res["flddisctype"] = cmbpackage.Text
      res["fldbillingmode"] = cmbbilmode.Text
      res["fldfollow"] = cmbvisit.Text
      res["flditemtype"] = cmbtype.Text
      res["flditemname"] = cmbtest.Text
      res["flditemqty"] = txtqty.Value
      res["fldexitemtype"] = cmbtypeextra.Text
      res["fldcutoff"] = dtextra.Value
      res["fldpayable"] = cmbpayable.Text
      res["xyz"] = False
      res.Update
    Next
    FillGroupGrid()
    cmbtype.Text = ""
    cmbtest.Text = ""
    txtqty.Value = 0
    cmbtypeextra.Text = ""
    Balloon.Info(("Information saved"), btnBrOK)
    Balloon.Delay = modBasic.$BalloonDelay
    cmbtype.SetFocus
  Endif

End

Public Sub btnedit_Click()

  Dim res As Result
  Dim Row As Integer

  If GridView1.Rows.Selection.Count > 0 Then
    Row = GridView1.Row
    res = modDatabase.$myConn.Edit("tblautogroup", "fldid=&1", GridView1[GridView1.Row, 0].Text)
    res["flddisctype"] = cmbpackage.Text
    res["fldbillingmode"] = cmbbilmode.Text
    res["fldfollow"] = cmbvisit.Text
    res["flditemtype"] = cmbtype.Text
    res["flditemname"] = cmbtest.Text
    res["flditemqty"] = txtqty.Value
    res["fldexitemtype"] = cmbtypeextra.Text
    res["fldcutoff"] = dtextra.Value
    res["fldpayable"] = cmbpayable.Text
    res["xyz"] = False
    res.Update
    FillGroupGrid()
    GridView1.Row = Row
    Balloon.Info(("Information updated"), btnedit)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub cmbtype_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbtype)
  modFillContainer.RestrictComboToContent(cmbtype)

End

Public Sub GridView1_Menu()

  mnuhide.Popup

End

Public Sub mnudel_Click()

  If GridView1.Rows.Selection.Count > 0 Then
    modDatabase.$myConn.Delete("tblautogroup", "fldid=&1", GridView1[GridView1.Row, 0].Text)
    FillGroupGrid()
    Balloon.Delete(("Information deleted"), GridView1)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub mnudeleteall_Click()

  Dim Row As Integer

  For Row = 0 To GridView1.Rows.Count - 1
    modDatabase.$myConn.Delete("tblautogroup", "fldid=&1", GridView1[Row, 0].Text)
  Next
  FillGroupGrid()
  Balloon.Delete(("Information deleted"), GridView1)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnexport_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, Me.Title, cmbpackage.Text)

End

Public Sub btndeptreport_Click()

  Dim xPath As String

  Inc Application.Busy
  xPath = modRepoMaster.RegistAutoBillingList()
  Dec Application.Busy
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

Public Sub btnpackreport_Click()

  Dim xPath As String

  Inc Application.Busy
  xPath = modRepoMaster.RegistAutoBillingPackList()
  Dec Application.Busy
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

Public Sub cmbtypeextra_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbtypeextra)
  modFillContainer.RestrictComboToContent(cmbtypeextra)

End

Public Sub cmbtypeextra_LostFocus()

  modFillContainer.RestrictCombo(cmbtypeextra)

End

Public Sub cmbpackage_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbpackage)
  modFillContainer.RestrictComboToContent(cmbpackage)

End

Public Sub cmbtest_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbtest)
  modFillContainer.RestrictComboToContent(cmbtest)

End

Public Sub cmbvisit_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbvisit)
  modFillContainer.RestrictComboToContent(cmbvisit)

End

Public Sub cmbpayable_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbpayable)
  modFillContainer.RestrictComboToContent(cmbpayable)

End
