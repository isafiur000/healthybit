' Gambas class file

Public Sub Form_Arrange()

  modAppSupport.SetWorkSpaceImage()

End

Public Sub Form_Open()

  modGeneralMain.GetFirstValues(ServerSocket1, ServerSocket2)
  modGeneralMain.LoadMainForms(Me, pnltop, pnlleft, Workspace1, pnlright, pnlbottom)
  DiaplayCustMenu()
  modBasic.LoadRegistrationSetting()
  modBasic.LoadCashierBillingSettings()
  modBasic.LoadInvoicingSetting()
  modBasic.SetAccountRules()
  modBasic.LoadClaimParametes()
  modBasic.LoadSSFClaim()

  modBasic.ChartSettingsAll()

  If MMain.$SISHAppMode = "HIS" Then
  Else
    mnuextra.Visible = False
  Endif
  If modHelpVariable.$IRDLevel = "Yes" Then
    mnuyearly.Visible = True
  Else
    mnuyearly.Visible = False
  Endif

  ''specific
  If MMain.$IsPolice = True Then
    mnuspolicecateg.Visible = True
  Else
    mnuspolicecateg.Visible = False
  Endif
  If MMain.$CustomFormat = "Nobel" Then
    mnuspecial.Visible = True
  Else
    mnuspecial.Visible = False
  Endif

End

Public Sub Form_Close()

  modGeneralMain.ExitAllWindows()

End

''---------------------------------------- CustomAccount Reports -------------------------------------
Private Sub DiaplayCustMenu()

  If modSettings.ShowSettingForReport("Account.CustomQuery1/Name") Then
    mnucust1.Caption = modSettings.ShowSettingForReport("Account.CustomQuery1/Name")
    mnucust1.Tag = "Account.CustomQuery1"
    mnucust1.Enabled = True
  Endif

  If modSettings.ShowSettingForReport("Account.CustomQuery2/Name") Then
    mnucust2.Caption = modSettings.ShowSettingForReport("Account.CustomQuery2/Name")
    mnucust2.Tag = "Account.CustomQuery2"
    mnucust2.Enabled = True
  Endif

  If modSettings.ShowSettingForReport("Account.CustomQuery3/Name") Then
    mnucust3.Caption = modSettings.ShowSettingForReport("Account.CustomQuery3/Name")
    mnucust3.Tag = "Account.CustomQuery3"
    mnucust3.Enabled = True
  Endif

  If modSettings.ShowSettingForReport("Account.CustomQuery4/Name") Then
    mnucust4.Caption = modSettings.ShowSettingForReport("Account.CustomQuery4/Name")
    mnucust4.Tag = "Account.CustomQuery4"
    mnucust4.Enabled = True
  Endif

  If modSettings.ShowSettingForReport("Account.CustomQuery5/Name") Then
    mnucust5.Caption = modSettings.ShowSettingForReport("Account.CustomQuery5/Name")
    mnucust5.Tag = "Account.CustomQuery5"
    mnucust5.Enabled = True
  Endif

End

Public Sub mnucust1_Click()

  Dim hForm As FmCustQueryTable

  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust1.Tag)
  modWorkSpace.Add(hForm)

End

Public Sub mnucust2_Click()

  Dim hForm As FmCustQueryTable

  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust2.Tag)
  modWorkSpace.Add(hForm)

End

Public Sub mnucust3_Click()

  Dim hForm As FmCustQueryTable

  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust3.Tag)
  modWorkSpace.Add(hForm)

End

Public Sub mnucust4_Click()

  Dim hForm As FmCustQueryTable

  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust4.Tag)
  modWorkSpace.Add(hForm)

End

Public Sub mnucust5_Click()

  Dim hForm As FmCustQueryTable

  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust5.Tag)
  modWorkSpace.Add(hForm)

End

''=========================== Others ========================================
Public Sub mnuextrareceipt_Click()

  fmExtReceipt.Close
  fmExtReceipt.ShowModal

End

Public Sub mnupersonal_Click()

  modWorkSpace.Remove(fmPersonal)
  modWorkSpace.Add(fmPersonal)

End

Public Sub mnumail_Click()

  fmMail.Close
  fmMail.ShowModal

End

Public Sub mnuregist_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmDiscSetting.Close
    fmDiscSetting.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub Menu1_Click()

  fmExtraSetting.Close
  fmExtraSetting.ShowModal

End

Public Sub mnulab_Click()

  Dim hForm As FmCost

  hForm = New FmCost("Diagnostic Tests Cost")
  modWorkSpace.Add(hForm)

End

Public Sub mnuradio_Click()

  Dim hForm As FmCost

  hForm = New FmCost("Radio Diagnostics Cost")
  modWorkSpace.Add(hForm)

End

Public Sub mnuservice_Click()

  Dim hForm As FmCost

  hForm = New FmCost("General Services Cost")
  modWorkSpace.Add(hForm)

End

Public Sub mnuproc_Click()

  Dim hForm As FmCost

  hForm = New FmCost("Procedures Cost")
  modWorkSpace.Add(hForm)

End

Public Sub mnuequipment_Click()

  Dim hForm As FmCost

  hForm = New FmCost("Equipment Cost")
  modWorkSpace.Add(hForm)

End

Public Sub mnuother_Click()

  Dim hForm As FmCost

  hForm = New FmCost("Other Items Cost")
  modWorkSpace.Add(hForm)

End

Public Sub mnucostingall_Click()

  modWorkSpace.Remove(fmCostTree)
  modWorkSpace.Add(fmCostTree)

End

Public Sub mnustock_Click()

  modWorkSpace.Remove(fmInventoryRate)
  modWorkSpace.Add(fmInventoryRate)

End

Public Sub mnupharmcosting_Click()

  fmPharmCost.Close
  fmPharmCost.ShowModal

End

Public Sub mnudepcredit_Click()

  fmDepartment.Close
  fmDepartment.ShowModal

End

Public Sub mnuappset_Click()

  fmAppSetting.Close
  fmAppSetting.ShowModal

End

Public Sub mnuseract_Click()

  fmAppUser.Close
  fmAppUser.ShowModal

End

Public Sub mnulock_Click()

  fmLock.Close
  fmLock.ShowModal

End

Public Sub mnuscreen_Click()

  If Dialog.SelectDirectory() Then Return
  Wait 2
  Desktop.Screenshot().Save(Dialog.Path &/ modString.GetNowString() & ".png")
  Message.Info(("Screen Shot saved in ") & Dialog.Path, ("OK"))

End

Public Sub mnusummrepo_Click()

  modWorkSpace.Remove(fmSummryReport)
  modWorkSpace.Add(fmSummryReport)

End

Public Sub mnustockDB_Click()

  fmStockDB.Close
  fmStockDB.ShowModal

End

Public Sub ServerSocket1_Connection(RemoteHostIP As String)

  Dim hForm As FmChat

  If ServerSocket1.Status <= Net.Inactive Then Return
  hForm = New FmChat(modBasic.$lbluser, RemoteHostIP, "acc")
  hForm.Show

End

'''---------------------- transfer server -------------------------------------------------------
Public Sub ServerSocket2_Connection(RemoteHostIP As String)

  Dim Myket As Socket

  Myket = ServerSocket2.Accept()
  Myket.Blocking = False
  Print RemoteHostIP

End

Public Sub Socket_Read()

  Dim sCad As String

  If Last.Status <> Net.Connected Then Return
  Read #Last, sCad, Lof(Last)
  modControl.ShowTransferFile(Last.RemoteHost, sCad)

End

Public Sub Workspace1_Menu()

  If Workspace1.Windows.Count = 0 Then
    mnufile.Popup
  Endif

End

Public Sub mnubackground_Click()

  Dialog.Filter = ["*.jpg;*.jpeg;*.png;*.bmp", "Picture files"]
  If Dialog.OpenFile() Then Return
  modSettings.SaveSettingsToVar("AppSetting_DeskPicture/" & modBasic.$lbluser, Dialog.Path)
  modAppSupport.SetWorkSpaceImage()

End

Public Sub mnubillprt_Click()

  fmReportSetting.Close
  fmReportSetting.ShowModal

End

Public Sub mnuitemstatus_Click()

  modWorkSpace.Remove(fmBilledStatus)
  modWorkSpace.Add(fmBilledStatus)

End

Public Sub mnuvashverify_Click()

  modWorkSpace.Remove(fmCashVerify)
  modWorkSpace.Add(fmCashVerify)

End

Public Sub mnureturnform_Click()

  modWorkSpace.Remove(fmBillReturn)
  modWorkSpace.Add(fmBillReturn)

End

Public Sub mnudiagnoreport_Click()

  modWorkSpace.Remove(fmDiagnoReport)
  modWorkSpace.Add(fmDiagnoReport)

End

Public Sub mnushareverify_Click()

  fmShareVerify.Close
  fmShareVerify.ShowModal

End

Public Sub mnurepo_Click()

  Dim xx As String
  Dim xmode As String[]
  Dim xPath As String

  xmode = New String[]
  xmode.Insert(modNonMedical.FillCashModeCombo())
  xmode.Add("%")
  xx = InputCombo(("Select Item Rate Plan"), "Costing List", xmode, "%", True)
  If xx Then
    Inc Application.Busy
    xPath = modRepoMaster.ShowBillingListReport(xx)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnuvendorpay_Click()

  Dim hForm As FmSuperuser

  hForm = New FmSuperuser("Vendor Payment")
  hForm.Show

End

Public Sub mnunewextra_Click()

  modWeb.ExecGeneralSub()

End

Public Sub mnubackstock_Click()

  If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
    Inc Application.Busy
    modStockSub.BackupEntryStock(modBasic.$compID)
    Dec Application.Busy

    Message.Info(("Backup completed"), ("OK"))
  Endif

End

Public Sub mnuledger_Click()

  modWorkSpace.Remove(fmLedger)
  modWorkSpace.Add(fmLedger)

End

Public Sub mnuprinter_Click()

  fmPrinterSettings.Close
  fmPrinterSettings.ShowModal

End

Public Sub mnuchartset_Click()

  fmChartSetting.Close
  fmChartSetting.ShowModal

End

Public Sub mnubilmode_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("fldsetname", "tblbillingset")
  hForm.Tag = "Rate Plan Codes"
  hForm.ShowModal

End

Public Sub mnuserentry_Click()

  fmPunchRecord.Close
  fmPunchRecord.ShowModal

End

Public Sub mnuwebcam_Click()

  fmDeviceSetting.Close
  fmDeviceSetting.ShowModal

End

Public Sub mnuembedder_Click()

  modExternal.RunExternalFixScript()

End

Public Sub mnuremoaccess_Click()

  fmStreaming.Close
  fmStreaming.ShowModal

End

Public Sub mnutranslate_Click()

  Dim hForm As FmTranslate

  hForm = New FmTranslate("Translate", Clipboard.Paste())
  hForm.ShowModal

End

Public Sub mnuinvsett_Click()

  fmInvoiceSettings.Close
  fmInvoiceSettings.ShowModal

End

Public Sub mnulabelsett_Click()

  fmLabelPrint.Close
  fmLabelPrint.ShowModal

End

Public Sub mnusearrepo_Click()

  fmCheckFile.Close
  fmCheckFile.ShowModal()

End

Public Sub mnunotice_Click()

  fmCompNotice.Close
  fmCompNotice.ShowModal

End

Public Sub mnusershare_Click()

  fmUserShare.Close
  fmUserShare.ShowModal
  ''clear cache
  modSharingGroup.$GroupSharePercentData.Clear()
  modSharingGroup.$GroupShareAmountData.Clear()

End

Public Sub mnuautoconsult_Click()

  fmAutobillsettig.Close
  fmAutobillsettig.ShowModal

End

Public Sub mnuclrlock_Click()

  modPatientSub.CLearAllEncounterLocks(modHelpVariable.$LogInCategory)

End

Public Sub mnuaccrepset_Click()

  fmCusAccReport.Close
  fmCusAccReport.ShowModal

End

Public Sub mnubank_Click()

  Dim hForm As FmAddVarTwo
  Dim yy As String[]

  yy = New String[]
  hForm = New FmAddVarTwo("fldbilltype", "fldacledger", "tblacledger", ["Credit", "Cash"], yy)
  hForm.Tag = "Ledger Accounts"
  hForm.ShowModal

End

Public Sub mnuspolicecateg_Click()

  fmCategoryList.Close
  fmCategoryList.ShowModal

End

Public Sub mnudiscgroup_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("fldgroup", "tbldiscgroup")
  hForm.Tag = "Discount Codes"
  hForm.ShowModal

End

Public Sub mnupatacc_Click()

  Dim hForm As FmPatAccEdit

  hForm = New FmPatAccEdit("")
  hForm.ShowModal

End

Public Sub mnupatdisc_Click()

  fmPatDiscount.Close
  fmPatDiscount.ShowModal

End

Public Sub mnucollreport_Click()

  fmBillCollReport.Close
  fmBillCollReport.ShowModal

End

Public Sub mnucollection_Click()

  fmBillCollect.Close
  fmBillCollect.ShowModal

End

Public Sub mnuclrcache_Click()

  modGeneralMain.CLearUserCollection()

End

Public Sub mnudemograp_Click()

  fmNewDemographic.Close
  fmNewDemographic.ShowModal

End

Public Sub mnurepogrp_Click()

  fmAccGroup.Close
  fmAccGroup.ShowModal

End

Public Sub mnustafflist_Click()

  modWorkSpace.Remove(fmStaffList)
  modWorkSpace.Add(fmStaffList)

End

Public Sub mnussulist_Click()

  modWorkSpace.Remove(fmSocial)
  modWorkSpace.Add(fmSocial)

End

Public Sub mnuplaymedia_Click()

  modAppSupport.PlayMediaFile()

End

Public Sub mnuexit_Click()

  modGeneralMain.CloseAllWindows()

End

Public Sub mnucurconv_Click()

  Dim hForm As FmAddValString

  hForm = New FmAddValString("Currency", "flditemunit", "fldconversion", "tblcurrency")
  hForm.Tag = "Currency Codes"
  hForm.ShowModal

End

Public Sub mnutaxcode_Click()

  Dim hForm As FmAddValString

  hForm = New FmAddValString("Tax Coding", "fldgroup", "fldtaxper", "tbltaxgroup")
  hForm.Tag = "Tax Coding"
  hForm.ShowModal

End

Public Sub mnucshvendors_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("fldvendor", "tblcashvendor")
  hForm.Tag = "Cash Vendors"
  hForm.ShowModal

End

Public Sub mnubrowser_Click()

  Dim xURL As String
  Dim hForm As FmWebView

  xURL = modSettings.ShowSettingFromFIle("GeneralSettings/Browser_URL")
  If xURL Then
    hForm = New FmWebView(xURL)
    modWorkSpace.Add(hForm)
  Endif

End

Public Sub mnuenctransaction_Click()

  fmEncExpense.Close
  fmEncExpense.ShowModal

End

''====================== Special Reports ===================
Public Sub mnuspecreport_Click()

  fmNobelHospital.Close
  fmNobelHospital.ShowModal

End

Public Sub mnulabreceipt_Click()

  modWorkSpace.Remove(fmTempBillRecordNobel)
  modWorkSpace.Add(fmTempBillRecordNobel)

End

Public Sub mnundcinvoice_Click()

  modWorkSpace.Remove(fmPatBillRecordNDC)
  modWorkSpace.Add(fmPatBillRecordNDC)

End

Public Sub mnunlnpinvoice_Click()

  modWorkSpace.Remove(fmPatBillRecordNLNP)
  modWorkSpace.Add(fmPatBillRecordNLNP)

End

Public Sub mnulabclearance_Click()

  Dim hForm As FmRemoClear

  hForm = New FmRemoClear("")
  hForm.ShowModal

End

''--------------- Reports ---------------------
Public Sub mnugeneric_Click()

  modWorkSpace.Remove(fmGroupCateg)
  modWorkSpace.Add(fmGroupCateg)

End

Public Sub mnuserv_Click()

  modWorkSpace.Remove(fmservreport)
  modWorkSpace.Add(fmservreport)

End

Public Sub mnugrpreport_Click()

  modWorkSpace.Remove(fmGroupReport)
  modWorkSpace.Add(fmGroupReport)

End

Public Sub mnumisreport_Click()

  modWorkSpace.Remove(fmGroupMIS)
  modWorkSpace.Add(fmGroupMIS)

End

Public Sub mnumastergrp_Click()

  modWorkSpace.Remove(fmMasterReport)
  modWorkSpace.Add(fmMasterReport)

End

Public Sub mnusharing_Click()

  If modBasic.$PayableCalculation = "Mixed" Then
    modWorkSpace.Remove(fmsharereport)
    modWorkSpace.Add(fmsharereport)
  Else
    modWorkSpace.Remove(fmshareGroup)
    modWorkSpace.Add(fmshareGroup)
  Endif

End

Public Sub mnubill_Click()

  modWorkSpace.Remove(fmPatBillRecord)
  modWorkSpace.Add(fmPatBillRecord)

End

Public Sub mnubillsummary_Click()

  modWorkSpace.Remove(fmPatInvoiceReport)
  modWorkSpace.Add(fmPatInvoiceReport)

End

Public Sub mnudeposit_Click()

  modWorkSpace.Remove(fmDepositReport)
  modWorkSpace.Add(fmDepositReport)

End

Public Sub mnuvouchers_Click()

  modWorkSpace.Remove(fmVoucherReport)
  modWorkSpace.Add(fmVoucherReport)

End

Public Sub mnusalesreport_Click()

  Dim xType As String
  Dim xdate As Date[]
  Dim inidate As Date
  Dim lstdate As Date
  Dim xPath As String

  xType = InputCombo("Select Sales Book Format", "Sales Book", ["Sales Book", "Sales Return", "Sales Book(All)"], "Sales Book(All)", True)
  If xType Then
    xdate = DoubleDates("Select Dates", "Sales Book", [Now(), Now()])
    If xdate Then
      inidate = xdate[0]
      lstdate = xdate[1]

      If inidate And If lstdate Then
        xPath = modHTMLStock.GetIRDSalesBook(xType, inidate, lstdate)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif
  Endif

End

Public Sub mnuyearly_Click()

  Dim xdate As Date[]
  Dim inidate As Date
  Dim lstdate As Date
  Dim res As Result
  Dim hForm As FRequest

  xdate = DoubleDates("Select Dates", "Yearly Report", [Now(), Now()])
  If xdate Then
    inidate = xdate[0]
    lstdate = xdate[1]

    If inidate And If lstdate Then
      res = modDatabase.$syConn.Exec("select fldfiscal,fldbillno,fldpatname,fldpan,flddate,flditemamt,flddiscountamt,fldtaxable,fldtaxamt,fldtotamt,fldsync,fldprinted,fldactive,flddate,fldpunch,fldprint,xyz from tblfiscal where flddate>=&1 and flddate<=&2", modDate.StartSqlDate(inidate), modDate.EndSqlDate(lstdate))                                                                ''
      hForm = New FRequest(res, "Yearly Report", "YearReport", True)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub mnupur_Click()

  modWorkSpace.Remove(fmSupplier)
  modWorkSpace.Add(fmSupplier)

End

Public Sub mnuinventory_Click()

  modWorkSpace.Remove(fmmedreport)
  modWorkSpace.Add(fmmedreport)

End

Public Sub mnumedsales_Click()

  modWorkSpace.Remove(fmMedSales)
  modWorkSpace.Add(fmMedSales)

End

Public Sub mnutransfer_Click()

  modWorkSpace.Remove(fmmedTransfer)
  modWorkSpace.Add(fmmedTransfer)

End

Public Sub mnuclaimup_Click()

  modWorkSpace.Remove(fmHIUpload)
  modWorkSpace.Add(fmHIUpload)

End

Public Sub mnussfupload_Click()

  modWorkSpace.Remove(fmSSFUpload)
  modWorkSpace.Add(fmSSFUpload)

End

''=================== Require super access ============
Public Sub mnupatsubs_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmPatSubscript.Close
    fmPatSubscript.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuinvsub_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmInvSub.Close
    fmInvSub.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnubillsche_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmBillSchedule.Close
    fmBillSchedule.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuaccregist_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmRegAccSetting.Close
    fmRegAccSetting.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuser_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmForBillSettings.Close
    fmForBillSettings.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuipbilling_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmIPBillSetting.Close
    fmIPBillSetting.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnugodebug_Click()

  If mnugodebug.Caption = "Debug On" Then
    mnugodebug.Caption = "Debug Off"
    modBasic.$DebugMode = True
    modBasic.$DebugDB = True
    db.Debug = True

  Else If mnugodebug.Caption = "Debug Off" Then
    mnugodebug.Caption = "Debug On"
    modBasic.$DebugMode = False
    modBasic.$DebugDB = False
    db.Debug = False

  Endif

End

Public Sub mnubugreport_Click()

  modGeneralMain.SendBugReport(modBasic.$lbluser)

End
