' Gambas class file

Private $ItemList As String[]

Public Sub Form_Open()

  Dim xrateplan As String[]

  modGeneralMain.ArrangeFormCentre(Me)
  cmbshareplan.List = ["Payable", "Referral"]
  cmbexcptype.List = ["Test", "Service", "Procedure", "Equipment", "Radio"]
  cmbcategory.List = modNonMedical.BillItemCategory()                                                   ''
  cmbmajorcategory.List = ["Diagnostic Tests", "Radio Diagnostics", "Procedures", "Equipment", "General Services"]
  cmbusertype.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(flditem) as col from tblprocedureuser"))

  xrateplan = modNonMedical.FillCashModeCombo()
  cmbrateplan.List = xrateplan
  cmbmajorplan.List = xrateplan
  cmbuserstatus.List = ["Active", "Inactive"]
  cmbmajorstatus.List = ["Active", "Inactive"]
  cmbexcepstatus.List = ["Active", "Inactive"]

  $ItemList = New String[]

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub Form_KeyRelease()

  If Key.Code = Key["R"] And If Key.Control Then
    btnexcprefresh_Click()
  Else
    modGeneralmain.GoToNextControlTab()
  Endif

End

''=========================== HOSPITAl =======================
Public Sub btnhosprefresh_Click()

  cmbdepartment.Clear()
  cmbdepartment.Text = ""
  If cmbcategory.Text = "Procedures" Then
    cmbdepartment.List = ["%", "Major", "Minor", "Plaster", "Extra"]
    cmbdepartment.Enabled = True
  Else
    cmbdepartment.Text = "%"
    cmbdepartment.Enabled = False
  Endif
  ShowHospitalGrid()

End

Private Sub GetHospClear()

  cmbrateplan.Text = ""
  cmbdepartment.Clear()
  cmbdepartment.Text = ""
  txthospshare.Value = 0
  txthosptax.Value = 0
  cmbuserstatus.Text = ""

End

Public Sub btnhospadd_Click()

  Dim res As Result

  If cmbshareplan.Text And If cmbcategory.Text And If cmbrateplan.Text And If cmbdepartment.Text Then
    res = modDatabase.$myConn.Create("tblusershare")
    res["fldsharetype"] = cmbshareplan.Text
    res["flditemtype"] = cmbcategory.Text
    res["fldbillingmode"] = cmbrateplan.Text
    res["flddepartname"] = cmbdepartment.Text
    res["fldmaxshare"] = 0
    res["flditemshare"] = txthospshare.Value
    res["flditemtax"] = txthosptax.Value
    res["fldactive"] = cmbuserstatus.Text
    res.Update
    ShowHospitalGrid()
    GetHospClear()
    cmbrateplan.SetFocus
  Endif

End

Public Sub btnhospedit_Click()

  Dim res As Result

  If cmbshareplan.Text And If cmbcategory.Text And If cmbrateplan.Text And If cmbdepartment.Text Then
    res = modDatabase.$myConn.Edit("tblusershare", "fldid=&1", GridView1[GridView1.Row, 0].Text)
    res["fldbillingmode"] = cmbrateplan.Text
    res["flddepartname"] = cmbdepartment.Text
    res["fldmaxshare"] = 0
    res["flditemshare"] = txthospshare.Value
    res["flditemtax"] = txthosptax.Value
    res["fldactive"] = cmbuserstatus.Text
    res.Update
    ShowHospitalGrid()
    cmbrateplan.SetFocus
  Endif

End

Private Sub ShowHospitalGrid()

  Dim res As Result
  Dim Column As Integer
  Dim fld As ResultField

  res = modDatabase.$myConn.Exec("select fldid,fldbillingmode,flddepartname,fldmaxshare,flditemshare,flditemtax,fldsharetype,flditemtype,fldactive from tblusershare where fldsharetype=&1 and flditemtype=&2", cmbshareplan.Text, cmbcategory.Text)                                                                                                                     ''

  GridView1.Clear
  GridView1.Columns.Count = res.Fields.Count
  GridView1.Rows.Count = res.Count

  For Each res
    Column = 0
    For Each fld In res.Fields
      modGeneralMain.GridExplicitDecoration(GridView1, res.Index, Column)
      GridView1[res.Index, Column].Text = res[fld.Name]
      Column = Column + 1
    Next
  Next
  GridView1.Row = 0

  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 1
    .Columns[1].Width = 250 * modBasic.$AppWidthRatio
    .Columns[2].Width = 125 * modBasic.$AppWidthRatio
    .Columns[3].Width = 1
    .Columns[4].Width = 75 * modBasic.$AppWidthRatio
    .Columns[5].Width = 75 * modBasic.$AppWidthRatio
    .Columns[6].Width = 1
    .Columns[7].Width = 1
    .Columns[8].Width = 1

    .Columns[1].Text = "RatePlan"
    .Columns[2].Text = "Depart"
    .Columns[4].Text = "Share(%)"
    .Columns[5].Text = "Tax(%)"
  End With

End

Public Sub GridView1_Click()

  cmbrateplan.Text = GridView1[GridView1.Row, 1].Text
  cmbdepartment.Text = GridView1[GridView1.Row, 2].Text
  txthospshare.Value = GridView1[GridView1.Row, 4].Text
  txthosptax.Value = GridView1[GridView1.Row, 5].Text
  cmbshareplan.Text = GridView1[GridView1.Row, 6].Text
  cmbcategory.Text = GridView1[GridView1.Row, 7].Text
  cmbuserstatus.Text = GridView1[GridView1.Row, 8].Text

End

Public Sub GridView1_Menu()

  mnuhospital.Popup

End

Public Sub mnuhospdelete_Click()

  If GridView1.Rows.Selection.Count > 0 Then
    modDatabase.$myConn.Delete("tblusershare", "fldid=&1", GridView1[GridView1.Row, 0].Text)
    ShowHospitalGrid()
    GetHospClear()
    Balloon.Info(("Information saved"), mnuhospdelete)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

''============================= MAJOR PROCEDURE ===========================
Public Sub btnnajocategrefresh_Click()

  Dim xList As String[]

  If cmbmajorplan.Text And If cmbmajorcategory.Text Then
    xList = modNonMedical.NonStockBillActiveItemArray(cmbmajorcategory.Text, cmbmajorplan.Text)
    xList.Add("%")
    If xList Then
      cmbmajprocedure.Text = GridViewNew("Select Particular", xList, False, cmbmajprocedure, GridView2.Height)
      btnmajorrefresh.SetFocus
      ' cmbmajprocedure.List =xList
    Endif
  Endif

End

Public Sub btnnajocategrefresh_KeyRelease()

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    btnnajocategrefresh_Click()
  Endif

End

Public Sub btnusertype_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("flditem", "tblprocedureuser")
  hForm.ShowModal
  cmbusertype.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(flditem) as col from tblprocedureuser"))

End

Public Sub btnmajorrefresh_Click()

  If cmbshareplan.Text = "Payable" Then
    ShowProcedurePlan()

    If cmbmajprocedure.Text And If cmbmajorcategory.Text Then
      If cmbmajprocedure.Text = "%" Then
      Else
        txtgroupcost.Value = modNonMedical.GetCashBillItemCost(cmbmajprocedure.Text, cmbmajorcategory.Text)
      Endif
    Endif
  Endif

End

Public Sub btnmajorrefresh_KeyRelease()

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    btnmajorrefresh_Click()
  Endif

End

Public Sub txtmajorshare_LostFocus()

  If Not txtmajoramt.Value Then
    Try txtmajoramt.Value = Round(txtmajorshare.Value * txtgroupcost.Value / 100, -2)
  Endif

End

Public Sub txtmajoramt_LostFocus()

  If Not txtmajorshare.Value Then
    Try txtmajorshare.Value = Round(txtmajoramt.Value * 100 / txtgroupcost.Value, -2)
  Endif

End

Public Sub btnmajorconsult_Click()

  Dim xMedUser As String[]

  xMedUser = MedicalSelectedValue(("Select Sharing User"), modGeneral.CategoricalUserList("fldpayable"))
  If xMedUser And If xMedUser.Count Then
    btnmajorconsult.Tag = xMedUser[0]
    btnmajorconsult.Text = xMedUser[1]
  Else
    btnmajorconsult.Tag = ""
    btnmajorconsult.Text = ""
  Endif

End

Private Sub GetProcedClear()

  cmbusertype.Text = ""
  txtmajorshare.Value = 0
  txtmajortax.Value = 0
  txtmajoramt.Value = 0
  btnmajorconsult.Tag = ""
  btnmajorconsult.Text = ""
  cmbmajorstatus.Text = ""

End

Public Sub btnmajoradd_Click()

  Dim res As Result

  If txtgroupcost.Value Or If cmbmajprocedure.Text = "%" Then
    If cmbshareplan.Text And If cmbmajorplan.Text And If cmbmajprocedure.Text And If cmbusertype.Text Then
      If cmbshareplan.Text = "Payable" Then
        res = modDatabase.$myConn.Create("tblprocedureshare")
        res["fldsharetype"] = cmbshareplan.Text
        res["flditemtype"] = cmbmajorcategory.Text
        res["fldbillingmode"] = cmbmajorplan.Text
        res["flditemname"] = cmbmajprocedure.Text
        res["fldusertype"] = cmbusertype.Text
        res["fldmaxshare"] = 0
        res["flditemshare"] = txtmajorshare.Value
        res["flditemamt"] = txtmajoramt.Value
        res["flditemtax"] = txtmajortax.Value
        res["flddefault"] = btnmajorconsult.Tag
        res["fldactive"] = cmbmajorstatus.Text
        res.Update
        ShowProcedurePlan()
        GetProcedClear()
        cmbusertype.SetFocus
      Endif
    Endif
  Endif

End

Public Sub btnprocedit_Click()

  Dim res As Result

  If txtgroupcost.Value Or If cmbmajprocedure.Text = "%" Then
    If cmbshareplan.Text And If cmbmajorplan.Text And If cmbmajprocedure.Text And If cmbusertype.Text Then
      If cmbshareplan.Text = "Payable" Then
        res = modDatabase.$myConn.Edit("tblprocedureshare", "fldid=&1", GridView2[GridView2.Row, 0].Text)
        res["fldusertype"] = cmbusertype.Text
        res["fldmaxshare"] = 0
        res["flditemshare"] = txtmajorshare.Value
        res["flditemamt"] = txtmajoramt.Value
        res["flditemtax"] = txtmajortax.Value
        res["flddefault"] = btnmajorconsult.Tag
        res["fldactive"] = cmbmajorstatus.Text
        res.Update
        ShowProcedurePlan()
      Endif
    Endif
  Endif

End

Private Sub ShowProcedurePlan()

  Dim res As Result
  Dim Column As Integer
  Dim fld As ResultField
  Dim xper As Float
  Dim xtot As Float

  res = modDatabase.$myConn.Exec("select fldid,flditemname,fldusertype,fldmaxshare,flditemshare,flditemamt,flditemtax,fldsharetype,fldbillingmode,flddefault,fldactive from tblprocedureshare where fldsharetype=&1 and fldbillingmode=&2 and flditemname=&3", cmbshareplan.Text, cmbmajorplan.Text, cmbmajprocedure.Text)                                                                                                                     ''
  GridView2.Clear
  GridView2.Columns.Count = res.Fields.Count
  GridView2.Rows.Count = res.Count

  xper = 0
  xtot = 0
  For Each res
    xper = xper + res["flditemshare"]
    xtot = xtot + res["flditemamt"]
    Column = 0
    For Each fld In res.Fields
      modGeneralMain.GridExplicitDecoration(GridView2, res.Index, Column)
      GridView2[res.Index, Column].Text = res[fld.Name]
      Column = Column + 1
    Next
  Next
  GridView2.Row = 0
  txtmajtotper.Value = xper
  txtmajtotamt.Value = xtot

  With GridView2
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 1
    .Columns[1].Width = 250 * modBasic.$AppWidthRatio
    .Columns[2].Width = 125 * modBasic.$AppWidthRatio
    .Columns[3].Width = 1
    .Columns[4].Width = 75 * modBasic.$AppWidthRatio
    .Columns[5].Width = 100 * modBasic.$AppWidthRatio
    .Columns[6].Width = 75 * modBasic.$AppWidthRatio
    .Columns[7].Width = 1
    .Columns[8].Width = 1
    .Columns[9].Width = 1
    .Columns[10].Width = 1

    .Columns[1].Text = "Procedure"
    .Columns[2].Text = "User Type"
    .Columns[4].Text = "Share(%)"
    .Columns[5].Text = "Share(Amt)"
    .Columns[6].Text = "Tax(%)"
  End With

End

Public Sub GridView2_Click()

  cmbmajprocedure.Text = GridView2[GridView2.Row, 1].Text
  cmbusertype.Text = GridView2[GridView2.Row, 2].Text
  txtmajorshare.Value = GridView2[GridView2.Row, 4].Text
  txtmajoramt.Value = GridView2[GridView2.Row, 5].Text
  txtmajortax.Value = GridView2[GridView2.Row, 6].Text
  cmbshareplan.Text = GridView2[GridView2.Row, 7].Text
  cmbmajorplan.Text = GridView2[GridView2.Row, 8].Text
  btnmajorconsult.Tag = GridView2[GridView2.Row, 9].Text
  btnmajorconsult.Text = modGeneral.GetUserFullName(btnmajorconsult.Tag)
  cmbmajorstatus.Text = GridView2[GridView2.Row, 10].Text

End

Public Sub GridView2_Menu()

  mnuproc.Popup

End

Public Sub mnudelproc_Click()

  If GridView2.Rows.Selection.Count > 0 Then
    modDatabase.$myConn.Delete("tblprocedureshare", "fldid=&1", GridView2[GridView2.Row, 0].Text)
    ShowProcedurePlan()
    GetProcedClear()
  Endif

End

Public Sub txtimportgroup_Click()

  If Dialog.OpenFile() Then Return
  txtimportgroup.Text = Dialog.Path

End

Public Sub btnimportgroup_Click()

  Dim hCSV As CsvFile
  Dim xcoll As Collection
  Dim xdelim As String

  Dim res As Result

  If Trim(txtdelimgroup.Text) Then
    xdelim = Trim(txtdelimgroup.Text)
  Else
    xdelim = ";"
  Endif

  If Exist(txtimportgroup.Text) Then
    If Message.Question(("Are you sure ?"), ("No"), ("Yes")) = 2 Then

      Inc Application.Busy
      hCSV = New CsvFile(txtimportgroup.Text, xdelim)
      While hCSV.Eof = False
        xcoll = hCSV.Read()
        res = modDatabase.$myConn.Edit("tblprocedureshare", "fldid=&1", CInt(Trim(xcoll["fldid"])))
        If res.Available Then
          If Trim(xcoll["fldsharetype"]) Then
            res["fldsharetype"] = Trim(xcoll["fldsharetype"])
          Endif
          If Trim(xcoll["flditemtype"]) Then
            res["flditemtype"] = Trim(xcoll["flditemtype"])
          Endif
          If Trim(xcoll["fldbillingmode"]) Then
            res["fldbillingmode"] = Trim(xcoll["fldbillingmode"])
          Endif
          If Trim(xcoll["flditemname"]) Then
            res["flditemname"] = Trim(xcoll["flditemname"])
          Endif
          If Trim(xcoll["fldusertype"]) Then
            res["fldusertype"] = Trim(xcoll["fldusertype"])
          Endif

          If Trim(xcoll["flditemshare"]) And If IsFloat(Trim(xcoll["flditemshare"])) Then
            res["flditemshare"] = CFloat(Trim(xcoll["flditemshare"]))
          Endif
          If Trim(xcoll["flditemamt"]) And If IsFloat(Trim(xcoll["flditemamt"])) Then
            res["flditemamt"] = CFloat(Trim(xcoll["flditemamt"]))
          Endif
          If Trim(xcoll["flditemtax"]) And If IsFloat(Trim(xcoll["flditemtax"])) Then
            res["flditemtax"] = CFloat(Trim(xcoll["flditemtax"]))
          Endif
          If Trim(xcoll["flddefault"]) Then
            res["flddefault"] = Trim(xcoll["flddefault"])
          Endif
          If Trim(xcoll["fldactive"]) Then
            res["fldactive"] = Trim(xcoll["fldactive"])
          Endif

          res.Update()
        Endif

      Wend
      hCSV.Close()
      Dec Application.Busy
      Balloon.Info(("Data Import completed"), btnimportgroup)
      Balloon.Delay = modBasic.$BalloonDelay

    Endif
  Endif

End

''=========================== EXCEPTIONS ===============================
Public Sub btnconsult_Click()

  Dim xList As Variant[]
  Dim xMedUser As String[]

  If cmbshareplan.Text = "Payable" Then
    xList = modGeneral.CategoricalUserList("fldpayable")
  Else If cmbshareplan.Text = "Referral" Then
    xList = modGeneral.CategoricalUserList("fldreferral")
  Endif
  xMedUser = MedicalSelectedValue(("Select Sharing User"), xList)
  If xMedUser And If xMedUser.Count Then
    btnconsult.Tag = xMedUser[0]
    btnconsult.Text = xMedUser[1]
  Else
    btnconsult.Tag = ""
    btnconsult.Text = ""
  Endif

End

Public Sub btnitemulti_Click()

  $ItemList.Clear()
  If cmbexcptype.Text Then
    $ItemList = GridListView(("Select Items"), modNonMedical.NonStockBillingItemArray(modNonMedical.GetBillItemCategoryFromCombo(cmbexcptype.Text), "%"))
  Endif

End

Public Sub cmbexcptype_Click()

  $ItemList.Clear()
  If cmbexcptype.Text Then
    cmbexcpitem.List = modNonMedical.NonStockBillActiveItemArray(modNonMedical.GetBillItemCategoryFromCombo(cmbexcptype.Text), "%")
  Endif

End

Public Sub cmbexcpitem_Click()

  If cmbexcptype.Text And If cmbexcpitem.Text Then
    txtexcepcost.Value = modNonMedical.GetCashBillItemCost(cmbexcpitem.Text, modNonMedical.GetBillItemCategoryFromCombo(cmbexcptype.Text))
  Endif

End

Public Sub txtexcpshare_LostFocus()

  If Not txtexcpshareamt.Value Then
    Try txtexcpshareamt.Value = Round(txtexcpshare.Value * txtexcepcost.Value / 100, -2)
  Endif

End

Public Sub txtexcpshareamt_LostFocus()

  If Not txtexcpshare.Value Then
    Try txtexcpshare.Value = Round(txtexcpshareamt.Value * 100 / txtexcepcost.Value, -2)
  Endif

End

Public Sub btnexcprefresh_Click()

  If btnconsult.Text Then
    FillUserGridShare()
    cmbexcptype.SetFocus
  Endif

End

Private Sub FillUserGridShare()

  Dim sql As String
  Dim res As Result
  Dim Column As Integer
  Dim fld As ResultField

  sql = "select fldid,flditemtype,flditemname,flditemshare,flditemamt,flditemtax,fldactive from tbluserpay where flduserid=&1 ORDER BY flditemname ASC"
  res = modDatabase.$myConn.Exec(sql, btnconsult.Tag)

  GridView3.Clear
  GridView3.Columns.Count = res.Fields.Count
  GridView3.Rows.Count = res.Count

  For Each res
    Column = 0
    For Each fld In res.Fields
      modGeneralMain.GridExplicitDecoration(GridView3, res.Index, Column)
      GridView3[res.Index, Column].Text = res[fld.Name]
      Column = Column + 1
    Next
  Next
  GridView3.Row = 0

  With GridView3
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 1
    .Columns[1].Width = 75 * modBasic.$AppWidthRatio
    .Columns[2].Width = 325 * modBasic.$AppWidthRatio
    .Columns[3].Width = 75 * modBasic.$AppWidthRatio
    .Columns[4].Width = 100 * modBasic.$AppWidthRatio
    .Columns[5].Width = 75 * modBasic.$AppWidthRatio
    .Columns[6].Width = 1

    .Columns[1].Text = "Category"
    .Columns[2].Text = "Particulars"
    .Columns[3].Text = "Share(%)"
    .Columns[4].Text = "Share(Amt)"
    .Columns[5].Text = "Tax(%)"
  End With

End

Public Sub GridView3_Click()

  cmbshareplan.Text = GridView3[GridView3.Row, 1].Text
  cmbexcpitem.Text = GridView3[GridView3.Row, 2].Text
  txtexcpshare.Value = GridView3[GridView3.Row, 3].Text
  txtexcpshareamt.Value = GridView3[GridView3.Row, 4].Text
  txtexcptax.Value = GridView3[GridView3.Row, 5].Text
  cmbexcepstatus.Text = GridView3[GridView3.Row, 6].Text

End

Public Sub btnaddexcp_Click()

  Dim res As Result
  Dim xx As String

  If txtexcepcost.Value Then
    If btnconsult.Tag And If cmbshareplan.Text Then
      If cmbexcpitem.Text Then
        res = modDatabase.$myConn.Create("tbluserpay")
        res["flduserid"] = btnconsult.Tag
        res["flditemname"] = cmbexcpitem.Text
        res["flditemtype"] = cmbshareplan.Text
        res["flditemshare"] = txtexcpshare.Value
        res["flditemamt"] = txtexcpshareamt.Value
        res["flditemtax"] = txtexcptax.Value
        res["fldactive"] = cmbexcepstatus.Text
        res.Update()
      Else
        For Each xx In $ItemList
          res = modDatabase.$myConn.Create("tbluserpay")
          res["flduserid"] = btnconsult.Tag
          res["flditemname"] = xx
          res["flditemtype"] = cmbshareplan.Text
          res["flditemshare"] = txtexcpshare.Value
          res["flditemamt"] = txtexcpshareamt.Value
          res["flditemtax"] = txtexcptax.Value
          res["fldactive"] = cmbexcepstatus.Text
          res.Update()
        Next
      Endif
      $ItemList.Clear()
      FillUserGridShare()
      Balloon.Info(("Information saved"), btnaddexcp)
      Balloon.Delay = modBasic.$BalloonDelay

      ClearException()
      cmbexcptype.SetFocus
    Endif
  Endif

End

Private Sub ClearException()

  cmbexcpitem.Clear()
  cmbexcpitem.Text = ""
  cmbexcptype.Text = ""
  txtexcpshare.Value = 0
  txtexcpshareamt.Value = 0
  txtexcptax.Value = 0
  txtexcepcost.Value = 0
  cmbexcepstatus.Text = ""

End

Public Sub btnexpoexcp_Click()

  modCHTMLReport.ExportGridToHTML(GridView3, "NAME: " & btnconsult.Text & " [" & btnconsult.Tag & "]", modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))                                                 ''

End

Public Sub cmbexcptype_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbexcptype)
  modFillContainer.RestrictComboToContent(cmbexcptype)

End

Public Sub cmbshareplan_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbshareplan)
  modFillContainer.RestrictComboToContent(cmbshareplan)

End

Public Sub GridView3_Menu()

  mnuhide.Popup

End

Public Sub mnudel_Click()

  If GridView3.Rows.Selection.Count > 0 Then
    modDatabase.$myConn.Delete("tbluserpay", "fldid=&1", GridView3[GridView3.Row, 0].Text)
    FillUserGridShare()
    Balloon.Delete(("Information deleted"), GridView3)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub cmbexcpitem_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbexcpitem)
  modFillContainer.RestrictComboToContent(cmbexcpitem)

End

Public Sub btnhospreport_Click()

  Dim xPath As String
  Dim xList As String[]
  Dim xmode As String

  If cmbshareplan.Text Then
    xList = modNonMedical.FillCashModeCombo()
    xmode = InputCombo("Select Rate Plan", "Group Shares", xList, "%", False)
    If xmode Then
      Inc Application.Busy
      xPath = modReportBilling.ShowShareBasicreport(cmbshareplan.Text, xmode)
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif
  Endif

End

Public Sub btnsharemajor_Click()

  Dim xPath As String
  Dim xList As String[]
  Dim xmode As String

  If cmbmajorcategory.Text Then
    xList = modNonMedical.FillCashModeCombo()
    xmode = InputCombo("Select Rate Plan", "Group Shares", xList, "%", False)
    If xmode Then
      Inc Application.Busy
      xPath = modReportBilling.ShowPaybleProcedures(cmbmajorcategory.Text, xmode)
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif
  Else
    Message.Warning(("Select Category"), ("OK"))
  Endif

End

Public Sub btnlistexcp_Click()

  Dim xPath As String

  If cmbshareplan.Text Then
    Inc Application.Busy
    xPath = modReportBilling.ShowExceptionUserListHTML(cmbshareplan.Text)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub cmbcategory_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbcategory)
  modFillContainer.RestrictComboToContent(cmbcategory)

End

Public Sub cmbrateplan_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbrateplan)
  modFillContainer.RestrictComboToContent(cmbrateplan)

End

Public Sub cmbmajorcategory_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbmajorcategory)
  modFillContainer.RestrictComboToContent(cmbmajorcategory)

End

Public Sub cmbmajorplan_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbmajorplan)
  modFillContainer.RestrictComboToContent(cmbmajorplan)

End

Public Sub cmbusertype_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbusertype)
  modFillContainer.RestrictComboToContent(cmbusertype)

End

Public Sub cmbuserstatus_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbuserstatus)
  modFillContainer.RestrictComboToContent(cmbuserstatus)

End

Public Sub cmbmajorstatus_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbmajorstatus)
  modFillContainer.RestrictComboToContent(cmbmajorstatus)

End

Public Sub cmbexcepstatus_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbexcepstatus)
  modFillContainer.RestrictComboToContent(cmbexcepstatus)

End
