' Gambas class file

Public Sub Form_Arrange()

  modAppSupport.SetWorkSpaceImage()

End

Public Sub Form_Open()

  modGeneralMain.GetFirstValues(ServerSocket1, ServerSocket2)
  modGeneralMain.LoadMainForms(Me, pnltop, pnlleft, Workspace1, pnlright, pnlbottom)
  If MMain.$WebReport = "Multiple" Then
    mnuhosplist.Visible = True
  Else
    mnuhosplist.Visible = False
  Endif
  modBasic.ChartSettingsAll()
  If MMain.$SISHAppMode = "HIS" Then
  Else
    mnuextra.Visible = False
  Endif

End

Public Sub Form_Close()

  modGeneralMain.ExitAllWindows()

End

Public Sub mnuscreen_Click()

  If Dialog.SelectDirectory() Then Return
  Wait 2
  Desktop.Screenshot().Save(Dialog.Path &/ modString.GetNowString() & ".png")
  Message.Info(("Screen Shot saved in ") & Dialog.Path, ("OK"))

End

Public Sub mnupersonal_Click()

  modWorkSpace.Remove(fmPersonal)
  modWorkSpace.Add(fmPersonal)

End

Public Sub mnumail_Click()

  fmMail.Close
  fmMail.ShowModal

End

Public Sub mnuappset_Click()

  fmAppSetting.Close
  fmAppSetting.ShowModal

End

Public Sub mnuseract_Click()

  fmAppUser.Close
  fmAppUser.ShowModal

End

Public Sub mnulock_Click()

  fmLock.Close
  fmLock.ShowModal

End

Public Sub mnuadduser_Click()

  Dim hForm As FmSuperuser

  hForm = New FmSuperuser("fmUser")
  hForm.Show
  modBasic.ShowUserPrivilege()

End

Public Sub mnupatient_Click()

  fmPatientUser.Close
  fmPatientUser.ShowModal

End

Public Sub mnucompaccess_Click()

  Dim hForm As FmCompAccess

  hForm = New FmCompAccess("Admin")
  hForm.ShowModal

End

Public Sub mnugeneral_Click()

  fmGeneralSettings.Close
  fmGeneralSettings.ShowModal

End

Public Sub ServerSocket1_Connection(RemoteHostIP As String)

  Dim hForm As FmChat

  If ServerSocket1.Status <= Net.Inactive Then Return
  hForm = New FmChat(modBasic.$lbluser, RemoteHostIP, "acc")
  hForm.Show

End

'''---------------------- transfer server -------------------------------------------------------
Public Sub ServerSocket2_Connection(RemoteHostIP As String)

  Dim Myket As Socket

  Myket = ServerSocket2.Accept()
  Myket.Blocking = False
  Print RemoteHostIP

End

Public Sub Socket_Read()

  Dim sCad As String

  If Last.Status <> Net.Connected Then Return
  Read #Last, sCad, Lof(Last)
  modControl.ShowTransferFile(Last.RemoteHost, sCad)

End

Public Sub Workspace1_Menu()

  If Workspace1.Windows.Count = 0 Then
    mnufile.Popup
  Endif

End

Public Sub mnubackground_Click()

  Dialog.Filter = ["*.jpg;*.jpeg;*.png;*.bmp", "Picture files"]
  If Dialog.OpenFile() Then Return
  modSettings.SaveSettingsToVar("AppSetting_DeskPicture/" & modBasic.$lbluser, Dialog.Path)
  modAppSupport.SetWorkSpaceImage()

End

Public Sub mnubillprt_Click()

  fmReportSetting.Close
  fmReportSetting.ShowModal

End

Public Sub mnunewextra_Click()

  modWeb.ExecGeneralSub()

End

Public Sub mnucuruser_Click()

  fmCurUser.Close
  fmCurUser.ShowModal

End

Public Sub mnuprinter_Click()

  fmPrinterSettings.Close
  fmPrinterSettings.ShowModal

End

Public Sub mnuwebcam_Click()

  fmDeviceSetting.Close
  fmDeviceSetting.ShowModal

End

Public Sub Menu1_Click()

  fmExtraData.Close
  fmExtraData.ShowModal

End

Public Sub mnubackup_Click()

  If Dialog.SelectDirectory() Then Return
  If modHelpVariable.$IRDLevel = "Yes" Then
    modHelpVariable.RecordIRDActivity(modDatabase.$myConn, "Database Backup", Me.Name, "BACKUP", "")
  Endif
  modDatabase.BackUpCurrentDB(Dialog.Path)

End

Public Sub mnuembedder_Click()

  modExternal.RunExternalFixScript()

End

Public Sub mnuremoaccess_Click()

  fmStreaming.Close
  fmStreaming.ShowModal

End

Public Sub mnutranslate_Click()

  Dim hForm As FmTranslate

  hForm = New FmTranslate("Translate", Clipboard.Paste())
  hForm.ShowModal

End

Public Sub mnusearrepo_Click()

  fmCheckFile.Close
  fmCheckFile.ShowModal

End

Public Sub mnunotice_Click()

  fmCompNotice.Close
  fmCompNotice.ShowModal

End

Public Sub mnugpgkey_Click()

  fmgnupg.Close
  fmgnupg.ShowModal

End

Public Sub mnusettrigger_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmTrigger.Close
    fmTrigger.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuftpback_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmFTPBackup.Close
    fmFTPBackup.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnudbsetting_Click()

  Dim xx As String
  Dim xPath As String

  xx = InputCombo(("Group Global Settings Values by "), "DB Settings", ["Location", "Setting"], "", True)
  If xx Then
    Inc Application.Busy
    xPath = modGENReport.ShowDBSettingsList(xx)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnumaintain_Click()

  Dim hForm As FmCompAccess

  hForm = New FmCompAccess("Maintenance")
  hForm.ShowModal

End

Public Sub mnutemplete_Click()

  Dim hForm As FmSuperuser

  hForm = New FmSuperuser("fmMedUpdate")
  hForm.Show

End

Public Sub mnuclrcache_Click()

  modGeneralMain.CLearUserCollection()

End

Public Sub mnuschedule_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmCronJob.Close
    fmCronJob.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuindexsett_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmCreateIndex.Close
    fmCreateIndex.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuchart_Click()

  fmChartSetting.Close
  fmChartSetting.ShowModal

End

Public Sub mnuschemail_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmSchEmail.Close
    fmSchEmail.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuplaymedia_Click()

  modAppSupport.PlayMediaFile()

End

Public Sub mnudbupload_Click()

  Dim hForm As FmCentral
  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    hForm = New FmCentral("Repository")
    hForm.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnulocalupload_Click()

  Dim hForm As FmCentral
  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    hForm = New FmCentral("LocalRepository")
    hForm.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuhosplist_Click()

  fmHospitals.Close
  fmHospitals.ShowModal

End

Public Sub mnuexit_Click()

  modGeneralMain.CloseAllWindows()

End

Public Sub mnuinsert_Click()

  Dim hForm As FmDoubleEntry
  Dim res As Result

  res = modDatabase.$myConn.Exec(Subst("select key1,key2 from &1", "tblnewkey"))
  If res.Available = False Then
    hForm = New FmDoubleEntry("Key Authorization")
    hForm.ShowModal
  Else
    Message.Warning(("Keys already present in database"), ("OK"))
  Endif

End

Public Sub mnubrowser_Click()

  Dim xURL As String
  Dim hForm As FmWebView

  xURL = modSettings.ShowSettingFromFIle("GeneralSettings/Browser_URL")
  If xURL Then
    hForm = New FmWebView(xURL)
    modWorkSpace.Add(hForm)
  Endif

End

Public Sub mnugodebug_Click()

  If mnugodebug.Caption = "Debug On" Then
    mnugodebug.Caption = "Debug Off"
    modBasic.$DebugMode = True
    modBasic.$DebugDB = True
    db.Debug = True

  Else If mnugodebug.Caption = "Debug Off" Then
    mnugodebug.Caption = "Debug On"
    modBasic.$DebugMode = False
    modBasic.$DebugDB = False
    db.Debug = False

  Endif

End

Public Sub mnubugreport_Click()

  modGeneralMain.SendBugReport(modBasic.$lbluser)

End

Public Sub mnuenviron_Click()

  fmEnvInfo.Close
  fmEnvInfo.ShowModal

End
