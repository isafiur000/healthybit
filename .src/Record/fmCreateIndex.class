' Gambas class file

Private $TableList As String[]
Private $FieldList As String[]

Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me)
  $TableList = modDBApp.FillDBTables(modDatabase.$myConn, False)
  lsttables.List = $TableList
  lsttables.SetFocus

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub txtsearch_Change()

  lsttables.List = modString.SelectStringArrayToText(txtsearch.Text, $TableList)

End

Public Sub lsttables_Click()

  lstfield.Clear()
  $FieldList = modDBApp.GetFIeldsinTable(lsttables.Text, True)
  cmbfullfield.List = $FieldList
  GetIndexGrid()

End

Public Sub btntabsel_Click()

  Dim xx As String[]

  xx = SelectListView(("Select Fields in order"), $FieldList, False)
  If xx Then
    lstfield.List = lstfield.List.Insert(xx)
  Endif

End

Private Sub GetIndexGrid()

  Dim hTable As Table
  Dim hInd As Index
  Dim i As Integer

  For Each hTable In modDatabase.$myConn.Tables
    If hTable.Name = lsttables.Text Then
      hTable.Indexes.Refresh()

      GridView1.Clear
      GridView1.Columns.Count = 3
      GridView1.Rows.Count = hTable.Indexes.Count

      i = 0
      For Each hInd In hTable.Indexes
        GridView1[i, 0].Text = hInd.Name
        GridView1[i, 1].Text = hInd.Fields.Join(";")
        i = i + 1
      Next

    Endif
  Next

  With GridView1
    .Columns[0].Text = "Name"
    .Columns[1].Text = "Fields"

    .Columns[0].Width = 150 * modBasic.$AppWidthRatio
    .Columns[1].Width = 500 * modBasic.$AppWidthRatio
  End With

End

Public Sub GridView1_Menu()

  mnufile.Popup

End

Public Sub mnudel_Click()

  Dim hTable As Table

  If GridView1.Rows.Selection.Count Then
    If GridView1[GridView1.Row, 0].Text = "PRIMARY" Then
    Else

      Inc Application.Busy
      For Each hTable In modDatabase.$myConn.Tables
        If hTable.Name = lsttables.Text Then
          modDatabase.$myConn.Exec(Subst("ALTER TABLE &1 DROP INDEX &2", hTable.Name, GridView1[GridView1.Row, 0].Text))
          '           hTable.Indexes.Remove(GridView1[GridView1.Row, 0].Text)
          Break
        Endif
      Next
      Dec Application.Busy

    Endif
  Endif

End

Public Sub btnadd_Click()

  If txtname.Text And If lstfield.Count Then
    Inc Application.Busy
    modDBApp.CreateIndexOnTable(modDatabase.$myConn, lsttables.Text, txtname.Text, lstfield.List, chkunique.Value)
    Dec Application.Busy
    Balloon.Info(("Index Added"), btnadd)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnfulladd_Click()

  Dim res As Result
  Dim sql As String

  If txtname.Text And If cmbfullfield.Text Then
    Inc Application.Busy
    sql = Subst("ALTER TABLE &1 ADD FULLTEXT INDEX &2(&3)", lsttables.Text, txtname.Text, cmbfullfield.Text)
    res = modDatabase.$myConn.Exec(sql)
    Dec Application.Busy
    Balloon.Info(("Index Added"), btnfulladd)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub txtsearch_KeyPress()

  modGeneralMain.InputTextSearchKeyOnly()

End

Public Sub txtname_KeyPress()

  modGeneralMain.InputTextKeyOnly()

End

Public Sub btnreport_Click()

  Dim xPath As String

  Inc Application.Busy
  xPath = modCHTMLDB.GetIndexListReport(modDatabase.$myConn)
  Dec Application.Busy
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End
