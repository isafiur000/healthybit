' Gambas class file

Private $rData As Result
Private $aMyFields As String[]
Private $qtyChart As String[]
Private $amtCHart As String[]
Private $ProgressBar1 As ProgressBar
Private $RepoOption As String
Private $SSQLFields As String[]
Private $ColCount As Integer
Private $newColumn As String[]

Public Sub Form_Open()

  Dim xhospfld As String

  modGeneralMain.ArrangeEmbedForms(Me, Panel1, "Vertical")
  Me.Icon = Picture[modGeneralMain.$strLogo]

  cmbtype.List = ["All Types", "Cash Deposit", "Counter Sales", "Counter Return", "Pharmacy Sales", "Pharmacy Return", "Due Clearance", "Deposit Adjustment"]
  cmbtype.Text = "All Types"
  cmbcategory.List = ["%", "Diagnostic Tests", "General Services", "Procedures", "Equipment", "Radio Diagnostics", "Other Items", "Medicines", "Surgicals", "Extra Items"]
  cmbcashcredit.List = ["Credit", "Cash", "%"]
  cmbcomp.List = modBasic.$AllCompPerList
  cmbcomp.Text = "%"
  cmbaccount.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldacledger) as col from tblacledger"))
  cmbaccount.Add("%")
  cmbaccount.Text = "%"
  cmblocation.List = ["OPD", "IPD", "All"]
  cmblocation.Text = "All"

  If modBasic.$ViewLockInvoice = "User" Then
    cmbsearch.List = ["Encounter", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Upload"]
  Else
    cmbsearch.List = ["Encounter", "Cashier", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Upload"]
    If modBasic.$ViewLockInvoice = "Location" Then
      cmbcomp.Text = modBasic.$compID
      cmbcomp.Enabled = False
    Endif
  Endif

  dtfir.Value = Now()
  dtlast.Value = Now()
  txtselect.Text = ""
  cmbcashcredit.Text = "%"
  cmbcategory.Text = "%"
  $RepoOption = "Invoice"
  SHowEntryBox()

  xhospfld = modDataRepo.HospitalField()
  $SSQLFields = ["fldtime", "fldtime", "fldbillno", "fldencounterval", "fldencounterval", "fldbilltype", "flditemamt", "flddiscountamt", "fldtaxamt", "fldchargedamt", "fldreceivedamt", "fldcurdeposit", "flduserid", "fldbilltype", "fldtaxamt", "flddiscountamt", "fldbankname", "fldchequeno", "fldtaxgroup", "flddiscountgroup", "fldcomp", "fldhostmac", "fldid", "fldid", "fldid"]
  If xhospfld Then
    $SSQLFields.Add(xhospfld)
  Endif
  modHospitalReport.CreateLabConnections()

End

Public Sub Form_Close()

  Try modHospitalReport.$lab1Con.Close
  Try modHospitalReport.$lab2Con.Close
  modGeneralMain.RecordFormExit(Me)

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub cmbsearch_Click()

  txtselect.Clear
  txtselect.Text = ""
  If cmbsearch.Text = "Cashier" Then
    txtselect.List = modGeneral.GetUserIDAll()
  Else If cmbsearch.Text = "Package" Then
    txtselect.List = modNonMedical.FillDiscountCombo()
  Else If cmbsearch.Text = "RatePlan" Then
    txtselect.List = modNonMedical.FillCashModeCombo()
  Else If cmbsearch.Text = "Upload" Then
    txtselect.List = ["Pending", "Completed"]
  Endif

End

Public Sub mnurepoformat_Click()

  If mnurepoformat.Checked = True Then
    $RepoOption = "Invoice"
    mnurepoformat.Checked = False
    SHowEntryBox()
  Else If mnurepoformat.Checked = False Then
    $RepoOption = "Date"
    mnurepoformat.Checked = True
    SHowEntryBox()
  Endif

End

Private Sub SHowEntryBox()

  If $RepoOption = "Date" Then
    txtdtfrom.Visible = True
    txtdtto.Visible = True
    txtinvfrom.Visible = False
    txtinvto.Visible = False
    txtdtfrom.Value = modDate.StartSqlDate(Now())
    txtdtto.Value = modDate.EndSqlDate(Now())
  Else
    txtdtfrom.Visible = False
    txtdtto.Visible = False
    txtinvfrom.Visible = True
    txtinvto.Visible = True
  Endif

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub cmbsearch_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbsearch)
  modFillContainer.RestrictComboToContent(cmbsearch)

End

Public Sub cmbcategory_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbcategory)
  modFillContainer.RestrictComboToContent(cmbcategory)

End

Public Sub cmbcashcredit_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbcashcredit)
  modFillContainer.RestrictComboToContent(cmbcashcredit)

End

Public Sub cmbtype_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbtype)
  modFillContainer.RestrictComboToContent(cmbtype)

End

Private Function GetSQLColumns() As String[]

  Dim xFldList As String[]
  Dim i As Integer

  modCustPatient.FillNewCOlumnCollection(Me.Tag)
  $newColumn = modCustPatient.CustomNewColumnsTitle(Me.Tag)
  xFldList = $SSQLFields.Copy()
  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      xFldList.Add("fldencounterval")
    Next
  Endif
  Return xFldList

End

Public Sub mnusearch_Click()

  Dim xname As String[]
  Dim xFieldList As String[]

  xFieldList = GetSQLColumns()
  xname = InputDoubleText(("Search Patient Name"), ["First Name", "SurName"], ["%", "%"], modBasic.$SurNameList)
  If xname Then
    $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from tbltempbilldetail where fldtime>=&1 and fldtime<=&2 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where lower(fldptnamefir) like &3 and lower(fldptnamelast) like &4))", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), LCase(xname[0]), LCase(xname[1]))
    FillGrid()
  Endif

End

Private Function ExecuteQuery(xFldList As String[]) As Result

  Dim res As Result
  Dim Bll As String
  Dim txuser As String
  Dim xcateg As String
  Dim xregist As String
  Dim yregist As String
  Dim xsear As String

  If cmbtype.Text = "All Types" Then
    Bll = "%"
  Else
    Bll = modBillLock.ReceiptSign(cmbtype.Text) & "%"
  Endif

  If modBasic.$ViewLockInvoice = "User" Then
    txuser = modBasic.$lbluser
  Else
    txuser = "%"
  Endif

  If cmbcategory.Text = "%" Then
    xcateg = ""
  Else
    xcateg = " and fldbillno in(select fldbillno from tblpatbilling where flditemtype like &7)"
  Endif

  If cmbaccount.Text = "%" Then
    xregist = ""
  Else
    xregist = " and lower(fldbankname) like &8"
  Endif

  If cmblocation.Text = "All" Then
    yregist = ""
  Else
    If cmblocation.Text = "OPD" Then
      yregist = " and fldprevdeposit=&9"
    Else If cmblocation.Text = "IPD" Then
      yregist = " and fldprevdeposit>&9"
    Endif
  Endif

  If txtselect.Text = "" Then
    xsear = ""
  Else
    If cmbsearch.Text = "Encounter" Then
      xsear = " and lower(fldencounterval) like &{10}"
    Else If cmbsearch.Text = "Cashier" Then
      xsear = " and lower(flduserid) like &{10}"
    Else If cmbsearch.Text = "Invoice" Then
      xsear = " and lower(fldbillno) like &{10}"
    Else If cmbsearch.Text = "Package" Then
      xsear = " and fldencounterval in(select fldencounterval from tblencounter where flddisctype like &{10})"
    Else If cmbsearch.Text = "Reference" Then
      xsear = " and lower(fldchequeno) like &{10}"
    Else If cmbsearch.Text = "PatientCode" Then
      xsear = " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptcode like &{10}))"
    Else If cmbsearch.Text = "RatePlan" Then
      xsear = " and fldencounterval in(select fldencounterval from tblencounter where fldbillingmode like &{10})"
    Else If cmbsearch.Text = "Upload" Then
      If txtselect.Text = "Pending" Then
        xsear = " and fldbillno not in(select fldbillno from tblbillupload) ORDER BY fldchequeno"
      Else
        xsear = " and fldbillno in(select fldbillno from tblbillupload)"
      Endif
    Else
      xsear = modDataRepo.GetWhereStringRepo(cmbsearch.Text, txtselect.Text)
    Endif
  Endif

  res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from tbltempbilldetail where fldcomp like &1 and fldbillno like &2 and fldtime>=&3 and fldtime<=&4 and fldbilltype like &5 and flduserid like &6" & xcateg & xregist & yregist & xsear, cmbcomp.Text, Bll, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbcashcredit.Text, txuser, cmbcategory.Text, LCase(cmbaccount.Text), 1, LCase(txtselect.Text) & "%")
  Return res

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant
  Dim i As Integer

  If Column = 0 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.MediumDate)
  Else If Column = 1 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.LongTime)
  Else If Column = 4 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 6 Then
    If modHelpVariable.$LogInCategory = "Cashier" And If modBasic.$BillReportSummary = "Hidden" Then
      xxx = "***"
    Else
      xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
    Endif
  Else If Column = 7 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 8 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 9 Then
    If modHelpVariable.$LogInCategory = "Cashier" And If modBasic.$BillReportSummary = "Hidden" Then
      xxx = "***"
    Else
      xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
    Endif
  Else If Column = 10 Then
    If modHelpVariable.$LogInCategory = "Cashier" And If modBasic.$BillReportSummary = "Hidden" Then
      xxx = "***"
    Else
      xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
    Endif
  Else If Column = 11 Then
    If modHelpVariable.$LogInCategory = "Cashier" And If modBasic.$BillReportSummary = "Hidden" Then
      xxx = "***"
    Else
      xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
    Endif
  Else If Column = 22 Then
    xxx = GetInvoiceValueOriginal(xVariable)
  Else If Column = 23 Then
    xxx = modReportVar.GetDateTimeReport(GetInvoiceDateOriginal(xVariable), gb.GeneralDate)
  Else If Column = 24 Then
    xxx = GetInvoiceUserOriginal(xVariable)
  Else If Column = 25 Then
    xxx = modDataRepo.GetHospitalTextLabel(xVariable)
  Else
    xxx = xVariable
  Endif

  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      If Column = $ColCount + i Then
        xxx = modCustPatient.NewColValue(Me.Tag, $newColumn[i], xVariable)
      Endif
    Next
  Endif
  Return xxx

End

Public Sub chkok_Click()

  Dim res As Result
  Dim totamt As Float
  Dim taxamt As Float
  Dim discamt As Float
  Dim recvamt As Float
  Dim xFldList As String[]
  Dim xFieldList As String[]

  Inc Application.Busy

  TabStrip1.Index = 0
  xFieldList = GetSQLColumns()
  $rData = ExecuteQuery(xFieldList)
  If chkqty.Value = True Or If chkamt.Value = True Then
    ExportData()
  Else
    taxamt = 0
    discamt = 0
    recvamt = 0
    totamt = 0
    xFldList = ["SUM(fldchargedamt) as totamt", "SUM(fldtaxamt) as taxamt", "SUM(flddiscountamt) as dscamt", "SUM(fldreceivedamt+fldcurdeposit) as recvamt"]
    res = ExecuteQuery(xFldList)
    ' res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from tbltempbilldetail where fldcomp like &1 and fldencounterval like &2 and flduserid like &3 and fldbillno like &4 and fldbillno like &5 and fldtime>=&6 and fldtime<=&7 and fldbilltype like &8" & xst & xregist, cmbcomp.Text, txencid, txuser, txtbillno, Bll, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbmode.Text, cmbcategory.Text, cmbregist.Text)
    If res.Available Then
      If res!taxamt Then
        taxamt = taxamt + res!taxamt
      Endif
      If res!dscamt Then
        discamt = discamt + res!dscamt
      Endif
      If res!recvamt Then
        recvamt = recvamt + res!recvamt
      Endif
      If res!totamt Then
        totamt = totamt + res!totamt
      Endif

      txttaxamt.Value = Round(taxamt, -2)
      txtdiscamt.Value = Round(discamt, -2)
      txttotalrecv.Value = Round(recvamt, -2)
      txttotalamt.Value = Round(totamt, -2)
    Endif
  Endif
  FillGrid()

  If chkqty.Value = True Then
    FillItemChartQTY()
  Endif
  If chkamt.Value = True Then
    FillItemChartAMT()
  Endif

  If $rData.Available Then
    $rData.MoveFirst
    txtinvfrom.Text = $rData["fldbillno"]
    $rData.MoveLast
    txtinvto.Text = $rData["fldbillno"]
  Endif
  Dec Application.Busy

End

Private Sub FillGrid()

  Dim i As Integer

  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
  $ColCount = $SSQLFields.Count
  With GridView1
    .Columns[0].Width = 100 * modBasic.$AppWidthRatio
    .Columns[1].Width = 75 * modBasic.$AppWidthRatio
    .Columns[2].Width = 125 * modBasic.$AppWidthRatio
    .Columns[3].Width = 100 * modBasic.$AppWidthRatio
    .Columns[4].Width = 200 * modBasic.$AppWidthRatio
    .Columns[5].Width = 50 * modBasic.$AppWidthRatio
    .Columns[6].Width = 100 * modBasic.$AppWidthRatio
    .Columns[7].Width = 100 * modBasic.$AppWidthRatio
    .Columns[8].Width = 100 * modBasic.$AppWidthRatio
    .Columns[9].Width = 100 * modBasic.$AppWidthRatio
    .Columns[10].Width = 100 * modBasic.$AppWidthRatio
    .Columns[11].Width = 100 * modBasic.$AppWidthRatio
    .Columns[12].Width = 75 * modBasic.$AppWidthRatio
    .Columns[13].Width = 1
    .Columns[14].Width = 1
    .Columns[15].Width = 1
    .Columns[16].Width = 125 * modBasic.$AppWidthRatio
    .Columns[17].Width = 100 * modBasic.$AppWidthRatio
    .Columns[18].Width = 1
    .Columns[19].Width = 125 * modBasic.$AppWidthRatio
    .Columns[20].Width = 1
    .Columns[21].Width = 100 * modBasic.$AppWidthRatio
    .Columns[22].Width = 120 * modBasic.$AppWidthRatio
    .Columns[23].Width = 125 * modBasic.$AppWidthRatio
    .Columns[24].Width = 75 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Date"
    .Columns[1].Text = "Time"
    .Columns[2].Text = "Invoice"
    .Columns[3].Text = "EncID"
    .Columns[4].Text = "Name"
    .Columns[5].Text = "Type"
    .Columns[6].Text = "SubTotal"
    .Columns[7].Text = "DiscAmt"
    .Columns[8].Text = "TaxAmt"
    .Columns[9].Text = "NetTotal"
    .Columns[10].Text = "Received"
    .Columns[11].Text = "Deposit"
    .Columns[12].Text = "User"
    .Columns[16].Text = "Account"
    .Columns[17].Text = "Reference"
    .Columns[19].Text = "Comment"
    .Columns[21].Text = "Receiver"
    .Columns[22].Text = "RecInvoice"
    .Columns[23].Text = "RecDateTime"
    .Columns[24].Text = "RecUser"

    If $newColumn.Count Then
      For i = 0 To $newColumn.Count - 1
        .Columns[$ColCount + i].Text = $newColumn[i]
        .Columns[$ColCount + i].Width = 150 * modBasic.$AppWidthRatio
      Next
    Endif
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer)

  $rData.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView1, Row)
  If Column > $SSQLFields.Count - 1 Then
    GridView1.Data.RichText = modString.TextToHTML(GetGridViewValue(Column, $rData[$aMyFields[Column]]))
  Else
    GridView1.Data.Text = GetGridViewValue(Column, $rData[$aMyFields[Column]])
  Endif
  ' GridView1.Rows[Row].Height = Max(GridView1.Rows[Row].Height, GridView1.Data.Font.RichTextHeight(GridView1.Data.Text, GridView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (GridView1.Rows.Height - GridView1.Font.Height))
  ' GridView1.Data.WordWrap = True

End

Private Sub ExportData()

  Dim totamt As Float
  Dim nettot As Float
  Dim taxamt As Float
  Dim discamt As Float
  Dim recvamt As Float
  Dim newdepo As Float

  totamt = 0
  nettot = 0
  taxamt = 0
  discamt = 0
  recvamt = 0
  newdepo = 0

  $qtyChart = New String[]
  $amtCHart = New String[]
  $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
  $ProgressBar1.Visible = True
  $ProgressBar1.Value = 0
  For Each $rData
    totamt = totamt + $rData!flditemamt
    taxamt = taxamt + $rData!fldtaxamt
    discamt = discamt + $rData!flddiscountamt
    nettot = nettot + $rData["flditemamt+fldtaxamt-flddiscountamt"]
    recvamt = recvamt + $rData!fldreceivedamt
    newdepo = newdepo + $rData!fldcurdeposit
    If chkqty.Value = True Then
      $qtyChart.Add(DateDiff(dtfir.Value, $rData!fldtime, modChart.GetDateIntegerFromSetting()))
    Endif
    If chkamt.Value = True Then
      $amtCHart.Add(DateDiff(dtfir.Value, $rData!fldtime, modChart.GetDateIntegerFromSetting()) & ";" & CStr($rData!fldreceivedamt / modChart.GetAMTValueChart()))
    Endif
    $ProgressBar1.Value = ($rData.Index + 1) / $rData.Count
    Wait
  Next

  txttotalamt.Value = Round(totamt, -2)
  txttaxamt.Value = Round(taxamt, -2)
  txtdiscamt.Value = Round(discamt, -2)
  txttotalrecv.Value = Round(recvamt, -2)
  If $ProgressBar1 Then
    $ProgressBar1.Visible = False
  Endif

End

''----------------------------------------- Grid menu ---------------------------------------
Public Sub GridView1_DblClick()

  Dim xx As Integer
  Dim yy As Integer

  xx = Mouse.StartX - GridView1.Left
  yy = Mouse.StartY - GridView1.Top

  Balloon.Info(("Current Column is ") & CStr(GridView1.Column + 1), GridView1, xx, yy)
  Balloon.Delay = 1000
  If GridView1.Column = 2 Then
    If txtinvfrom.Text = "" Then
      txtinvfrom.Text = GridView1[GridView1.Row, 2].Text
    Else
      txtinvto.Text = GridView1[GridView1.Row, 2].Text
    Endif
  Endif

End

Public Sub GridView1_Menu()

  mnuhide.Popup

End

Public Sub mnusummgrid_Click()

  Dim xx As String
  Dim ChapCol As String
  Dim GropCol As String
  Dim xChapList As String[]
  Dim xGropList As String[]

  Dim res As Result
  Dim valCol As String
  Dim xFieldList As String[]

  Dim xFinList As Variant[]
  Dim xrowVar As Variant[]
  Dim xchapval As String
  Dim xgroup As String
  Dim xPath As String

  Dim hGdSum As FmAnalyzeSett

  hGdSum = New FmAnalyzeSett("GridSummary", modGridView.GetGridViewColumns(GridView1))
  hGdSum.ShowModal

  Inc Application.Busy
  xFieldList = New String[]
  If modCustPatient.$SumChapterColumn Then
    ChapCol = $SSQLFields[modCustPatient.$SumChapterColumn - 1]
    xFieldList.Add(ChapCol)
  Endif
  GropCol = $SSQLFields[modCustPatient.$SumGroupColumn - 1]
  valCol = $SSQLFields[modCustPatient.$SumValueColumn - 1]
  xFieldList.Add(GropCol)
  xFieldList.Add(valCol)

  xChapList = New String[]
  xGropList = New String[]
  xFinList = New Variant[]
  res = ExecuteQuery(xFieldList)
  If res.Available Then
    For Each res
      xrowVar = New Variant[]
      If modCustPatient.$SumChapterColumn Then
        xchapval = GetGridViewValue(modCustPatient.$SumChapterColumn - 1, res[ChapCol])
        xrowVar.Add(xchapval)
        xChapList.Add(xchapval)
      Endif
      xgroup = GetGridViewValue(modCustPatient.$SumGroupColumn - 1, res[GropCol])
      xrowVar.Add(xgroup)
      xGropList.Add(xgroup)

      xrowVar.Add(GetGridViewValue(modCustPatient.$SumValueColumn - 1, res[valCol]))
      xFinList.Add(xrowVar)
    Next
  Endif
  Dec Application.Busy

  xx = "Date: " & modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  If modCustPatient.$SumGroupColumn And If modCustPatient.$SumValueColumn Then
    If modCustPatient.$SumChapterColumn Then
      If modCustPatient.$SummaryType = "Summation(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapterTableReport("Receipt Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else
        xPath = modCHTMLReport.SummaryGridChapterReport("Receipt Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Endif
    Else
      xPath = modCHTMLReport.SummaryGridReport("Receipt Report Summary", xx, modString.GetDistinctStringArray(xGropList), xFinList)
    Endif
    modControlSub.DisplayReportExport(xPath)
  Endif

End

Public Sub mnuenchart_Click()

  Dim xx As String
  Dim xField As String
  Dim Column As Integer
  Dim res As Result
  Dim xval As Variant
  Dim hFile As CUnivariate
  Dim sOrder As String[]

  Dim hUniv As FmAnalyzeSett

  hUniv = New FmAnalyzeSett("Univariate", modGridView.GetGridViewColumns(GridView1))
  hUniv.ShowModal

  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif
  Inc Application.Busy
  hFile = New CUnivariate

  Column = modCustPatient.GetUnivariateColumn(3)
  xField = $SSQLFields[Column]
  res = ExecuteQuery([xField])

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Column, res[xField])
      If xval Then
        hFile.Add(xval)
      Endif

      If MMain.$IsGUIApp = True Then
        $ProgressBar1.Value = (res.Index + 1) / res.Count
        Wait
      Endif
    Next
  Endif
  Dec Application.Busy
  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif

  If modSettings.ShowSettingFromFIle("UnivariateAnalysis/DataType") = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetEncChartGridNew(hFile.GetSPSSFile(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrosstab_Click()

  Dim xx As String
  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hFile As CBivariate
  Dim sOrder As String[]
  Dim hBivar As FmAnalyzeSett

  hBivar = New FmAnalyzeSett("Bivariate", modGridView.GetGridViewColumns(GridView1))
  hBivar.ShowModal

  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  Inc Application.Busy
  hFile = New CBivariate
  Row = modCustPatient.GetCrossVarRow(3)
  xFieRow = $SSQLFields[Row]
  Column = modCustPatient.GetCrossVarColumn(3)
  xFieColm = $SSQLFields[Column]
  res = ExecuteQuery([xFieRow, xFieColm])

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Row, res[xFieRow])
      yval = GetGridViewValue(Column, res[xFieColm])
      If xval And If yval Then
        hFile.Add([xval, yval])
      Endif

      If MMain.$IsGUIApp = True Then
        $ProgressBar1.Value = (res.Index + 1) / res.Count
        Wait
      Endif
    Next
  Endif
  Dec Application.Busy
  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif

  If modCustPatient.$CrossOutcomeType = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetCrossTabStatNew(hFile.GetSPSSFile(), hFile.GetGroups(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrotab_Click()

  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hForm As FmGridCrossTab
  Dim xForm As CCrossTab
  Dim hGdChr As FmAnalyzeSett

  hGdChr = New FmAnalyzeSett("GridCrossTab", modGridView.GetGridViewColumns(GridView1))
  hGdChr.ShowModal

  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  If modCustPatient.$TabRowColumn And If modCustPatient.$TabFieldColumn Then
    xForm = New CCrossTab
    Inc Application.Busy
    Row = CInt(modCustPatient.$TabRowColumn) - 1
    xFieRow = $SSQLFields[Row]
    Column = CInt(modCustPatient.$TabFieldColumn) - 1
    xFieColm = $SSQLFields[Column]
    res = ExecuteQuery([xFieRow, xFieColm])

    If res.Available Then
      For Each res
        xval = GetGridViewValue(Row, res[xFieRow])
        yval = GetGridViewValue(Column, res[xFieColm])
        If xval And If yval Then
          xForm.Add([xval, yval])
        Endif

        If MMain.$IsGUIApp = True Then
          $ProgressBar1.Value = (res.Index + 1) / res.Count
          Wait
        Endif
      Next
    Endif
    Dec Application.Busy

    hForm = New FmGridCrossTab(GridView1.Columns[Row].Text, xForm.GetSPSSFile())
    hForm.ShowModal
    modExternal.$ExecValueColl.Clear()
  Endif

  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif

End

Public Sub mnuinvcopy_Click()

  If GridView1.Rows.Selection.Count > 0 Then
    modBILLFormat.BillingReceipt(GridView1[GridView1.Row, 3].Text, GridView1[GridView1.Row, 2].Text, "RECEIPT (COPY)")
  Endif

End

Public Sub mnuparti_Click()

  Dim sql As String
  Dim hForm As FRequest
  Dim res As Result

  If GridView1.Rows.Selection.Count > 0 Then
    sql = "select fldencounterval,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldditemamt as tot,fldtime,fldid,fldbillno from tblpatbilling where fldbillno=&1"                                                  ''
    res = modDatabase.$syConn.Exec(sql, GridView1[GridView1.Row, 2].Text)
    If res.Available Then
      hForm = New FRequest(res, GridView1[GridView1.Row, 2].Text, "Billing:SelectedInvoice", False)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub mnusummary_Click()

  Dim xPath As String

  If GridView1.Rows.Selection.Count > 0 Then
    Inc Application.Busy
    xPath = modCHTMLInvoice.BillDepartmentWise(modDatabase.$syConn, GridView1[GridView1.Row, 2].Text, GridView1[GridView1.Row, 3].Text, "Receipt")
    Dec Application.Busy
    modControlSub.OpenHTMLPreview(GridView1[GridView1.Row, 3].Text, xPath, "ReportSize")
  Endif

End

Public Sub mnubank_Click()

  Dim res As Result
  Dim xx As String
  Dim banklist As String[]

  If GridView1.Rows.Selection.Count > 0 Then
    banklist = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldacledger as col from tblacledger"))
    xx = InputCombo("Change Account Ledger", GridView1[GridView1.Row, 2].Text, banklist, GridView1[GridView1.Row, 16].Text, False)
    If xx Then
      res = modDatabase.$myConn.Edit("tbltempbilldetail", "fldbillno=&1", GridView1[GridView1.Row, 2].Text)
      res["fldbankname"] = xx
      res["xyz"] = False
      res.Update
      $rData = ExecuteQuery($SSQLFields.Copy())
    Endif
  Endif

End

Public Sub mnureferno_Click()

  Dim res As Result
  Dim xx As String

  If GridView1.Rows.Selection.Count > 0 Then

    xx = InputBox("Change Reference", GridView1[GridView1.Row, 2].Text, GridView1[GridView1.Row, 17].Text)
    If xx Then
      res = modDatabase.$myConn.Edit("tbltempbilldetail", "fldbillno=&1", GridView1[GridView1.Row, 2].Text)
      res["fldchequeno"] = xx
      res["xyz"] = False
      res.Update
      $rData = ExecuteQuery($SSQLFields.Copy())
    Endif
  Endif

End

''---------------------------------------- QTY Chart ------------------------------------
Private Sub FillItemChartQTY()

  Dim sFile As String

  sFile = Temp()
  File.Save(sFile, $qtyChart.Join(gb.NewLine))
  If modBasic.$ChartExecStat = "PSPP" Then
    modImage.StretchtPictureToBox(PictureBox1, modChart.FrequencyChart(sFile, "Receipt Count"))
  Else
    modImage.StretchtPictureToBox(PictureBox1, modChart.FrequencyChart(sFile, "Receipt Count"))
  Endif
  mnustatsqty.Tag = sFile

End

Public Sub PictureBox1_Menu()

  mnuqty.Popup

End

Public Sub mnuexpoqty_Click()

  If Dialog.SelectDirectory() Then Return
  PictureBox1.Image.Save(Dialog.Path &/ "ReceiptCount" & ".png")

End

Public Sub mnustatsqty_Click()

  If modBasic.$ChartExecStat = "PSPP" Then
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("freqtable", mnustatsqty.Tag))
  Else
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("freqtable", mnustatsqty.Tag))
  Endif

End

''---------------------------------------- AMT Chart --------------------------------------------
Private Sub FillItemChartAMT()

  Dim sPath As String
  Dim sNew As String

  sPath = Temp()
  File.Save(sPath, $amtCHart.Join(gb.NewLine))
  sNew = modString.GetGroupSUmmaryCSV(sPath, 0, 1, ";", gb.Tab, gb.Float)

  If modBasic.$ChartExecStat = "PSPP" Then
    modImage.StretchtPictureToBox(PictureBox2, modChart.HistogramChart(sNew, "[Received Amount in " & modChart.GetAMTLabelChart() & "]"))
  Else
    modImage.StretchtPictureToBox(PictureBox2, modChart.HistogramChart(sNew, "[Received Amount in " & modChart.GetAMTLabelChart() & "]"))
  Endif
  mnustatsamt.Tag = sNew

End

Public Sub PictureBox2_Menu()

  mnuamt.Popup

End

Public Sub mnuqtyamt_Click()

  If Dialog.SelectDirectory() Then Return
  PictureBox2.Image.Save(Dialog.Path &/ "ReceivedAmount" & ".png")

End

Public Sub mnustatsamt_Click()

  modDevice.DesktopOpenFile(mnustatsamt.Tag)

End

''----------------------------------------------------------- Reports -----------------------------------
Public Sub btnfullrep_Click()

  Dim xHeader As String[]
  Dim xhide As Integer[]
  Dim Column As Integer
  Dim xCollRow As Collection
  Dim xColum As Integer

  Dim $hGridExportTable As CExportResult
  Dim xparam1 As String
  Dim xparam2 As String
  Dim encColumn As Integer

  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  xHeader = New String[]
  xhide = New Integer[]
  For Column = 0 To GridView1.Columns.Count - 1
    xHeader.Add(GridView1.Columns[Column].Text)
    If GridView1.Columns[Column].Width < 5 Then
      xhide.Add(Column)
    Endif
  Next
  xparam1 = "RECEIPT REPORT: " & txtselect.Text
  xparam2 = modReportVar.GetDateTimeReport(modDate.StartSqlDate(dtfir.value), gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(modDate.EndSqlDate(dtlast.value), gb.MediumDate)
  encColumn = 3
  $hGridExportTable = New CExportResult(Me.Tag, xHeader, xhide, xparam1, xparam2, encColumn)

  Inc Application.Busy
  For Each $rData
    xCollRow = New Collection
    For xColum = 0 To $SSQLFields.Count - 1
      xCollRow.Add(GetGridViewValue(xColum, $rData[$SSQLFields[xColum]]), CStr(xColum))
    Next
    $hGridExportTable.Add($rData.Index, xCollRow)

    If MMain.$IsGUIApp = True Then
      $ProgressBar1.Value = ($rData.Index + 1) / $rData.Count
      Wait
    Endif
  Next
  Dec Application.Busy
  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif
  modControlSub.DisplayReportExport($hGridExportTable.HTMLPath())

End

Public Sub txtselect_KeyPress()

  If Key.Code = Key.Down Then
    If modBasic.$AutoEncSuffix = "Yes" Then
      txtselect.Text = txtselect.Text & modBasic.$HospCode
    Endif
  Else
    modGeneralMain.InputTextKeyOnly()
  Endif

End

Public Sub txtinvfrom_KeyPress()

  modGeneralMain.InputUpCaseOnly()

End

Public Sub txtinvto_KeyPress()

  modGeneralMain.InputUpCaseOnly()

End

''============================ SUMMARY REPORT ===========================================
Public Sub btnrecv_Click()

  Dim xPath As String

  If $RepoOption = "Date" Then
    If txtdtfrom.Value And If txtdtto.Value Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeSummary($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Else
    If txtinvfrom.Text And If txtinvto.Text Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeSummary($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Endif

End

Public Sub btnsummdepo_Click()

  Dim xPath As String

  If $RepoOption = "Date" Then
    If txtdtfrom.Value And If txtdtto.Value Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeLocation($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, "", "", "tblpatbilling", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Else
    If txtinvfrom.Text And If txtinvto.Text Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeLocation($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), "", "", "tblpatbilling", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Endif

End

Public Sub btndatewise_Click()

  Dim xPath As String

  If $RepoOption = "Date" Then
    If txtdtfrom.Value And If txtdtto.Value Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeUserDetail($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Else
    If txtinvfrom.Text And If txtinvto.Text Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeUserDetail($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Endif

End

Public Sub btninvsumm_Click()

  Dim xPath As String

  If $RepoOption = "Date" Then
    If txtdtfrom.Value And If txtdtto.Value Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeUserBrief($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Else
    If txtinvfrom.Text And If txtinvto.Text Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeUserBrief($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Endif

End

Public Sub btngrpdetail_Click()

  Dim xPath As String

  If $RepoOption = "Date" Then
    If txtdtfrom.Value And If txtdtto.Value Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeGroupDetail($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, "", "", "tblpatbilling", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Else
    If txtinvfrom.Text And If txtinvto.Text Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeGroupDetail($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), "", "", "tblpatbilling", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Endif

End

Public Sub btngrpsummry_Click()

  Dim xPath As String

  If $RepoOption = "Date" Then
    If txtdtfrom.Value And If txtdtto.Value Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeGroupBrief($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, "", "", "tblpatbilling", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Else
    If txtinvfrom.Text And If txtinvto.Text Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeGroupBrief($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), "", "", "tblpatbilling", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Endif

End

Public Sub btndiffitem_Click()

  Dim xPath As String

  If $RepoOption = "Date" Then
    If txtdtfrom.Value And If txtdtto.Value Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptInvoiceReportDetailByMismatch($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, "", "", "tblpatbilling", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Else
    If txtinvfrom.Text And If txtinvto.Text Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptInvoiceReportDetailByMismatch($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), "", "", "tblpatbilling", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Endif

End

Public Sub btnitemsumm_Click()

  Dim xPath As String

  If $RepoOption = "Date" Then
    If txtdtfrom.Value And If txtdtto.Value Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeAccount($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Else
    If txtinvfrom.Text And If txtinvto.Text Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeAccount($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Endif

End

Public Sub btndsc_Click()

  Dim xPath As String

  If $RepoOption = "Date" Then
    If txtdtfrom.Value And If txtdtto.Value Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Discount", txtdtfrom.Value, txtdtto.Value, "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Else
    If txtinvfrom.Text And If txtinvto.Text Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Discount", Trim(txtinvfrom.Text), Trim(txtinvto.Text), "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Endif

End

Public Sub btntax_Click()

  Dim xPath As String

  If $RepoOption = "Date" Then
    If txtdtfrom.Value And If txtdtto.Value Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Tax", txtdtfrom.Value, txtdtto.Value, "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Else
    If txtinvfrom.Text And If txtinvto.Text Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Tax", Trim(txtinvfrom.Text), Trim(txtinvto.Text), "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Endif

End

Public Sub btnsumdisc_Click()

  Dim xPath As String

  If $RepoOption = "Date" Then
    If txtdtfrom.Value And If txtdtto.Value Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Credit", txtdtfrom.Value, txtdtto.Value, "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Else
    If txtinvfrom.Text And If txtinvto.Text Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Credit", Trim(txtinvfrom.Text), Trim(txtinvto.Text), "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Endif

End

Public Sub btntaxsum_Click()

  Dim xPath As String

  If $RepoOption = "Date" Then
    If txtdtfrom.Value And If txtdtto.Value Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Cash", txtdtfrom.Value, txtdtto.Value, "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Else
    If txtinvfrom.Text And If txtinvto.Text Then
      Inc Application.Busy
      xPath = modReceiptReport.ReceiptReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Cash", Trim(txtinvfrom.Text), Trim(txtinvto.Text), "", "", "tbltempbilldetail")
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif

  Endif

End

Public Sub chkqty_Click()

  TabStrip1.Index = 1

End

Public Sub chkamt_Click()

  TabStrip1.Index = 2

End

''================= Special Report ===================
Private Sub GetInvoiceValueOriginal(sID As Long) As String

  Dim res As Result
  Dim res1 As Result
  Dim xval As String

  res = modDatabase.$myConn.Exec("select fldbillno,fldhostmac from tbltempbilldetail where fldid=&1", sID)
  If res.Available And If res["fldhostmac"] Then
    If res["fldhostmac"] = "NDC" Then
      res1 = modHospitalReport.$lab1Con.Exec("select fldbillno from tblpatbilldetail where fldtaxgroup=&1", res["fldbillno"])
      If res1.Available And If res1["fldbillno"] Then
        xval = res1["fldbillno"]
      Else
        xval = ""
      Endif
    Else
      res1 = modHospitalReport.$lab2Con.Exec("select fldbillno from tblpatbilldetail where fldtaxgroup=&1", res["fldbillno"])
      If res1.Available And If res1["fldbillno"] Then
        xval = res1["fldbillno"]
      Else
        xval = ""
      Endif
    Endif
  Else
    xval = ""
  Endif

  Return xval

End

Private Sub GetInvoiceDateOriginal(sID As Long) As Date

  Dim res As Result
  Dim res1 As Result
  Dim xval As Date

  res = modDatabase.$myConn.Exec("select fldbillno,fldhostmac from tbltempbilldetail where fldid=&1", sID)
  If res.Available And If res["fldhostmac"] Then
    If res["fldhostmac"] = "NDC" Then
      res1 = modHospitalReport.$lab1Con.Exec("select fldtime from tblpatbilldetail where fldtaxgroup=&1", res["fldbillno"])
      If res1.Available And If res1["fldtime"] Then
        xval = res1["fldtime"]
      Else
        xval = ""
      Endif
    Else
      res1 = modHospitalReport.$lab2Con.Exec("select fldtime from tblpatbilldetail where fldtaxgroup=&1", res["fldbillno"])
      If res1.Available And If res1["fldtime"] Then
        xval = res1["fldtime"]
      Else
        xval = ""
      Endif
    Endif
  Else
    xval = ""
  Endif

  Return xval

End

Private Sub GetInvoiceUserOriginal(sID As Long) As String

  Dim res As Result
  Dim res1 As Result
  Dim xval As String

  res = modDatabase.$myConn.Exec("select fldbillno,fldhostmac from tbltempbilldetail where fldid=&1", sID)
  If res.Available And If res["fldhostmac"] Then
    If res["fldhostmac"] = "NDC" Then
      res1 = modHospitalReport.$lab1Con.Exec("select flduserid from tblpatbilldetail where fldtaxgroup=&1", res["fldbillno"])
      If res1.Available And If res1["flduserid"] Then
        xval = res1["flduserid"]
      Else
        xval = ""
      Endif
    Else
      res1 = modHospitalReport.$lab2Con.Exec("select flduserid from tblpatbilldetail where fldtaxgroup=&1", res["fldbillno"])
      If res1.Available And If res1["flduserid"] Then
        xval = res1["flduserid"]
      Else
        xval = ""
      Endif
    Endif
  Else
    xval = ""
  Endif

  Return xval

End

Public Sub mnucolumns_Click()

  If Message.Question(modGridView.GetColumnsListString(GridView1), ("OK"), ("Setting")) = 2 Then
    fmChartSetting.Close
    fmChartSetting.ShowModal
  Endif

End
