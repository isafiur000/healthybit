' Gambas class file

Public Sub Form_Open()

  Me.Center
  db.Debug = True
  GetList()
  cmbproblem.Text = ""

End

Private Sub GetList()

  cmbproblem.Add("Purchase Comp")
  cmbproblem.Add("SubFraction Percentage")
  cmbproblem.Add("Fraction Encounter")
  cmbproblem.Add("Purchase NetCost")
  cmbproblem.Add("Transfer NetCost")
  cmbproblem.Add("Admission Ward")
  ' cmbproblem.Add("---healthybit 0.3.20 or newer ---")
  ' cmbproblem.Add("Patient Exam Option")
  ' cmbproblem.Add("Comp Examination")
  ' cmbproblem.Add("Patient BedNo")
  ' cmbproblem.Add("Patient/Invoice IDs")
  ' cmbproblem.Add("MacAddress Code")
  ' cmbproblem.Add("Laboratory Options")
  ' cmbproblem.Add("Settings Transfer")
  ' cmbproblem.Add("Delivery Exams")
  ' cmbproblem.Add("Test Methods")
  ' cmbproblem.Add("Transfer Symptoms")
  ' cmbproblem.Add("Pharmacy Category")
  ' cmbproblem.Add("StockNo Error")
  ' cmbproblem.Add("Transfer CostPrice")
  '
  ' cmbproblem.Add("---healthybit 0.3.13 or older ---")
  ' cmbproblem.Add("Null Date Entry")
  ' cmbproblem.Add("Credit Invoice Mismatch")
  ' cmbproblem.Add("Service Item Code")
  ' cmbproblem.Add("Return Billing")
  '
  ' cmbproblem.Add("Encounter Comp")
  ' cmbproblem.Add("Encounter RatePlan")
  ' cmbproblem.Add("Consultation Comp")
  '
  ' cmbproblem.Add("Lab Sampling")
  ' cmbproblem.Add("Return Update")
  ' cmbproblem.Add("Stock Update")
  ' cmbproblem.Add("Transfer RollBack")
  ' cmbproblem.Add("Consume RollBack")

End

Public Sub btnshow_Click()

  If cmbproblem.Text = "Stock Update" Then
    ListBox1.List = modControlSub.GetDirectFillresultNoNull(modDatabase.$myConn.Exec("select distinct(fldstockid) as fldstockid as col from tblentry"))
  Else If cmbproblem.Text = "Credit Invoice Mismatch" Then
    ' $fin = New Long[]
    ' CreditInvoiveMismatchShow()
  Endif

End

Public Sub chkselall_Click()

  ListBox1.SelectAll()

End

Public Sub btncorr_Click()

  Dim xitem As String

  If Message.Question("Are you sure?", ("NO"), ("OK")) = 2 Then
    If cmbproblem.Text = "SubFraction Percentage" Then
      UpdateSubFraction()
    Else If cmbproblem.Text = "Fraction Encounter" Then
      UpdateFractionEncounter()
    Else If cmbproblem.Text = "Purchase Comp" Then
      UpdatePurchaseComp()
    Else If cmbproblem.Text = "Supplier Summary" Then
      modDebugging.UpdateSupplierSummary()
    Else If cmbproblem.Text = "Purchase NetCost" Then
      UpdatePurchaseNetCost()
    Else If cmbproblem.Text = "Transfer NetCost" Then
      UpdateTransferNetCost()
    Else If cmbproblem.Text = "Claim Code" Then
      xitem = InputBox("Ledger Account", "Reference", "Claim Code")
      If xitem Then
        modDebugging.InsertClaimCode(xitem)
      Endif
    Else If cmbproblem.Text = "Admission Ward" Then
      UpdateAdmissionWard()

    Else If cmbproblem.Text = "MacAddress Code" Then
      InsertMacAddCode()
    Else If cmbproblem.Text = "Laboratory Options" Then
      SetLabTestCategory()
    Else If cmbproblem.Text = "Settings Transfer" Then
      TransferSettingsNew()
    Else If cmbproblem.Text = "Delivery Exams" Then
      TransferDeliveryExam()
    Else If cmbproblem.Text = "Test Methods" Then
      MakeAllTestMethod()
    Else If cmbproblem.Text = "Transfer Symptoms" Then
      TransferDiagnoComplaints()
    Else If cmbproblem.Text = "Pharmacy Category" Then
      EditPharmacyCategory()
    Else If cmbproblem.Text = "StockNo Error" Then
      CompareStockNo()
    Else If cmbproblem.Text = "Comp Examination" Then
      UpdateCOmpExamsData()
    Else If cmbproblem.Text = "Patient BedNo" Then
      UpdatePatientBed()
    Else If cmbproblem.Text = "Transfer CostPrice" Then
      UpdateNetCostTransfeAdjust()
    Else If cmbproblem.Text = "Patient Exam Option" Then
      UpdatePatientExamOptions()

    Else If cmbproblem.Text = "Credit Invoice Mismatch" Then
      ' CreditInvoiveMismatchCorrect()
    Else If cmbproblem.Text = "Null Date Entry" Then
      CorrectNullDateData()
    Else If cmbproblem.Text = "Service Item Code" Then
      CorrecrServiceCodes()
    Else If cmbproblem.Text = "Return Billing" Then
      ReturbBillingSetting()

    Else If cmbproblem.Text = "Encounter Comp" Then
      UpdateEncounterComp()
    Else If cmbproblem.Text = "Consultation Comp" Then
      UpdateConsultComp()
    Else If cmbproblem.Text = "Encounter RatePlan" Then
      UpdateBillingModeItem()

    Else If cmbproblem.Text = "Lab Sampling" Then
      UpdateLabSampleStatus()
    Else If cmbproblem.Text = "Return Update" Then
      UpdateReturn()
    Else If cmbproblem.Text = "Stock Update" Then
      UpdateStock()
    Else If cmbproblem.Text = "Transfer RollBack" Then
      RollBackExcessTransfer()
    Else If cmbproblem.Text = "Consume RollBack" Then
      RollBackExcessConsume()

    Endif

  Endif

End

' Private Sub FillGrid()
'
'   ListBox1.List = $fin
'   ValueBox1.Value = $fin.Count
'
' End

''---------------- Admission ward ---------------
Private Sub UpdateAdmissionWard()

  Dim res As Result
  Dim xward As String

  res = modDatabase.$myConn.Edit("tblencounter", "flddoa>=&1 and fldadmitward IS NULL", DateAdd(Now(), gb.Month, -2))
  If res.Available Then
    For Each res
      xward = ""
      xward = modPatient.GetFirstWardTransfer(res["fldencounterval"])
      If xward Then
        res["fldadmitward"] = xward
        res.Update
      Endif
    Next
  Endif
  Message.Info("Completed")

End

''--------------- Transfer Netcost ---------------------
Private Sub UpdateTransferNetCost()

  Dim res As Result
  Dim xcost As Float

  res = modDatabase.$myConn.Edit("tbltransfer", "fldnetcost=&1", 0)
  If res.Available Then
    For Each res
      xcost = 0
      xcost = modStock.GetAverageCostPriceByStockNo(res["fldoldstockno"])
      If xcost Then
        res["fldnetcost"] = xcost
        res.Update
      Endif
    Next
  Endif
  Message.Info("Completed")

End

''-------------- Purchase Netcost -----------------------
Private Sub UpdatePurchaseNetCost()

  Dim res As Result

  res = modDatabase.$myConn.Edit("tblpurchase")
  If res.Available Then
    For Each res
      If res["fldtaxamt"] Then
        res["fldnetcost"] = Round((res["fldtotalcost"] - res["fldtaxamt"]) / res["fldtotalqty"], -2)
      Else
        res["fldnetcost"] = Round(res["fldtotalcost"] / res["fldtotalqty"], -2)
      Endif
      res.Update
    Next
  Endif
  Message.Info("Complete")

End

''--------------- Purchase Comp -----------------
Private Sub UpdatePurchaseComp()

  Dim res As Result

  res = modDatabase.$myConn.Edit("tblpurchasebill", "fldcomp IS &1", Null)
  If res.Available Then
    For Each res
      res["fldcomp"] = GetPurComp(res["fldreference"], res["fldsuppname"])
      res.Update
    Next
    Message.Info("Completed")
  Endif

End

Private Function GetPurComp(sRefNo As String, sSuppName As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$myConn.Exec("select fldcomp from tblpurchase where fldsuppname=&1 and fldreference=&2", sSuppName, sRefNo)
  If res.Available Then
    res.MoveFirst
    xx = res["fldcomp"]
  Endif
  Return xx

End

''--------------- Fraction Encounter ------------------
Private Sub UpdateFractionEncounter()

  Dim res1 As Result
  Dim res As Result

  Inc Application.Busy
  res1 = modDatabase.$myConn.Exec("select tblpatgenshare.fldid,tblpatgenshare.fldencounterval,tblpatgenshare.flditemid,tblpatbilling.fldencounterval from tblpatgenshare inner join tblpatbilling on tblpatgenshare.flditemid=tblpatbilling.fldid where tblpatgenshare.fldencounterval<>tblpatbilling.fldencounterval")
  If res1.Available Then
    For Each res1
      res = modDatabase.$myConn.Edit("tblpatgenshare", "fldid=&1", res1["tblpatgenshare.fldid"])
      res["fldencounterval"] = res1["tblpatbilling.fldencounterval"]
      res.Update
    Next
  Endif
  Dec Application.Busy

  Message.Info("Completed", ("OK"))

End

''------------- Sub Fraction -----------------
Private Sub UpdateSubFraction()

  Dim resx As Result
  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim xcount As Integer

  Inc Application.Busy
  resx = modDatabase.$syConn.Exec("select distinct(flditemid) as flditemid from tblpatgenshare")
  If resx.Available Then
    For Each resx
      res = modDatabase.$syConn.Exec("select fldusertype,SUM(fldmixper) as fldmixper from tblpatgenshare where flditemid=&1 GROUP BY fldusertype", resx["flditemid"])
      If res.Available Then
        For Each res

          If res["fldmixper"] And If res["fldmixper"] = 100 Then
          Else
            xcount = 0
            res1 = modDatabase.$syConn.Exec("select fldid,fldencounterval,flditemid,fldusertype,fldvalue,fldmixper from tblpatgenshare where flditemid=&1 and fldusertype=&2 and fldencounterval in(select fldencounterval from tblpatbilling where fldid=&3)", resx["flditemid"], res["fldusertype"], resx["flditemid"])
            If res.Available Then
              xcount = 100 / res1.Count
              Print resx["flditemid"]
              Print res["fldusertype"]
              Print res1.Count

              For Each res1
                res2 = modDatabase.$myConn.Edit("tblpatgenshare", "fldid=&1", res1["fldid"])
                res2["fldmixper"] = Round(xcount, -2)
                res2.Update
              Next

            Endif
          Endif

        Next
      Endif
    Next
  Endif
  Dec Application.Busy

  Message.Info("Completed", ("OK"))

End

''------------------------------ Patient Bed ------------------------------------
Private Sub UpdatePatientBed()

  Dim res As Result
  Dim res1 As Result
  Dim xenc As String

  res = modDatabase.$myConn.Edit("tbldepartmentbed")
  For Each res
    res1 = modDatabase.$myConn.Exec("select fldencounterval from tblencounter where fldcurrlocat=&1 and fldadmission=&2", res["fldbed"], "Admitted")
    If res1.Available Then
      xenc = res1!fldencounterval
    Else
      xenc = ""
    Endif
    res["fldencounterval"] = xenc
    res.Update
  Next
  Balloon.Info(("complete"), btncorr)

End

''---------------------- Patient Exam Option ---------------------
Private Sub UpdatePatientExamOptions()

  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim xType As String
  Dim sql As String

  res1 = modDatabase.$myConn.Exec("select distinct(fldsysconst) as col from tblpatientexam where fldsysconst IS NOT NULL")
  For Each res1
    If res1["col"] Then
      xType = modFixClinic.GetExamSysOptionType(res1["col"])
      sql = db.Subst("update tblpatientexam set fldoption=&1", xType)
      Try res = modDatabase.$myConn.Exec(sql & db.Subst(" where fldsysconst=&1", res1["col"]))
    Endif
  Next

  res2 = modDatabase.$myConn.Exec("select distinct(fldhead) as col from tblpatientexam where fldhead IS NOT NULL AND fldsysconst IS NULL")
  For Each res2
    If res2["col"] Then
      xType = modFixClinic.GetExamtOptionType(res2["col"])
      sql = db.Subst("update tblpatientexam set fldoption=&1", xType)
      Try res = modDatabase.$myConn.Exec(sql & db.Subst(" where fldhead=&2", res2["col"]))
    Endif
  Next
  Balloon.Info(("complete"), btncorr)

End

''----------------------------- Comp Exams ------------------------------------
Private Sub UpdateCOmpExamsData()

  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result

  res = modDatabase.$myConn.Exec("UPDATE tblcompexam SET fldcategory=&1 WHERE fldcategory IS NULL", "Physician Examinations")
  res1 = modDatabase.$myConn.Exec("select fldid,fldexamid,fldsysconst,fldtype,fldcomp from tblvitalexam")
  For Each res1
    res2 = modDatabase.$myConn.Create("tblcompexam")
    res2["fldcategory"] = "Essential Examinations"
    res2["fldexamid"] = res1["fldexamid"]
    res2["fldsysconst"] = res1["fldsysconst"]
    res2["fldtype"] = res1["fldtype"]
    res2["fldflag"] = False
    res2["fldcomp"] = res1["fldcomp"]
    res2.Update
  Next
  Balloon.Info(("complete"), btncorr)

End

''--------------------------- Transfer Cost Price -----------------------------
Private Sub UpdateNetCostTransfeAdjust()

  Dim res1 As Result
  Dim res1x As Result
  Dim res2 As Result
  Dim res2x As Result
  Dim ras1 As Result
  Dim ras2 As Result

  ras1 = modDatabase.$myConn.Exec("UPDATE tbltransfer SET fldnetcost=Null WHERE fldnetcost=0")
  res1 = modDatabase.$myConn.Exec("select distinct(fldoldstockno) as stckno from tbltransfer where fldnetcost IS &1", Null)
  If res1.Available Then
    For Each res1
      res1x = modDatabase.$myConn.Exec(db.Subst("UPDATE tbltransfer SET fldnetcost=&1", modStock.GetAverageCostPriceByStockNo(res1!stckno)) & " where fldoldstockno=&1 and fldnetcost IS &2", res1!stckno, Null)
    Next
  Endif

  ras2 = modDatabase.$myConn.Exec("UPDATE tbladjustment SET fldnetcost=Null WHERE fldnetcost=0")
  res2 = modDatabase.$myConn.Exec("select distinct(fldstockno) as stckno from tbladjustment where fldnetcost IS &1", Null)
  If res2.Available Then
    For Each res2
      res2x = modDatabase.$myConn.Exec(db.Subst("UPDATE tbladjustment SET fldnetcost=&1", modStock.GetAverageCostPriceByStockNo(res2!stckno)) & " where fldstockno=&1 and fldnetcost IS &2", res2!stckno, Null)
    Next
  Endif
  Balloon.Info(("complete"), btncorr)

End

''----------------------------- Stock Related -----------------------------
Private Sub CompareStockNo()

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim res4 As Result

  res1 = modDatabase.$myConn.Exec("select fldstockno,fldstockid from tblentry ORDER BY fldstockno")
  For Each res1
    res2 = modDatabase.$myConn.Exec(db.Subst("UPDATE tblpurchase SET fldstockid=&1,xyz=&2", res1!fldstockid, False) & " WHERE fldstockno=&1 and fldstockid<>&2 and fldsav=&3", res1!fldstockno, res1!fldstockid, False)
    res3 = modDatabase.$myConn.Exec(db.Subst("UPDATE tblbulksale SET fldstockid=&1", res1!fldstockid) & " WHERE fldstockno=&1 and fldstockid<>&2 and fldsave=&3", res1!fldstockno, res1!fldstockid, True)
    res4 = modDatabase.$myConn.Exec(db.Subst("UPDATE tblpatbilling SET flditemno=&1,xyz=&2", res1!fldstockid, False) & " where flditemno=&1 and flditemno<>&2 and (flditemtype=&3 or flditemtype=&4 or flditemtype=&5) and fldsave=&6", res1!fldstockno, res1!fldstockid, "Medicines", "Surgicals", "Extra Items", True)
  Next
  Balloon.Info(("complete"), btncorr)

End

''--------------------------- Pharmacy Category ------------------------------
Private Sub EditPharmacyCategory()

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result

  res1 = modDatabase.$myConn.Exec("UPDATE tblpatdosing SET flditemtype=" & "'Medicines'" & " where flditemtype IS &1 and (fldroute=&2 or fldroute=&3 or fldroute=&4 or fldroute=&5 or fldroute=&6 or fldroute=&7 or fldroute=&8 or fldroute=&9 or fldroute=&{10} or fldroute=&{11} or fldroute=&{12} or fldroute=&{13} or fldroute=&{14})", Null, "oral", "liquid", "fluid", "injection", "resp", "topical", "eye/ear", "anal/vaginal", "IVpush", "CIV", "IIV", "SC", "IM")                                                                ''
  res2 = modDatabase.$myConn.Exec("UPDATE tblpatdosing SET flditemtype=" & "'Surgicals'" & " where flditemtype IS &1 and (fldroute=&2 or fldroute=&3 or fldroute=&4)", Null, "suture", "msurg", "ortho")
  res3 = modDatabase.$myConn.Exec("UPDATE tblpatdosing SET flditemtype=" & "'Extra Items'" & " where flditemtype IS &1 and fldroute=&2", Null, "extra")
  Balloon.Info(("complete"), btncorr)

End

''--------------------------- Test Method ----------------------------------
Private Sub MakeAllTestMethod()

  Dim res As Result

  res = modDatabase.$myConn.Edit("tbltestmethod")
  If res.Available Then
    For Each res
      res["fldcateg"] = "Test"
      res.Update
    Next
  Endif
  Balloon.Info(("complete"), btncorr)

End

''----------------------------- Transfer Diagnosis and complaints to new table ---------------------
Private Sub TransferDiagnoComplaints()

  Dim res1 As Result
  Dim res2 As Result
  '   Dim res3 As Result
  Dim res4 As Result
  Dim xfld As String[]

  xfld = modDBApp.GetFIeldsinTable("tblexamgeneral", False)
  res1 = modDatabase.$myConn.Exec(db.Subst("INSERT INTO tblexamgeneral(&1) SELECT &1 FROM tblpatgeneral", xfld.Join(",")))
  res2 = modDatabase.$myConn.Exec("UPDATE tblexamgeneral SET flditem='Initial Planning' WHERE fldinput='Notes' and flditem='OPD Recommendations'")
  '   res3 = modDatabase.$myConn.Exec("DELETE from tblpatgeneral where fldinput<>'Procedures'")
  res4 = modDatabase.$myConn.Exec("DELETE from tblexamgeneral where fldinput='Procedures'")

End

''-------------------------- Delivery Exam ---------------------------------
Private Sub TransferDeliveryExam()

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim res4 As Result

  res1 = modDatabase.$myConn.Exec("UPDATE tblpatientexam SET fldinput=&3 where fldinput=&1 and fldhead in(select fldexamid from tbldeptexam where flddept=&2)", "Examination", "Pre Delivery", "Pre Delivery Exam")
  res2 = modDatabase.$myConn.Exec("UPDATE tblpatientexam SET fldinput=&3 where fldinput=&1 and fldhead in(select fldexamid from tbldeptexam where flddept=&2)", "Examination", "On Delivery", "On Delivery Exam")
  res3 = modDatabase.$myConn.Exec("UPDATE tblpatientexam SET fldinput=&3 where fldinput=&1 and fldhead in(select fldexamid from tbldeptexam where flddept=&2)", "Examination", "Post Delivery", "Post Delivery Exam")
  res4 = modDatabase.$myConn.Exec("UPDATE tblpatientexam SET fldinput=&3 where fldinput=&1 and fldhead in(select fldexamid from tbldeptexam where flddept=&2)", "Examination", "Baby Examination", "Baby Examination")
  Balloon.Info(("complete"), btncorr)

End

''--------------------- Setting Trabsfer -------------------------
Private Sub TransferSettingsNew()

  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result

  Inc Application.Busy
  res = modDatabase.$myConn.Edit("tblsettings")
  For Each res
    res["fldindex"] = res!fldcomp & ":" & res!fldcategory
    res.Update
  Next

  res1 = modDatabase.$myConn.Exec("Select * from tblsettings where fldcategory=&1 or fldcategory=&2", "FTPBackup/TableList", "LocalBackup/TableList")
  If res1.Available Then
    For Each res1
      res2 = modDatabase.$myConn.Create("tbltabsettings")
      res2["fldcomp"] = res1["fldcomp"]
      res2["fldcategory"] = res1["fldcategory"]
      res2["fldvalue"] = res1["fldvalue"]
      res2["fldtime"] = res1["fldtime"]
      res2["flduserid"] = res1["flduserid"]
      res2.Update
    Next
  Endif
  Dec Application.Busy
  Balloon.Info(("complete"), btncorr)

End

''------------------------ Mac Codes -----------------------
Private Sub InsertMacAddCode()

  Dim res As Result
  Dim res1 As Result

  res1 = modDatabase.$myConn.Exec("select fldhostmac from tblmacaccess")
  For Each res1
    res = modDatabase.$myConn.Edit("tblmacaccess", "fldhostmac=&1", res1!fldhostmac)
    res["fldcode"] = res1.Index + 1
    res.Update
  Next
  Balloon.Info(("complete"), btncorr)

End

''---------------------------- Lab Test Data Type ------------------------
Private Sub SetLabTestCategory()

  Dim res1 As Result
  Dim res2 As Result

  res1 = modDatabase.$myConn.Exec("select distinct(fldtestid) from tbltestquali")
  If res1.Available Then
    For Each res1
      res2 = modDatabase.$myConn.Edit("tbltest", "fldtestid=&1 and fldoption=&2", res1!fldtestid, "No Selection")
      If res2.Available Then
        res2["fldoption"] = "Fixed Components"
        res2.Update
      Endif
    Next
  Endif
  Balloon.Info(("complete"), btncorr)

End

'''---------------------update tblconsult
Private Sub UpdateConsultComp()

  Dim res As Result

  Inc Application.Busy
  res = modDatabase.$myConn.Edit("tblconsult", "fldcomp IS &1", Null)
  If res.Available Then
    For Each res
      res["fldcomp"] = GetBillComp(res!fldencounterval)
      res["xyz"] = False
      res.Update
    Next
  Endif
  Dec Application.Busy
  Balloon.Info(("complete"), btncorr)

End

''--------------------------- update encounter comp -------------------------
Private Sub UpdateEncounterComp()

  Dim res As Result

  Inc Application.Busy
  res = modDatabase.$myConn.Edit("tblencounter", "fldcomp IS &1", Null)
  If res.Available Then
    For Each res
      res["fldcomp"] = GetBillComp(res!fldencounterval)
      res["xyz"] = False
      res.Update
    Next
  Endif
  Dec Application.Busy
  Balloon.Info(("complete"), btncorr)

End

Private Function GetBillComp(encid As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$myConn.Exec("select fldcomp from tblpatbilling where fldencounterval=&1", encid)
  If res.Available Then
    res.MoveFirst
    xx = res!fldcomp
  Else
    xx = ""
  Endif
  Return xx

End

''--------------------------- update Rate Plan -----------------------
Private Sub UpdateBillingModeItem()

  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result

  Inc Application.Busy

  res = modDatabase.$myConn.Exec("select fldbillingmode,fldencounterval from tblencounter where fldbillingmode IS NOT NULL")
  If res.Available Then
    For Each res
      res1 = modDatabase.$myConn.Edit("tblpatbilling", "fldencounterval=&1", res!fldencounterval)
      If res1.Available Then
        For Each res1
          res1["fldbillingmode"] = res!fldbillingmode
          res1["xyz"] = False
          res1.Update
        Next
      Endif
    Next
  Endif

  res2 = modDatabase.$myConn.Edit("tblpatbilling", "fldbillingmode IS &1", Null)
  If res2.Available Then
    For Each res2
      res2["fldbillingmode"] = modNonMedical.GetBillingModeFromItemName(res2!flditemname)
      res2["xyz"] = False
      res2.Update
    Next
  Endif

  Dec Application.Busy
  Balloon.Info(("complete"), btncorr)

End

'''------------------------------------------- Lab sampling ----------------------------------------
Private Sub UpdateLabSampleStatus()

  Dim res1 As Result
  Dim res2 As Result
  Dim rs1 As Result

  Inc Application.Busy
  res2 = modDatabase.$myConn.Exec("select distinct(fldgroupid) as id,fldencounterval from tblpatlabtest")
  For Each res2
    rs1 = modDatabase.$myConn.Edit("tblpatbilling", "fldid=&1 and fldencounterval=&2", res2!id, res2!fldencounterval)
    rs1["fldsample"] = "Sampled"
    rs1["xyz"] = False
    rs1.Update                                                                   ''"
  Next

  res1 = modDatabase.$myConn.Edit("tblpatbilling", "fldsample IS &1", Null)
  For Each res1
    res1["fldsample"] = "Waiting"
    res1["xyz"] = False
    res1.Update
  Next
  Dec Application.Busy
  Balloon.Info(("complete"), btncorr)

End

''------------------------------ Return billing ------------------------------------------------------
Private Sub ReturbBillingSetting()

  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim xx As String

  Inc Application.Busy
  'get list of return bills
  res = modDatabase.$myConn.Exec("select fldid,fldparent,fldencounterval,flditemname,flditemqty from tblpatbilling where flditemqty<&1 and fldretbill IS &2", 0, Null)
  For Each res
    xx = ""
    ''update main bill
    res1 = modDatabase.$myConn.Edit("tblpatbilling", "fldid=&1 and fldencounterval=&2 and flditemname=&3", res!fldparent, res!fldencounterval, res!flditemname)
    xx = res1!fldbillno
    If res1["fldretqty"] Then
      res1["fldretqty"] = res1["fldretqty"] - res1!flditemqty
    Else
      res1["fldretqty"] = 0 - res1!flditemqty
    Endif
    res1["xyz"] = False
    res1.Update

    ''update return bill
    res2 = modDatabase.$myConn.Edit("tblpatbilling", "fldid=&1", res!fldid)
    res2["fldretbill"] = xx
    res2["xyz"] = False
    res2.Update
  Next

  res3 = modDatabase.$myConn.Exec("UPDATE tblpatbilling set fldretqty=0 where fldretqty IS NULL")
  Dec Application.Busy
  Balloon.Info(("complete"), btncorr)

End

''------------------------------------------ blank dates ----------------------------------------------------
Private Sub CorrectNullDateData()

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim res4 As Result

  Inc Application.Busy

  res1 = modDatabase.$myConn.Edit("tblentry", "fldexpiry IS &1", Null)
  For Each res1
    res1["fldexpiry"] = Date()
    res1["xyz"] = False
    res1.Update
  Next

  res2 = modDatabase.$myConn.Edit("tblpurchase", "fldpurdate IS &1", Null)
  For Each res2
    res2["fldpurdate"] = res2!fldtime
    res2["xyz"] = False
    res2.Update
  Next

  res3 = modDatabase.$myConn.Edit("tblpurchasebill", "fldpurdate IS &1", Null)
  For Each res3
    res3["fldpurdate"] = GetPurchaseDateForBillDetail(res2!fldid)
    res3["xyz"] = False
    res3.Update
  Next

  res4 = modDatabase.$myConn.Edit("tblencounter", "fldregdate IS &1", Null)
  For Each res4
    res4["fldregdate"] = GetRegDateForEncounter(res4!fldencounterval)
    res4["xyz"] = False
    res4.Update
  Next

  Dec Application.Busy
  Balloon.Info(("complete"), btncorr)

End

Private Function GetRegDateForEncounter(encid As String) As Date

  Dim res As Result
  Dim dt As Date

  res = modDatabase.$myConn.Exec("select fldptadmindate from tblpatientinfo where fldpatientval in(select fldpatientval from tblencounter where fldencounterval=&1)", encid)
  If res!fldptadmindate Then
    dt = res!fldptadmindate
  Else
    dt = Now()
  Endif
  Return dt

End

Private Function GetPurchaseDateForBillDetail(did As Long) As Date

  Dim res As Result
  Dim xx As Date

  res = modDatabase.$myConn.Exec("select fldpurdate from tblpurchase where fldreference in(select fldreference from tblpurchasebill where fldid=&1)", did)
  If res!fldpurdate Then
    xx = res!fldpurdate
  Else
    xx = Date()
  Endif

  Return xx

End

' Public Sub Button1_Click()
'
'   Dim xx As String
'   Dim enc As String
'
'   xx = ""
'   For Each enc In $fin
'     xx = xx & CStr(enc) & gb.NewLine
'   Next
'
'   File.Save(Desktop.Path &/ cmbproblem.Text, xx)
'
' End

Private Sub CorrecrServiceCodes()

  Dim res As Result
  Dim i As Integer
  Dim rs As Result
  Dim sCode As Long

  res = modDatabase.$myConn.Edit("tblservicecost")
  res.MoveFirst
  For i = 1 To res.Count
    res["fldid"] = i
    res["xyz"] = False
    res.Update
    res.MoveNext
  Next

  rs = modDatabase.$myConn.Edit("tblpatbilling", "flditemtype=&1 or flditemtype=&2 or flditemtype=&3 or flditemtype=&4 or flditemtype=&5", "General Services", "Diagnostic Tests", "Procedures", "Equipment", "Radio Diagnostics")
  For Each rs
    sCode = GetCashBillItemID(rs!flditemname)
    If sCode Then
      rs["flditemno"] = sCode
      rs["xyz"] = False
      rs.Update
    Endif
  Next
  Balloon.Info(("complete"), btncorr)

End

Private Function GetCashBillItemID(txtitem As String) As Integer

  Dim sql As String
  Dim res As Result
  Dim xx As Integer

  sql = "select fldid from tblservicecost where flditemname=&1"
  res = modDatabase.$myConn.Exec(sql, txtitem)
  If res.Available = True Then
    xx = res!fldid
  Else
    xx = 0
  Endif

  Return xx

End

''============================================= stock related ======================================================
Private Sub UpdateReturn()

  Dim rsx As Result
  Dim res As Result
  Dim res3 As Result
  Dim qty As Float
  Dim xqty As Float
  Dim xx As Float

  Inc Application.Busy
  rsx = modDatabase.$myConn.Exec("Update tblpurchase set fldreturnqty=&1", 0)

  res = modDatabase.$myConn.Exec("select fldid,fldcategory,fldstockno,fldstockid,fldqty,fldcost,fldsuppname,fldreference from tblstockreturn where fldsave=&1 and fldnewreference IS NOT &2", True, Null)
  If res.Available Then
    For Each res

      'reduce stock
      qty = 0 - res!fldqty
      AddToExistEntryOnly(res!fldstockno, qty)
      'reduce amt in tblpurchase
      xqty = res!fldqty
      While xqty > 0
        res3 = modDatabase.$myConn.Edit("tblpurchase", "fldstockno=&1 and fldstockid=&2 and fldreference=&3 and fldsuppname=&4 and (fldtotalqty-fldreturnqty)>&5", res!fldstockno, res!fldstockid, res!fldreference, res!fldsuppname, 0)
        If res3.Available Then
          If xqty <= (res3!fldtotalqty - res3!fldreturnqty) Then
            res3["fldreturnqty"] = res3!fldreturnqty + xqty
            xqty = 0
          Else If xqty > (res3!fldtotalqty - res3!fldreturnqty) Then
            xx = res3!fldtotalqty - res3!fldreturnqty
            res3["fldreturnqty"] = res3!fldreturnqty + xx
            xqty = xqty - xx
          Endif
          res3["xyz"] = False
          res3.Update
        Else
          Break
        Endif
      Wend

    Next
  Endif

  Dec Application.Busy
  Balloon.Info(("complete"), btncorr)

End

Private Sub UpdateStock()

  Dim i As Integer

  Inc Application.Busy
  For i = 0 To ListBox1.Count - 1
    If ListBox1[i].Selected = True Then
      modDebugging.UpdateStockDebug(ListBox1[i].Text)
    Endif
  Next
  Dec Application.Busy
  Balloon.Info(("complete"), btncorr)

End

''---------------------- transfer rollback
Private Sub RollBackExcessTransfer()

  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim qtynew As Float

  Inc Application.Busy
  res = modDatabase.$myConn.Exec("select fldstockno,fldstockid,fldqty,fldcomp from tblentry where fldqty<&1", 0)
  For Each res

    qtynew = res!fldqty
    While qtynew < 0

      res1 = modDatabase.$myConn.Exec("select fldid,fldstockno,fldoldstockno,fldqty from tbltransfer where fldoldstockno=&1 and fldfromcomp=&2 and fldtosav=&3 and fldreference IS NOT &4  ORDER BY fldid DESC", res!fldstockno, res!fldcomp, True, Null)
      If res1.Available Then
        res1.MoveFirst
        res2 = modDatabase.$myConn.Edit("tbltransfer", "fldid=&1", res1!fldid)
        res2["fldtoentrytime"] = ""
        res2["fldtouser"] = ""
        res2["fldtosav"] = False
        res2["fldreference"] = ""
        res2["xyz"] = False
        res2.Update()
        AddToExistEntryOnly(res1!fldstockno, 0 - res1!fldqty)
        AddToExistEntryOnly(res1!fldoldstockno, res1!fldqty)
        Wait
        qtynew = modStock.TotalQTYbyStockNo(res!fldstockno)
        If qtynew >= 0 Then
          Break
        Endif
      Else
        Break
      Endif

    Wend
  Next
  Dec Application.Busy
  Balloon.Info(("complete"), btncorr)

End

Private Sub RollBackExcessConsume()

  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim qtynew As Float

  Inc Application.Busy
  res = modDatabase.$myConn.Exec("select fldstockno,fldstockid,fldqty,fldcomp from tblentry where fldqty<&1", 0)
  For Each res

    qtynew = res!fldqty
    While qtynew < 0

      res1 = modDatabase.$myConn.Exec("select fldid,fldqtydisp from tblbulksale where fldstockno=&1 and fldcomp=&2 and fldsave=&3 and fldreference IS NOT &4  ORDER BY fldid DESC", res!fldstockno, res!fldcomp, True, Null)
      If res1.Available Then
        res1.MoveFirst
        res2 = modDatabase.$myConn.Edit("tblbulksale", "fldid=&1", res1!fldid)
        res2["fldsave"] = False
        res2["fldreference"] = ""
        res2.Update()
        AddToExistEntryOnly(res!fldstockno, res1!fldqtydisp)
        Wait
        qtynew = modStock.TotalQTYbyStockNo(res!fldstockno)
        If qtynew >= 0 Then
          Break
        Endif
      Else
        Break
      Endif

    Wend

  Next
  Dec Application.Busy
  Balloon.Info(("complete"), btncorr)

End

Private Sub AddToExistEntryOnly(stockno As Long, qty As Float)

  Dim res As Result

  res = modDatabase.$myConn.Edit("tblentry", "fldstockno=&1", stockno)
  res["fldqty"] = res!fldqty + qty
  res["fldsav"] = True
  res["xyz"] = False
  res.Update()
  'dont catch error. allow to roll back

End
