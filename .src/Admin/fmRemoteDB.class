' Gambas class file

Private $sqCon As Connection

Public Sub Form_Open()

  Me.Center
  cmbtype.List = ["sqlite3", "mysql", "postgresql", "odbc"]
  cmbdbtype.List = ["mysql", "postgresql"]
  ShowRemoteSetting()

End

Public Sub chkuser_Click()

  If chkuser.Value = True Then
    txtuser.Password = False
  Else If chkuser.Value = False Then
    txtuser.Password = True
  Endif

End

Public Sub chkpass_Click()

  If chkpass.Value = True Then
    txtpass.Password = False
  Else If chkpass.Value = False Then
    txtpass.Password = True
  Endif

End

Private Sub ShowRemoteSetting()

  cmbtype.Text = modSettings.ShowSettingFromFIle("SISH_Connection/RemoteService")
  txtserver.Text = modSettings.ShowSettingFromFIle("SISH_Connection/RemoteHost")
  txtdb.Text = modSettings.ShowSettingFromFIle("SISH_Connection/RemoteDatabase")
  txtuser.Text = UnBase64(modSettings.ShowSettingFromFIle("SISH_Connection/RemoteUser"))
  txtpass.Text = UnBase64(modSettings.ShowSettingFromFIle("SISH_Connection/RemotePass"))
  txtport.Text = modSettings.ShowSettingFromFIle("SISH_Connection/RemotePort")

End

Public Sub btnnewconn_Click()

  If cmbtype.Text And If txtserver.Text And If txtdb.Text Then
    modSettings.SaveSettingsToFile("SISH_Connection/RemoteService", cmbtype.Text)
    modSettings.SaveSettingsToFile("SISH_Connection/RemoteHost", txtserver.Text)
    modSettings.SaveSettingsToFile("SISH_Connection/RemoteDatabase", txtdb.Text)
    modSettings.SaveSettingsToFile("SISH_Connection/RemoteUser", Base64(txtuser.Text))
    modSettings.SaveSettingsToFile("SISH_Connection/RemotePass", Base64(txtpass.Text))
    modSettings.SaveSettingsToFile("SISH_Connection/RemotePort", txtport.Text)
    Balloon.Info(("Information saved"), btnnewconn)
  Endif

End

''============================ Import Backup ===================
Public Sub txtfile_Click()

  If Dialog.OpenFile() Then Return
  txtfile.Text = Dialog.Path

End

Public Sub btnexec_Click()

  If txtquery.Text Then
    Inc Application.Busy
    $sqCon.Exec(txtquery.Text)
    Dec Application.Busy
    Balloon.Info(("Query Executed"), btnexec)
  Endif

End

Public Sub btnimport_Click()

  Dim sPath As String
  Dim xtmp As String
  Dim xx As String
  Dim yy As String

  If txtfile.Text Then
    Inc Application.Busy
    ''create sqlite with same name
    sPath = User.Home &/ File.BaseName(txtfile.Text)
    modDBApp.CreateSQliteDB(sPath)
    $sqCon = modDBApp.OpenConnection("sqlite3", User.Home, File.BaseName(txtfile.Text), "", "")
    modDBTables.$DbFormat = MMain.$SISHAppMode
    modDBGroup.CreateDatabaseForSish($sqCon)
    Message.Info(("Tables creation completed"), ("OK"))
    Wait

    'update dump file
    xtmp = Temp()
    xx = "sh " & modHelpVariable.$scriptDirectory &/ "mysql2sqlite.sh " & txtfile.Text & " > " & xtmp
    modBasic.DebugString("Execute " & xx)
    Shell xx Wait
    'restore update dump file into sqlite3
    If System.Exist("sqlite3") Then
      yy = "cat " & xtmp & " | sqlite3 " & sPath
      modBasic.DebugString("Execute " & yy)
      Shell yy Wait
    Else
      modApplSub.InstallSelectedApplication(["sqlite3"])
    Endif
    Dec Application.Busy
  Endif

End

Public Sub btnsave_Click()

  Dim hForm As FmAddRepoProfile

  If Exist(User.Home &/ File.BaseName(txtfile.Text))
    modSettings.SaveSettingsToFile("SISH_Connection/RemoteService", "sqlite3")
    modSettings.SaveSettingsToFile("SISH_Connection/RemoteHost", User.Home)
    modSettings.SaveSettingsToFile("SISH_Connection/RemoteDatabase", File.BaseName(txtfile.Text))
    Wait
    $sqCon = modDBApp.OpenConnection("sqlite3", User.Home, File.BaseName(txtfile.Text), "", "")
    If $sqCon.Opened = True Then
      hForm = New FmAddRepoProfile($sqCon)
      hForm.ShowModal
    Endif
  Endif

End
