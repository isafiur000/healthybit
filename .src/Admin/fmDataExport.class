' Gambas class file

Private $fromCon As Connection
Private $toCon As Connection

Public Sub Form_Open()

  Me.Center
  cmbtypeA.List = ["sqlite3", "mysql", "postgresql", "odbc"]
  cmbtypeB.List = ["sqlite3", "mysql", "postgresql", "odbc"]

  cmboptionfir.List = ["String", "Number", "DateOnly", "DateTime"]
  cmboptionsec.List = ["String", "Number", "DateOnly", "DateTime"]
  cmboptionthird.List = ["String", "Number", "DateOnly", "DateTime"]

End

Private Sub FillDefaultDB(cmbserver As ComboBox, txtserver As TextBox, txtdbase As TextBox, txtuser As TextBox, txtpass As TextBox)

  cmbserver.Text = modDatabase.$myConn.Type
  txtserver.Text = modDatabase.$myConn.Host
  txtdbase.Text = modDatabase.$myConn.Name
  txtuser.Text = modDatabase.$myConn.User
  txtpass.Text = modDatabase.$myConn.Password

End

Public Sub chkcurA_Click()

  FillDefaultDB(cmbtypeA, txtserverA, txtdbA, txtuserA, txtpassA)

End

Public Sub chkcurB_Click()

  FillDefaultDB(cmbtypeB, txtserverB, txtdbB, txtuserB, txtpassB)

End

Public Sub btnconA_Click()

  Dim hTable As Table

  $fromCon = modDBApp.OpenConnection(cmbtypeA.Text, txtserverA.Text, txtdbA.Text, txtuserA.Text, txtpassA.Text)
  If $fromCon.Opened = True Then
    conA.Value = True

    cmbtableA.Clear
    For Each hTable In $fromCon.Tables
      If hTable.System = True Then
      Else If hTable.Name = "tblkey" Then
      Else If hTable.Name = "tblnewkey" Then
      Else
        cmbtableA.Add(hTable.Name)
      Endif
    Next
    Balloon.Info(("Connected"), btnconA)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnconB_Click()

  Dim hTable As Table

  $toCon = modDBApp.OpenConnection(cmbtypeB.Text, txtserverB.Text, txtdbB.Text, txtuserB.Text, txtpassB.Text)
  If $toCon.Opened = True Then
    conB.Value = True

    cmbtableB.Clear
    For Each hTable In $toCon.Tables
      If hTable.System = True Then
      Else If hTable.Name = "tblkey" Then
      Else If hTable.Name = "tblnewkey" Then
      Else
        cmbtableB.Add(hTable.Name)
      Endif
    Next
    Balloon.Info(("Connected"), btnconB)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnaddfieldA_Click()

  cmbfieldA.Clear
  cmbfieldA.List = modDBApp.GetFIeldsinTable(cmbtableA.Text, True, $fromCon)

End

Public Sub btnaddfieldB_Click()

  cmbfieldB.Clear
  cmbfieldB.List = modDBApp.GetFIeldsinTable(cmbtableB.Text, True, $toCon)

End

''--------------------------- Column -----------------------------------
Private Sub SaveCustomColumn()

  Dim xOptionsec As String
  Dim xOptionthird As String

  If cmbtableB.Text And If cmbfieldB.Text Then
    modSettings.EnterCheckSetting(chkaltdata, cmbtableB.Text & "/" & "AlterData_" & cmbfieldB.Text)
    modSettings.SaveSettingsToFile(cmbtableB.Text & "/" & "SourceField_" & cmbfieldB.Text, cmbfieldA.Text)
    modSettings.SaveSettingsToFile(cmbtableB.Text & "/" & "NewValue_" & cmbfieldB.Text, txtvalue.Text)
    modSettings.SaveSettingsToFile(cmbtableB.Text & "/" & "BodySQL_" & cmbfieldB.Text, txtbody.Text)

    modSettings.SaveSettingsToFile(cmbtableB.Text & "/" & "Option1_Type_" & cmbfieldB.Text, cmboptionfir.Text)
    modSettings.SaveSettingsToFile(cmbtableB.Text & "/" & "Option2_Type_" & cmbfieldB.Text, cmboptionsec.Text)
    modSettings.SaveSettingsToFile(cmbtableB.Text & "/" & "Option3_Type_" & cmbfieldB.Text, cmboptionthird.Text)

    If cmboptionsec.Text = "Number" Then
      xOptionsec = CStr(valoptionsec.Value)
    Else If cmboptionsec.Text = "DateOnly" Or If cmboptionsec.Text = "DateTime" Then
      xOptionsec = Format(valoptionsec.Value, gb.Standard)
    Else
      xOptionsec = txtoptionsec.Text
    Endif

    If cmboptionthird.Text = "Number" Then
      xOptionthird = CStr(valoptionthird.Value)
    Else If cmboptionthird.Text = "DateOnly" Or If cmboptionthird.Text = "DateTime" Then
      xOptionthird = Format(valoptionthird.Value, gb.Standard)
    Else
      xOptionthird = txtoptionthird.Text
    Endif

    modSettings.SaveSettingsToFile(cmbtableB.Text & "/" & "Option2_" & cmbfieldB.Text, xOptionsec)
    modSettings.SaveSettingsToFile(cmbtableB.Text & "/" & "Option3_" & cmbfieldB.Text, xOptionthird)

    modSettings.SaveSettingsToFile(cmbtableB.Text & "/" & "ColumnScript_" & cmbfieldB.Text, txtscript.Text)
    modSettings.SaveSettingsToFile(cmbtableB.Text & "/" & "ColumnShell_" & cmbfieldB.Text, txtexec.Text)
  Endif

End

Private Sub ShowCOlumnDetail()

  Dim xopt2 As String
  Dim xopt3 As String

  modSettings.ShowCheckBox(chkaltdata, cmbtableB.Text & "/" & "AlterData_" & cmbfieldB.Text)
  cmbfieldA.Text = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "SourceField_" & cmbfieldB.Text)
  txtvalue.Text = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "NewValue_" & cmbfieldB.Text)
  txtbody.Text = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "BodySQL_" & cmbfieldB.Text)

  cmboptionfir.Text = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "Option1_Type_" & cmbfieldB.Text)
  cmboptionsec.Text = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "Option2_Type_" & cmbfieldB.Text)
  cmboptionthird.Text = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "Option3_Type_" & cmbfieldB.Text)

  xopt2 = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "Option2_" & cmbfieldB.Text)
  If xopt2 Then
    If cmboptionsec.Text = "Number" Then
      valoptionsec.Value = Val(xopt2)
    Else If cmboptionsec.Text = "DateOnly" Or If cmboptionsec.Text = "DateTime" Then
      valoptionsec.Value = Val(xopt2)
    Else
      txtoptionsec.Text = xopt2
    Endif
  Endif

  xopt3 = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "Option3_" & cmbfieldB.Text)
  If xopt3 Then
    If cmboptionthird.Text = "Number" Then
      valoptionthird.Value = Val(xopt3)
    Else If cmboptionthird.Text = "DateOnly" Or If cmboptionthird.Text = "DateTime" Then
      valoptionthird.Value = Val(xopt3)
    Else
      txtoptionthird.Text = xopt3
    Endif
  Endif

  txtscript.Text = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "ColumnScript_" & cmbfieldB.Text)
  txtexec.Text = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "ColumnShell_" & cmbfieldB.Text)

End

Public Sub cmbfieldB_Click()

  If cmbfieldB.Text Then
    ShowCOlumnDetail()
  Endif

End

Public Sub txtbody_KeyPress()

  modGeneralMain.InsertTexEditortData(txtbody)

End

Public Sub txtscript_Click()

  If Dialog.OpenFile() Then Return
  txtscript.Text = Dialog.Path

End

Private Sub GetSelControl(sType As String, sTextBox As TextBox, sValueBox As ValueBox)

  If sType = "Number" Then
    sTextBox.Visible = False
    sValueBox.Visible = True
    sValueBox.Type = ValueBox.Number
  Else If sType = "DateOnly" Then
    sTextBox.Visible = False
    sValueBox.Visible = True
    sValueBox.Type = ValueBox.Date
  Else If sType = "DateTime" Then
    sTextBox.Visible = False
    sValueBox.Visible = True
    sValueBox.Type = ValueBox.DateTime
  Else
    sTextBox.Visible = True
    sValueBox.Visible = False
  Endif

End

Public Sub cmboptionsec_Click()

  GetSelControl(cmboptionsec.Text, txtoptionsec, valoptionsec)

End

Public Sub cmboptionthird_Click()

  GetSelControl(cmboptionthird.Text, txtoptionthird, valoptionthird)

End

Public Sub btnsetting_Click()

  SaveCustomColumn()
  Balloon.Info(("Information saved"), btnsetting)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btntransfer_Click()

  If cmbtableA.Text And If cmbtableB.Text Then
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      GetDataTransfer()
      Balloon.Info(("Information saved"), btntransfer)
      Balloon.Delay = modBasic.$BalloonDelay
    Endif
  Endif

End

''------------------------- Data Transfer ---------------------------------------
Private Sub GetDataTransfer()

  Dim res As Result
  Dim rs As Result
  Dim hField As Field
  Dim sField As String
  Dim hTable As Table

  Inc Application.Busy
  ProgressBar1.Value = 0
  For Each hTable In $toCon.Tables
    If hTable.Name = cmbtableB.Text Then

      rs = $fromCon.Exec(Subst("select *from &1", cmbtableA.Text))
      If rs.Available Then
        For Each rs
          res = $toCon.Create(hTable.Name)
          For Each hField In hTable.Fields

            sField = modSettings.ShowSettingFromFIle(hTable.Name & "/" & "SourceField_" & hField.Name)
            If sField Then
              If hField.Type = db.Serial Then
              Else
                If rs[sField] Then
                  If modSettings.ShowSettingFromFIle(hTable.Name & "/" & "AlterData_" & hField.Name) = "Yes" Then
                    res[hField.Name] = GetFormatValue(hField.Name, rs[sField])
                  Else
                    res[hField.Name] = GetDataVarValue(hField.Type, rs[sField])
                  Endif
                Else
                  res[hField.Name] = Null
                Endif
              Endif
            Else
              res[hField.Name] = Null
            Endif

          Next
          Try res.Update()

          ProgressBar1.Value = (rs.Index + 1) / rs.Count
          Wait
        Next
      Endif

      Break
    Endif
  Next

  Dec Application.Busy
  modExternal.$ExecValueColl.Clear()
  Balloon.Info(("Data Transfer Complete"), btntransfer)
  Balloon.Delay = modBasic.$BalloonDelay

End

Private Function GetFormatValue(sField As String, sValue As Variant) As Variant

  Dim sql As String
  Dim xnew As String
  Dim xopt2 As String
  Dim xopt3 As String

  Dim xoption2 As Variant
  Dim xoption3 As Variant

  Dim xoptype1 As String
  Dim xoptype2 As String
  Dim xoptype3 As String

  Dim res As Result
  Dim xval As Variant
  Dim xshell As String
  Dim xscript As String
  Dim yval As Variant

  xnew = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "NewValue_" & sField)
  If xnew Then
    yval = xnew
  Else
    sql = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "BodySQL_" & sField)
    If sql Then
      xoptype1 = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "Option1_Type_" & sField)
      xoptype2 = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "Option2_Type_" & sField)
      xoptype3 = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "Option3_Type_" & sField)

      xopt2 = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "Option2_" & sField)
      If xopt2 Then
        If xoptype2 = "Number" Then
          xoption2 = Val(xopt2)
        Else If xoptype2 = "DateOnly" Or If xoptype2 = "DateTime" Then
          xoption2 = Val(xopt2)
        Else
          xoption2 = xopt2
        Endif
      Endif

      xopt3 = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "Option3_" & sField)
      If xopt3 Then
        If xoptype3 = "Number" Then
          xoption3 = Val(xopt3)
        Else If xoptype3 = "DateOnly" Or If xoptype3 = "DateTime" Then
          xoption3 = Val(xopt3)
        Else
          xoption3 = xopt3
        Endif
      Endif

      res = $fromCon.Exec("SELECT " & sql, GetVarValue(xoptype1, sValue), GetVarValue(xoptype2, xoption2), GetVarValue(xoptype3, xoption3))                                      ''
      If res.Available Then
        res.MoveFirst
        xval = res[modDBApp.FirstResultField(res)]
      Else
        xval = sValue
      Endif

    Else
      xval = sValue
    Endif

    xscript = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "ColumnScript_" & sField)
    xshell = modSettings.ShowSettingFromFIle(cmbtableB.Text & "/" & "ColumnShell_" & sField)
    yval = modExternal.GerScriptValue(xscript, xshell, xval)
  Endif
  Return yval

End

Private Function GetVarValue(xType As String, xValue As String) As Variant

  Dim xx As Variant

  If xType = "Number" Then
    If xValue Then
      xx = Val(xValue)
    Else
      xx = 0
    Endif

  Else If xType = "DateOnly" Then
    If xValue Then
      xx = Val(xValue)
    Else
      xx = ""
    Endif

  Else If xType = "DateTime" Then
    If xValue Then
      xx = Val(xValue)
    Else
      xx = ""
    Endif

  Else
    xx = xValue
  Endif
  Return xx

End

Private Function GetDataVarValue(xType As Integer, xValue As Variant) As Variant

  Dim xx As Variant

  If xType = db.Integer Then
    If xValue Then
      If TypeOf(xValue) = db.Integer Then
        xx = xValue
      Else
        xx = CInt(xValue)
      Endif
    Else
      xx = 0
    Endif

  Else If xType = db.Long Then
    If xValue Then
      If TypeOf(xValue) = db.Long Then
        xx = xValue
      Else
        xx = CLong(xValue)
      Endif
    Else
      xx = 0
    Endif

  Else If xType = db.Float Then
    If xValue Then
      If TypeOf(xValue) = db.Float Then
        xx = xValue
      Else
        xx = CFloat(xValue)
      Endif
    Else
      xx = 0
    Endif

  Else If xType = db.Date Then
    If xValue Then
      If TypeOf(xValue) = db.Date Then
        xx = xValue
      Else
        xx = CDate(xValue)
      Endif
    Else
      xx = ""
    Endif

  Else If xType = db.String Then
    If xValue Then
      If TypeOf(xValue) = db.String Then
        xx = xValue
      Else
        xx = CStr(xValue)
      Endif
    Else
      xx = ""
    Endif

  Else If xType = db.Boolean Then
    If xValue Then
      If TypeOf(xValue) = gb.Boolean Then
        xx = xValue
      Else
        xx = CDate(xValue)
      Endif
    Else
      xx = Null
    Endif

  Else If xType = db.Blob Then
    If xValue Then
      If TypeOf(xValue) = gb.Blob Then
        xx = xValue
      Else
        xx = Null
      Endif
    Else
      xx = Null
    Endif

  Endif
  Return xx

End
