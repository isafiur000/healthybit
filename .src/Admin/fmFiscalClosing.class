' Gambas class file

Private $rData As Result
Private $aMyFields As String[]

Public Sub Form_Open()

  Me.Center
  modBasic.$AppWidthRatio = (Application.Font.TextWidth("a") / Font["Ubuntu,11"].TextWidth("a")) * (Desktop.Resolution / 96)
  cmbtablename.List = modDBApp.FillDBTables(modDatabase.$myConn, False)

  dtclose.Value = Now()
  FillGridView()

End

Public Sub btnsave_Click()

  Dim res As Result

  If txttitle.Text And If txtpatbilling.Text Then
    res = modDatabase.$myConn.Create("tblfisclosing")
    res["fldindex"] = Trim(txttitle.Text)
    res["fldfrom"] = dtstart.Value
    res["fldend"] = dtclose.Value

    If Trim(txtpatbilling.Text) Then
      res["fldpatbilling"] = Trim(txtpatbilling.Text)
    Else
      res["fldpatbilling"] = "tblpatbilling"
    Endif
    If Trim(txtpatbilldetail.Text) Then
      res["fldpatbilldetail"] = Trim(txtpatbilldetail.Text)
    Else
      res["fldpatbilldetail"] = "tblpatbilldetail"
    Endif
    If Trim(txttempbilldetail.Text) Then
      res["fldtempbilldetail"] = Trim(txttempbilldetail.Text)
    Else
      res["fldtempbilldetail"] = "tbltempbilldetail"
    Endif

    If Trim(txtpatlabtest.Text) Then
      res["fldpatlabtest"] = Trim(txtpatlabtest.Text)
    Else
      res["fldpatlabtest"] = "tblpatlabtest"
    Endif
    If Trim(txtpatlabsubtest.Text) Then
      res["fldpatlabsubtest"] = Trim(txtpatlabsubtest.Text)
    Else
      res["fldpatlabsubtest"] = "tblpatlabsubtest"
    Endif
    If Trim(txtpatientexam.Text) Then
      res["fldpatientexam"] = Trim(txtpatientexam.Text)
    Else
      res["fldpatientexam"] = "tblpatientexam"
    Endif
    If Trim(txtpatientsubexam.Text) Then
      res["fldpatientsubexam"] = Trim(txtpatientsubexam.Text)
    Else
      res["fldpatientsubexam"] = "tblpatientsubexam"
    Endif
    If Trim(txtpatradiotest.Text) Then
      res["fldpatradiotest"] = Trim(txtpatradiotest.Text)
    Else
      res["fldpatradiotest"] = "tblpatradiotest"
    Endif
    If Trim(txtpatradiosubtest.Text) Then
      res["fldpatradiosubtest"] = Trim(txtpatradiosubtest.Text)
    Else
      res["fldpatradiosubtest"] = "tblpatradiosubtest"
    Endif
    If Trim(txtpatdosing.Text) Then
      res["fldpatdosing"] = Trim(txtpatdosing.Text)
    Else
      res["fldpatdosing"] = "tblpatdosing"
    Endif
    If Trim(txtpatreport.Text) Then
      res["fldpatreport"] = Trim(txtpatreport.Text)
    Else
      res["fldpatreport"] = "tblpatreport"
    Endif

    res.Update
    FillGridView()
  Endif

End

Private Sub FillGridView()

  Dim sql As String

  sql = "select fldindex,fldfrom,fldend,fldpatbilling,fldpatbilldetail,fldtempbilldetail,fldpatlabtest,fldpatlabsubtest,fldpatientexam,fldpatientsubexam,fldpatradiotest,fldpatradiosubtest,fldpatdosing,fldpatreport,fldstate from tblfisclosing"
  $rData = modDatabase.$myConn.Exec(sql)
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Rows.Height = 25 * modBasic.$AppWidthRatio
    .Columns[0].Width = 100 * modBasic.$AppWidthRatio
    .Columns[1].Width = 125 * modBasic.$AppWidthRatio
    .Columns[2].Width = 125 * modBasic.$AppWidthRatio
    .Columns[3].Width = 125 * modBasic.$AppWidthRatio
    .Columns[4].Width = 125 * modBasic.$AppWidthRatio
    .Columns[5].Width = 125 * modBasic.$AppWidthRatio
    .Columns[6].Width = 125 * modBasic.$AppWidthRatio
    .Columns[7].Width = 125 * modBasic.$AppWidthRatio
    .Columns[8].Width = 125 * modBasic.$AppWidthRatio
    .Columns[9].Width = 125 * modBasic.$AppWidthRatio
    .Columns[10].Width = 125 * modBasic.$AppWidthRatio
    .Columns[11].Width = 125 * modBasic.$AppWidthRatio
    .Columns[12].Width = 125 * modBasic.$AppWidthRatio
    .Columns[13].Width = 125 * modBasic.$AppWidthRatio
    .Columns[14].Width = 75 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Title"
    .Columns[1].Text = "Start"
    .Columns[2].Text = "Close"
    .Columns[3].Text = "Billing"
    .Columns[4].Text = "Invoice"
    .Columns[5].Text = "Receipt"
    .Columns[6].Text = "Laboratory"
    .Columns[7].Text = "LabSubTest"
    .Columns[8].Text = "Examination"
    .Columns[9].Text = "SubExam"
    .Columns[10].Text = "Radiology"
    .Columns[11].Text = "SubRadio"
    .Columns[12].Text = "Pharmacy"
    .Columns[13].Text = "Report"
    .Columns[14].Text = "Status"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer)

  $rData.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView1, Row)
  GridView1.Data.Text = $rData[$aMyFields[Column]]

End

Public Sub GridView1_Click()

  If GridView1.Rows.Selection.Count Then
    txttitle.Text = GridView1[GridView1.Row, 0].Text
    dtstart.Value = GridView1[GridView1.Row, 1].Text
    dtclose.Value = GridView1[GridView1.Row, 2].Text

    txtpatbilling.Text = GridView1[GridView1.Row, 3].Text
    txtpatbilldetail.Text = GridView1[GridView1.Row, 4].Text
    txttempbilldetail.Text = GridView1[GridView1.Row, 5].Text
    txtpatlabtest.Text = GridView1[GridView1.Row, 6].Text
    txtpatlabsubtest.Text = GridView1[GridView1.Row, 7].Text
    txtpatientexam.Text = GridView1[GridView1.Row, 8].Text
    txtpatientsubexam.Text = GridView1[GridView1.Row, 9].Text
    txtpatradiotest.Text = GridView1[GridView1.Row, 10].Text
    txtpatradiosubtest.Text = GridView1[GridView1.Row, 11].Text
    txtpatdosing.Text = GridView1[GridView1.Row, 12].Text
    txtpatreport.Text = GridView1[GridView1.Row, 13].Text

  Endif

End

''rename tables
Public Sub btnrename_Click()

  Dim xmsg As String[]

  If GridView1.Rows.Selection.Count Then
    xmsg = New String[]

    Inc Application.Busy
    If txtpatbilling.Text Then
      If txtpatbilling.Text = "tblpatbilling" Then
      Else
        modDBApp.RenameTableMysql(modDatabase.$myConn, "tblpatbilling", Trim(txtpatbilling.Text))
        Wait
        modDBTables.CREATEtblpatbilling(modDatabase.$myConn)
        Wait
        xmsg.Add("<b>tblpatbilling</b> renamed to " & Trim(txtpatbilling.Text))
      Endif
    Endif

    If txtpatbilldetail.Text Then
      If txtpatbilldetail.Text = "tblpatbilldetail" Then
      Else
        modDBApp.RenameTableMysql(modDatabase.$myConn, "tblpatbilldetail", Trim(txtpatbilldetail.Text))
        Wait
        modDBTables.CREATEtblpatbilldetail(modDatabase.$myConn)
        Wait
        xmsg.Add("<b>tblpatbilldetailing</b> renamed to " & Trim(txtpatbilldetail.Text))
      Endif
    Endif

    ' ' If txttempbilldetail.Text Then
    ' '   If txttempbilldetail.Text = "tbltempbilldetail" Then
    ' '   Else
    ' '     modDBApp.RenameTableMysql(modDatabase.$myConn, "tbltempbilldetail", Trim(txttempbilldetail.Text))
    ' '     Wait
    ' '     modDBTables.CREATEtbltempbilldetail(modDatabase.$myConn)
    ' '     Wait
    ' '     xmsg.Add("<b>tbltempbilldetail</b> renamed to " & Trim(txttempbilldetail.Text))
    ' '   Endif
    ' ' Endif

    If txtpatlabtest.Text Then
      If txtpatlabtest.Text = "tblpatlabtest" Then
      Else
        modDBApp.RenameTableMysql(modDatabase.$myConn, "tblpatlabtest", Trim(txtpatlabtest.Text))
        Wait
        modDBTables.CREATEtblpatlabtest(modDatabase.$myConn)
        Wait
        xmsg.Add("<b>tblpatlabtest</b> renamed to " & Trim(txtpatlabtest.Text))
      Endif
    Endif

    If txtpatlabsubtest.Text Then
      If txtpatlabsubtest.Text = "tblpatlabsubtest" Then
      Else
        modDBApp.RenameTableMysql(modDatabase.$myConn, "tblpatlabsubtest", Trim(txtpatlabsubtest.Text))
        Wait
        modDBTables.CREATEtblpatlabsubtest(modDatabase.$myConn)
        Wait
        xmsg.Add("<b>tblpatlabsubtest</b> renamed to " & Trim(txtpatlabsubtest.Text))
      Endif
    Endif

    ' ' If txtpatientexam.Text Then
    ' '   If txtpatientexam.Text = "tblpatientexam" Then
    ' '   Else
    ' '     modDBApp.RenameTableMysql(modDatabase.$myConn, "tblpatientexam", Trim(txtpatientexam.Text))
    ' '     Wait
    ' '     modDBTables.CREATEtblpatientexam(modDatabase.$myConn)
    ' '     Wait
    ' '     xmsg.Add("<b>tblpatientexam</b> renamed to " & Trim(txtpatientexam.Text))
    ' '   Endif
    ' ' Endif

    If txtpatreport.Text Then
      If txtpatreport.Text = "tblpatreport" Then
      Else
        modDBApp.RenameTableMysql(modDatabase.$myConn, "tblpatreport", Trim(txtpatreport.Text))
        Wait
        modDBTables.CREATEtblpatreport(modDatabase.$myConn)
        Wait
        xmsg.Add("<b>tblpatreport</b> renamed to " & Trim(txtpatreport.Text))
      Endif
    Endif

    Dec Application.Busy

    If xmsg.Count Then
      Message.Info(xmsg.Join("<br>"), "OK")
    Endif
  Endif

End

''transfer data
Public Sub btntransfer_Click()

  Dim xList As String[]
  Dim xx As String

  xList = SelectListView("Select Category", ["Billing", "Laboratory"], False)
  If xList Then
    For Each xx In xList
      TransferDataBack(xx)
    Next
  Endif

End

Private Sub TransferDataBack(sType As String)

  Dim res1 As Result
  Dim res1x As Result
  ' Dim res2 As Result
  ' Dim res2x As Result
  Dim res3 As Result
  Dim res3x As Result
  ' Dim res4 As Result
  ' Dim res4x As Result
  ' Dim ptestid As Long

  Dim hField As ResultField

  If GridView1.Rows.Selection.Count Then
    If sType = "Billing" Then
      ''transfer billing entries with out invoice
      res1 = modDatabase.$myConn.Exec(Subst("select *from &1 where fldbillno IS NULL", Trim(txtpatbilling.Text)) & " and fldsave=&1 and fldprint=&2", True, False)
      If res1.Available Then
        Inc Application.Busy
        modDatabase.$myConn.Begin
        For Each res1

          res1x = modDatabase.$myConn.Create("tblpatbilling")
          For Each hField In res1.Fields
            If hField.Name = "fldid" Then
            Else
              res1x[hField.Name] = res1[hField.Name]
            Endif
          Next
          res1x.Update
          modDatabase.$myConn.Delete(Trim(txtpatbilling.Text), "fldid=&1", res1["fldid"])

        Next
        modDatabase.$myConn.Commit
        Dec Application.Busy
        Message.Info("Transfer to <b>tblpatbilling</b> completed", "OK")
      Endif

      ' ' ''Receipts of deposit for admitted patients
      ' ' res2 = modDatabase.$myConn.Exec(Subst("select * from &1", Trim(txttempbilldetail.Text)) & " where fldbillno like &1 and fldencounterval in(select fldencounterval from tblencounter where fldadmission=&2)", "DET" & "%", "Admitted")
      ' ' If res2.Available Then
      ' '   Inc Application.Busy
      ' '   modDatabase.$myConn.Begin
      ' '   For Each res2
      ' '
      ' '     res2x = modDatabase.$myConn.Create("tbltempbilldetail")
      ' '     For Each hField In res2.Fields
      ' '       If hField.Name = "fldid" Then
      ' '       Else
      ' '         res2x[hField.Name] = res2[hField.Name]
      ' '       Endif
      ' '     Next
      ' '     res2x.Update
      ' '     modDatabase.$myConn.Delete(Trim(txttempbilldetail.Text), "fldid=&1", res2["fldid"])
      ' '
      ' '   Next
      ' '   modDatabase.$myConn.Commit
      ' '   Dec Application.Busy
      ' '   Message.Info("Transfer to <b>tbltempbilldetail</b> completed", "OK")
      ' ' Endif

    Else If sType = "Laboratory" Then
      ''transfer non-reported lab
      res3 = modDatabase.$myConn.Exec(Subst("select *from &1 where flduserid_report IS NULL", Trim(txtpatlabtest.Text)) & " and fldtime_sample>&1", DateAdd(Now(), gb.Year, -1))
      If res3.Available Then
        Inc Application.Busy
        modDatabase.$myConn.Begin
        For Each res3

          res3x = modDatabase.$myConn.Create("tblpatlabtest")
          For Each hField In res3.Fields
            If hField.Name = "fldid" Then
            Else If hField.Name = "fldfilepath" Then
              res3x[hField.Name] = CStr(res3["fldid"])
            Else
              res3x[hField.Name] = res3[hField.Name]
            Endif
          Next
          res3x.Update
          modDatabase.$myConn.Delete(Trim(txtpatlabtest.Text), "fldid=&1", res3["fldid"])

        Next
        modDatabase.$myConn.Commit
        Dec Application.Busy
        Message.Info("Transfer to <b>tblpatlabtest</b> completed", "OK")
      Endif

      ' ' ''transfer non-reported lab sub test
      ' ' res4 = modDatabase.$myConn.Exec(Subst("select *from &1 where fldreport IS NULL", Trim(txtpatlabsubtest.Text)))
      ' ' If res4.Available Then
      ' '   Inc Application.Busy
      ' '   modDatabase.$myConn.Begin
      ' '   For Each res4
      ' '
      ' '     ptestid = GetSubTestId(res4["fldencounterval"], CStr(res4["fldtestid"]))
      ' '     If ptestid Then
      ' '       res4x = modDatabase.$myConn.Create("tblpatlabsubtest")
      ' '       For Each hField In res4.Fields
      ' '         If hField.Name = "fldid" Then
      ' '         Else If hField.Name = "fldtestid" Then
      ' '           res4x["fldtestid"] = ptestid
      ' '         Else
      ' '           res4x[hField.Name] = res4[hField.Name]
      ' '         Endif
      ' '       Next
      ' '       res4x.Update
      ' '       modDatabase.$myConn.Delete(Trim(txtpatlabsubtest.Text), "fldid=&1", res4["fldid"])
      ' '     Endif
      ' '
      ' '   Next
      ' '   modDatabase.$myConn.Commit
      ' '   Dec Application.Busy
      ' '   Message.Info("Transfer to <b>tblpatlabsubtest</b> completed", "OK")
      ' ' Endif

    Endif
  Endif

Catch
  modDatabase.$myConn.Rollback
  Dec Application.Busy
  modHelpVariable.CreateErrorReport()

End

' ' Private Function GetSubTestId(encid As String, testid As String) As Long
' '
' '   Dim res As Result
' '   Dim ptestid As Long
' '
' '   res = modDatabase.$myConn.Exec("select fldid from tblpatlabtest where fldencounterval=&1 and fldfilepath=&2", encid, testid)
' '   If res.Available Then
' '     res.MoveLast
' '     ptestid = res["fldid"]
' '   Endif
' '
' '   Return ptestid
' '
' ' End

Public Sub btnalter_Click()

  If cmbtablename.Text And If txttablename.Text Then
    modDBApp.RenameTableMysql(modDatabase.$myConn, cmbtablename.Text, txttablename.Text)
  Endif

End

Public Sub btnenable_Click()

  Dim res As Result

  If GridView1.Rows.Selection.Count Then
    res = modDatabase.$myConn.Edit("tblfisclosing", "fldindex=&1", GridView1[GridView1.Row, 0].Text)
    res["fldstate"] = "Active"
    res.Update
    FillGridView()
    Message.Info("Information updated", ("OK"))
  Endif

End

Public Sub btndisable_Click()

  Dim res As Result

  If GridView1.Rows.Selection.Count Then
    res = modDatabase.$myConn.Edit("tblfisclosing", "fldindex=&1", GridView1[GridView1.Row, 0].Text)
    res["fldstate"] = "Inactive"
    res.Update
    FillGridView()
    Message.Info("Information updated", ("OK"))
  Endif

End
