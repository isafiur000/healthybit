' Gambas class file

Private $colvar As String
Private $tbl As String
Private $rData As Result
Private $aMyFields As String[]

Public Sub _new(colvar As String, tbl As String)

  $colvar = colvar
  $tbl = tbl

End

Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me, "False")
  FilVarList()

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub txtvariable_KeyPress()

  modGeneralMain.InputTextKeyOnly()

End

Public Sub btnOK_Click()

  Dim res As Result

  If txtvariable.Text Then
    res = modDatabase.$myConn.Create($tbl)
    res[$colvar] = Trim(txtvariable.Text)
    res.Update()
    FilVarList()
    txtvariable.Text = ""
    Balloon.Info(("Variable added"), btnOK)
    Balloon.Delay = modBasic.$BalloonDelay
    txtvariable.SetFocus
  Endif

End

Private Sub FilVarList()

  $rData = modDatabase.$myConn.Exec(Subst("select &1 from &2 ORDER BY &1", $colvar, $tbl))
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

End

Public Sub GridView1_Data(Row As Integer, Column As Integer)

  $rData.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView1, Row)
  GridView1.Data.Text = $rData[$aMyFields[Column]]
  GridView1.Rows[Row].Height = Max(GridView1.Rows[Row].Height, GridView1.Data.Font.RichTextHeight(GridView1.Data.Text, GridView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (GridView1.Rows.Height - GridView1.Font.Height))
  GridView1.Data.WordWrap = True

End

Public Sub btnCancel_Click()

  If GridView1.Rows.Selection.Count Then
    modDatabase.$myConn.Delete($tbl, $colvar & "=&1", GridView1[GridView1.Row, 0].Text)
    FilVarList()
    Balloon.Delete(("Variable deleted"), btnCancel)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub Form_KeyRelease()

  If Key.Code = Key.Esc Then
    Me.Close
  Endif

End

' Public Sub txtvariable_KeyRelease()
'
'   FilVarList()
'
' End

Public Sub txtvariable_LostFocus()

  txtvariable.Text = String.UCaseFirst(txtvariable.Text)

End

Public Sub txtcsv_Click()

  If Dialog.OpenFile() Then Return
  txtcsv.Text = Dialog.Path

End

Public Sub btnupload_Click()

  Dim xxx As String[]
  Dim xitem As String
  Dim res As Result

  If Exist(txtcsv.Text) Then
    Inc Application.Busy
    xxx = modString.GetStringArrayFromFile(txtcsv.Text)
    For Each xitem In xxx
      If Trim(xitem) Then
        res = modDatabase.$myConn.Create($tbl)
        res[$colvar] = Trim(xitem)
        res.Update()
      Endif
    Next
    Dec Application.Busy
    FilVarList()
    txtcsv.Text = ""
    Balloon.Info(("Data Import completed"), btnupload)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End
