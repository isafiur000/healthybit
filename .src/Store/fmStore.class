' Gambas class file

Public Sub Form_Arrange()

  modAppSupport.SetWorkSpaceImage()

End

Public Sub Form_Open()

  Dim xalert As String
  Dim hForm As FmStoreAlert

  modGeneralMain.GetFirstValues(ServerSocket1, ServerSocket2)
  modGeneralMain.LoadMainForms(Me, pnltop, pnlleft, Workspace1, pnlright, pnlbottom)
  modBasic.LoadInvoicingSetting()
  modBasic.InventorySettings()
  modBasic.InventoryUserAccessList()
  If MMain.$SISHAppMode = "HIS" Then
  Else
    mnuextra.Visible = False
  Endif

  xalert = modSettings.ShowSettingFromFIle("InventorySetting/InventoryAlert")
  If xalert Then
    If xalert = "UnderStock" Then
      hForm = New FmStoreAlert(xalert)
      modWorkSpace.Add(hForm)
    Else
      modDashBoard.GetAutoExpiryAlert(xalert)
    Endif
  Endif

End

Public Sub Form_Close()

  modGeneralMain.ExitAllWindows()

End

Public Sub mnupersonal_Click()

  modWorkSpace.Remove(fmPersonal)
  modWorkSpace.Add(fmPersonal)

End

Public Sub mnuscreen_Click()

  If Dialog.SelectDirectory() Then Return
  Wait 2
  Desktop.Screenshot().Save(Dialog.Path &/ modString.GetNowString() & ".png")
  Message.Info(("Screen Shot saved in ") & Dialog.Path, ("OK"))

End

Public Sub mnumail_Click()

  fmMail.Close
  fmMail.ShowModal

End

Public Sub mnupurentry_Click()

  modWorkSpace.Remove(fmPurchaseEntry)
  modWorkSpace.Add(fmPurchaseEntry)

End

Public Sub mnuappset_Click()

  fmAppSetting.Close
  fmAppSetting.ShowModal

End

Public Sub mnuseract_Click()

  fmAppUser.Close
  fmAppUser.ShowModal

End

Public Sub mnutransfer_Click()

  modWorkSpace.Remove(fmTransfer)
  modWorkSpace.Add(fmTransfer)

End

Public Sub mnulock_Click()

  fmLock.Close
  fmLock.ShowModal

End

Public Sub mnustockDB_Click()

  fmStockDB.Close
  fmStockDB.ShowModal

End

Public Sub mnuexpiry_Click()

  Dim xdate As Date

  Dialog.Title = "Select Expiry Date"
  If Dialog.SelectDate() Then Return
  xdate = Dialog.Date
  modDashBoard.AutoDashboardExpiry(xdate)

End

Public Sub mnunonexpiry_Click()

  Dim xList As String[] = ["1 Month", "2 Month", "3 Month", "6 Month", "9 Month", "12 Month", "15 Month"]
  Dim xmonth As String

  xmonth = InputCombo("Select Near-Expiry Month", "Near Expiry", xList, "3 Month", True)
  If xmonth Then
    modDashBoard.AutoDashboardNearExpiry(xmonth)
  Endif

End

Public Sub mnuundermin_Click()

  Dim xPath As String

  Inc Application.Busy
  xPath = modHTMLStock.ShowUnderStockItemReport()
  Dec Application.Busy
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

Public Sub mnustcretrn_Click()

  modWorkSpace.Remove(fmStockReturn)
  modWorkSpace.Add(fmStockReturn)

End

Public Sub ServerSocket1_Connection(RemoteHostIP As String)

  Dim hForm As FmChat

  If ServerSocket1.Status <= Net.Inactive Then Return
  hForm = New FmChat(modBasic.$lbluser, RemoteHostIP, "acc")
  hForm.Show

End

'''---------------------- transfer server -------------------------------------------------------
Public Sub ServerSocket2_Connection(RemoteHostIP As String)

  Dim Myket As Socket

  Myket = ServerSocket2.Accept()
  Myket.Blocking = False
  Print RemoteHostIP

End

Public Sub Socket_Read()

  Dim sCad As String

  If Last.Status <> Net.Connected Then Return
  Read #Last, sCad, Lof(Last)
  modControl.ShowTransferFile(Last.RemoteHost, sCad)

End

Public Sub Workspace1_Menu()

  If Workspace1.Windows.Count = 0 Then
    mnufile.Popup
  Endif

End

Public Sub mnubackground_Click()

  Dialog.Filter = ["*.jpg;*.jpeg;*.png;*.bmp", "Picture files"]
  If Dialog.OpenFile() Then Return
  modSettings.SaveSettingsToVar("AppSetting_DeskPicture/" & modBasic.$lbluser, Dialog.Path)
  modAppSupport.SetWorkSpaceImage()

End

Public Sub mnuinventory_Click()

  fmActivateItem.Close
  fmActivateItem.ShowModal

End

Public Sub mnusttrnsf_Click()

  modWorkSpace.Remove(fmmedTransfer)
  modWorkSpace.Add(fmmedTransfer)

End

Public Sub mnunewextra_Click()

  modWeb.ExecGeneralSub()

End

Public Sub mnuadjust_Click()

  Dim hForm As FmSuperuser

  hForm = New FmSuperuser("Stock Adjustment")
  hForm.Show

End

Public Sub mnuprinter_Click()

  fmPrinterSettings.Close
  fmPrinterSettings.ShowModal

End

Public Sub mnusetinventory_Click()

  fmInventorySettings.Close
  fmInventorySettings.ShowModal

End

Public Sub mnubillprt_Click()

  fmReportSetting.Close
  fmReportSetting.ShowModal

End

Public Sub mnuwebcam_Click()

  fmDeviceSetting.Close
  fmDeviceSetting.ShowModal

End

Public Sub mnuembedder_Click()

  modExternal.RunExternalFixScript()

End

Public Sub mnuremoaccess_Click()

  fmStreaming.Close
  fmStreaming.ShowModal

End

Public Sub mnutranslate_Click()

  Dim hForm As FmTranslate

  hForm = New FmTranslate("Translate", Clipboard.Paste())
  hForm.ShowModal

End

Public Sub mnusearrepo_Click()

  fmCheckFile.Close
  fmCheckFile.ShowModal()

End

Public Sub mnunotice_Click()

  fmCompNotice.Close
  fmCompNotice.ShowModal

End

Public Sub mnucustom_Click()

  fmExtraReportSett.Close
  fmExtraReportSett.ShowModal

End

Public Sub mnustoconsume_Click()

  modWorkSpace.Remove(fmConsume)
  modWorkSpace.Add(fmConsume)

End

Public Sub mnuclrcache_Click()

  modGeneralMain.CLearUserCollection()

End

Public Sub mnustorecode_Click()

  fmCurStorage.Close
  fmCurStorage.ShowModal

End

Public Sub mnumodem_Click()

  fmodemCache.Close
  fmodemCache.ShowModal

End

Public Sub mnuplaymedia_Click()

  modAppSupport.PlayMediaFile()

End

Public Sub mnuexit_Click()

  modGeneralMain.CloseAllWindows()

End

Public Sub mnubrowser_Click()

  Dim xURL As String
  Dim hForm As FmWebView

  xURL = modSettings.ShowSettingFromFIle("GeneralSettings/Browser_URL")
  If xURL Then
    hForm = New FmWebView(xURL)
    modWorkSpace.Add(hForm)
  Endif

End

Public Sub mnupurchaseorder_Click()

  fmSalesReport.Close
  fmSalesReport.ShowModal

End

Public Sub mnugodebug_Click()

  If mnugodebug.Caption = "Debug On" Then
    mnugodebug.Caption = "Debug Off"
    modBasic.$DebugMode = True
    modBasic.$DebugDB = True
    db.Debug = True

  Else If mnugodebug.Caption = "Debug Off" Then
    mnugodebug.Caption = "Debug On"
    modBasic.$DebugMode = False
    modBasic.$DebugDB = False
    db.Debug = False

  Endif

End

Public Sub mnubugreport_Click()

  modGeneralMain.SendBugReport(modBasic.$lbluser)

End

Public Sub mnutransreq_Click()

  modWorkSpace.Remove(fmStoreRequest)
  modWorkSpace.Add(fmStoreRequest)

End
