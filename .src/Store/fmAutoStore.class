' Gambas class file

Private $sCompId As String
Private $colmName As String
Private $sCheckDay As Integer
Private $sReqDay As Integer
Private $sRounding As String

Private $dt1 As Date
Private $dt2 As Date

Private $xVar As Variant[]
Private sTime As Date

Public Sub _new(sCompID As String, sColumnName As String, sCheckDays As Integer, sRequestDays As Integer, sRounding As String)

  $sCompId = sCompID
  $colmName = sColumnName
  $sCheckDay = sCheckDays
  $sReqDay = sRequestDays
  $sRounding = sRounding

End

Public Sub Form_Open()

  ' modGeneralMain.ArrangeEmbedForms(Me, Panel1, "Vertical")
  ' Me.Icon = Picture[modGeneralMain.$strLogo]
  cmbcomtaget.List = modString.GetRemainingArray(modBasic.$AllCompPerList, [$sCompId])
  $dt2 = modDate.StartSqlDate(Now())
  $dt1 = DateAdd($dt2, gb.Day, 0 - $sCheckDay)
  lblfirst.Text = "Please Wait . . . ."

  $xVar = New Variant[]
  sTime = Now()
  Timer1.Enabled = True

End

Public Sub Timer1_Timer()

  If DateDiff(sTime, Now(), gb.Second) > 1 Then
    Timer1.Enabled = False
    If $sCompId And If $sReqDay Then
      ShowStoreRequestMedSurg($sCompId, $dt1, $dt2, $sReqDay, $sRounding)
    Endif
  Endif

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Private Sub ShowStoreRequestMedSurg(CompId As String, dt1 As Date, dt2 As Date, orderDays As Integer, sRound As String)

  Dim sql As String
  Dim res As Result
  Dim aColl As Collection
  Dim xinterval As Integer

  Dim xcurr As Float
  Dim xsales As Float
  Dim xsaleRate As Float
  Dim xpacksize As Float
  Dim xnew As Float

  xinterval = DateDiff(dt1, dt2, gb.Day)
  sql = "select fldroute,flditem,SUM(fldqtydisp-fldqtyret) as qty from tblpatdosing where fldtime>=&1 and fldtime<=&2 and fldsave_order=&3 and " & $colmName & " like &4 GROUP BY flditem"
  res = modDatabase.$syConn.Exec(sql, dt1, dt2, True, compid)

  modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory).Value = 0
  For Each res
    xcurr = 0
    xsales = 0
    xsaleRate = 0
    xpacksize = 0
    xnew = 0

    xcurr = modStock.TotalQTYbyBrand(res["flditem"], compid)
    xsales = res["qty"]
    If xsales Then
      xsaleRate = xsales / xinterval
    Else
      xsaleRate = 0
    Endif

    If sRound = "Pack Size" Then
      Select res["fldroute"]
        Case "suture", "msurg", "ortho", "extra"
          xpacksize = 1
        Case Else
          xpacksize = modMedConstant.GetPacketSizeMedicine(res["flditem"])
      End Select
      xnew = Ceil(((xsaleRate * orderDays) - xcurr) / xpacksize) * xpacksize
    Else If sRound = "Tens" Then
      xnew = Ceil(((xsaleRate * orderDays) - xcurr) / 10) * 10
    Else
      xnew = Ceil((xsaleRate * orderDays) - xcurr)
    Endif

    If xnew > 0 Then
      aColl = New Collection
      aColl.Add(res["flditem"], CStr(0))
      aColl.Add(xsales, CStr(1))
      aColl.Add(xcurr, CStr(2))
      aColl.Add(xnew, CStr(3))
      $xVar.Add(aColl)
    Endif
    modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory).Value = (res.Index + 1) / res.Count
    Wait
  Next

  GridView1.Clear
  GridView1.Columns.Count = 5
  GridView1.Rows.Count = $xVar.Count
  GridView1.Rows.Height = modBasic.$AppGridRowHeight

  With GridView1
    .Columns[0].Width = 450 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio
    .Columns[3].Width = 100 * modBasic.$AppWidthRatio
    .Columns[4].Width = 25 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Particulars"
    .Columns[1].Text = "SalesQTY"
    .Columns[2].Text = "CurrQTY"
    .Columns[3].Text = "Request"
  End With

  lblfirst.Text = $sCompId & " : Based on Sales from " & modReportVar.GetDateTimeReport($dt1, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport($dt2, gb.MediumDate)

End

Public Sub GridView1_Data(Row As Integer, Column As Integer)

  modGeneralMain.GridViewDecoration(GridView1, Row)
  If Column = 4 Then
    GridView1.Data.Picture = Picture["icons/unchecked.png"]
  Else
    GridView1.Data.Text = $xVar[Row][CStr(Column)]
  Endif

End

Public Sub GridView1_Click()

  If GridView1.Column = 4 Then
    modGridView.CheckUncheckGridNoDB(GridView1, 4)
  Endif

End

Public Sub chkseltop_Click()

  Dim Row As Integer

  For Row = 0 To GridView1.Rows.Count - 1
    If chkseltop.Value = True Then
      GridView1[Row, 4].Picture = Picture["icons/checked.png"]
    Else If chkseltop.Value = False Then
      GridView1[Row, 4].Picture = Picture["icons/unchecked.png"]
    Endif
  Next

End

Public Sub btnadd_Click()

  Dim Row As Integer
  Dim ref As String
  Dim idLock As Boolean

  If cmbcomtaget.Text Then
    If Not txtrefno.Text Then
      If Message.Question("APPROVE selected requests from " & $sCompId & " TO " & cmbcomtaget.Text & " ?", ("No"), ("Yes")) = 2 Then

        Inc Application.Busy
        idLock = modBillLock.LockTableForID("Reference")
        If idLock = True Then
          modDatabase.$myConn.Begin
          ref = modBillLock.ReferenceString("General")
          If ref Then

            For Row = 0 To GridView1.Rows.Count - 1
              If GridView1[Row, 4].Picture = Picture["icons/checked.png"] Then
                AddRequest(Row, $sCompId, cmbcomtaget.Text, ref)
                GridView1[Row, 4].Picture = Picture["icons/unchecked.png"]
              Endif
            Next

          Endif
          modDatabase.$myConn.Commit
          txtrefno.Text = ref
          modBillLock.ReleaseLockTable("Reference")
        Endif
        Dec Application.Busy

      Endif
    Endif
  Endif

Catch
  modDatabase.$myConn.Rollback
  If idLock = True Then
    modBillLock.ReleaseLockTable("Reference")
  Endif
  Dec Application.Busy
  modHelpVariable.CreateErrorReport()

End

Private Sub AddRequest(Row As Integer, sRequest As String, sTarget As String, sReference As String)

  Dim res As Result

  res = modDatabase.$myConn.Create("tblrequest")
  res["fldstockid"] = GridView1[Row, 0].Text
  res["fldcategory"] = modStock.GetPharmCategoryFromStockName(GridView1[Row, 0].Text, sRequest)
  res["fldqty"] = GridView1[Row, 3].Text
  res["fldstatus"] = "Requested"
  res["fldfinalqty"] = GridView1[Row, 3].Text
  res["fldurgent"] = "Normal"
  res["fldexpdate"] = DateAdd(Now(), gb.Day, 1)
  res["fldreference"] = sReference
  res["fldremarks"] = ""

  res["fldorduserid"] = modBasic.$lbluser
  res["fldordtime"] = Now()
  res["fldordcomp"] = sRequest

  res["flduserid"] = ""
  res["fldtime"] = ""
  res["fldcomp"] = sTarget
  res["fldsave"] = True
  res.Update

End
