' Gambas class file

Private $rData As Result
Private $aMyFields As String[]

Public Sub Form_Open()

  cmbvendor.List = modSupplier.FillVendorNameCombo("Active")
  cmbroute.List = modMedicine.ComboRoute()
  cmbcomtaget.List = modBasic.$AllCompPerList
  cmburgent.List = ["Normal", "Urgent"]
  If modBasic.$PurCompList Then
    cmbfixdepart.Text = modBasic.$PurCompList
    cmbfixdepart.Enabled = False
  Else
    cmbfixdepart.List = modMedicine.GetExtraDepartments()
  Endif
  cmbroute.Text = ""
  dtexpect.Value = DateAdd(Date(), gb.Date, 7)
  rbgeneric.Value = True

End

''already defined in parent form
' Public Sub Form_KeyRelease()
'
'   modGeneralmain.GoToNextControlTab()
'
' End

Public Sub cmbcomtaget_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbcomtaget)
  modFillContainer.RestrictComboToContent(cmbcomtaget)

End

Public Sub cmbvendor_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbvendor)
  modFillContainer.RestrictComboToContent(cmbvendor)

End

Public Sub cmbroute_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbroute)
  modFillContainer.RestrictComboToContent(cmbroute)

End

Public Sub cmburgent_KeyRelease()

  modFillContainer.AutoFillComboBox(cmburgent)
  modFillContainer.RestrictComboToContent(cmburgent)

End

Private Function GetBrandGenerricType() As String

  Dim brandOrGeneric As String

  If rbrand.Value = True Then
    brandOrGeneric = "Brand"
  Else
    brandOrGeneric = "Generic"
  Endif
  Return brandOrGeneric

End

Public Sub cmbroute_Click()

  cmbmedicine.Clear
  cmbmedicine.Text = ""
  ' txtqty.Value = 0

End

Public Sub cmbmedicine_GotFocus()

  Dim res As Result

  If Not cmbroute.Text Then
    cmbroute.SetFocus

  Else If cmbroute.Text Then
    If cmbroute.Text = "Group" Then
    Else

      If Not cmbmedicine.Text Then
        If cmbfixdepart.Text Then
          res = modStock.ItemListForPurchaseResult(cmbroute.Text, GetBrandGenerricType(), cmbfixdepart.Text)
        Else
          res = modStock.ItemListForPurchaseResult(cmbroute.Text, GetBrandGenerricType())
        Endif
        cmbmedicine.Text = GridViewNew("Select Particulars", modControlSub.GetDirectFillresult(res), False, cmbmedicine, GridView1.Height + cmbmedicine.Height)
      Endif
      cmbmedicine.SetFocus

    Endif
  Endif

End

Public Sub txtqty_GotFocus()

  If cmbmedicine.Text Then
    If modStockSub.GetComboStockControl(cmbroute.Text, cmbmedicine.Text, rbgeneric, rbrand, modDatabase.$medConn) = False Then
      cmbmedicine.Text = ""
      Balloon.Warning(("Item not listed"), cmbmedicine)
      Balloon.Delay = modBasic.$BalloonDelay
      cmbroute.SetFocus
    Else

      If cmbroute.Text = "suture" Or If cmbroute.Text = "msurg" Or If cmbroute.Text = "ortho" Or If cmbroute.Text = "extra" Or If cmbroute.Text = "Group" Then
      Else
        If rbrand.Value = True Then
          cmbmedicine.Text = modMedConstant.ConvertBrandToGeneric(cmbroute.Text, cmbmedicine.Text)
        Endif
      Endif
      If cmbcomtaget.Text Then
        txtcurqty.Value = modStock.TotalQTYbyBrand(cmbmedicine.Text, cmbcomtaget.Text)
      Endif
      txtqty.SelectAll

    Endif
  Endif

End

Public Sub cmburgent_GotFocus()

  If Not txtqty.Value Then
    txtqty.SetFocus
  Endif

End

Public Sub btnadd_Click()

  If cmbcomtaget.Text And If cmbmedicine.Text And If txtqty.Value Then
    If cmbcomtaget.Text = modBasic.$compID Then
    Else
      AddRequestStore()
      SHowGridView()
      ClearComboAll()
      cmbroute.SetFocus
    Endif
  Endif

End

Private Sub ClearComboAll()

  cmbroute.Text = ""
  cmbmedicine.Clear()
  cmbmedicine.Text = ""
  txtcurqty.Value = 0
  txtqty.Value = 0
  cmburgent.Text = ""

End

Public Sub btnadd_KeyRelease()

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Then
    btnadd_Click()
  Endif

End

Private Sub AddRequestStore()

  Dim res As Result

  res = modDatabase.$myConn.Create("tblrequest")
  res["fldstockid"] = cmbmedicine.Text
  res["fldcategory"] = modNonMedical.GetBillItemCategoryFromCombo(cmbroute.Text)
  res["fldqty"] = txtqty.Value
  res["fldstatus"] = "Requested"
  res["fldfinalqty"] = txtqty.Value
  res["fldurgent"] = cmburgent.Text
  res["fldexpdate"] = dtexpect.Value
  res["fldreference"] = ""
  res["fldremarks"] = cmbvendor.Text

  res["fldorduserid"] = modBasic.$lbluser
  res["fldordtime"] = Now()
  res["fldordcomp"] = modBasic.$compID

  res["flduserid"] = ""
  res["fldtime"] = ""
  res["fldcomp"] = cmbcomtaget.Text
  res["fldsave"] = False
  res.Update
  cmbroute.Text = ""

End

Public Sub btnrefreshnew_Click()

  If cmbcomtaget.Text Then
    SHowGridView()
    cmbcomtaget.Enabled = False
  Endif

End

Public Sub cmbcomtaget_Click()

  If cmbcomtaget.Text Then
    SHowGridView()
  Endif

End

Private Sub SHowGridView()

  Dim sql As String

  sql = "select fldid,fldordtime,fldstockid,fldcategory,fldqty,fldcomp,fldurgent,fldexpdate,fldorduserid,fldreference from tblrequest where fldordcomp=&1 and fldstatus=&2 and fldcomp=&3 and flduserid IS NULL"
  $rData = modDatabase.$myConn.Exec(sql, modBasic.$compID, "Requested", cmbcomtaget.Text)
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Columns[0].Width = 1
    .Columns[1].Width = 125 * modBasic.$AppWidthRatio
    .Columns[2].Width = 350 * modBasic.$AppWidthRatio
    .Columns[3].Width = 1
    .Columns[4].Width = 75 * modBasic.$AppWidthRatio
    .Columns[5].Width = 100 * modBasic.$AppWidthRatio
    .Columns[6].Width = 100 * modBasic.$AppWidthRatio
    .Columns[7].Width = 125 * modBasic.$AppWidthRatio
    .Columns[8].Width = 75 * modBasic.$AppWidthRatio
    .Columns[9].Width = 125 * modBasic.$AppWidthRatio

    .Columns[1].Text = "DateTime"
    .Columns[2].Text = "Particulars"
    .Columns[4].Text = "QTY"
    .Columns[5].Text = "Store"
    .Columns[6].Text = "Urgency"
    .Columns[7].Text = "Delivery"
    .Columns[8].Text = "User"
    .Columns[9].Text = "Reference"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer)

  $rData.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView1, Row)
  If Column = 1 Then
    GridView1.Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.MediumDate)
  Else If Column = 4 Then
    GridView1.Data.Text = modReportVar.GetLocaleNumberFormat($rData[$aMyFields[Column]], -2)
  Else If Column = 7 Then
    GridView1.Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.MediumDate)
  Else
    GridView1.Data.Text = $rData[$aMyFields[Column]]
  Endif
  GridView1.Rows[Row].Height = Max(GridView1.Rows[Row].Height, GridView1.Data.Font.RichTextHeight(GridView1.Data.Text, GridView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (GridView1.Rows.Height - GridView1.Font.Height))
  GridView1.Data.WordWrap = True

End

Public Sub btnreport_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, "STORE REQUEST: " & modBasic.$compID, modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))

End

Public Sub GridView1_Click()

  Dim res As Result
  Dim xval As Float
  Dim xstat As String
  Dim Row As Integer

  Row = GridView1.Row

  If GridView1.Column = 4 Then
    If Not GridView1[GridView1.Row, 9].Text Then
      xval = InputValue(("Edit Quantity of selected Particular"), "Store Request", GridView1[GridView1.Row, 4].Text)
      If xval Then
        res = modDatabase.$myConn.Edit("tblrequest", "fldid=&1 and fldordcomp=&2 and fldstatus=&3 and fldsave=&4", GridView1[GridView1.Row, 0].Text, modBasic.$compID, "Requested", False)
        res["fldqty"] = xval
        res["fldfinalqty"] = xval
        res.Update
        SHowGridView()
      Endif
    Endif

  Else If GridView1.Column = 6 Then
    If Not GridView1[GridView1.Row, 9].Text Then
      xstat = InputCombo(("Edit Urgency of selected Particular"), "Store Request", ["Normal", "Urgent"], GridView1[GridView1.Row, 6].Text, True)
      If xstat Then
        res = modDatabase.$myConn.Edit("tblrequest", "fldid=&1 and fldordcomp=&2 and fldstatus=&3 and fldsave=&4", GridView1[GridView1.Row, 0].Text, modBasic.$compID, "Requested", False)
        res["fldurgent"] = xstat
        res.Update
        SHowGridView()
      Endif
    Endif

  Else
    txtrefno.Text = GridView1[GridView1.Row, 9].Text
  Endif
  GridView1.Row = Row

End

Public Sub GridView1_Menu()

  mnuhide.Popup()

End

Public Sub mnudelete_Click()

  If GridView1.Rows.Selection.Count Then
    modDatabase.$myConn.Delete("tblrequest", "fldid=&1 and fldordcomp=&2 and fldstatus=&3 and fldsave=&4", GridView1[GridView1.Row, 0].Text, modBasic.$compID, "Requested", False)
    SHowGridView()
  Endif

End

Public Sub btnsave_Click()

  Dim res1 As Result
  Dim res As Result
  Dim ref As String
  Dim idLock As Boolean

  If cmbcomtaget.Text Then
    res1 = modDatabase.$myConn.Exec("select fldid from tblrequest where fldstatus=&1 and fldordcomp=&2 and fldsave=&3 and fldcomp=&4 and flduserid IS NULL", "Requested", modBasic.$compID, False, cmbcomtaget.Text)
    If res1.Available Then

      Inc Application.Busy
      idLock = modBillLock.LockTableForID("Reference")
      If idLock = True Then
        modDatabase.$myConn.Begin
        ref = modBillLock.ReferenceString("General")
        If ref Then
          For Each res1
            res = modDatabase.$myConn.Edit("tblrequest", "fldid=&1", res1["fldid"])
            res["fldreference"] = ref
            res["fldsave"] = True
            res.Update
          Next
        Endif
        modDatabase.$myConn.Commit
        txtrefno.Text = ref

        modBillLock.ReleaseLockTable("Reference")
      Endif
      Dec Application.Busy

      SHowGridView()
    Endif
  Endif

Catch
  modDatabase.$myConn.Rollback
  If idLock = True Then
    modBillLock.ReleaseLockTable("Reference")
  Endif
  Dec Application.Busy
  modHelpVariable.CreateErrorReport()

End

Public Sub btnreportfir_Click()

  Dim xPath As String

  If txtrefno.Text Then
    Inc Application.Busy
    xPath = modHTMLStockReport.StoreRequestReport(txtrefno.Text, False)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub btnformatfir_Click()

  Dim xPath As String

  If txtrefno.Text Then
    Inc Application.Busy
    xPath = modHTMLStockReport.StoreRequestReportEstimate(txtrefno.Text, False)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End
