' Gambas class file

Private $rData2 As Result
Private $aMyFields As String[]

Private $MSurgicalLst As String[]
Private $ExtraItemLst As String[]
Private $OralBrandLst As String[]
Private $OralGenricLst As String[]
Private $InjBrandLst As String[]
Private $InjGenricLst As String[]
Private $LiqBrandLst As String[]
Private $LiqGenricLst As String[]

Public Sub Form_Open()

  modGeneralMain.ArrangeEmbedForms(Me, Panel1, "Vertical")
  Me.Icon = Picture[modGeneralMain.$strLogo]

  cmbcomroute.List = modMedicine.ComboRoute()
  cmbcomtaget.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditem as col from tbltarget"))
  DisplayDefaultConsumeMode()
  dtconsume.Value = Now()
  IniateCategoryPharmArray()
  If modBasic.$AccessStockConsume = "Disable" Then
    btncomsave.Enabled = False
  Endif

End

Private Sub DisplayDefaultConsumeMode()

  Dim def As String

  def = modSettings.ShowSettingFromFIle("BrandOrGeneric/Consume")
  modStockSub.GetBrandgenericSettingOption(def, rbrand2, rbgeneric2)

End

Public Sub Form_Activate()

  If Not cmbcomtaget.Text Then
    BlankComBox()
    cmbcomtaget.SetFocus
  Endif

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub Form_KeyRelease()

  modGeneralmain.GoToNextControlTab()

End

Public Sub mnublank_Click()

  Me.Close
  Wait
  modWorkSpace.Add(fmConsume)

End

Public Sub btntarg_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("flditem", "tbltarget")
  hForm.ShowModal
  cmbcomtaget.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditem as col from tbltarget"))

End

''------------------------------------------- consumption -----------------------------------------------------------
Public Sub rbgeneric2_Click()

  modSettings.SaveSettingsToFile("BrandOrGeneric/Consume", "Generic")

End

Public Sub rbrand2_Click()

  modSettings.SaveSettingsToFile("BrandOrGeneric/Consume", "Brand")

End

Public Sub cmbcomtaget_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbcomtaget)

End

Public Sub cmbcomroute_Click()

  chkcomsave.Value = False
  cmbcommedicine.Clear()
  cmbcommedicine.Text = ""
  cmbcombatch.Clear()
  cmbcombatch.Text = ""

End

Public Sub cmbcomroute_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbcomroute)
  modFillContainer.RestrictComboToContent(cmbcomroute)

End

Public Sub dtnepconsume_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtconsume.Value))
  If xx Then
    dtconsume.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

''--------------------- Array for Items to Load ----------------------------
Private Sub IniateCategoryPharmArray()

  $MSurgicalLst = New String[]
  $ExtraItemLst = New String[]
  $OralBrandLst = New String[]
  $OralGenricLst = New String[]
  $InjBrandLst = New String[]
  $InjGenricLst = New String[]
  $LiqBrandLst = New String[]
  $LiqGenricLst = New String[]

End

Private Function GetCategoryArray(sRoute As String, sMode As String) As String[]

  Dim xarry As String[]

  If sRoute = "oral" Then
    If sMode = "Brand" Then
      If Not $OralBrandLst.Count Then
        $OralBrandLst.Insert(modControlSub.GetDirectFillresult(modStock.FillMedicinesTransferComboResult(sRoute, sMode, modBasic.$compID)))
      Endif
      xarry = $OralBrandLst
    Else If sMode = "Generic" Then
      If Not $OralGenricLst.Count Then
        $OralGenricLst.Insert(modControlSub.GetDirectFillresult(modStock.FillMedicinesTransferComboResult(sRoute, sMode, modBasic.$compID)))
      Endif
      xarry = $OralGenricLst
    Endif

  Else If sRoute = "liquid" Then
    If sMode = "Brand" Then
      If Not $LiqBrandLst.Count Then
        $LiqBrandLst.Insert(modControlSub.GetDirectFillresult(modStock.FillMedicinesTransferComboResult(sRoute, sMode, modBasic.$compID)))
      Endif
      xarry = $LiqBrandLst
    Else If sMode = "Generic" Then
      If Not $LiqGenricLst.Count Then
        $LiqGenricLst.Insert(modControlSub.GetDirectFillresult(modStock.FillMedicinesTransferComboResult(sRoute, sMode, modBasic.$compID)))
      Endif
      xarry = $LiqGenricLst
    Endif

  Else If sRoute = "injection" Then
    If sMode = "Brand" Then
      If Not $InjBrandLst.Count Then
        $InjBrandLst.Insert(modControlSub.GetDirectFillresult(modStock.FillMedicinesTransferComboResult(sRoute, sMode, modBasic.$compID)))
      Endif
      xarry = $InjBrandLst
    Else If sMode = "Generic" Then
      If Not $InjGenricLst.Count Then
        $InjGenricLst.Insert(modControlSub.GetDirectFillresult(modStock.FillMedicinesTransferComboResult(sRoute, sMode, modBasic.$compID)))
      Endif
      xarry = $InjGenricLst
    Endif

  Else If sRoute = "msurg" Then
    If Not $MSurgicalLst.Count Then
      $MSurgicalLst.Insert(modControlSub.GetDirectFillresult(modStock.FillMedicinesTransferComboResult(sRoute, sMode, modBasic.$compID)))
    Endif
    xarry = $MSurgicalLst

  Else If sRoute = "extra" Then
    If Not $ExtraItemLst.Count Then
      $ExtraItemLst.Insert(modControlSub.GetDirectFillresult(modStock.FillMedicinesTransferComboResult(sRoute, sMode, modBasic.$compID)))
    Endif
    xarry = $ExtraItemLst

  Else
    xarry = modControlSub.GetDirectFillresult(modStock.FillMedicinesTransferComboResult(sRoute, sMode, modBasic.$compID))
  Endif

  Return xarry

End
''-------------------------------- END ------------------------------------

Public Sub cmbcommedicine_GotFocus()

  Dim brandOrGeneric As String
  Dim res As Result

  If rbrand2.Value = True Then
    brandOrGeneric = "Brand"
  Else
    brandOrGeneric = "Generic"
  Endif

  If Not cmbcomroute.Text Then
    cmbcomroute.SetFocus
  Else If cmbcomroute.Text Then
    If Not cmbcommedicine.Text Then

      cmbcombatch.Tag = "Auto"

      If modBasic.$AppCacheGridViewData = "No" Then
        res = modStock.FillMedicinesTransferComboResult(cmbcomroute.Text, brandOrGeneric, modBasic.$compID)
        cmbcommedicine.Text = GridViewNew("Select Particulars", modControlSub.GetDirectFillresult(res), False, cmbcommedicine, Panel3.Height + GridView1.Height - cmbcommedicine.Top)
      Else
        cmbcommedicine.Text = GridViewNew("Select Particulars", GetCategoryArray(cmbcomroute.Text, brandOrGeneric), False, cmbcommedicine, Panel3.Height + GridView1.Height - cmbcommedicine.Top)
      Endif

      cmbcombatch.SetFocus

    Endif
  Endif

End

Public Sub cmbcombatch_GotFocus()

  Dim res1 As Result

  If Not cmbcombatch.Count Then
    If cmbcommedicine.Text Then
      If modStockSub.GetComboStockControl(cmbcomroute.Text, cmbcommedicine.Text, rbgeneric2, rbrand2) = False Then
        cmbcommedicine.Text = ""
        Balloon.Warning(("Item not listed"), cmbcommedicine)
        Balloon.Delay = modBasic.$BalloonDelay
        cmbcomroute.SetFocus
      Else
        If cmbcomroute.Text = "suture" Or cmbcomroute.Text = "msurg" Or cmbcomroute.Text = "ortho" Or cmbcomroute.Text = "extra" Then
        Else
          If rbrand2.Value = True Then
            cmbcommedicine.Text = modMedConstant.ConvertBrandToGeneric(cmbcomroute.Text, cmbcommedicine.Text)
          Endif
        Endif
        res1 = modDatabase.$myConn.Exec("select distinct(fldbatch) as col from tblentry where fldstockid=&1 and fldcomp=&2 and fldqty>&3", cmbcommedicine.Text, modBasic.$compID, 0)
        cmbcombatch.List = modControlSub.GetDirectFillresult(res1)
        cmbcombatch.SetFocus
      Endif
    Endif
  Endif

End

Public Sub cmbcombatch_KeyRelease()

  cmbcombatch.Tag = ""
  modFillContainer.AutoFillComboBox(cmbcombatch)
  modFillContainer.RestrictComboToContent(cmbcombatch)

End

Public Sub cmbcombatch_Click()

  Dim res As Result

  res = modDatabase.$myConn.Exec("select fldstockno,fldexpiry,fldqty,fldstatus,fldcategory,fldsellpr,fldcode from tblentry where fldstockid=&1 and fldbatch=&2 and fldcomp=&3", cmbcommedicine.Text, cmbcombatch.Text, modBasic.$compID)                                                   ''
  If res.Available Then
    res.MoveFirst
    txtcomstatus.Value = res["fldstatus"]
    lblcomdate.Value = res["fldexpiry"]
    txtcommax.Value = res["fldqty"]
    lblcode.Text = res["fldcode"]
  Endif

End

Public Sub txtcomqty_LostFocus()

  If txtcomqty.Value = 0 Then
    txtcomqty.SetFocus
  Endif

End

Private Sub SaveEntryComp()

  Dim res As Result
  Dim res1 As Result

  If chkcomsave.Value = True Then
    res1 = modDatabase.$myConn.Exec("select fldstockno,fldqty from tblentry where fldstockid=&1 and fldbatch=&2 and fldcomp=&3", cmbcommedicine.Text, cmbcombatch.Text, modBasic.$compID)
    If res1.Available Then
      res1.MoveFirst
      If txtcomqty.Value <= res1!fldqty Then

        Inc Application.Busy
        res = modDatabase.$myConn.Create("tblbulksale")
        res["fldtarget"] = cmbcomtaget.Text
        res["fldbulktime"] = dtconsume.Value
        res["fldcategory"] = modNonMedical.GetBillItemCategoryFromCombo(cmbcomroute.Text)
        res["fldstockno"] = res1!fldstockno
        res["fldstockid"] = cmbcommedicine.Text
        res["fldnetcost"] = modStock.GetAverageCostPriceByStockNo(res1!fldstockno)
        res["fldqtydisp"] = txtcomqty.Value
        res["fldqtyret"] = 0
        res["flduserid"] = modBasic.$lbluser
        res["fldtime"] = Now()
        res["fldcomp"] = modBasic.$compID
        res["fldsave"] = False
        res["fldrequest"] = Trim(txtrequest.Text)
        res["fldcomment"] = Trim(txtcomment.Text)
        res["fldreference"] = ""
        res["flduptime"] = ""
        res["xyz"] = True
        res.Update()
        Dec Application.Busy
        BlankComBox()

      Endif
    Endif
  Endif

End

Private Sub BlankComBox()

  cmbcomroute.Text = ""
  cmbcommedicine.Text = ""
  cmbcombatch.Clear()
  cmbcombatch.Text = ""
  txtcomqty.Value = 0
  txtcomstatus.Value = ""
  lblcomdate.Value = Now()
  txtcommax.Value = 0

End

Public Sub btnrefresh_Click()

  If cmbcomtaget.Text Then
    ShowConsumeGrid()
    cmbcomroute.SetFocus
  Endif

End

Public Sub chkcomsave_Click()

  If chkcomsave.Value Then
    If cmbcomtaget.Text And If cmbcommedicine.Text And If cmbcombatch.Text Then
      If txtcomqty.Value > 0 Then
        SaveEntryComp()
        ShowConsumeGrid()
        cmbcomroute.SetFocus
      Endif
    Endif
  Endif

End

Public Sub chkcomsave_KeyRelease()

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    chkcomsave.Value = True
    chkcomsave_Click()
  Endif

End

Private Sub ShowConsumeGrid()

  $rData2 = modDatabase.$myConn.Exec("select fldid,fldstockno,fldcategory,fldstockid,fldstockno,fldstockno,fldqtydisp,fldreference,fldrequest,fldcomment from tblbulksale where fldtarget like &1 and fldsave=&2 and fldcomp=&3 ORDER BY fldid DESC", cmbcomtaget.Text, False, modBasic.$compID)
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData2, $aMyFields)

  With GridView1
    .Columns[0].Width = 1
    .Columns[1].Width = 75 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio
    .Columns[3].Width = 300 * modBasic.$AppWidthRatio
    .Columns[4].Width = 100 * modBasic.$AppWidthRatio
    .Columns[5].Width = 150 * modBasic.$AppWidthRatio
    .Columns[6].Width = 75 * modBasic.$AppWidthRatio
    .Columns[7].Width = 125 * modBasic.$AppWidthRatio
    .Columns[8].Width = 125 * modBasic.$AppWidthRatio
    .Columns[9].Width = 175 * modBasic.$AppWidthRatio

    .Columns[1].Text = "StockNo"
    .Columns[2].Text = "Category"
    .Columns[3].Text = "Particulars"
    .Columns[4].Text = "Batch"
    .Columns[5].Text = "Expiry"
    .Columns[6].Text = "QTY"
    .Columns[7].Text = "Reference"
    .Columns[8].Text = "Order"
    .Columns[9].Text = "Comment"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer)

  Dim xdate As Date

  $rData2.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView1, Row)
  If Column = 4 Then
    GridView1.Data.Text = modStock.GetBatchFromStockNo($rData2["fldstockno"])
  Else If Column = 5 Then
    xdate = modStock.GetExpiryFromStockNo($rData2["fldstockno"])
    If xdate <= Now() Then
      GridView1.Data.Foreground = modBasic.$HighLightColor
    Endif
    GridView1.Data.Text = modReportVar.GetDateTimeReport(xdate, gb.MediumDate)
  Else
    GridView1.Data.Text = $rData2[$aMyFields[Column]]
  Endif
  GridView1.Rows[Row].Height = Max(GridView1.Rows[Row].Height, GridView1.Data.Font.RichTextHeight(GridView1.Data.Text, GridView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (GridView1.Rows.Height - GridView1.Font.Height))
  GridView1.Data.WordWrap = True

End

Public Sub GridView1_Menu()

  mnuhide3.Popup

End

Public Sub mnucomdel_Click()

  If GridView1.Rows.Selection.Count > 0 Then
    modDatabase.$myConn.Delete("tblbulksale", "fldid=&1 and fldsave=&2", GridView1[GridView1.Row, 0].Text, False)
    ShowConsumeGrid()
  Endif

End

Public Sub btncomsave_Click()

  Dim res As Result
  Dim rs As Result
  Dim ref As String
  Dim xPath As String
  Dim idLock As Boolean
  Dim xtot As Float

  rs = modDatabase.$myConn.Exec("select fldid,fldstockno,fldqtydisp,fldreference from tblbulksale where fldtarget=&1 and fldsave=&2 and fldcomp=&3", cmbcomtaget.Text, False, modBasic.$compID)
  If rs.Available Then

    Inc Application.Busy
    idLock = modBillLock.LockTableForID("Reference")
    If idLock = True Then

      modDatabase.$myConn.Begin
      ref = modBillLock.ReferenceString("Bulk Dispensing")
      If ref Then
        For Each rs
          xtot = modStock.TotalQTYbyStockNo(rs["fldstockno"])
          If rs["fldqtydisp"] <= xtot Then
            res = modDatabase.$myConn.Edit("tblbulksale", "fldid=&1", rs["fldid"])
            res["fldsave"] = True
            res["fldreference"] = ref
            res["xyz"] = False
            res.Update()
            modStockSub.AddToExistEntry(rs["fldstockno"], (0 - rs["fldqtydisp"]), modBasic.$compID)
          Else
            Balloon.Warning(("Insufficient stock"), btncomsave)
            Balloon.Delay = modBasic.$BalloonDelay
          Endif
        Next
      Endif   ''if reference no exist
      modDatabase.$myConn.Commit

      modBillLock.ReleaseLockTable("Reference")
    Endif   ''if locked
    Dec Application.Busy

  Endif  ''if result available

  If ref Then
    If ckhconsumprint.Value = True Then
      Inc Application.Busy
      xPath = modHTMLStock.ShowStockConsumeReport(ref)
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif
  Endif
  ShowConsumeGrid()

Catch
  modDatabase.$myConn.Rollback
  Dec Application.Busy
  If idLock = True Then
    modBillLock.ReleaseLockTable("Reference")
  Endif
  modHelpVariable.CreateErrorReport()

End

Public Sub btncomfullrep_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, "BULK SALE", cmbcomtaget.Text)

End

''====================== Reprint ========================
Public Sub mnureprint_Click()

  Dim hForm As FmReprintStore

  hForm = New FmReprintStore("Consume")
  hForm.ShowModal

End

Public Sub txtcomqty_GotFocus()

  txtcomqty.SelectAll

End
