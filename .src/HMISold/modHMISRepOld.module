' Gambas module file

Public $HMISDiagnosticList As String[]
Public $HMISFreeServices As String[]
Public $HMISConsultTypes As String[]
Public $HMISIPServiceList As String[]

Public $HMISLabCategory As String[]
Public $HMISCultureSpecimens As String[]
Public $HMISHematology As String[]
Public $HMISImmunology As String[]
Public $HMISBiochemistry As String[]
Public $HMISBactriology As String[]
Public $HMISVirology As String[]
Public $HMISParasitology As String[]
Public $HMISHormones As String[]
Public $HMISDrugAnalysis As String[]
Public $HMISCytology As String[]
Public $HMISImmunoHisto As String[]

Private $OpdVisitColl As Collection
Private $IPservicesColl As Collection
Private $FreeHealthColl As Collection

Public Sub LoadHMISLists()

  $HMISDiagnosticList = ["X-ray", "Ultrasonogram (USG)", "Echocardiogram (Echo)", "Electro Encephalo Gram (EEG)", "Electrocardiogram (ECG)", "Trademill", "Computed Tomographic (CT) Scan", "Magnetic Resonance Imaging (MRI)", "Endoscopy", "Colonoscopy", "Nuclear Medicine"]
  $HMISFreeServices = ["Ultra Poor/Poor", "Helpless/Destitute", "Disabled", "Sr Citizens", "FCHV", "Gender Based Voilence", "Others"]
  $HMISConsultTypes = ["General Treatment", "IMNCI", "Nutrition", "Safe Motherhood", "Family Planning", "Tuberculosis", "Leprosy", "Infection", "STD"]
  $HMISIPServiceList = ["General Medicine", "General Surgery", "Paediatrics", "Obstetric", "Gynecology", "ENT", "Orthopedics", "Psychiatric", "Dental"]

  $HMISLabCategory = ["HAEMATOLOGY", "IMMUNOLOGY", "BIOCHEMISTRY", "BACTERIOLOGY", "VIROLOGY", "PARASITOLOGY", "HORMONE/ENDOCRINE", "DRUG ANALYSIS", "HISTOPATHOLOGY/CYTOLOGY", "IMMUNO-HISTO CHEMISTRY"]
  $HMISCultureSpecimens = ["Blood", "Urine", "Body Fluid", "Swab", "Stool", "Water", "Pus", "Sputum", "CSF", "Others"]
  $HMISHematology = ["Hb", "RBC Count", "TLC", "Platelets Count", "DLC", "ESR", "PCV/Hct", "MCV", "MCH", "MCHC", "RDW", "Blood Group & Rh Type", "Coombs test", "Retics", "PBS/PBF", "HbA1c", "Special Stain(MPO)", "Special Stain(PAS)", "Sickling Test", "Urine for Hemosiderin", "BT", "CT", "PT-INR", "APTT", "Bone Marrow Analysis", "Aldehyde test", "MP Total", "Smear MP Pos(PF)", "Smear MP Pos(PV)", "Smear MP Pos(P-MIX)", "MF", "LD Bodies", "Hb Electrophoresis", "LE cell", "ALC", "AEC", "FDP", "D-dimer", "Fac VIII", "Fac IX", "Others"]                  ''
  $HMISImmunology = ["Pregnancy Test (UPT)", "ASO", "CRP", "RA Factor", "TPHA", "ANA", "Anti-dsDNA", "RPR/VDRL", "CEA", "CA-125", "CA-19.9", "CA-15.3", "Toxo", "Rubella", "CMV", "HSV", "Measles", "Echinococcus", "Amoebiasis", "PSA", "Ferritin", "Cysticercosis", "Brucella", "Thyroglobulin", "Anti TPO", "Protein Electrophoresis", "Anti-CCP", "RK-39", "JE", "Dengue", "Rapid MP test", "Mantoux test", "Chikungunya", "Scrub Typhus", "H. Pylori", "Leptospira", "Others"]
  $HMISBiochemistry = ["Sugar", "Blood Urea", "Creatinine", "Sodium (Na)", "Potassium (K)", "Calcium", "Phosphorus", "Magnesium", "Uric acid", "Total Cholesterol", "Triglycerides", "HDL", "LDL", "Amylase", "Micro albumin", "Bilirubin", "SGPT", "Alk Phos", "SGOT", "Total Protein", "Albumin", "Gamma GT", "24hr urine protein", "24hr urine U/A", "Creatinine Clearance", "Iron", "TIBC", "CPK-MB", "CPK-NAC", "LDH", "Iso-Trop-I", "Others"]
  $HMISBactriology = ["Gram stain", "Sputum AFB", "Other AFB", "Leprosy Smear", "India Ink Test", "Fungus(KOH Test)", "Fungus(Culture)", "Others"]
  $HMISVirology = ["HIV", "HAV", "HBsAg", "HCV", "HEV", "Anti-HBs", "HBeAg", "Anti-HBe", "HBcAg", "Anti-HBcAg", "Western blot", "CD4 count", "Viral load", "Others"]
  $HMISParasitology = ["Stool R/E", "Occult blood", "Reducing sugar", "Urine R/E", "Bile salts", "Bile pigments", "Urobilinogen", "Porphobilinogen", "Acetone", "Chyle", "Specific Gravity", "Bence Jones protein", "Semen analysis", "Others"]
  $HMISHormones = ["T3", "T4", "TSH", "Cortisol", "AFP", "b-HCG", "LH", "FSH", "Prolactin", "Oestrogen", "Progesterone", "Testosterone", "Vit.D", "Vit.B12", "Others"]
  $HMISDrugAnalysis = ["Carbamazepine", "Cyclosporine", "Valporic acid", "Phenytoin", "Digoxine", "Tacrolimus", "Others"]
  $HMISCytology = ["Biopsy(H & E)", "Biopsy(Other)", "Cytology(Pap)", "Cytology(Giemsa)", "Cytology(Others)"]
  $HMISImmunoHisto = ["ER", "PR", "G-FAP", "s-100", "Vimentin", "Cytokeratin", "Others"]

End

Public Function GetHMISLabItemList(sDept As String) As String[]

  Dim aList As String[]

  If sDept = "HAEMATOLOGY" Then
    aList = modHMISRepOld.$HMISHematology
  Else If sDept = "IMMUNOLOGY" Then
    aList = modHMISRepOld.$HMISImmunology
  Else If sDept = "BIOCHEMISTRY" Then
    aList = modHMISRepOld.$HMISBiochemistry
  Else If sDept = "BACTERIOLOGY" Then
    aList = modHMISRepOld.$HMISBactriology
  Else If sDept = "VIROLOGY" Then
    aList = modHMISRepOld.$HMISVirology
  Else If sDept = "PARASITOLOGY" Then
    aList = modHMISRepOld.$HMISParasitology
  Else If sDept = "HORMONE/ENDOCRINE" Then
    aList = modHMISRepOld.$HMISHormones
  Else If sDept = "DRUG ANALYSIS" Then
    aList = modHMISRepOld.$HMISDrugAnalysis
  Else If sDept = "HISTOPATHOLOGY/CYTOLOGY" Then
    aList = modHMISRepOld.$HMISCytology
  Else If sDept = "IMMUNO-HISTO CHEMISTRY" Then
    aList = modHMISRepOld.$HMISImmunoHisto
  Endif

  Return aList

End

Public Function GetHMISLabItemHead(sDept As String) As String

  Dim aItem As String

  If sDept = "HAEMATOLOGY" Then
    aItem = "Hematology"
  Else If sDept = "IMMUNOLOGY" Then
    aItem = "Immunology"
  Else If sDept = "BIOCHEMISTRY" Then
    aItem = "Biochemistry"
  Else If sDept = "BACTERIOLOGY" Then
    aItem = "Bacteriology"
  Else If sDept = "VIROLOGY" Then
    aItem = "Virology"
  Else If sDept = "PARASITOLOGY" Then
    aItem = "Parasitology"
  Else If sDept = "HORMONE/ENDOCRINE" Then
    aItem = "Hormones"
  Else If sDept = "DRUG ANALYSIS" Then
    aItem = "DrugAnalysis"
  Else If sDept = "HISTOPATHOLOGY/CYTOLOGY" Then
    aItem = "HistoCytology"
  Else If sDept = "IMMUNO-HISTO CHEMISTRY" Then
    aItem = "ImmunoHistochemistry"
  Endif

  Return aItem

End

Public Function OPDMorbidityGroups() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("Communicable, Immunizable")
  xx.Add("Communicable, Vector Borne")
  xx.Add("Communicable, Water/Food Borne")
  xx.Add("Other Communicable Diseases")
  xx.Add("HIV/STI")
  xx.Add("Other Infected Diseases")
  xx.Add("Nutritional & Metabolic Disorder")
  xx.Add("Skin Diseases")
  xx.Add("Ear, Nose and Throat Infection")
  xx.Add("Oral Health Related Problems")
  xx.Add("Eye Problems")
  xx.Add("Obstetrics Complications")
  xx.Add("Gynae Problems")
  xx.Add("Mental Health related problems")
  xx.Add("Malignancy")
  xx.Add("Cardiovascular & Respiratory Related Problems")
  xx.Add("Other Diseases & Injuries")
  xx.Add("Orthopaedic Problems")
  xx.Add("Surgical Problems")

  Return xx

End

Public Function GetHMISObsComplicationList() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("Ectopic pregnancy;O00")
  xx.Add("Abortion complication;O08")
  xx.Add("Preg.-induced hypertension;O13")
  xx.Add("Severe/Pre-eclampsia;O14")
  xx.Add("Eclampsia;O15")
  xx.Add("Hyperemesis grivadarum;O21.0")
  xx.Add("Antepartum haemorrhage;O46")
  xx.Add("Prolonged labour;O63")
  xx.Add("Obstructed Labor;O64-O66")
  xx.Add("Ruptured uterus;S37.6")
  xx.Add("Postpartum haemorrhage;O72")
  xx.Add("Retained placenta;O73")
  xx.Add("Pueperal sepsis;O85")
  xx.Add("Other complications;O75")

  Return xx

End

Public Sub LoadHMISTree(TreeView1 As TreeView)

  Dim pic3 As Picture
  Dim pic4 As Picture
  Dim j As Integer
  Dim k As Integer

  Dim xDiagno As String[]
  Dim xLabList As String[]

  pic3 = Picture["icons/coll3.png"]
  pic4 = Picture["icons/coll4.png"]

  TreeView1.Add("Summary of Services", "Summary of Services", pic3)
  TreeView1.Add(CStr(1) & "@" & CStr(1), "Hospital Services", pic4, "Summary of Services")
  TreeView1.Add(CStr(1) & "@" & CStr(2), "Emergency Services", pic4, "Summary of Services")
  TreeView1.Add(CStr(1) & "@" & CStr(3), "Diagnostic/Other Services", pic4, "Summary of Services")

  TreeView1.Add("Summary of Indoor Services", "Summary of Indoor Services", pic3)
  TreeView1.Add(CStr(2) & "@" & CStr(1), "Inpatient Outcome", pic4, "Summary of Indoor Services")
  TreeView1.Add(CStr(2) & "@" & CStr(2), "Neonate Form", pic4, "Summary of Indoor Services")
  TreeView1.Add(CStr(2) & "@" & CStr(3), "Maternal Age", pic4, "Summary of Indoor Services")
  TreeView1.Add(CStr(2) & "@" & CStr(4), "Type of Surgeries", pic4, "Summary of Indoor Services")
  TreeView1.Add(CStr(2) & "@" & CStr(5), "Death Information", pic4, "Summary of Indoor Services")
  TreeView1.Add(CStr(2) & "@" & CStr(6), "Free health service summary", pic4, "Summary of Indoor Services")
  TreeView1.Add(CStr(2) & "@" & CStr(7), "Social Security Programme", pic4, "Summary of Indoor Services")
  TreeView1.Add(CStr(2) & "@" & CStr(8), "Inpatient Morbidity", pic4, "Summary of Indoor Services")

  TreeView1.Add("Safe Motherhood Programme", "Safe Motherhood Programme", pic3)
  TreeView1.Add(CStr(3) & "@" & CStr(1), "ANC Services", pic4, "Safe Motherhood Programme")
  TreeView1.Add(CStr(3) & "@" & CStr(2), "Delivery Service", pic4, "Safe Motherhood Programme")
  TreeView1.Add(CStr(3) & "@" & CStr(3), "Delivery Type", pic4, "Safe Motherhood Programme")
  TreeView1.Add(CStr(3) & "@" & CStr(4), "Delivery Outcome", pic4, "Safe Motherhood Programme")
  TreeView1.Add(CStr(3) & "@" & CStr(5), "Birth Weight", pic4, "Safe Motherhood Programme")
  TreeView1.Add(CStr(3) & "@" & CStr(6), "Stillbirth", pic4, "Safe Motherhood Programme")
  TreeView1.Add(CStr(3) & "@" & CStr(7), "Transfusion Done", pic4, "Safe Motherhood Programme")
  TreeView1.Add(CStr(3) & "@" & CStr(8), "PNC Visit", pic4, "Safe Motherhood Programme")
  TreeView1.Add(CStr(3) & "@" & CStr(9), "Obstetric Complications", pic4, "Safe Motherhood Programme")
  TreeView1.Add(CStr(3) & "@" & CStr(10), "Maternal Death in Hospital", pic4, "Safe Motherhood Programme")
  TreeView1.Add(CStr(3) & "@" & CStr(11), "Incentive", pic4, "Safe Motherhood Programme")
  TreeView1.Add(CStr(3) & "@" & CStr(12), "Safe Abortion Service", pic4, "Safe Motherhood Programme")

  xDiagno = modHMISRepOld.OPDMorbidityGroups()
  TreeView1.Add("New Outpatient Morbidity", "New Outpatient Morbidity", pic3)
  For j = 1 To xDiagno.Count
    TreeView1.Add(CStr(4) & "@" & CStr(j), xDiagno[j - 1], pic4, "New Outpatient Morbidity")
  Next

  xLabList = modHMISRepOld.$HMISLabCategory
  TreeView1.Add("Laboratory Services", "Laboratory Services", pic3)
  For k = 1 To xLabList.Count
    TreeView1.Add(CStr(5) & "@" & CStr(k), xLabList[k - 1], pic4, "Laboratory Services")
  Next

  TreeView1.Add("Other Reports", "Other Reports", pic3)
  TreeView1.Add(CStr(6) & "@" & CStr("1"), "Bipanna Report", pic4, "Other Reports")
  TreeView1.Add(CStr(6) & "@" & CStr("2"), "Total Service Recepients", pic4, "Other Reports")
  TreeView1.Add(CStr(6) & "@" & CStr("3"), "New Service Recepients", pic4, "Other Reports")
  TreeView1.Add(CStr(6) & "@" & CStr("4"), "Service Recepients based on Ethnicity", pic4, "Other Reports")

End

Public Sub GetHMISCollection()

  $OpdVisitColl = New Collection
  $IPservicesColl = New Collection
  $FreeHealthColl = New Collection

End

Public Sub ClearHMISCollection()

  $OpdVisitColl.Clear()
  $IPservicesColl.Clear()
  $FreeHealthColl.Clear()

End

Public Function GetHMISSettingSource(sHead As String, sSourceList As String[], sText As String) As String

  Dim xsource As String
  Dim xstr As String
  Dim xlist As String[]
  Dim xval As String

  For Each xsource In sSourceList
    If sHead = "OPDVisits" Then
      xlist = $OpdVisitColl[xsource]
    Else If sHead = "IPServices" Then
      xlist = $IPservicesColl[xsource]
    Else If sHead = "FreeHealthServices" Then
      xlist = $FreeHealthColl[xsource]
    Endif

    If Not xlist Then
      xlist = modHMISReportOld.GetDBHMISettingList(sHead, xsource)
      If Not xlist.Count Then
        xstr = modSettings.ShowHMISSettingFromFIle(sHead & "/" & xsource)
        If xstr Then
          xlist = Split(xstr, ";")
        Endif
      Endif

      If sHead = "OPDVisits" Then
        $OpdVisitColl.Add(xlist, xsource)
      Else If sHead = "IPServices" Then
        $IPservicesColl.Add(xlist, xsource)
      Else If sHead = "FreeHealthServices" Then
        $FreeHealthColl.Add(xlist, xsource)
      Endif
    Endif

    If xlist.Exist(sText) = True Then
      xval = xsource
      Break
    Endif
  Next
  Return xval

End

Public Function ConvertDiagnosisToHMIS(digList As String[]) As String[]

  Dim itmList As String[]
  Dim xdgno As String
  Dim xval As String

  itmList = New String[]
  For Each xdgno In digList
    If xdgno = "Obstetrics" Then
      xval = "Z32"
    Else If xdgno = "Other" Then
      xval = "R69"
    Else
      xval = Left(Trim(xdgno), 3)
    Endif

    If itmList.Count = 0 Then
      itmList.Add(xval)
    Else If itmList.Count > 0 Then
      If itmList.Find(xval) = -1 Then
        itmList.Add(xval)
      Endif
    Endif
  Next
  If itmList Then
    itmList.Sort()
  Endif

  Return itmList

End

''------------------ HMIS 1------------------------------
Public Function GetConsultationTypeONE(xDept As String) As String

  Dim xval As String
  Dim sDept As String

  If xDept Then
    sDept = GetHMISSettingSource("OPDVisits", $HMISConsultTypes, xDept)
    If sDept Then
      If sDept = "General Treatment" Then
        xval = "1"
      Else If sDept = "IMNCI" Then
        xval = "2"
      Else If sDept = "Nutrition" Then
        xval = "3"
      Else If sDept = "Safe Motherhood" Then
        xval = "4"
      Else If sDept = "Family Planning" Then
        xval = "5"
      Else If sDept = "Tuberculosis" Then
        xval = "6"
      Else If sDept = "Leprosy" Then
        xval = "7"
      Else If sDept = "Infection" Then
        xval = "8"
      Else If sDept = "STD" Then
        xval = "9"
      Else
        xval = "10"
      Endif
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif

  Return xval

End

''----------------- HMIS 8 --------------------------------
Public Function GetDateFormatHMISEight(sDate As Date) As String

  Dim xx As String
  Dim asx As String[]
  Dim bsx As String[]
  Dim xtime As Date
  Dim xam As String
  Dim xpm As String

  If sDate Then
    asx = Split(modDate.ConvertToLocaldate(sDate), Space(1))
    If asx.Count Then
      bsx = Split(asx[0], "/")
      xtime = Time(sDate)
      If xtime < Time("12", 0, 0, 0) Then
        xam = Format(xtime, "hh:nn:ss")
        xpm = modString.HTMLBlankSpace(2)
      Else
        xam = modString.HTMLBlankSpace(2)
        xpm = Format(xtime, "hh:nn:ss")
      Endif
    Else
      bsx = ["", "", ""]
    Endif

    xx = modRepoTemplete.HTMLTableSyntax()
    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td class='reportmid_table_h'>" & "DD" & "</td>" & gb.NewLine
    xx = xx & "<td class='reportmid_table_h'>" & "MM" & "</td>" & gb.NewLine
    xx = xx & "<td class='reportmid_table_h'>" & "YY" & "</td>" & gb.NewLine
    xx = xx & "</tr>" & gb.NewLine

    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & bsx[2] & "</td>" & gb.NewLine
    xx = xx & "<td>" & bsx[1] & "</td>" & gb.NewLine
    xx = xx & "<td>" & bsx[0] & "</td>" & gb.NewLine
    xx = xx & "</tr>" & gb.NewLine
    xx = xx & "</table>"

    xx = xx & "<br>" & gb.NewLine
    xx = xx & modRepoTemplete.HTMLTableSyntax()
    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & "AM" & "</td>" & gb.NewLine
    xx = xx & "<td>" & "PM" & "</td>" & gb.NewLine
    xx = xx & "</tr>" & gb.NewLine

    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & xam & "</td>" & gb.NewLine
    xx = xx & "<td>" & xpm & "</td>" & gb.NewLine
    xx = xx & "</tr>" & gb.NewLine
    xx = xx & "</table>"
  Else
    xx = ""
  Endif

  Return xx

End

Public Function GetHMISAgeFormatEight(encid As String, xGender As String, xAgeGroup As String, Optional sCon As Connection) As String

  Dim xsex As String
  Dim $con As Connection
  Dim xage As Float
  Dim xgroup As String
  Dim xx As String

  If sCon Then
    $con = sCon
  Else
    $con = modDatabase.$myConn
  Endif

  xsex = modPatient.GetPatientSex(encid, $con)
  xage = DateDiff(modPatient.GetPatientBirthDay(encid, $con), modPatient.GetRecordDate(encid), gb.Minute) / (60 * 24)
  If xage <= 28 Then
    xgroup = "<=28 days"
  Else If xage > 28 And If xage <= 364 Then
    xgroup = "1-11 Months"
  Else If xage > 364
    xgroup = ">=1 Year"
  Endif

  If xGender = xsex And If xAgeGroup = xgroup Then
    If xAgeGroup = "<=28 days" Then
      xx = Format(xage, gb.Fixed)
    Else If xAgeGroup = "1-11 Months" Then
      xx = Format(xage / 30, gb.Fixed)
    Else If xAgeGroup = ">=1 Year" Then
      xx = Format(xage / 365, gb.Fixed)
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

Public Function GetServiceDischargeEIGHT(xDept As String) As String

  Dim xval As String
  Dim sDept As String

  If xDept Then
    sDept = GetHMISSettingSource("IPServices", $HMISIPServiceList, xDept)
    If sDept Then
      If sDept = "General Medicine" Then
        xval = "1"
      Else If sDept = "General Surgery" Then
        xval = "2"
      Else If sDept = "Paediatrics" Then
        xval = "3"
      Else If sDept = "Obstetric" Then
        xval = "4"
      Else If sDept = "Gynecology" Then
        xval = "5"
      Else If sDept = "ENT" Then
        xval = "6"
      Else If sDept = "Orthopedics" Then
        xval = "7"
      Else If sDept = "Psychiatric" Then
        xval = "8"
      Else If sDept = "Dental" Then
        xval = "9"
      Else
        xval = "10"
      Endif
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif

  Return xval

End

Public Function GetDiagnosisTableEIGHT(encid As String, sType As String) As String

  Dim res As Result
  Dim aa As String[]
  Dim bb As String[]
  Dim xvar As String

  aa = New String[]
  bb = New String[]
  res = modDatabase.$syConn.Exec("select fldcode,fldcodeid from tblpatfindings where fldencounterval=&1 and fldtype=&2 and fldsave=&3", encid, sType, True) ''"Provisional Diagnosis"/"Final Diagnosis"                                    ''
  If res.Available Then
    For Each res
      If res["fldcode"] Then
        aa.Add(res["fldcode"])
        If res["fldcodeid"] Then
          bb.Add(res["fldcodeid"])
        Else
          bb.Add(".")
        Endif
      Endif
    Next
  Endif
  If aa.Count Then
    xvar = modString.GetDualTableFormat(aa, bb, ["Disease", "ICDCode"])
  Else
    xvar = ""
  Endif
  Return xvar

End

Public Function GetHMISOutcomeEIGHT(encid As String, xStatus As String) As String

  Dim xval As String
  Dim xdisc As String

  If xStatus Then
    If xStatus = "Discharged" Then
      xdisc = modPatient.GetPatExitComment(encid, "Discharged")
      Select xdisc
        Case "Recovered", "Improved"
          xval = "1"
        Case "Unchanged", "Worse"
          xval = "2"
        Case Else
          xval = ""
      End Select
    Else If xStatus = "Refer" Then
      xval = "3"
    Else If xStatus = "LAMA" Then
      xval = "4"
    Else If xStatus = "Absconder" Then
      xval = "5"
    Else If xStatus = "Death" Then
      xval = "6"
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif
  Return xval

End

Public Function GetProcedureAllEIGHT(encid As String) As String

  Dim res As Result
  Dim aa As String[]
  Dim bb As String[]
  Dim xvar As String
  Dim xval As String

  aa = New String[]
  bb = New String[]
  res = modDatabase.$syConn.Exec("select flditemname from tblpatbilling where fldencounterval=&1 and fldsave=&2 and flditemtype=&3", encid, True, "Procedures")                                    ''
  If res.Available Then
    For Each res
      xval = ""
      If res["flditemname"] Then
        aa.Add(res["flditemname"])
        xval = modNonMedical.GetBillingTargeDept(res["flditemname"], "Procedures")
        If xval Then
          If xval = "Major" Then
            bb.Add("1")
          Else If xval = "Minor" Then
            bb.Add("3")
          Else
            bb.Add("2")
          Endif
        Else
          bb.Add("2")
        Endif
      Endif
    Next
  Endif
  If aa.Count Then
    xvar = modString.GetDualTableFormat(aa, bb, ["Name", "Type"])
  Else
    xvar = ""
  Endif
  Return xvar

End

Public Function GetDiscountGradeEIGHT(sDept As String) As String

  Dim xval As String
  Dim discscheme As String

  If sDept Then
    discscheme = GetHMISSettingSource("FreeHealthServices", $HMISFreeServices, sDept)
    If discscheme Then
      If discscheme = "Helpless/Destitute" Then
        xval = "1"
      Else If discscheme = "Ultra Poor/Poor" Then
        xval = "2"
      Else If discscheme = "Disabled" Then
        xval = "3"
      Else If discscheme = "Sr Citizens" Then
        xval = "4"
      Else If discscheme = "FCHV" Then
        xval = "5"
      Else
        xval = "6"
      Endif
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif

  Return xval

End

''---------------------------- HMIS 3 -----------------------------------
Public Function GetObstetComplicationCode(sItem As String) As String

  Dim xval As String

  If sItem = "O00" Then
    xval = "1"
  Else If sItem = "O08" Then
    xval = "2"
  Else If sItem = "" Then  ''Hypertension
    xval = "3"
  Else If sItem = "O14" Then
    xval = "4"
  Else If sItem = "O15" Then
    xval = "5"
  Else If sItem = "" Then  ''Hyp. Gravidarum
    xval = "6"
  Else If sItem = "O46" Then
    xval = "7"
  Else If sItem = "O63" Then
    xval = "8"
  Else If sItem = "O64" Then
    xval = "9"
  Else If sItem = "S37" Then
    xval = "10"
  Else If sItem = "O72" Then
    xval = "11"
  Else If sItem = "O73" Then
    xval = "12"
  Else If sItem = "O85" Then
    xval = "13"
  Else
    xval = ""
  Endif
  Return xval

End

Public Function GetCreditExpesnseSelectPackage($conn As Connection, encid As String, sDiscType As String, dtfir As Date, dtlast As Date) As String

  Dim amt As Float
  Dim res As Result
  Dim amt1 As Float
  Dim res1 As Result
  Dim xtot As Float

  res = $conn.Exec("select SUM(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as tot from tblpatbilldetail where fldencounterval=&1 and fldbilltype=&2 and fldtime>=&3 and fldtime<=&4 and fldbankname in(select fldacledger from tbldiscount where fldtype=&5)", encid, "Credit", modDate.StartSqlDate(dtfir), modDate.EndSqlDate(dtlast), sDiscType)
  If res.Available Then
    If res!tot Then
      amt = res!tot
    Else
      amt = 0
    Endif
  Else
    amt = 0
  Endif

  res1 = $conn.Exec("select SUM(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as tot from tbltempbilldetail where fldencounterval=&1 and fldbilltype=&2 and fldtime>=&3 and fldtime<=&4 and fldbankname in(select fldacledger from tbldiscount where fldtype=&5)", encid, "Credit", modDate.StartSqlDate(dtfir), modDate.EndSqlDate(dtlast), sDiscType)
  If res1.Available Then
    If res1!tot Then
      amt1 = res1!tot
    Else
      amt1 = 0
    Endif
  Else
    amt1 = 0
  Endif

  xtot = amt + amt1

  Return xtot

End

''================= HMIS Register =======================
Public Function GetUniVariantFormat(sVal As Variant) As Variant[]

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xRowVal = New Collection
  xRowVal.Add(sVal, CStr(0))
  xFinal.Add(xRowVal)

  Return xFinal

End

''---------------------- HMIS 3.6 --------------------------
Public Function GetAgeContact36Format(xDOB As Date, xRegisDate As Date, xethnic As String, xContact As String) As String

  Dim xx As String
  Dim xage As Integer

  xx = modRepoTemplete.HTMLTableSyntax()

  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td>" & "Caste Code" & "</td>" & gb.NewLine
  xx = xx & "<td>" & xethnic & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td>" & "Age" & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  xage = DateDiff(xDOB, xRegisDate, gb.Minute) / (60 * 24)
  If xage < 7300 Then
    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & "< 20 Years" & "</td>" & gb.NewLine
    xx = xx & "<td>" & Fix(xage / 365) & "</td>" & gb.NewLine
    xx = xx & "</tr>" & gb.NewLine
    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & ">= 20 Years" & "</td>" & gb.NewLine
    xx = xx & "<td>" & "" & "</td>" & gb.NewLine
    xx = xx & "</tr>" & gb.NewLine
  Else
    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & "< 20 Years" & "</td>" & gb.NewLine
    xx = xx & "<td>" & "" & "</td>" & gb.NewLine
    xx = xx & "</tr>" & gb.NewLine
    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & ">= 20 Years" & "</td>" & gb.NewLine
    xx = xx & "<td>" & Fix(xage / 365) & "</td>" & gb.NewLine
    xx = xx & "</tr>" & gb.NewLine
  Endif

  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td>" & "Contact" & "</td>" & gb.NewLine
  xx = xx & "<td>" & xContact & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  xx = xx & "</table>"

  Return xx

End

Public Function GravidaParity36Value(encid As String) As String

  Dim xx As String
  Dim xgravida As String
  Dim xparity As String
  Dim xlmp As String
  Dim xedd As String
  Dim aslmp As String[]
  Dim asedd As String[]

  xgravida = modPatPatho.GetQuantiObstetricValue(encid, "Gravida")
  xparity = modPatPatho.GetQuantiObstetricValue(encid, "Parity")
  xlmp = modPatPatho.GetQualiiObstetricValue(encid, "Last Menstrual Period")
  xedd = modPatPatho.GetQualiiObstetricValue(encid, "Expected Delivery Date")
  If xlmp And If IsDate(xlmp) Then
    aslmp = Split(modDate.ConvertToLocaldate(CDate(xlmp)), "/")
  Else
    aslmp = New String[]
  Endif
  If xedd And If IsDate(xedd) Then
    asedd = Split(modDate.ConvertToLocaldate(CDate(xedd)), "/")
  Else
    aslmp = New String[]
  Endif

  xx = modRepoTemplete.HTMLTableSyntax()
  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td colspan='2' width='100%'>" & "Gravida" & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine
  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td colspan='2' width='100%'>" & xgravida & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td colspan='2' width='100%'>" & "Para" & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine
  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td colspan='2' width='100%'>" & xparity & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td width='50%'>" & "LMP" & "</td>" & gb.NewLine
  xx = xx & "<td width='50%'>" & "EDD" & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  xx = xx & "<tr>" & gb.NewLine
  If aslmp And If aslmp.Count > 2 Then
    xx = xx & "<td width='50%'>" & aslmp[2] & "</td>" & gb.NewLine
  Else
    xx = xx & "<td width='50%'>" & "</td>" & gb.NewLine
  Endif
  If asedd And If asedd.Count > 2 Then
    xx = xx & "<td width='50%'>" & asedd[2] & "</td>" & gb.NewLine
  Else
    xx = xx & "<td width='50%'>" & "</td>" & gb.NewLine
  Endif
  xx = xx & "</tr>" & gb.NewLine
  xx = xx & "<tr>" & gb.NewLine
  If aslmp And If aslmp.Count > 2 Then
    xx = xx & "<td width='50%'>" & aslmp[1] & "</td>" & gb.NewLine
  Else
    xx = xx & "<td width='50%'>" & "</td>" & gb.NewLine
  Endif
  If asedd And If asedd.Count > 2 Then
    xx = xx & "<td width='50%'>" & asedd[1] & "</td>" & gb.NewLine
  Else
    xx = xx & "<td width='50%'>" & "</td>" & gb.NewLine
  Endif
  xx = xx & "</tr>" & gb.NewLine
  xx = xx & "<tr>" & gb.NewLine
  If aslmp And If aslmp.Count > 2 Then
    xx = xx & "<td width='50%'>" & aslmp[0] & "</td>" & gb.NewLine
  Else
    xx = xx & "<td width='50%'>" & "</td>" & gb.NewLine
  Endif
  If asedd And If asedd.Count > 2 Then
    xx = xx & "<td width='50%'>" & asedd[0] & "</td>" & gb.NewLine
  Else
    xx = xx & "<td width='50%'>" & "</td>" & gb.NewLine
  Endif
  xx = xx & "</tr>" & gb.NewLine

  xx = xx & "</table>"

  Return xx

End

Public Function ANCVisit36(encid As String) As String

  Dim xx As String
  Dim i As Integer
  Dim ancList As String[] = ["ANC: 1st Visit", "ANC: 4th Month", "ANC: 5th Month", "ANC: 6th Month", "ANC: 7th Month", "ANC: 8th Month", "ANC: 9th Month"]
  Dim anctype As String

  Dim asx1 As String[]
  Dim res1 As Result
  Dim resIF As Result
  Dim iftot As Integer

  Dim asxalb As String[]
  Dim resalb As Result

  Dim asxtd1 As String[]
  Dim asxtd2 As String[]
  Dim asxtd3 As String[]
  Dim restd1 As Result
  Dim restd2 As Result
  Dim restd3 As Result

  xx = modRepoTemplete.HTMLTableSyntax()
  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "ANC Visit" & "</td>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "Day" & "</td>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "Month" & "</td>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "Year" & "</td>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "IFA Tab" & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  iftot = 0
  For Each anctype In ancList
    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & Trim(Replace(anctype, "ANC:", "")) & "</td>" & gb.NewLine

    res1 = modDatabase.$syConn.Exec("select fldconsulttime from tblopvisit where fldencounterval=&1 and fldconsultname=&2 and fldcomment=&3", encid, "ANC Visit", anctype)
    If res1.Available Then
      res1.MoveLast
      asx1 = Split(modDate.ConvertToLocaldate(res1["fldconsulttime"]), "/")
      If asx1 And If asx1.Count > 2 Then
        xx = xx & "<td>" & asx1[2] & "</td>" & gb.NewLine
      Else
        xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
      Endif
      If asx1 And If asx1.Count > 1 Then
        xx = xx & "<td>" & asx1[1] & "</td>" & gb.NewLine
      Else
        xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
      Endif
      If asx1 And If asx1.Count > 0 Then
        xx = xx & "<td>" & asx1[0] & "</td>" & gb.NewLine
      Else
        xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
      Endif
    Else
      For i = 0 To 2
        xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
      Next
    Endif

    resIF = modDatabase.$syConn.Exec("select fldrepquanti from tblpatientexam where fldencounterval=&1 and fldinput=&2 and fldhead=&3", encid, anctype, "IFA Tab")
    If resIF.Available Then
      resIF.MoveLast
      iftot = iftot + resIF["fldrepquanti"]
      xx = xx & "<td>" & resIF["fldrepquanti"] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif

    xx = xx & "</tr>" & gb.NewLine
  Next

  ''4 ANC
  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td>" & "4 ANC" & "</td>" & gb.NewLine
  xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
  xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
  xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
  xx = xx & "<td>" & iftot & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  ''Albendazole
  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td>" & "Albendazole" & "</td>" & gb.NewLine

  resalb = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval=&1 and fldhead=&2 and fldrepquali like &3", encid, "Albendazole", "%")
  If resalb.Available Then
    resalb.MoveLast
    asxalb = Split(resalb["fldrepquali"], "/")
    If asxalb And If asxalb.Count > 2 Then
      xx = xx & "<td>" & asxalb[2] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
    If asxalb And If asxalb.Count > 1 Then
      xx = xx & "<td>" & asxalb[1] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
    If asxalb And If asxalb.Count > 0 Then
      xx = xx & "<td>" & asxalb[0] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
  Else
    For i = 0 To 2
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Next
  Endif
  xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  ''TD 1
  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td>" & "TD 1" & "</td>" & gb.NewLine

  restd1 = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval=&1 and fldhead=&2 and fldrepquali like &3", encid, "TD 1", "%")
  If restd1.Available Then
    restd1.MoveLast
    asxtd1 = Split(restd1["fldrepquali"], "/")
    If asxtd1 And If asxtd1.Count > 2 Then
      xx = xx & "<td>" & asxtd1[2] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
    If asxtd1 And If asxtd1.Count > 1 Then
      xx = xx & "<td>" & asxtd1[1] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
    If asxtd1 And If asxtd1.Count > 0 Then
      xx = xx & "<td>" & asxtd1[0] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
  Else
    For i = 0 To 2
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Next
  Endif
  xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  ''TD 2
  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td>" & "TD 2" & "</td>" & gb.NewLine

  restd2 = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval=&1 and fldhead=&2 and fldrepquali like &3", encid, "TD 2", "%")
  If restd2.Available Then
    restd2.MoveLast
    asxtd2 = Split(restd2["fldrepquali"], "/")
    If asxtd2 And If asxtd2.Count > 2 Then
      xx = xx & "<td>" & asxtd2[2] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
    If asxtd2 And If asxtd2.Count > 1 Then
      xx = xx & "<td>" & asxtd2[1] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
    If asxtd2 And If asxtd2.Count > 0 Then
      xx = xx & "<td>" & asxtd2[0] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
  Else
    For i = 0 To 2
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Next
  Endif
  xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  ''TD 2+
  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td>" & "TD 2+" & "</td>" & gb.NewLine

  restd3 = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval=&1 and fldhead=&2 and fldrepquali like &3", encid, "TD 2+", "%")
  If restd3.Available Then
    restd3.MoveLast
    asxtd3 = Split(restd3["fldrepquali"], "/")
    If asxtd3 And If asxtd3.Count > 2 Then
      xx = xx & "<td>" & asxtd3[2] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
    If asxtd3 And If asxtd3.Count > 1 Then
      xx = xx & "<td>" & asxtd3[1] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
    If asxtd3 And If asxtd3.Count > 0 Then
      xx = xx & "<td>" & asxtd3[0] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
  Else
    For i = 0 To 2
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Next
  Endif
  xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  xx = xx & "</table>"

  Return xx

End

Public Function PNCVisit36(encid As String) As String

  Dim xx As String
  Dim i As Integer
  Dim pncList As String[] = ["PNC: 1st Visit (in 24 Hours)", "PNC: 2nd Visit (3rd day)", "PNC: 3rd Visit (7th day)", "PNC: Other Visit"]
  Dim pnctype As String

  Dim asx1 As String[]
  Dim res1 As Result

  Dim examList As String[] = ["Vitamin A", "45 IFA"]
  Dim exam As String
  Dim asx2 As String[]
  Dim res2 As Result

  xx = modRepoTemplete.HTMLTableSyntax()
  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "PNC Visit" & "</td>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "Day" & "</td>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "Month" & "</td>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "Year" & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  For Each pnctype In pncList
    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & Trim(Replace(pnctype, "PNC:", "")) & "</td>" & gb.NewLine

    res1 = modDatabase.$syConn.Exec("select fldconsulttime from tblopvisit where fldencounterval=&1 and fldconsultname=&2 and fldcomment=&3", encid, "PNC Visit", pnctype)
    If res1.Available Then
      res1.MoveLast
      asx1 = Split(modDate.ConvertToLocaldate(res1["fldconsulttime"]), "/")
      If asx1 And If asx1.Count > 2 Then
        xx = xx & "<td>" & asx1[2] & "</td>" & gb.NewLine
      Else
        xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
      Endif
      If asx1 And If asx1.Count > 1 Then
        xx = xx & "<td>" & asx1[1] & "</td>" & gb.NewLine
      Else
        xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
      Endif
      If asx1 And If asx1.Count > 0 Then
        xx = xx & "<td>" & asx1[0] & "</td>" & gb.NewLine
      Else
        xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
      Endif
    Else
      For i = 0 To 2
        xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
      Next
    Endif

    xx = xx & "</tr>" & gb.NewLine
  Next

  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td>" & "3 PNC Visit as Protocol" & "</td>" & gb.NewLine
  xx = xx & "<td>" & "" & "</td>" & gb.NewLine
  xx = xx & "<td>" & "" & "</td>" & gb.NewLine
  xx = xx & "<td>" & "" & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  For Each exam In examList
    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & exam & "</td>" & gb.NewLine

    res2 = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval=&1 and fldhead=&2 and fldrepquali like &3", encid, exam, "%")
    If res2.Available Then
      res2.MoveLast
      asx2 = Split(res2["fldrepquali"], "/")
      If asx2 And If asx2.Count > 2 Then
        xx = xx & "<td>" & asx2[2] & "</td>" & gb.NewLine
      Else
        xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
      Endif
      If asx2 And If asx2.Count > 1 Then
        xx = xx & "<td>" & asx2[1] & "</td>" & gb.NewLine
      Else
        xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
      Endif
      If asx2 And If asx2.Count > 0 Then
        xx = xx & "<td>" & asx2[0] & "</td>" & gb.NewLine
      Else
        xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
      Endif
    Else
      For i = 0 To 2
        xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
      Next
    Endif

    xx = xx & "</tr>" & gb.NewLine
  Next

  xx = xx & "</table>"

  Return xx

End

Public Function GetHivSyphilisTable(encid As String) As String

  Dim xx As String
  Dim examList As String[] = ["Counseling", "HIV testing", "HIV Test date", "Results received", "HIV status", "Partner HIV status known", "Partner referred", "Syphilis tested", "Syphilis positive", "Syphilis treated", "ART started", "ART start date"]
  Dim xexam As String
  Dim res As Result

  xx = modRepoTemplete.HTMLTableSyntax()

  For Each xexam In examList
    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & xexam & "</td>" & gb.NewLine
    res = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval=&1 and fldhead=&2", encid, xexam)
    If res.Available Then
      res.MoveLast
      xx = xx & "<td>" & res["fldrepquali"] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
    xx = xx & "</tr>" & gb.NewLine
  Next

  xx = xx & "</table>"

  Return xx

End

Public Function GetExamValueMatRegister(encid As String, sType As String, sExam As String) As String

  Dim res As Result
  Dim xval As String

  xval = ""
  res = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval=&1 and fldhead=&2 and fldinput like &3", encid, sExam, sType)
  If res.Available Then
    For Each res
      xval = xval & "<p>" & res["fldrepquali"] & "</p>"
    Next
  Else
    xval = ""
  Endif

  Return xval

End

Public Function GetMaternalComplication(encid As String) As String

  Dim xx As String
  Dim compList As String[] = ["Ectopic pregnancy", "Abortion complication", "Hypertension", "Severe Pre-eclampsia", "Eclampsia", "Hyp. gravidarum", "APH", "Prolonged labour", "Obstructed labor", "Ruptured uterus", "PPH", "Retained placenta", "Puerperal sepsis"]
  Dim xcompl As String
  Dim xlmp As String
  Dim dtLmp As Date

  Dim res As Result
  Dim xList As String[] = ["ANC%", "On Delivery", "PNC%"]
  Dim atime As String

  xlmp = modPatPatho.GetQualiiObstetricValue(encid, "Last Menstrual Period")
  If xlmp And If IsDate(xlmp) Then
    dtLmp = CDate(xlmp)
  Endif
  xx = modRepoTemplete.HTMLTableSyntax()
  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "Complication" & "</td>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "ANC" & "</td>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "Delivery" & "</td>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "PNC" & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  For Each xcompl In compList
    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & xcompl & "</td>" & gb.NewLine

    For Each atime In xList
      res = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval=&1 and fldhead=&2 and fldinput like &3", encid, xcompl, atime)
      If res.Available And If res["fldrepquali"] Then
        If dtLmp Then
          xx = xx & "<td>" & DateDiff(dtLmp, modDate.ConvertToEnglishdate(res["fldrepquali"]), gb.Month) & "</td>" & gb.NewLine
        Else
          xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
        Endif
      Else
        xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
      Endif
    Next

    xx = xx & "</tr>" & gb.NewLine
  Next

  xx = xx & "</table>"

  Return xx

End

Public Function MaterNeonDeath36(encid As String) As String

  Dim xTitList As String[] = ["Maternal", "Final Cause", "Neonatal", "Final Cause"]
  Dim xdeatList As String[] = ["Maternal Death Date", "Maternal Death Final Cause", "Neonatal Death Date", "Neonatal Death Final Cause"]
  Dim xList As String[]
  Dim i As Integer
  Dim res As Result
  Dim xx As String

  xList = New String[]
  For i = 0 To 3
    xList.Add(xTitList[i])
    res = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval=&1 and fldhead=&2", encid, xdeatList[i])
    If res.Available And If res["fldrepquali"] Then
      xList.Add(res["fldrepquali"])
    Else
      xList.Add("-")
    Endif
  Next
  xx = modString.GetUniColumnTableFromList(xList)

  Return xx

End

Public Function MaternalIncentive36(encid As String) As String

  Dim xx As String
  Dim xitmList As String[] = ["ANC Incentive", "Transport Incentive", "If Not Reason"]
  Dim xList As String[]
  Dim i As Integer
  Dim res As Result

  xList = New String[]
  For i = 0 To 2
    xList.Add(xitmList[i])
    res = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval=&1 and fldhead=&2", encid, xitmList[i])
    If res.Available And If res["fldrepquali"] Then
      xList.Add(res["fldrepquali"])
    Else
      xList.Add("-")
    Endif
  Next

  xx = modString.GetUniColumnTableFromList(xList)

  Return xx

End

Public Function BloodTransfuse36(encid As String) As String

  Dim xx As String
  Dim xList As String[] = ["ANC%", "On Delivery", "PNC%"]
  Dim atime As String

  Dim res1 As Result
  Dim res2 As Result
  Dim xtot As Float

  xtot = 0
  xx = modRepoTemplete.HTMLTableSyntax()
  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "Stage" & "</td>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "Units" & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  For Each atime In xList
    xx = xx & "<tr>" & gb.NewLine
    If atime = "ANC%" Then
      xx = xx & "<td>" & "ANC" & "</td>" & gb.NewLine
    Else If atime = "On Delivery" Then
      xx = xx & "<td>" & "Del" & "</td>" & gb.NewLine
    Else If atime = "PNC%" Then
      xx = xx & "<td>" & "PNC" & "</td>" & gb.NewLine
    Endif
    res1 = modDatabase.$syConn.Exec("select fldrepquanti from tblpatientexam where fldencounterval=&1 and fldhead=&2 and fldinput like &3", encid, "Unit of Blood", atime)
    If res1.Available And If res1["fldrepquanti"] Then
      xtot = xtot + res1["fldrepquanti"]
      xx = xx & "<td>" & res1["fldrepquanti"] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
    xx = xx & "</tr>" & gb.NewLine

    xx = xx & "<tr>" & gb.NewLine
    res2 = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval=&1 and fldhead=&2 and fldinput like &3", encid, "Transfusion Date", atime)
    If res2.Available And If res2["fldrepquali"] Then
      xx = xx & "<td>" & res2["fldrepquali"] & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
    xx = xx & "</tr>" & gb.NewLine
  Next

  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td>" & "Total Units" & "</td>" & gb.NewLine
  xx = xx & "<td>" & xtot & "</td>" & gb.NewLine
  xx = xx & "</tr>" & gb.NewLine

  xx = xx & "</table>"

  Return xx

End

Public Function GetNewBornStatus36(encid As String) As String

  Dim xx As String
  Dim sexList As String[] = ["Female", "Male"]
  Dim xsex As String

  Dim reDel As Result
  Dim reDel1 As Result
  Dim xwt As String

  Dim res As Result
  Dim res1 As Result
  Dim xmacList As String[] = ["Fresh Still Birth", "Macerated Still Birth"]
  Dim xmacer As String

  xx = modRepoTemplete.HTMLTableSyntax()
  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td class='reportmid_table_h'>" & "Live Birth" & "</td>" & gb.NewLine
  For Each xsex In sexList
    xx = xx & "<td class='reportmid_table_h'>" & xsex & "</td>" & gb.NewLine
  Next
  xx = xx & "</tr>" & gb.NewLine

  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td>" & "Number" & "</td>" & gb.NewLine
  For Each xsex In sexList
    reDel = modDatabase.$syConn.Exec("select fldid from tblconfinement where fldencounterval=&1 and flddelresult=&2 and fldbabypatno in(select fldpatientval from tblpatientinfo where fldptsex=&3)", encid, "Live Baby", xsex)
    If reDel.Available Then
      xx = xx & "<td>" & reDel.Count & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
  Next
  xx = xx & "</tr>" & gb.NewLine

  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td>" & "Weight (Gm)" & "</td>" & gb.NewLine
  For Each xsex In sexList
    reDel1 = modDatabase.$syConn.Exec("select flddelwt from tblconfinement where fldencounterval=&1 and flddelresult=&2 and fldbabypatno in(select fldpatientval from tblpatientinfo where fldptsex=&3)", encid, "Live Baby", xsex)
    If reDel1.Available Then
      xwt = ""
      For Each reDel1
        xwt = xwt & reDel1["flddelwt"] & "<br>"
      Next
      xx = xx & "<td>" & xwt & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
  Next
  xx = xx & "</tr>" & gb.NewLine

  xx = xx & "<tr>" & gb.NewLine
  xx = xx & "<td>" & "CHX Used" & "</td>" & gb.NewLine
  res = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldbabypatno from tblconfinement where fldencounterval=&1)) and fldhead=&2 and fldinput like &3", encid, "(24) CHX used", "Baby Examination")
  If res.Available Then
    res.MoveFirst
    xx = xx & "<td>" & res["fldrepquali"] & "</td>" & gb.NewLine
  Else
    xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
  Endif
  xx = xx & "</tr>" & gb.NewLine

  For Each xmacer In xmacList
    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & xmacer & "</td>" & gb.NewLine
    res1 = modDatabase.$syConn.Exec("select fldid from tblconfinement where fldencounterval=&1 and flddelresult=&2", encid, xmacer)
    If res1.Available Then
      xx = xx & "<td>" & res1.Count & "</td>" & gb.NewLine
    Else
      xx = xx & "<td>" & "-" & "</td>" & gb.NewLine
    Endif
    xx = xx & "</tr>" & gb.NewLine
  Next

  xx = xx & "</table>"

  Return xx

End
