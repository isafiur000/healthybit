' Gambas class file

Private $ProgressBar1 As ProgressBar
Private $decrypt As Boolean
Private xGridData As Variant[]
Private $HMISChapters As String[]
Private $DHISVar As Variant[]

Public Sub Form_Open()

  modGeneralMain.ArrangeEmbedForms(Me, Panel1, "Vertical")
  Me.Icon = Picture[modGeneralMain.$strLogo]
  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      ' cmblocation.Text = "Hospital"
      cmblocation.Text = modDataRepo.$RepositoryMode
      cmbvalue.Text = modBasic.$HospCode
      Panel8.Enabled = False
    Else
      cmblocation.List = ["Hospital", "Municipality", "Category", "District", "Province"]
    Endif
  Else
    Panel8.Visible = False
  Endif
  btnhmisregist.Menu = "mnuhmisregist"

  $HMISChapters = ["Summary of Services", "Summary of Indoor Services", "Safe Motherhood Programme", "New Outpatient Morbidity", "Laboratory Services"]
  modHMISRepOld.LoadHMISLists()
  modHMISRepOld.GetHMISCollection()
  cmbagegroup.List = ["HMIS", "Default"]
  cmbagegroup.Text = "HMIS"
  dtfir.Value = Now()
  dtlast.Value = Now()
  modHMISRepOld.LoadHMISTree(TreeView1)

  If modBasic.$SuperUser = True Then
    $decrypt = True
  Else
    $decrypt = False
  Endif
  dtfir_Click()
  dtlast_Click()

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub cmblocation_Click()

  cmbvalue.Clear()
  If cmblocation.Text Then
    cmbvalue.List = modDataRepo.GetRepoValueListType(cmblocation.Text)
  Endif

End

Public Sub dtfir_Click()

  txtnepfir.Text = modDate.ConvertToLocaldate(dtfir.Value)

End

Public Sub dtlast_Click()

  txtneplast.Text = modDate.ConvertToLocaldate(dtlast.Value)

End

Public Sub txtnepfir_LostFocus()

  dtfir.Value = modDate.ConvertToEnglishdate(txtnepfir.Text)

End

Public Sub txtneplast_LostFocus()

  dtlast.Value = modDate.ConvertToEnglishdate(txtneplast.Text)

End

Public Sub btnexport_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, TreeView1.Current.Text, modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End

Private Sub ShowSelectedTables(sCategory As String, sItem As String)

  If sCategory = "Summary of Services" Then
    If sItem = "Hospital Services" Then
      GetHospitalService()
    Else If sItem = "Emergency Services" Then
      GetEmergencyServices()
    Else If sItem = "Diagnostic/Other Services" Then
      GetRadiologyService()
    Endif

  Else If sCategory = "Summary of Indoor Services" Then
    If sItem = "Inpatient Outcome" Then
      ShowInpatientsOutcome()
    Else If sItem = "Neonate Form" Then
      GetGravidaReport()
    Else If sItem = "Maternal Age" Then
      FillMaternalAgeData()
    Else If sItem = "Type of Surgeries" Then
      GetProcedureReportHMIS()
    Else If sItem = "Death Information" Then
      GetDeathReportHMIS()
    Else If sItem = "Free health service summary" Then
      GetFreeServicesHMIS()
    Else If sItem = "Social Security Programme" Then
      GetCostExemptionReport()
    Else If sItem = "Inpatient Morbidity" Then
      GetAgeWiseMorbidity("InPatient")
    Endif

  Else If sCategory = "Safe Motherhood Programme" Then
    If sItem = "ANC Services" Then
      ANCVisitreportAge()
    Else If sItem = "Delivery Service" Then
      DeliverySPotAssist()
    Else If sItem = "Delivery Type" Then
      DeliveryTypeReport()
    Else If sItem = "Delivery Outcome" Then
      GetLiveDeliveryBabyQTY()
    Else If sItem = "Birth Weight" Then
      BirthWeightreportCompli()
    Else If sItem = "Stillbirth" Then
      StillBirthsCount()
    Else If sItem = "Transfusion Done" Then
      TransfusionCount()
    Else If sItem = "PNC Visit" Then
      PNCCheckupCount()
    Else If sItem = "Obstetric Complications" Then
      ObsComplicaReport()
    Else If sItem = "Maternal Death in Hospital" Then
      MaternalDeathCount()
    Else If sItem = "Incentive" Then
      MaternalIncentiveCount()
    Else If sItem = "Safe Abortion Service" Then
    Endif

  Else If sCategory = "New Outpatient Morbidity" Then
    GetNewOPDMorbidity(sItem)

  Else If sCategory = "Laboratory Services" Then
    GetLaboratoryHMISReport(sItem)

  Else If sCategory = "Other Reports" Then
    If sItem = "Bipanna Report" Then
      GetBipannaStatistics()
    Else If sItem = "Total Service Recepients" Then
      GetHospServiceSelectedOnly("%")
    Else If sItem = "New Service Recepients" Then
      GetHospServiceSelectedOnly("NEW")
    Else If sItem = "Service Recepients based on Ethnicity" Then
      GetEthnicReport()
    Endif

  Endif

  ' GetAgeWiseMorbidity("General")
  ' GetHospServiceSelectedOnly("NEW")
  ' GetHospServiceSelectedOnly("%")

End

Public Sub btnrefresh_Click()

  If TreeView1.Current.Picture = Picture["icons/coll4.png"] Then
    GridView1.Clear()
    ShowSelectedTables(TreeView1.Current.ParentKey, TreeView1.Current.Text)

    If modHMISTagOld.$APIMonth Then
      $DHISVar = modHMISTagOld.SetTableCellTags(TreeView1.Current.ParentKey, TreeView1.Current.Text)
      If $DHISVar And If $DHISVar.Count Then
        btndhis.Enabled = True
      Else
        btndhis.Enabled = False
      Endif
    Endif
  Endif

End

''================== API =====================
Public Sub btndhis_Click()

  ' Dim xdate As String
  ' Dim xdaterange As Date[]
  '
  ' Dim xVar As Variant[]
  ' Dim hForm As CDHISapi
  ' Dim xstatus As String
  ' Dim xPass As String
  '
  ' If btndhis.Text = "Select Date" Then
  '   xdate = InputMask("Select BS Date", "0000/00", "BS Date", "")
  '   If xdate Then
  '     xdaterange = modDate.GetBSDateRange(xdate)
  '     If xdaterange Then
  '       btndhis.Text = "Upload"
  '       dtfir.Value = xdaterange[0]
  '       dtlast.Value = xdaterange[1]
  '       dtfir.Enabled = False
  '       dtlast.Enabled = False
  '       modHMISTagOld.$APIMonth = xdate
  '       txtnepfir.Text = modDate.ConvertToLocaldate(dtfir.Value)
  '       txtneplast.Text = modDate.ConvertToLocaldate(dtlast.Value)
  '       txtnepfir.Enabled = False
  '       txtneplast.Enabled = False
  '       btndhis.Enabled = False
  '     Endif
  '   Endif
  '
  ' Else If btndhis.Text = "Upload" Then
  '   xPass = InputPassword("Provide Root Password", "Verification", "")
  '   If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
  '     If TreeView1.Current.Text = "Obstetric Complications" And If TreeView1.Current.ParentKey = "Safe Motherhood Programme" Then
  '       xVar = modHMISTagOld.GetDHISJsonSecond($DHISVar, xGridData)
  '     Else
  '       xVar = modHMISTagOld.GetDHISJson($DHISVar, xGridData)
  '     Endif
  '     hForm = New CDHISapi(xVar, modHMISTagOld.$APIMonth)
  '     xstatus = hForm.GetAPIOutput()
  '     If xstatus Then
  '       Message.Info(xstatus, "OK")
  '     Endif
  '   Else
  '     Message.Info("Incorrect Root Password", ("OK"))
  '   Endif
  ' Endif

End

''======================== SETTINGS ==========================
Public Sub mnuapiraram_Click()

  Dim hForm As FmAPISetting

  hForm = New FmAPISetting("DHIS2")
  hForm.ShowModal

End

Public Sub mnuobscompli_Click()

  Dim xList As String[]
  Dim xx As String
  Dim xfinal As String[]
  Dim hForm As FmSelectionList
  Dim xstruct As String[]

  xfinal = New String[]
  xList = modHMISRepOld.GetHMISObsComplicationList()
  For Each xx In xList
    xfinal.Add(Split(xx, ";")[0])
  Next
  xstruct = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldhead) as col from tblstructexam"))
  hForm = New FmSelectionList("ObsComplications", xfinal, xstruct)
  hForm.ShowModal()

End

Public Sub mnubipanasetting_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("BipannaScheme", ["Bipanna"], modNonMedical.FillDiscountCombo())
  hForm.ShowModal()

End

Public Sub mnuemergency_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("Departments", ["Emergency"], modGeneral.GetDepartmentsForOPDBoth())
  hForm.ShowModal()

End

Public Sub mnuipservices_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("IPServices", modHMISRepOld.$HMISIPServiceList, modGeneral.GetDepartmentAllList("Patient Ward"))
  hForm.ShowModal()

End

Public Sub mnuservicetype_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("OPDVisits", modHMISRepOld.$HMISConsultTypes, modGeneral.GetDepartmentsForOPDBoth())
  hForm.ShowModal()

End

Public Sub mnuancvisit_Click()

  Dim hForm As FmSelectionList
  Dim xList As String[]

  xList = modGeneral.GetDepartmentsForOPDBoth()
  xList.Add("ANC Visit")
  xList.Add("PNC Visit")
  hForm = New FmSelectionList("ObstetricVisits", ["ANC", "PNC"], xList)
  hForm.ShowModal()

End

Public Sub mnudiagnostic_Click()

  Dim hForm As FmSelectionList
  Dim xList As String[]

  xList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select flditemname as col from tblservicecost"))
  hForm = New FmSelectionList("DiagnosticServices", modHMISRepOld.$HMISDiagnosticList, xList)
  hForm.ShowModal()

End

Public Sub mnudeltype_Click()

  Dim xlst As String[]
  Dim xList As String[]
  Dim hForm As FmSelectionList

  xlst = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select flditem as col from tbldelivery"))
  If xlst And If xlst.Count Then
    xList = xlst
  Else
    xList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flddeltype) as col from tblconfinement"))
  Endif
  If xList Then
    xList.Sort()
  Endif
  hForm = New FmSelectionList("DeliveryTypes", ["Spontaneous", "Vacuum", "Forceps", "Caeserian"], xList)
  hForm.ShowModal()

End

Public Sub mnufreeservice_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("FreeHealthServices", modHMISRepOld.$HMISFreeServices, modNonMedical.FillDiscountCombo())
  hForm.ShowModal()

End

' Public Sub mnulablist_Click()
'
'   Dim xlst As String[]
'   Dim xList As String[]
'   Dim hForm As FmSelectionList
'
'   xlst = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select fldtestid  as col from tbltest"))
'   If xlst And If xlst.Count Then
'     xList = xlst
'   Else
'     xList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldtestid)  as col from tblpatlabtest"))
'   Endif
'   xList.Sort()
'   hForm = New FmSelectionList("Laboratory", modHMISRepOld.$HMISLabCategory, xList)
'   hForm.ShowModal()
'
' End

Public Sub mnuculture_Click()

  Dim xlst As String[]
  Dim xList As String[]
  Dim hForm As FmSelectionList

  xlst = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select fldtestid  as col from tbltest"))
  If xlst And If xlst.Count Then
    xList = xlst
  Else
    xList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldtestid)  as col from tblpatlabtest"))
  Endif
  If xList Then
    xList.Sort()
  Endif

  hForm = New FmSelectionList("TestNames", ["CultureSensitivity"], xList)
  hForm.ShowModal()

End

Public Sub mnuspecimen_Click()

  Dim xList As String[]
  Dim hForm As FmSelectionList

  xList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldsampletype)  as col from tblpatlabtest"))
  If xList Then
    xList.Sort()
  Endif

  hForm = New FmSelectionList("Specimens", modHMISRepOld.$HMISCultureSpecimens, xList)
  hForm.ShowModal()

End

Public Sub mnuhematology_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("Hematology", modHMISRepOld.$HMISHematology, modMedicine.FillLabTestCombo("%"))
  hForm.ShowModal()

End

Public Sub mnuimmunology_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("Immunology", modHMISRepOld.$HMISImmunology, modMedicine.FillLabTestCombo("%"))
  hForm.ShowModal()

End

Public Sub mnubiochemistry_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("Biochemistry", modHMISRepOld.$HMISBiochemistry, modMedicine.FillLabTestCombo("%"))
  hForm.ShowModal()

End

Public Sub mnubacteriology_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("Bacteriology", modHMISRepOld.$HMISBactriology, modMedicine.FillLabTestCombo("%"))
  hForm.ShowModal()

End

Public Sub mnuvirology_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("Virology", modHMISRepOld.$HMISVirology, modMedicine.FillLabTestCombo("%"))
  hForm.ShowModal()

End

Public Sub mnuparasitology_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("Parasitology", modHMISRepOld.$HMISParasitology, modMedicine.FillLabTestCombo("%"))
  hForm.ShowModal()

End

Public Sub mnuhormone_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("Hormones", modHMISRepOld.$HMISHormones, modMedicine.FillLabTestCombo("%"))
  hForm.ShowModal()

End

Public Sub mnudruganalysis_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("DrugAnalysis", modHMISRepOld.$HMISDrugAnalysis, modMedicine.FillLabTestCombo("%"))
  hForm.ShowModal()

End

Public Sub mnucytology_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("HistoCytology", modHMISRepOld.$HMISCytology, modMedicine.FillLabTestCombo("%"))
  hForm.ShowModal()

End

Public Sub mnuimmunohisto_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("ImmunoHistochemistry", modHMISRepOld.$HMISImmunoHisto, modMedicine.FillLabTestCombo("%"))
  hForm.ShowModal()

End

''------------------------- Data Load -------------------
Private Sub LoadVariableToGrid(xFinal As Variant[], xGridView As GridView)

  Dim xRowVal As Collection
  Dim Row As Integer
  Dim Column As Integer

  xGridData = xFinal
  For Row = 0 To xFinal.Count - 1
    xRowVal = xFinal[Row]
    For Column = 0 To xGridView.Columns.Count - 1
      xGridView[Row, Column].Text = xRowVal[CStr(Column)]
    Next
  Next

End

''============================Bipanna======================
Private Sub GetBipannaStatistics()

  Dim xFreeList As String[]
  Dim xFinal As Variant[]
  Dim i As Integer

  Inc Application.Busy
  xFreeList = ["Heart Disease", "Kidney Disease", "Parkinsons Disease", "Alzheimers Disease", "Head Injuries", "Spinal Injuries"]
  xFinal = modHMISReportOld.SubGetBipannaStatistics(xFreeList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  Dec Application.Busy

  GridView1.Clear()
  GridView1.Columns.Count = xFreeList.Count + 2
  GridView1.Rows.Count = xFinal.Count
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Text = "District"
    .Columns[0].Width = 125 * modBasic.$AppWidthRatio
    For i = 1 To xFreeList.Count
      .Columns[i].Text = xFreeList[i - 1]
      .Columns[i].Width = 75 * modBasic.$AppWidthRatio
    Next
    .Columns[xFreeList.Count + 1].Text = "Total"
    .Columns[xFreeList.Count + 1].Width = 75 * modBasic.$AppWidthRatio
  End With

  LoadVariableToGrid(xFinal, GridView1)

End

''============================Hospital Service======================
Private Sub GetHospitalService()

  Dim ageList As String[]
  Dim xFinal As Variant[]

  If cmbagegroup.Text = "HMIS" Then
    ageList = ["0-9 years;0;3649", "10-19 years;3650;7299", "20-59 years;7300;21899", ">=60 years;21900;730000"]
  Else
    ageList = modMedReports.AgeGroupGeneralList()
  Endif

  GridView1.Clear()
  GridView1.Columns.Count = 5
  GridView1.Rows.Count = ageList.Count + 1
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 125 * modBasic.$AppWidthRatio
    .Columns[1].Width = 75 * modBasic.$AppWidthRatio
    .Columns[2].Width = 75 * modBasic.$AppWidthRatio
    .Columns[3].Width = 75 * modBasic.$AppWidthRatio
    .Columns[4].Width = 75 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Age Group"
    .Columns[1].Text = "New Female"
    .Columns[2].Text = "New Male"
    .Columns[3].Text = "Total Female"
    .Columns[4].Text = "Total Male"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubGetHospitalService(ageList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

Private Sub GetHospServiceSelectedOnly(sType As String)

  Dim ageList As String[]
  Dim i As Integer
  Dim arx As String[]

  Dim xFinal As Variant[]

  If cmbagegroup.Text = "HMIS" Then
    ageList = ["0-9 years;0;3649", "10-19 years;3650;7299", "20-59 years;7300;21899", ">=60 years;21900;730000"]
  Else
    ageList = modMedReports.AgeGroupGeneralList()
  Endif

  GridView1.Clear()
  GridView1.Columns.Count = ageList.Count + 2
  GridView1.Rows.Count = 2
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 75 * modBasic.$AppWidthRatio
    .Columns[0].Text = "Gender"
    For i = 0 To ageList.Count - 1
      arx = Split(ageList[i], ";")
      .Columns[i + 1].Width = 75 * modBasic.$AppWidthRatio
      .Columns[i + 1].Text = arx[0]
    Next
    .Columns[ageList.Count + 1].Width = 75 * modBasic.$AppWidthRatio
    .Columns[ageList.Count + 1].Text = "Total"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubGetHospServiceSelectedOnly(sType, ageList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

Private Sub GetEthnicReport()

  Dim ethList As String[]
  Dim i As Integer

  Dim xFinal As Variant[]

  ethList = ["1", "2", "3", "4", "5", "6"]

  GridView1.Clear()
  GridView1.Columns.Count = ethList.Count + 2
  GridView1.Rows.Count = 2
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Text = "Gender"
    .Columns[0].Width = 75 * modBasic.$AppWidthRatio
    For i = 0 To ethList.Count - 1
      .Columns[i + 1].Text = ethList[i]
      .Columns[i + 1].Width = 75 * modBasic.$AppWidthRatio
    Next
    .Columns[ethList.Count + 1].Text = "Total"
    .Columns[ethList.Count + 1].Width = 75 * modBasic.$AppWidthRatio
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubGetEthnicReport(ethList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''========================EMERGENCY SERVICES==============================
Private Sub GetEmergencyServices()

  Dim ageList As String[]

  Dim xFinal As Variant[]

  If cmbagegroup.Text = "HMIS" Then
    ageList = ["0-9 years;0;3649", "10-19 years;3650;7299", "20-59 years;7300;21899", ">=60 years;21900;730000"]
  Else
    ageList = modMedReports.AgeGroupGeneralList()
  Endif

  GridView1.Clear()
  GridView1.Columns.Count = 3
  GridView1.Rows.Count = ageList.Count + 1
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 125 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Age Group"
    .Columns[1].Text = "Total Female"
    .Columns[2].Text = "Total Male"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubGetEmergencyServices(ageList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''============================Radiology Services======================
Private Sub GetRadiologyService()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 3
  GridView1.Rows.Count = modHMISRepOld.$HMISDiagnosticList.Count + 3
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 250 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Particulars"
    .Columns[1].Text = "Unit"
    .Columns[2].Text = "Number"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubGetRadiologyService(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''========================Inpatient Outcome=========================
Private Sub GetAgeGroupingHMIS() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("<=28 days;0;28")
  xx.Add("29 days-1 year;29;364")
  xx.Add("1-4 years;365;1824")
  xx.Add("5-14 years;1825;5474")
  xx.Add("15-19 years;5475;7299")
  xx.Add("20-29 years;7300;10949")
  xx.Add("30-39 years;10950;14599")
  xx.Add("40-49 years;14600;18249")
  xx.Add("50-59 years;18250;21899")
  xx.Add(">= 60 years;21900;730000")
  Return xx

End

Private Sub ShowInpatientsOutcome()

  Dim ageList As String[]
  Dim xFinal As Variant[]

  If cmbagegroup.Text = "HMIS" Then
    ageList = GetAgeGroupingHMIS()
  Else
    ageList = modMedReports.AgeGroupGeneralList()
  Endif
  GridView1.Clear()
  GridView1.Columns.Count = 15
  GridView1.Rows.Count = ageList.Count
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 125 * modBasic.$AppWidthRatio
    .Columns[1].Width = 75 * modBasic.$AppWidthRatio
    .Columns[2].Width = 75 * modBasic.$AppWidthRatio
    .Columns[3].Width = 75 * modBasic.$AppWidthRatio
    .Columns[4].Width = 75 * modBasic.$AppWidthRatio
    .Columns[5].Width = 75 * modBasic.$AppWidthRatio
    .Columns[6].Width = 75 * modBasic.$AppWidthRatio
    .Columns[7].Width = 75 * modBasic.$AppWidthRatio
    .Columns[8].Width = 75 * modBasic.$AppWidthRatio
    .Columns[9].Width = 75 * modBasic.$AppWidthRatio
    .Columns[10].Width = 75 * modBasic.$AppWidthRatio
    .Columns[11].Width = 75 * modBasic.$AppWidthRatio
    .Columns[12].Width = 75 * modBasic.$AppWidthRatio
    .Columns[13].Width = 75 * modBasic.$AppWidthRatio
    .Columns[14].Width = 75 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Age Group"

    .Columns[1].Text = "Improved" & gb.NewLine & "Female"
    .Columns[2].Text = "Improved" & gb.NewLine & "Male"

    .Columns[3].Text = "Not Improved" & gb.NewLine & "Female"
    .Columns[4].Text = "Not Improved" & gb.NewLine & "Male"

    .Columns[5].Text = "Refer" & gb.NewLine & "Female"
    .Columns[6].Text = "Refer" & gb.NewLine & "Male"

    .Columns[7].Text = "LAMA" & gb.NewLine & "Female"
    .Columns[8].Text = "LAMA" & gb.NewLine & "Male"

    .Columns[9].Text = "Absconder" & gb.NewLine & "Female"
    .Columns[10].Text = "Absconder" & gb.NewLine & "Male"

    .Columns[11].Text = "Death(<2Day)" & gb.NewLine & "Female"
    .Columns[12].Text = "Death(<2Day)" & gb.NewLine & "Male"

    .Columns[13].Text = "Death(>=2Day)" & gb.NewLine & "Female"
    .Columns[14].Text = "Death(>=2Day)" & gb.NewLine & "Male"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubShowInpatientsOutcome(ageList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''===================== IP Morbidity ================================================
Private Sub GetAgeSexGroupingHMIS() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("<=28 days:Female")
  xx.Add("<=28 days:Male")
  xx.Add("29 days-1 year:Female")
  xx.Add("29 days-1 year:Male")
  xx.Add("1-4 years:Female")
  xx.Add("1-4 years:Male")
  xx.Add("5-14 years:Female")
  xx.Add("5-14 years:Male")
  xx.Add("15-19 years:Female")
  xx.Add("15-19 years:Male")
  xx.Add("20-29 years:Female")
  xx.Add("20-29 years:Male")
  xx.Add("30-39 years:Female")
  xx.Add("30-39 years:Male")
  xx.Add("40-49 years:Female")
  xx.Add("40-49 years:Male")
  xx.Add("50-59 years:Female")
  xx.Add("50-59 years:Male")
  xx.Add(">= 60 years:Female")
  xx.Add(">= 60 years:Male")
  xx.Add("Death:Female")
  xx.Add("Death:Male")

  Return xx

End

Private Sub GetAgeWiseMorbidity(sType As String)

  Dim ageList As String[]
  Dim xage As String
  Dim digList As String[]
  Dim itmList As String[]
  Dim i As Integer
  Dim stit As String[]

  Dim xFinal As Variant[]

  If cmbagegroup.Text = "HMIS" Then
    ageList = GetAgeSexGroupingHMIS()
  Else
    ageList = modMedReports.AgeGroupGenderList()
  Endif
  If sType = "InPatient" Then
    digList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldcodeid) as col from tblpatfindings where fldtime>=&1 and fldtime<=&2 and fldtype=&3 and fldsave=&4 and fldencounterval in(select fldencounterval from tblencounter where flddod IS NOT NULL)" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "Provisional Diagnosis", True))
  Else
    digList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldcodeid) as col from tblpatfindings where fldtime>=&1 and fldtime<=&2 and fldtype=&3 and fldsave=&4" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "Provisional Diagnosis", True))
  Endif
  itmList = modHMISRepOld.ConvertDiagnosisToHMIS(digList)

  GridView1.Clear()
  GridView1.Columns.Count = ageList.Count + 2
  GridView1.Rows.Count = itmList.Count
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 50 * modBasic.$AppWidthRatio
    .Columns[1].Width = 150 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Code"
    .Columns[1].Text = "Disease"
    i = 2
    For Each xage In ageList
      stit = Split(xage, ":")
      .Columns[i].Text = stit[0] & gb.NewLine & stit[1]
      .Columns[i].Width = 75 * modBasic.$AppWidthRatio
      i = i + 1
    Next
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubGetAgeWiseMorbidity(sType, ageList, itmList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''===================== NEW OutPatient Morbidity ================================================
Private Sub GetNewOPDMorbidity(sType As String)

  Dim xFinal As Variant[]

  Inc Application.Busy
  xFinal = modHMISReportOld.SubGetNewOPDMorbidity(sType, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  If xFinal.Count Then

    GridView1.Clear()
    GridView1.Rows.Count = xFinal.Count
    If sType = "Obstetrics Complications" Then
      GridView1.Columns.Count = 3
      With GridView1
        .Rows.Height = modBasic.$AppGridRowHeight
        .Columns[0].Width = 350 * modBasic.$AppWidthRatio
        .Columns[1].Width = 100 * modBasic.$AppWidthRatio
        .Columns[2].Width = 75 * modBasic.$AppWidthRatio

        .Columns[0].Text = "Disease"
        .Columns[1].Text = "Code"
        .Columns[2].Text = "Number"
      End With

    Else
      GridView1.Columns.Count = 4
      With GridView1
        .Rows.Height = modBasic.$AppGridRowHeight
        .Columns[0].Width = 100 * modBasic.$AppWidthRatio
        .Columns[1].Width = 350 * modBasic.$AppWidthRatio
        .Columns[2].Width = 75 * modBasic.$AppWidthRatio
        .Columns[3].Width = 75 * modBasic.$AppWidthRatio

        .Columns[0].Text = "Code"
        .Columns[1].Text = "Disease"
        .Columns[2].Text = "Female"
        .Columns[3].Text = "Male"
      End With
    Endif

  Endif

  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''========================= Gravida Report/Maternal Age =============================
Private Sub GetGravidaReport()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 5
  GridView1.Rows.Count = 3
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 150 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio
    .Columns[3].Width = 100 * modBasic.$AppWidthRatio
    .Columns[4].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Gravida"
    .Columns[1].Text = "22-27 Week"
    .Columns[2].Text = "28-36 Week"
    .Columns[3].Text = "37-41 Week"
    .Columns[4].Text = ">=42 Week"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubGetGravidaReport(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

Private Sub FillMaternalAgeData()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 5
  GridView1.Rows.Count = 3
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 150 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio
    .Columns[3].Width = 100 * modBasic.$AppWidthRatio
    .Columns[4].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Mother Age"
    .Columns[1].Text = "22-27 Week"
    .Columns[2].Text = "28-36 Week"
    .Columns[3].Text = "37-41 Week"
    .Columns[4].Text = ">=42 Week"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubFillMaternalAgeData(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''====================== Delivery Types Report ===================
Private Sub DeliveryTypeReport()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 4
  GridView1.Rows.Count = 3
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 150 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio
    .Columns[3].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Delivery Type"
    .Columns[1].Text = "Cephalic"
    .Columns[2].Text = "Shoulder"
    .Columns[3].Text = "Breech"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubDeliveryTypeReport(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''======================== Delivery QTY ==========================
Private Sub GetLiveDeliveryBabyQTY()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 4
  GridView1.Rows.Count = 3
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 150 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio
    .Columns[3].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Delivery Outcome"
    .Columns[1].Text = "Single Baby"
    .Columns[2].Text = "Double Baby"
    .Columns[3].Text = "Multiple Baby"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubGetLiveDeliveryBabyQTY(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''====================== PNC Checkup =====================
Private Sub PNCCheckupCount()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 2
  GridView1.Rows.Count = 2
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 225 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "PNC Visit"
    .Columns[1].Text = "Number"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubPNCCheckreportAge(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''=================== Transfusion ===================
Private Sub TransfusionCount()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 2
  GridView1.Rows.Count = 2
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 225 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Transfusion Done"
    .Columns[1].Text = "Number"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubTransfusionCount(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''=================== Maternal Death ================
Private Sub MaternalDeathCount()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 4
  GridView1.Rows.Count = 1
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 125 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio
    .Columns[3].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Death in Hospital"
    .Columns[1].Text = "Pregnancy"
    .Columns[2].Text = "Delivery"
    .Columns[3].Text = "Post Delivery"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubMaternalDeathCount(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''=================== Incentives ==================
Private Sub MaternalIncentiveCount()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 3
  GridView1.Rows.Count = 2
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 225 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Incentive"
    .Columns[1].Text = "Eligible"
    .Columns[2].Text = "Received"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubMaternalIncentiveCount(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''===================== Complications =====================
Private Sub ObsComplicaReport()

  Dim xFinal As Variant[]

  Inc Application.Busy
  xFinal = modHMISReportOld.SubObstetricComplications(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  If xFinal.Count Then

    GridView1.Clear()
    GridView1.Rows.Count = xFinal.Count
    GridView1.Columns.Count = 3
    With GridView1
      .Rows.Height = modBasic.$AppGridRowHeight
      .Columns[0].Width = 350 * modBasic.$AppWidthRatio
      .Columns[1].Width = 100 * modBasic.$AppWidthRatio
      .Columns[2].Width = 75 * modBasic.$AppWidthRatio

      .Columns[0].Text = "Disease"
      .Columns[1].Text = "Code"
      .Columns[2].Text = "Number"
    End With

  Endif

  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''======================== Still Births ============
Private Sub StillBirthsCount()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 2
  GridView1.Rows.Count = 2
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 200 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Stillbirth"
    .Columns[1].Text = "Number"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubStillBirthsCount(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''==================== Delivery Spot ================
Private Sub DeliverySPotAssist()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 3
  GridView1.Rows.Count = 2
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 175 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Delivery Service"
    .Columns[1].Text = "HP/Hosp"
    .Columns[2].Text = "Home"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubDeliverySPotAssist(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''==================== ANC Visit =========================
Private Sub ANCVisitreportAge()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 3
  GridView1.Rows.Count = 3
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 225 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "ANC Services"
    .Columns[1].Text = "< 20Yrs"
    .Columns[2].Text = ">= 20Yrs"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubANCVisitreportAge(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''==================== Birth weight =========================
Private Sub BirthWeightreportCompli()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 4
  GridView1.Rows.Count = 3
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 150 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio
    .Columns[3].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Birth Weight"
    .Columns[1].Text = "Total"
    .Columns[2].Text = "Asphyxia"
    .Columns[3].Text = "Malformations"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubBirthWeightreportCompli(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''================== Death Report ==============================
Public Sub GetDeathReportHMIS()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 3
  GridView1.Rows.Count = 5
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 200 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Category"
    .Columns[1].Text = "Female"
    .Columns[2].Text = "Male"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubGetDeathReportHMIS(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''========================= Laboratory ===========================
Private Sub GetLaboratoryHMISReport(sDepartment As String)

  Dim sList As String[]

  Dim xFinal As Variant[]

  sList = modHMISRepOld.GetHMISLabItemList(sDepartment)

  GridView1.Clear()
  GridView1.Columns.Count = 3
  If TreeView1.Current.Text = "BACTERIOLOGY" Then
    GridView1.Rows.Count = sList.Count + modHMISRepOld.$HMISCultureSpecimens.Count
  Else
    GridView1.Rows.Count = sList.Count
  Endif
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 200 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Test Name"
    .Columns[1].Text = "Abnormal"
    .Columns[2].Text = "Total"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubGetLaboratoryHMISReport(sDepartment, sList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''============================= Procedure Report ====================
Private Sub GetProcedureReportHMIS()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 4
  GridView1.Rows.Count = 6
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 200 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio
    .Columns[3].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Surgery Type"
    .Columns[1].Text = "Female"
    .Columns[2].Text = "Male"
    .Columns[3].Text = "Post-Op Infection"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubGetProcedureReportHMIS(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''================================== Free Health services ==================
Private Sub GetFreeServicesHMIS()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 5
  GridView1.Rows.Count = modHMISRepOld.$HMISFreeServices.Count
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 200 * modBasic.$AppWidthRatio
    .Columns[1].Width = 75 * modBasic.$AppWidthRatio
    .Columns[2].Width = 75 * modBasic.$AppWidthRatio
    .Columns[3].Width = 75 * modBasic.$AppWidthRatio
    .Columns[4].Width = 75 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Program"
    .Columns[1].Text = "OutPatients"
    .Columns[2].Text = "InPatients"
    .Columns[3].Text = "Emergency"
    .Columns[4].Text = "ReferredOut"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubGetFreeServicesHMIS(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

Private Sub GetCostExemptionReport()

  Dim xFinal As Variant[]

  GridView1.Clear()
  GridView1.Columns.Count = 3
  GridView1.Rows.Count = 2
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 200 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 150 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Exemption"
    .Columns[1].Text = "Patient Count"
    .Columns[2].Text = "Total Exemption"
  End With

  Inc Application.Busy
  xFinal = modHMISReportOld.SubGetCostExemptionReport(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView1)
  Dec Application.Busy

End

''============================== ALL REPORTS ==========================
Public Sub btnall_Click()

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim xPath As String

  Dim xlab As String
  Dim chapList As String[]

  Dim xx As String
  Dim yy As String
  Dim aa As String
  Dim bb As String
  Dim cc As String
  Dim dd As String
  Dim ee As String
  Dim ff As String
  Dim gg As String

  Dim hh As String
  Dim ii As String
  Dim jj As String
  Dim kk As String

  Dim ll As String
  Dim mm As String
  Dim nn As String
  Dim oo As String
  Dim pp As String
  Dim qq As String
  Dim rr As String
  Dim ss As String

  Dim ageList As String[]
  Dim digList As String[]
  Dim itmList As String[]
  Dim xage As String

  Dim agecol As String[]
  Dim hodpservice As String

  Dim emrcol As String[]
  Dim emrservice As String

  Dim dgnocol As String[]
  Dim diagnoserv As String

  Dim ipoutcol As String[]
  Dim ipoutcome As String

  Dim ipmorbcol As String[]
  Dim ipmorbidity As String

  Dim newopmorcol As String[]
  Dim newopmorbidity As String

  Dim gestweek As String[]
  Dim gravidainfo As String
  Dim maternalage As String

  Dim deltypecolm As String[]
  Dim deliverytype As String

  Dim delqcolm As String[]
  Dim deliveryqty As String

  Dim brthwtcolm As String[]
  Dim birthweight As String

  Dim dthcol As String[]
  Dim dthinform As String

  Dim labcol As String[]
  Dim laboreport As String
  Dim sList As String[]

  Dim proccolm As String[]
  Dim procedureRep As String

  Dim freecol As String[]
  Dim freexservice As String

  Dim costcol As String[]
  Dim xcostexemption As String

  Dim anccol As String[]
  Dim xancvisit As String

  Dim spotcol As String[]
  Dim xspotassist As String

  Dim stillcol As String[]
  Dim xstillbirth As String

  Dim pnccol As String[]
  Dim pncvisit As String

  Dim xchxuse As String
  Dim rchx As Result
  Dim xchxno As Integer

  Dim xtransfuse As String
  Dim transfcol As String[]

  Dim matdeathcol As String[]
  Dim xmatdeath As String

  Dim xneodeath As String
  Dim reneo As Result
  Dim xneono As Integer

  Dim xincentive As String
  Dim incentcol As String[]

  Dim xabortion As String
  Dim abortcol As String[]

  Dim aTit As String
  Dim bTit As String
  Dim cTit As String
  Dim dTit As String
  Dim eTit As String
  Dim fTit As String
  Dim gTit As String
  Dim hTit As String
  Dim iTit As String
  Dim jTit As String
  Dim kTit As String
  Dim lTit As String
  Dim mTit As String
  Dim nTit As String
  Dim oTit As String
  Dim pTit As String
  Dim qTit As String
  Dim rTit As String
  Dim sTit As String

  chapList = SelectListView(("Select Components"), $HMISChapters, False)
  If chapList And If chapList.Count Then

    $BillingReport = New CReportHTML(["HMIS REPORT"], "", "")
    $BillingReport.UserData.Add("HMIS REPORT", "PARAM1")
    $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate), "PARAM2")

    Inc Application.Busy
    $ProgressBar1 = New ProgressBar(Me)

    ''----------------------- Service Summary ----------------------------
    If chapList.Exist("Summary of Services") = True Then
      $BillingReport.AddSection("Summary of Services", True)

      xx = ""
      xx = modRepoTemplete.HTMLTableSyntax()
      xx = xx & "<tr>" & gb.NewLine

      If cmbagegroup.Text = "HMIS" Then
        ageList = ["0-9 years;0;3649", "10-19 years;3650;7299", "20-59 years;7300;21899", ">=60 years;21900;730000"]
      Else
        ageList = modMedReports.AgeGroupGeneralList()
      Endif
      'GetHospitalService()
      agecol = ["Age Group", "New Female", "New Male", "Total Female", "Total Male"]
      hodpservice = modString.GetRichTableStringFromVariant(agecol, modHMISReportOld.SubGetHospitalService(ageList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      xx = xx & "<td style='vertical-align:top'>" & "<b>" & "Hospital Services" & "</b><br>" & hodpservice & "</td>" & gb.NewLine

      ' GetEmergencyServices()
      emrcol = ["Age Group", "Total Female", "Total Male"]
      emrservice = modString.GetRichTableStringFromVariant(emrcol, modHMISReportOld.SubGetEmergencyServices(ageList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      xx = xx & "<td style='vertical-align:top'>" & "<b>" & "Emergency Services" & "</b><br>" & emrservice & "</td>" & gb.NewLine

      xx = xx & "</tr>" & gb.NewLine
      xx = xx & "</table>"

      yy = ""
      yy = modRepoTemplete.HTMLTableSyntax()
      yy = yy & "<tr>" & gb.NewLine
      yy = yy & "<td style='vertical-align:top'>" & xx & "</td>" & gb.NewLine

      ' GetRadiologyService()
      dgnocol = ["Particulars", "Unit", "Number"]
      diagnoserv = modString.GetRichTableStringFromVariant(dgnocol, modHMISReportOld.SubGetRadiologyService(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      yy = yy & "<td style='vertical-align:top'>" & "<b>" & "Diagnostic/Other Services" & "</b><br>" & diagnoserv & "</td>" & gb.NewLine

      yy = yy & "</tr>" & gb.NewLine
      yy = yy & "</table>"

      With asx
        .Add(yy)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      With asx
        .Add("*****")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

    ''------------------------------- Summary of Indoor Services -----------------
    If chapList.Exist("Summary of Indoor Services") = True Then
      $BillingReport.AddSection("Summary of Indoor Services", True)

      ' ShowInpatientsOutcome()
      If cmbagegroup.Text = "HMIS" Then
        ageList = GetAgeGroupingHMIS()
      Else
        ageList = modMedReports.AgeGroupGeneralList()
      Endif
      ipoutcol = ["Age Group", "Improved" & "<br>" & "Female", "Improved" & "<br>" & "Male", "Not Improved" & "<br>" & "Female", "Not Improved" & "<br>" & "Male", "Refer" & "<br>" & "Female", "Refer" & "<br>" & "Male", "LAMA" & "<br>" & "Female", "LAMA" & "<br>" & "Male", "Absconder" & "<br>" & "Female", "Absconder" & "<br>" & "Male", "Death(<2Day)" & "<br>" & "Female", "Death(<2Day)" & "<br>" & "Male", "Death(>=2Day)" & "<br>" & "Female", "Death(>=2Day)" & "<br>" & "Male"]
      ipoutcome = modString.GetRichTableStringFromVariant(ipoutcol, modHMISReportOld.SubShowInpatientsOutcome(ageList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))

      $BillingReport.AddChapter("Inpatient Outcome")
      With asx
        .Add(ipoutcome)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      With asx
        .Add("*****")
      End With
      $BillingReport.Add(asx)
      asx.Clear()

      xx = ""
      aa = ""
      bb = ""
      xx = modRepoTemplete.HTMLTableSyntax()
      xx = xx & "<tr>" & gb.NewLine

      ' GetGravidaReport()
      gestweek = ["Gravida", "22-27 Week", "28-36 Week", "37-41 Week", ">=42 Week"]
      gravidainfo = modString.GetRichTableStringFromVariant(gestweek, modHMISReportOld.SubGetGravidaReport(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      aa = "<b>" & "Neonate Form" & "</b><br>" & gravidainfo

      ' FillMaternalAgeData()
      gestweek = ["Maternal Age", "22-27 Week", "28-36 Week", "37-41 Week", ">=42 Week"]
      maternalage = modString.GetRichTableStringFromVariant(gestweek, modHMISReportOld.SubFillMaternalAgeData(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      bb = "<b>" & "Maternal Age" & "</b><br>" & maternalage

      xx = xx & "<td style='vertical-align:top'>" & aa & "<br>" & bb & "</td>" & gb.NewLine

      ' GetProcedureReportHMIS()
      proccolm = ["Surgery Type", "Female", "Male", "Post-Op Infection"]
      procedureRep = modString.GetRichTableStringFromVariant(proccolm, modHMISReportOld.SubGetProcedureReportHMIS(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      xx = xx & "<td style='vertical-align:top'>" & "<b>" & "Type of Surgeries" & "</b><br>" & procedureRep & "</td>" & gb.NewLine

      ' GetDeathReportHMIS()
      dthcol = ["Category", "Female", "Male"]
      dthinform = modString.GetRichTableStringFromVariant(dthcol, modHMISReportOld.SubGetDeathReportHMIS(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      xx = xx & "<td style='vertical-align:top'>" & "<b>" & "Death Information" & "</b><br>" & dthinform & "</td>" & gb.NewLine

      xx = xx & "</tr>" & gb.NewLine
      xx = xx & "</table>"
      With asx
        .Add(xx)
      End With
      $BillingReport.Add(asx)
      asx.Clear()

      With asx
        .Add("*****")
      End With
      $BillingReport.Add(asx)
      asx.Clear()

      xx = ""
      xx = modRepoTemplete.HTMLTableSyntax()
      xx = xx & "<tr>" & gb.NewLine

      ' GetCostExemptionReport()
      costcol = ["Exemption", "Patient Count", "Total Exemption"]
      xcostexemption = modString.GetRichTableStringFromVariant(costcol, modHMISReportOld.SubGetCostExemptionReport(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      xx = xx & "<td style='vertical-align:top'>" & "<b>" & "Free health service summary" & "</b><br>" & xcostexemption & "</td>" & gb.NewLine

      ' GetFreeServicesHMIS()
      freecol = ["Program", "OutPatients", "InPatients", "Emergency", "ReferredOut"]
      freexservice = modString.GetRichTableStringFromVariant(freecol, modHMISReportOld.SubGetFreeServicesHMIS(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      xx = xx & "<td style='vertical-align:top'>" & "<b>" & "Free Health Services and Social Security Programme" & "</b><br>" & freexservice & "</td>" & gb.NewLine

      xx = xx & "</tr>" & gb.NewLine
      xx = xx & "</table>"
      With asx
        .Add(xx)
      End With
      $BillingReport.Add(asx)
      asx.Clear()

      With asx
        .Add("*****")
      End With
      $BillingReport.Add(asx)
      asx.Clear()

      ' GetAgeWiseMorbidity("InPatient")
      If cmbagegroup.Text = "HMIS" Then
        ageList = GetAgeSexGroupingHMIS()
      Else
        ageList = modMedReports.AgeGroupGenderList()
      Endif
      digList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldcodeid) as col from tblpatfindings where fldtime>=&1 and fldtime<=&2 and fldtype=&3 and fldsave=&4 and fldencounterval in(select fldencounterval from tblencounter where flddod IS NOT NULL)" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "Provisional Diagnosis", True))
      itmList = modHMISRepOld.ConvertDiagnosisToHMIS(digList)
      ipmorbcol = New String[]
      ipmorbcol.Add("Code")
      ipmorbcol.Add("Disease")
      For Each xage In ageList
        ipmorbcol.Add(Replace(xage, ":", "<br>"))
      Next
      ipmorbidity = modString.GetRichTableStringFromVariant(ipmorbcol, modHMISReportOld.SubGetAgeWiseMorbidity("InPatient", ageList, itmList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))

      $BillingReport.AddChapter("Inpatient Morbidity (No. of Patients Discharged)")
      With asx
        .Add(ipmorbidity)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      With asx
        .Add("*****")
      End With
      $BillingReport.Add(asx)
      asx.Clear()

    Endif

    ''----------------------- Safe Motherhood Programme --------------------------
    If chapList.Exist("Safe Motherhood Programme") = True Then
      $BillingReport.AddSection("Safe Motherhood Programme", True)
      xx = ""
      aa = ""
      bb = ""
      cc = ""
      dd = ""
      ee = ""
      ff = ""
      gg = ""
      hh = ""
      ii = ""
      jj = ""
      kk = ""
      xx = modRepoTemplete.HTMLTableSyntax()
      xx = xx & "<tr>" & gb.NewLine

      'ANCVisitreportAge()
      anccol = ["ANC Services", "< 20Yrs", ">= 20Yrs"]
      xancvisit = modString.GetRichTableStringFromVariant(anccol, modHMISReportOld.SubANCVisitreportAge(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      dd = xancvisit

      'DeliverySPotAssist()
      spotcol = ["Delivery Service", "HP/Hosp", "Home"]
      xspotassist = modString.GetRichTableStringFromVariant(spotcol, modHMISReportOld.SubDeliverySPotAssist(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      ee = xspotassist

      ' DeliveryTypeReport()
      deltypecolm = ["Delivery Type", "Cephalic", "Shoulder", "Breech"]
      deliverytype = modString.GetRichTableStringFromVariant(deltypecolm, modHMISReportOld.SubDeliveryTypeReport(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      aa = deliverytype

      ' GetLiveDeliveryBabyQTY()
      delqcolm = ["Delivery Outcome", "Single Baby", "Double Baby", "Multiple Baby"]
      deliveryqty = modString.GetRichTableStringFromVariant(delqcolm, modHMISReportOld.SubGetLiveDeliveryBabyQTY(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      bb = deliveryqty

      ' BirthWeightreportCompli()
      brthwtcolm = ["Birth Weight", "Total", "Asphyxia", "Malformations"]
      birthweight = modString.GetRichTableStringFromVariant(brthwtcolm, modHMISReportOld.SubBirthWeightreportCompli(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      cc = birthweight

      ff = ""
      ff = modRepoTemplete.HTMLTableSyntax()
      ff = ff & "<tr>" & gb.NewLine
      ' StillBirthsCount()
      stillcol = ["Stillbirth", "Number"]
      xstillbirth = modString.GetRichTableStringFromVariant(stillcol, modHMISReportOld.SubStillBirthsCount(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      ff = ff & "<td style='vertical-align:top'>" & xstillbirth & "</td>" & gb.NewLine

      ''CHX Use
      xchxno = 0
      rchx = modDatabase.$syConn.Exec("select count(distinct(fldencounterval)) as col from tblpatientexam where fldhead=&1 and fldmethod=&2 and fldtime>=&3 and fldtime<=&4 and fldrepquali=&5" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), "(24) CHX used", "HMIS 3.61", modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "Yes")
      If rchx.Available And If rchx["col"] Then
        xchxno = rchx["col"]
      Endif
      xchxuse = modString.GetRichTableStringFromVariant(["CHX Used"], modHMISRepOld.GetUniVariantFormat(xchxno))
      ff = ff & "<td style='vertical-align:top'>" & xchxuse & "</td>" & gb.NewLine

      ''TransfusionCount()
      transfcol = ["Transfusion Done", "Number"]
      xtransfuse = modString.GetRichTableStringFromVariant(transfcol, modHMISReportOld.SubTransfusionCount(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      ff = ff & "<td style='vertical-align:top'>" & xtransfuse & "</td>" & gb.NewLine

      ff = ff & "</tr>" & gb.NewLine
      ff = ff & "</table>"
      ' PNCCheckupCount()
      pnccol = ["PNC Visit", "Number"]
      pncvisit = modString.GetRichTableStringFromVariant(pnccol, modHMISReportOld.SubPNCCheckreportAge(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      gg = pncvisit

      xx = xx & "<td style='vertical-align:top'>" & dd & "<br>" & ee & "<br>" & aa & "<br>" & bb & "<br>" & cc & "<br>" & ff & "<br>" & gg & "</td>" & gb.NewLine

      ' GetNewOPDMorbidity("Obstetrics Complications")
      newopmorcol = ["Obstetric Complications", "ICD Code", "Number"]
      ' ' newopmorbidity = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Obstetrics Complications", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      newopmorbidity = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubObstetricComplications(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      hh = newopmorbidity

      yy = ""
      yy = modRepoTemplete.HTMLTableSyntax()
      yy = yy & "<tr>" & gb.NewLine
      'MaternalDeathCount()
      matdeathcol = ["Maternal Death in Hospital", "Pregnancy", "Delivery", "Post Delivery"]
      xmatdeath = modString.GetRichTableStringFromVariant(matdeathcol, modHMISReportOld.SubMaternalDeathCount(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      yy = yy & "<td style='vertical-align:top'>" & xmatdeath & "</td>" & gb.NewLine

      ''Neonatal Death
      xneono = 0
      reneo = modDatabase.$syConn.Exec("select count(distinct(fldencounterval)) as col from tblpatientexam where fldhead=&1 and fldmethod=&2 and fldtime>=&3 and fldtime<=&4 and fldencounterval in(select fldencounterval from tblconfinement)" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), "Neonatal Death Date", "HMIS 3.61", modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value))
      If reneo.Available And If reneo["col"] Then
        xneono = reneo["col"]
      Endif
      xneodeath = modString.GetRichTableStringFromVariant(["Neonatal Death"], modHMISRepOld.GetUniVariantFormat(xneono))
      yy = yy & "<td style='vertical-align:top'>" & xneodeath & "</td>" & gb.NewLine

      yy = yy & "</tr>" & gb.NewLine
      yy = yy & "</table>"
      ii = yy

      ' MaternalIncentiveCount()
      incentcol = ["Incentive", "Eligible", "Received"]
      xincentive = modString.GetRichTableStringFromVariant(incentcol, modHMISReportOld.SubMaternalIncentiveCount(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      jj = xincentive

      ''Abortion
      abortcol = ["Safe Abortion Service", "Medical", "Surgical"]
      xabortion = modString.GetRichTableStringFromVariant(abortcol, modHMISReportOld.SubMaternalAbortionService())
      kk = xabortion
      kk = kk & "<br>" & "PAC Service"

      xx = xx & "<td style='vertical-align:top'>" & hh & "<br>" & ii & "<br>" & jj & "<br>" & kk & "</td>" & gb.NewLine

      xx = xx & "</tr>" & gb.NewLine
      xx = xx & "</table>"
      With asx
        .Add(xx)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      With asx
        .Add("*****")
      End With
      $BillingReport.Add(asx)
      asx.Clear()

    Endif

    ''------------------- New Outpatient Morbidity ---------------------
    If chapList.Exist("New Outpatient Morbidity") = True Then
      $BillingReport.AddSection("New Outpatient Morbidity (Including Under 5yrs Children)", True)

      xx = ""
      aa = ""
      bb = ""
      cc = ""
      dd = ""
      ee = ""
      ff = ""
      gg = ""
      hh = ""
      ii = ""
      jj = ""
      kk = ""
      ll = ""
      mm = ""
      nn = ""
      oo = ""
      pp = ""
      qq = ""
      rr = ""
      ss = ""

      ' GetNewOPDMorbidity(xicdlist[i])
      newopmorcol = ["Code", "Disease", "Female", "Male"]
      aTit = "Communicable, Immunizable"
      aa = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Communicable, Immunizable", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      bTit = "Communicable, Vector Borne"
      bb = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Communicable, Vector Borne", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      cTit = "Communicable, Water/Food Borne"
      cc = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Communicable, Water/Food Borne", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      dTit = "Other Communicable Diseases"
      dd = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Other Communicable Diseases", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      eTit = "HIV/STI"
      ee = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("HIV/STI", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      fTit = "Other Infected Diseases"
      ff = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Other Infected Diseases", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      gTit = "Nutritional & Metabolic Disorder"
      gg = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Nutritional & Metabolic Disorder", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      hTit = "Skin Diseases"
      hh = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Skin Diseases", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      iTit = "Ear, Nose and Throat Infection"
      ii = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Ear, Nose and Throat Infection", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      jTit = "Oral Health Related Problems"
      jj = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Oral Health Related Problems", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      kTit = "Eye Problems"
      kk = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Eye Problems", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      lTit = "Obstetrics Complications"
      ll = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Obstetrics Complications", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      mTit = "Gynae Problems"
      mm = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Gynae Problems", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      nTit = "Mental Health related problems"
      nn = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Mental Health related problems", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      oTit = "Malignancy"
      oo = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Malignancy", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      pTit = "Cardiovascular & Respiratory Related Problems"
      pp = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Cardiovascular & Respiratory Related Problems", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      qTit = "Other Diseases & Injuries"
      qq = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Other Diseases & Injuries", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      rTit = "Orthopaedic Problems"
      rr = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Orthopaedic Problems", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
      sTit = "Surgical Problems"
      ss = modString.GetRichTableStringFromVariant(newopmorcol, modHMISReportOld.SubGetNewOPDMorbidity("Surgical Problems", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))

      xx = modRepoTemplete.HTMLTableSyntax()
      xx = xx & "<tr>" & gb.NewLine
      xx = xx & "<td style='vertical-align:top'>" & aTit & "<br>" & aa & "<br>" & bTit & "<br>" & bb & "<br>" & cTit & "<br>" & cc & "</td>" & gb.NewLine
      xx = xx & "<td style='vertical-align:top'>" & dTit & "<br>" & dd & "<br>" & eTit & "<br>" & ee & "<br>" & fTit & "<br>" & ff & "<br>" & gTit & "<br>" & gg & "</td>" & gb.NewLine
      xx = xx & "</tr>" & gb.NewLine

      xx = xx & "<tr>" & gb.NewLine
      xx = xx & "<td style='vertical-align:top'>" & hTit & "<br>" & hh & "<br>" & iTit & "<br>" & ii & "</td>" & gb.NewLine
      xx = xx & "<td style='vertical-align:top'>" & jTit & "<br>" & jj & "<br>" & kTit & "<br>" & kk & "</td>" & gb.NewLine
      xx = xx & "</tr>" & gb.NewLine

      xx = xx & "<tr>" & gb.NewLine
      xx = xx & "<td style='vertical-align:top'>" & lTit & "<br>" & ll & "<br>" & mTit & "<br>" & mm & "</td>" & gb.NewLine
      xx = xx & "<td style='vertical-align:top'>" & nTit & "<br>" & nn & "<br>" & oTit & "<br>" & oo & "</td>" & gb.NewLine
      xx = xx & "</tr>" & gb.NewLine

      xx = xx & "<tr>" & gb.NewLine
      xx = xx & "<td style='vertical-align:top'>" & pTit & "<br>" & pp & "<br>" & qTit & "<br>" & qq & "</td>" & gb.NewLine
      xx = xx & "<td style='vertical-align:top'>" & rTit & "<br>" & rr & "<br>" & sTit & "<br>" & ss & "</td>" & gb.NewLine
      xx = xx & "</tr>" & gb.NewLine

      xx = xx & "</table>"
      With asx
        .Add(xx)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      With asx
        .Add("*****")
      End With
      $BillingReport.Add(asx)
      asx.Clear()

    Endif

    ''------------------------ Laboratory Services ----------------------
    If chapList.Exist("Laboratory Services") = True Then
      $BillingReport.AddSection("Laboratory Services", True)

      labcol = ["Test Name", "Abnormal", "Total"]
      For Each xlab In modHMISRepOld.$HMISLabCategory
        ' GetLaboratoryHMISReport()
        sList = modHMISRepOld.GetHMISLabItemList(xlab)
        If sList.Count Then
          laboreport = modString.GetRichTableStringFromVariant(labcol, modHMISReportOld.SubGetLaboratoryHMISReport(xlab, sList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text))
        Endif

        $BillingReport.AddChapter(xlab)
        With asx
          .Add(laboreport)
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Next
      With asx
        .Add("*****")
      End With
      $BillingReport.Add(asx)
      asx.Clear()

    Endif

    Dec Application.Busy
    xPath = $BillingReport.NewHTMLPath()
    modControlSub.DisplayReportExport(xPath)

  Endif

End

''=========================== REGISTERS =====================================
''HMIS-1.1 Master
Public Sub mnuhmis11_Click()

  Dim xPath As String
  Dim ageList As String[]
  Dim ethList As String[]

  If cmbagegroup.Text = "HMIS" Then
    ageList = ["0-9 years;0;3649", "10-19 years;3650;7299", "20-59 years;7300;21899", ">=60 years;21900;730000"]
  Else
    ageList = modMedReports.AgeGroupGeneralList()
  Endif
  ethList = ["1", "2", "3", "4", "5", "6"]

  Inc Application.Busy
  xPath = modHMISReportOld.HMISRegister11(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, ageList, ethList, $decrypt)
  modHMISRepOld.ClearHMISCollection()
  Dec Application.Busy
  modControlSub.DisplayReportExport(xPath)

End

''HMIS-1.3 OPD
Public Sub mnuhmis13_Click()

  Dim xPath As String

  Inc Application.Busy
  xPath = modHMISReportOld.HMISRegister13(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, $decrypt)
  modHMISRepOld.ClearHMISCollection()
  Dec Application.Busy
  modControlSub.DisplayReportExport(xPath)

End

''HMIS-8.1 Admission
Public Sub mnuhmis81_Click()

  Dim xPath As String

  Inc Application.Busy
  xPath = modHMISReportOld.HMISRegister81(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, $decrypt)
  modHMISRepOld.ClearHMISCollection()
  Dec Application.Busy
  modControlSub.DisplayReportExport(xPath)

End

''HMIS-8.2 Discharge
Public Sub mnuhmis82_Click()

  Dim xPath As String

  Inc Application.Busy
  xPath = modHMISReportOld.HMISRegister82(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, $decrypt)
  modHMISRepOld.ClearHMISCollection()
  Dec Application.Busy
  modControlSub.DisplayReportExport(xPath)

End

''HMIS-8.3 Emergency SERVICE
Public Sub mnuhmis83_Click()

  Dim xPath As String

  Inc Application.Busy
  xPath = modHMISReportOld.HMISRegister83(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, $decrypt)
  modHMISRepOld.ClearHMISCollection()
  Dec Application.Busy
  modControlSub.DisplayReportExport(xPath)

End

''EWARS Report
Public Sub mnuewarsreport_Click()

  Dim xPath As String

  Inc Application.Busy
  xPath = modHMISReportOld.EWARSRegister(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  modHMISRepOld.ClearHMISCollection()
  Dec Application.Busy
  modControlSub.DisplayReportExport(xPath)

End

''bipanna
Public Sub mnuanusuchikha_Click()

  Dim xPath As String

  Inc Application.Busy
  xPath = modHMISReportOld.BipannaRegister(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  modHMISRepOld.ClearHMISCollection()
  Dec Application.Busy
  modControlSub.DisplayReportExport(xPath)

End

''HMIS-3.6 Maternal and Newborn SERVICE
Public Sub mnuhmis36_Click()

  Dim xPath As String

  Inc Application.Busy
  xPath = modHMISReportOld.HMISRegister36(dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, $decrypt)
  modHMISRepOld.ClearHMISCollection()
  Dec Application.Busy
  modControlSub.DisplayReportExport(xPath)

End

Public Sub Button1_Click()

  If modBasic.$RightPanelURL = "http://hmis.gov.np/hmis/dhis-web-commons/security/login.action" Then
    modGeneralMain.$RightAdView.Url = "http://hmis.gov.np/hmis/dhis-web-dataentry/index.action"
  Endif

End
