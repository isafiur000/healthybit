' Gambas module file

Private $ColmHMIS11 As String[] = [("SNo"), ("First"), ("Repeat"), ("Name"), ("SurName"), ("Ethn"), ("Age(F)"), ("Age(M)"), ("District"), ("Address"), ("WardNo"), ("Contact"), ("Service"), ("Expense"), ("Referred From")]
Private $ColmHMIS13 As String[] = [("SNo"), ("PatNo"), ("First"), ("Repeat"), ("Name"), ("Ethn"), ("Age(F)"), ("Age(M)"), ("Address"), ("Investigation"), ("Prov Diagnosis"), ("Treatment"), ("Procedurre"), ("Gen Violence"), ("Scheme"), ("Referred From")]
Private $ColmHMIS81 As String[] = [("SNo"), ("DOA"), ("First"), ("Repeat"), ("Name"), ("Ethn"), ("<28days<br>Days(F)"), ("<28days<br>Days(M)"), ("1-11 Mon<br>Months(F)"), ("1-11 Mon<br>Months(M)"), (">=1 Year<br>Years(F)"), (">=1 Year<br>Years(M)"), ("Address"), ("Guardian"), ("Admission From"), ("Ward"), ("Surgery"), ("Investigation"), ("Prov Diagnosis"), ("Police(Yes)"), ("Police(No)"), ("Remarks")]
Private $ColmHMIS82 As String[] = [("SNo"), ("PatNo"), ("DOD"), ("DOA"), ("Length (days)"), ("Name"), ("Ethn"), ("<28days<br>Days(F)"), ("<28days<br>Days(M)"), ("1-11 Mon<br>Months(F)"), ("1-11 Mon<br>Months(M)"), (">=1 Year<br>Years(F)"), (">=1 Year<br>Years(M)"), ("TypeOf Care"), ("Ward"), ("Surgery"), ("PostOp Infect<br>(Yes)"), ("PostOp Infect<br>(No)"), ("Final Diagnosis"), ("Outcome"), ("Died<48Hour"), ("Died>48Hour"), ("Cause of Death"), ("Exemption<br>(Full)"), ("Exemption<br>(Partial)"), ("Exempted<br>AMT"), ("Scheme Code"), ("Police(Yes)"), ("Police(No)")]
Private $ColmHMIS83 As String[] = [("SNo"), ("RegNo"), ("DOReg"), ("Name"), ("Ethn"), ("<28days<br>Days(F)"), ("<28days<br>Days(M)"), ("1-11 Mon<br>Months(F)"), ("1-11 Mon<br>Months(M)"), (">=1 Year<br>Years(F)"), (">=1 Year<br>Years(M)"), ("Address"), ("Guardian"), ("Source<br>(Self)"), ("Source<br>(Refer From)"), ("Brought Dead"), ("Complaints"), ("Investigation"), ("Diagnosis"), ("Treatment"), ("Observation<br>(Yes)"), ("Observation<br>(No)"), ("DOD"), ("Outcome"), ("Died (Code)"), ("Cause of Death"), ("Exemption<br>(Full)"), ("Exemption<br>(Partial)"), ("Exempted<br>AMT"), ("Scheme Code"), ("Police(Yes)"), ("Police(No)")]
Private $ColmEWARS As String[] = [("SNo"), ("DOReg"), ("Week No"), ("RegNo"), ("RegType"), ("Name"), ("Age"), ("Sex"), ("District"), ("Address"), ("Contact"), ("Disease Name"), ("ICDCode"), ("Diagnosis"), ("Laboratory"), ("Outcome"), ("Referred To")]
Private $ColmBipana As String[] = [("SNo"), ("Refer"), ("PatientID<br>New"), ("PatientID<br>Old"), ("Name"), ("Age<br>Female"), ("Age<br>Male"), ("Age<br>Other"), ("Citizenship"), ("Disease"), ("Amount"), ("Remarks")]
Private $ColmHMIS36 As String[] = [("SNo"), ("RegNo"), ("Name"), ("Age<br>Contact"), ("Address"), ("Husband"), ("G/P<br>LMP<br>EDD"), ("ANC Visit"), ("HIV<br>Syphilis"), ("Obstetric<br>complications"), ("Other<br>complications"), ("Treatment<br>ANC"), ("Admission"), ("Delivery"), ("Baby<br>Del Type"), ("Main<br>Attendant"), ("Treatment<br>Delivery"), ("Newborn<br>Status"), ("Treatment<br>Newborn"), ("PNC Visit"), ("Blood<br>Transfusion"), ("Treatment<br>Postpartum"), ("Discharge"), ("Death"), ("Incentives"), ("Remarks")]

''=========================== SETTINGS ===========================
Public Function GetDBHMISettingList(sType As String, scategory As String) As String[]

  Dim res As Result
  Dim xx As String[]

  If MMain.$WebEntry = True Then
    res = modDatabase.$myConn.Exec("select fldvalue from tblhmissetting where fldtype=&1 and fldcategory=&2 and (fldhospcode like &3 or fldhospcode=&4)", sType, scategory, modBasic.$HospCode, "%")
  Else
    res = modDatabase.$myConn.Exec("select fldvalue from tblhmissetting where fldtype=&1 and fldcategory=&2", sType, scategory)
  Endif
  xx = modControlSub.GetDirectFillresult(res)
  Return xx

End

Public Function GetDBHMISettingValue(sType As String, scategory As String) As String

  Dim res As Result
  Dim xx As String

  If MMain.$WebEntry = True Then
    res = modDatabase.$myConn.Exec("select fldvalue from tblhmissetting where fldtype=&1 and fldcategory=&2 and (fldhospcode like &3 or fldhospcode=&4)", sType, scategory, modBasic.$HospCode, "%")
  Else
    res = modDatabase.$myConn.Exec("select fldvalue from tblhmissetting where fldtype=&1 and fldcategory=&2", sType, scategory)
  Endif
  If res.Available Then
    res.MoveLast
    If res["fldvalue"] Then
      xx = res["fldvalue"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

''======================== Dummy ==========================
Public Function SubMaternalAbortionService() As Variant[]

  Dim RowList As String[] = ["Abortion Service <20 Years", "Abortion Service >=20 Years", "Contraception after Abortion <20 Years", "Contraception after Abortion >=20 Years", "Complication After Abortion"]
  Dim xtype As String
  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  For Each xtype In RowList
    xRowVal = New Collection
    xRowVal.Add(xtype, CStr(0))
    xRowVal.Add(0, CStr(1))
    xRowVal.Add(0, CStr(2))
    xFinal.Add(xRowVal)
  Next
  Return xFinal

End

''============================== REPORT ============================================
''------------------------ Bipanna ---------------------------
Public Function SubGetBipannaStatistics(xFreeList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xDeptList As String[]
  Dim xlist As String
  Dim xpackage As String
  Dim res As Result
  Dim xdistList As String[]

  Dim xFinaDist As String[]
  Dim xdistname As String
  Dim xdemog As String
  Dim res1 As Result
  Dim xdemotot As Integer
  Dim fintot As Integer
  Dim i As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xDeptList = modHMISReportOld.GetDBHMISettingList("BipannaScheme", "Bipanna")
  If Not xDeptList.Count Then
    xlist = modSettings.ShowHMISSettingFromFIle("BipannaScheme/Bipanna")
    If xlist Then
      xDeptList = Split(xlist, ";")
    Else
      xDeptList = New String[]
    Endif
  Endif

  xdistList = New String[]
  For Each xpackage In xDeptList
    res = modDatabase.$syConn.Exec("select distinct(fldptadddist) as col from tblpatientinfo where fldpatientval in(select fldpatientval from tblencounter where flddisctype like &1 and fldregdate>=&2 and fldregdate<=&3 and fldvisit=&4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), xpackage, modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "NEW")
    If res.Available Then
      xdistList.Insert(res.All("col"))
    Endif
  Next
  xFinaDist = modString.BinaryDistinctStringArray(xdistList)
  If xFinaDist Then
    xFinaDist.Sort()
  Endif

  xFinal = New Variant[]
  For Each xdistname In xFinaDist
    fintot = 0
    xRowVal = New Collection
    xRowVal.Add(xdistname, CStr(0))
    i = 1
    For Each xdemog In xFreeList
      xdemotot = 0
      For Each xpackage In xDeptList
        res1 = modDatabase.$syConn.Exec("select count(fldencounterval) as xtot from tblencounter where flddisctype=&1 and fldregdate>=&2 and fldregdate<=&3 and fldvisit=&4 and fldpatientval in(select fldpatientval from tblpatientinfo where fldptadddist=&5) and fldencounterval in(select fldencounterval from tblpataccgeneral where fldinput=&6 and flditem=&7 and fldreportquali=&8)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), xpackage, modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "NEW", xdistname, "Demographics", "Bipanna Scheme", xdemog)
        If res1.Available Then
          xdemotot = xdemotot + res1["xtot"]
          fintot = fintot + res1["xtot"]
        Endif
      Next
      xRowVal.Add(xdemotot, CStr(i))
      i = i + 1
    Next
    xRowVal.Add(fintot, CStr(i))
    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

''------------------------- Free Services --------------------
Public Function SubGetFreeServicesHMIS(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xfree As String
  Dim servstr As String
  Dim servList As String[]
  Dim xserv As String

  Dim xDeptList As String[]
  Dim sdept As String
  Dim xlist As String

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim res5 As Result
  Dim totipd As Integer
  Dim totopd As Integer
  Dim toter As Integer
  Dim totrefer As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xDeptList = modHMISReportOld.GetDBHMISettingList("Departments", "Emergency")
  If Not xDeptList.Count Then
    xlist = modSettings.ShowHMISSettingFromFIle("Departments/Emergency")
    If xlist Then
      xDeptList = Split(xlist, ";")
    Else
      xDeptList = New String[]
    Endif
  Endif

  xFinal = New Variant[]
  For Each xfree In modHMISRepOld.$HMISFreeServices
    totipd = 0
    totopd = 0
    toter = 0
    totrefer = 0
    servList = modHMISReportOld.GetDBHMISettingList("FreeHealthServices", xfree)
    If Not servList.Count Then
      servstr = modSettings.ShowHMISSettingFromFIle("FreeHealthServices" & "/" & xfree)
      If servstr Then
        servList = Split(servstr, ";")
      Else
        servList = New String[]
      Endif
    Endif
    For Each xserv In servList
      res1 = modDatabase.$syConn.Exec("select count(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and flddisctype=&3 and flddoa IS NOT NULL" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xserv)
      If res1.Available And If res1["tot"] Then
        totipd = totipd + res1["tot"]
      Endif

      res5 = modDatabase.$syConn.Exec("select count(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and flddisctype=&3 and fldreferto IS NOT NULL" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xserv)
      If res5.Available And If res5["tot"] Then
        totrefer = totrefer + res5["tot"]
      Endif

      res2 = modDatabase.$syConn.Exec("select count(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and flddisctype=&3 and flddoa IS NULL" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xserv)
      If res2.Available And If res2["tot"] Then
        totopd = totopd + res2["tot"]
      Endif

      If xDeptList.Count Then
        For Each sdept In xDeptList
          res3 = modDatabase.$syConn.Exec("select count(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and flddisctype=&3 and flddoa IS NULL and fldadmitlocat=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xserv, sdept)
          If res3.Available And If res3["tot"] Then
            toter = toter + res3["tot"]
          Endif
        Next
      Endif

    Next

    xRowVal = New Collection
    xRowVal.Add(xfree, CStr(0))
    ' GridView1[Row, 0].Text = xfree
    xRowVal.Add(totopd - toter, CStr(1))
    ' GridView1[Row, 1].Text = totopd - toter
    xRowVal.Add(totipd, CStr(2))
    ' GridView1[Row, 2].Text = totipd  ''ipd
    xRowVal.Add(toter, CStr(3))
    ' GridView1[Row, 3].Text = toter
    xRowVal.Add(totrefer, CStr(4))
    ' GridView1[Row, 4].Text = totrefer
    xFinal.Add(xRowVal)

  Next

  Return xFinal

End

Public Function SubGetCostExemptionReport(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim xparcount As Integer
  Dim xparamt As Float
  Dim xfullcount As Integer
  Dim xfullamt As Float

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xparcount = 0
  xparamt = 0
  res1 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as cnt,SUM(flddiscountamt) as tot from tblpatbilldetail where fldtime>=&1 and fldtime<=&2 and fldbilltype=&3 and fldsave=&4 and flddiscountamt>&5 and fldreceivedamt<>&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Cash", True, 0, 0)
  If res1["cnt"] Then
    xparcount = res1["cnt"]
  Endif
  If res1["tot"] Then
    xparamt = res1["tot"]
  Endif

  xfullcount = 0
  xfullamt = 0
  res2 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as cnt,SUM(flddiscountamt) as tot from tblpatbilldetail where fldtime>=&1 and fldtime<=&2 and fldbilltype=&3 and fldsave=&4 and flddiscountamt>&5 and fldreceivedamt=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Cash", True, 0, 0)
  If res2["cnt"] Then
    xfullcount = res2["cnt"]
  Endif
  If res2["tot"] Then
    xfullamt = res2["tot"]
  Endif

  xRowVal = New Collection
  xRowVal.Add("Partially", CStr(0))
  ' GridView1[0, 0].Text = "Partially"
  xRowVal.Add(xparcount, CStr(1))
  ' GridView1[0, 1].Text = xparcount
  xRowVal.Add(Format(xparamt, gb.Fixed), CStr(2))
  ' GridView1[0, 2].Text = Format(xparamt, gb.Fixed)
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Completely", CStr(0))
  ' GridView1[1, 0].Text = "Completely"
  xRowVal.Add(xfullcount, CStr(1))
  ' GridView1[1, 1].Text = xfullcount
  xRowVal.Add(Format(xfullamt, gb.Fixed), CStr(2))
  ' GridView1[1, 2].Text = Format(xfullamt, gb.Fixed)
  xFinal.Add(xRowVal)

  Return xFinal

End

''-------------------------- Procedure --------------------
Public Function SubGetProcedureReportHMIS(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim sexList As String[] = ["Female", "Male"]
  Dim xgender As String
  Dim k As Integer
  Dim res1 As Result
  Dim sexot As Integer

  Dim resz As Result
  Dim intot As Integer

  Dim res2 As Result
  Dim inpatot As Integer

  Dim res3 As Result
  Dim totopd As Integer
  Dim res4 As Result
  Dim ertot As Integer
  Dim xlist As String
  Dim xDeptList As String[]
  Dim xdept As String

  Dim res5 As Result
  Dim plastot As Integer

  Dim xFinal As Variant[]
  Dim aRowVal As Collection
  Dim zRowVal As Collection
  Dim bRowVal As Collection
  Dim cRowVal As Collection
  Dim dRowVal As Collection
  Dim eRowVal As Collection
  Dim aSource As String

  aSource = modSettings.ShowSettingFromFIle("HMISReporting/ProcedureSource")
  xDeptList = modHMISReportOld.GetDBHMISettingList("Departments", "Emergency")
  If Not xDeptList.Count Then
    xlist = modSettings.ShowHMISSettingFromFIle("Departments/Emergency")
    If xlist Then
      xDeptList = Split(xlist, ";")
    Else
      xDeptList = New String[]
    Endif
  Endif
  xFinal = New Variant[]

  k = 1
  aRowVal = New Collection
  zRowVal = New Collection
  bRowVal = New Collection
  cRowVal = New Collection
  dRowVal = New Collection
  eRowVal = New Collection

  aRowVal.Add("Major", CStr(0))
  zRowVal.Add("Intermediate", CStr(0))
  ' GridView1[0, 0].Text = "Major"
  bRowVal.Add("Minor:Outpatients", CStr(0))
  ' GridView1[1, 0].Text = "Minor:Outpatients"
  cRowVal.Add("Minor:Inpatients", CStr(0))
  ' GridView1[2, 0].Text = "Minor:Inpatients"
  dRowVal.Add("Minor:Emergency", CStr(0))
  ' GridView1[3, 0].Text = "Minor:Emergency"
  eRowVal.Add("Plaster", CStr(0))
  ' GridView1[4, 0].Text = "Plaster"
  For Each xgender In sexList
    sexot = 0
    intot = 0
    totopd = 0
    inpatot = 0
    ertot = 0
    plastot = 0

    If aSource = "Service" Then
      res1 = modDatabase.$syConn.Exec("select COUNT(fldid) as tot from tblpatgeneral where fldnewdate>=&1 and fldnewdate<=&2 and fldinput=&3 and fldreportquali=&4 and flditem in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", "Done", "Major", xgender)
    Else
      res1 = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4 and flditemname in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", True, "Major", xgender)
    Endif
    If res1.Available And If res1["tot"] Then
      sexot = res1["tot"]
    Endif

    If aSource = "Service" Then
      resz = modDatabase.$syConn.Exec("select COUNT(fldid) as tot from tblpatgeneral where fldnewdate>=&1 and fldnewdate<=&2 and (fldinput=&3 or fldinput=&4) and fldreportquali=&5 and flditem in(select flditemname from tblservicecost where fldtarget=&6) and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Minor Procedures", "Procedures", "Done", "Intermediate", xgender)
    Else
      resz = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4 and flditemname in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", True, "Intermediate", xgender)
    Endif
    If resz.Available And If resz["tot"] Then
      intot = resz["tot"]
    Endif

    If aSource = "Service" Then
      res5 = modDatabase.$syConn.Exec("select COUNT(fldid) as tot from tblpatgeneral where fldnewdate>=&1 and fldnewdate<=&2 and (fldinput=&3 or fldinput=&4) and fldreportquali=&5 and flditem in(select flditemname from tblservicecost where fldtarget=&6) and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Minor Procedures", "Procedures", "Done", "Plaster", xgender)
    Else
      res5 = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4 and flditemname in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", True, "Plaster", xgender)
    Endif
    If res5.Available And If res5["tot"] Then
      plastot = res5["tot"]
    Endif

    If aSource = "Service" Then
      res2 = modDatabase.$syConn.Exec("select COUNT(fldid) as tot from tblpatgeneral where fldnewdate>=&1 and fldnewdate<=&2 and (fldinput=&3 or fldinput=&4) and fldreportquali=&5 and flditem in(select flditemname from tblservicecost where fldtarget=&6) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NOT NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Minor Procedures", "Procedures", "Done", "Minor", xgender)
    Else
      res2 = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4 and flditemname in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NOT NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", True, "Minor", xgender)
    Endif
    If res2.Available And If res2["tot"] Then
      inpatot = res2["tot"]
    Endif

    If aSource = "Service" Then
      res3 = modDatabase.$syConn.Exec("select COUNT(fldid) as tot from tblpatgeneral where fldnewdate>=&1 and fldnewdate<=&2 and (fldinput=&3 or fldinput=&4) and fldreportquali=&5 and flditem in(select flditemname from tblservicecost where fldtarget=&6) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Minor Procedures", "Procedures", "Done", "Minor", xgender)
    Else
      res3 = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4 and flditemname in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", True, "Minor", xgender)
    Endif
    If res3.Available And If res3["tot"] Then
      totopd = res3["tot"]
    Endif

    If xDeptList.Count Then
      For Each xdept In xDeptList
        If aSource = "Service" Then
          res4 = modDatabase.$syConn.Exec("select COUNT(fldid) as tot from tblpatgeneral where fldnewdate>=&1 and fldnewdate<=&2 and (fldinput=&3 or fldinput=&4) and fldreportquali=&5 and flditem in(select flditemname from tblservicecost where fldtarget=&6) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldadmitlocat=&7 and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&8))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Minor Procedures", "Procedures", "Done", "Minor", xdept, xgender)
        Else
          res4 = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4 and flditemname in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldadmitlocat=&6 and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", True, "Minor", xdept, xgender)
        Endif
        If res4.Available And If res4["tot"] Then
          ertot = ertot + res4["tot"]
        Endif
      Next
    Endif

    aRowVal.Add(sexot, CStr(k))
    zRowVal.Add(intot, CStr(k))
    ' GridView1[0, k].Text = sexot
    bRowVal.Add(totopd - ertot, CStr(k))
    ' GridView1[1, k].Text = totopd - ertot
    cRowVal.Add(inpatot, CStr(k))
    ' GridView1[2, k].Text = inpatot
    dRowVal.Add(ertot, CStr(k))
    ' GridView1[3, k].Text = ertot
    eRowVal.Add(plastot, CStr(k))
    ' GridView1[4, k].Text = plastot

    k = k + 1
  Next
  aRowVal.Add(0, CStr(k))
  zRowVal.Add(0, CStr(k))
  bRowVal.Add(0, CStr(k))
  cRowVal.Add(0, CStr(k))
  dRowVal.Add(0, CStr(k))
  eRowVal.Add("**", CStr(k))

  xFinal.Add(aRowVal)
  xFinal.Add(zRowVal)
  xFinal.Add(bRowVal)
  xFinal.Add(cRowVal)
  xFinal.Add(dRowVal)
  xFinal.Add(eRowVal)

  Return xFinal

End

''--------------------- Death report ------------------------
Public Function SubGetDeathReportHMIS(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1x As Result
  Dim res1y As Result
  Dim res2x As Result
  Dim res2y As Result
  Dim res3x As Result
  Dim res4x As Result
  Dim res4y As Result
  Dim res5x As Result
  Dim res5y As Result

  Dim xtotfemale As Integer
  Dim xtotmale As Integer
  Dim xstr As String
  Dim aa As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xstr = modMedReports.GetAgeStringByTable("tblpatientdate", modDatabase.$syConn)
  xFinal = New Variant[]
  xtotfemale = 0
  xtotmale = 0

  xRowVal = New Collection
  xRowVal.Add("Early Neonatal(0-6 days)", CStr(0))
  ' GridView1[0, 0].Text = "Early Neonatal(0-6 days)"
  'early neonatal female
  aa = 0
  res1x = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblpatientdate where fldtime>=&1 and fldtime<=&2 and fldhead=&3 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &4 and fldptbirday like &5 and " & xstr & ">=&6 and " & xstr & "<&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death", "Female", "%", 0, 7)
  If res1x.Available Then
    If res1x!col Then
      aa = res1x!col
    Endif
  Endif
  xtotfemale = xtotfemale + aa
  xRowVal.Add(aa, CStr(1))
  ' GridView1[0, 1].Text = aa

  ''early neonatal male
  aa = 0
  res1y = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblpatientdate where fldtime>=&1 and fldtime<=&2 and fldhead=&3 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &4 and fldptbirday like &5 and " & xstr & ">=&6 and " & xstr & "<&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death", "Male", "%", 0, 7)
  If res1x.Available Then
    If res1y!col Then
      aa = res1y!col
    Endif
  Endif
  xtotmale = xtotmale + aa
  xRowVal.Add(aa, CStr(2))
  ' GridView1[0, 2].Text = aa
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Late Neonatal(7-27 days)", CStr(0))
  ' GridView1[1, 0].Text = "Late Neonatal(7-27 days)"
  ''late neonatal female
  aa = 0
  res2x = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblpatientdate where fldtime>=&1 and fldtime<=&2 and fldhead=&3 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &4 and fldptbirday like &5 and " & xstr & ">=&6 and " & xstr & "<&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death", "Female", "%", 7, 27)
  If res2x.Available Then
    If res2x!col Then
      aa = res2x!col
    Endif
  Endif
  xtotfemale = xtotfemale + aa
  xRowVal.Add(aa, CStr(1))
  ' GridView1[1, 1].Text = aa

  ''late neonatal male
  aa = 0
  res2y = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblpatientdate where fldtime>=&1 and fldtime<=&2 and fldhead=&3 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &4 and fldptbirday like &5 and " & xstr & ">=&6 and " & xstr & "<&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death", "Male", "%", 7, 27)
  If res2y.Available Then
    If res2y!col Then
      aa = res2y!col
    Endif
  Endif
  xtotmale = xtotmale + aa
  xRowVal.Add(aa, CStr(2))
  ' GridView1[1, 2].Text = aa
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Maternal (All)", CStr(0))
  ' GridView1[2, 0].Text = "Maternal (All)"
  ''delivery
  aa = 0
  res3x = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblpatientdate where fldtime>=&1 and fldtime<=&2 and fldhead=&3 and fldencounterval in(select fldencounterval from tblconfinement)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death")
  If res3x.Available Then
    If res3x!col Then
      aa = res3x!col
    Endif
  Endif
  xtotfemale = xtotfemale + aa
  xRowVal.Add(aa, CStr(1))
  ' GridView1[2, 1].Text = aa
  xRowVal.Add(0, CStr(2))
  ' GridView1[2, 2].Text = 0
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Post Operative", CStr(0))
  ' GridView1[3, 0].Text = "Post Operative"
  'post operative female
  res4x = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblpatientdate where fldtime>=&1 and fldtime<=&2 and fldhead=&3 and fldencounterval in(select fldencounterval from tblpatgeneral where fldreportquali=&4) and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &5))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death", "Done", "Female")
  If res4x.Available Then
    If res4x!col Then
      aa = res4x!col
    Endif
  Endif
  xtotfemale = xtotfemale + aa
  xRowVal.Add(aa, CStr(1))
  ' GridView1[3, 1].Text = aa

  ''post operative male
  aa = 0
  res4y = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblpatientdate where fldtime>=&1 and fldtime<=&2 and fldhead=&3 and fldencounterval in(select fldencounterval from tblpatgeneral where fldreportquali=&4) and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &5))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death", "Done", "Male")
  If res4y.Available Then
    If res4y!col Then
      aa = res4y!col
    Endif
  Endif
  xtotmale = xtotmale + aa
  xRowVal.Add(aa, CStr(2))
  ' GridView1[3, 2].Text = aa
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Others", CStr(0))
  ' GridView1[4, 0].Text = "Others"
  ''others female
  aa = 0
  res5x = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblpatientdate where fldtime>=&1 and fldtime<=&2 and fldhead=&3 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &4))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death", "Female")
  If res5x.Available Then
    If res5x!col Then
      aa = res5x!col
    Endif
  Endif
  xRowVal.Add(aa - xtotfemale, CStr(1))
  ' GridView1[4, 1].Text = aa - xtotfemale

  ''others male
  aa = 0
  res5y = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblpatientdate where fldtime>=&1 and fldtime<=&2 and fldhead=&3 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &4))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death", "Male")
  If res5y.Available Then
    If res5y!col Then
      aa = res5y!col
    Endif
  Endif
  xRowVal.Add(aa - xtotmale, CStr(2))
  ' GridView1[4, 2].Text = aa - xtotmale
  xFinal.Add(xRowVal)

  Return xFinal

End

''----------------------- Laboratory ----------------------
Public Function SubGetLaboratoryHMISReport(sType As String, sList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim itmLst As String[]
  Dim xLst As String
  Dim xTest As String
  Dim sTest As String
  Dim res1 As Result
  Dim res2 As Result
  Dim Row As Integer

  Dim xabn As Integer
  Dim xtot As Integer

  Dim aVar As String
  Dim aList As String[]
  Dim aTest As String
  Dim aSpec As String
  Dim specList As String[]
  Dim spVar As String
  Dim sampType As String

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  If sType = "BACTERIOLOGY" Then
    aList = modHMISReportOld.GetDBHMISettingList("TestNames", "CultureSensitivity")
    If Not aList.Count Then
      aVar = modSettings.ShowHMISSettingFromFIle("TestNames" & "/" & "CultureSensitivity")
      If aVar Then
        aList = Split(aVar, ";")
      Else
        aList = New String[]
      Endif
    Endif
  Endif

  xFinal = New Variant[]
  For Each xTest In sList
    itmLst = modHMISReportOld.GetDBHMISettingList(modHMISRepOld.GetHMISLabItemHead(sType), xTest)
    If Not itmLst.Count Then
      xLst = modSettings.ShowHMISSettingFromFIle(modHMISRepOld.GetHMISLabItemHead(sType) & "/" & xTest)
      If xLst Then
        itmLst = Split(xLst, ";")
      Else
        itmLst = New String[]
      Endif
    Endif

    xabn = 0
    xtot = 0
    For Each sTest In itmLst
      res1 = modDatabase.$syConn.Exec("select count(fldid) as col from tblpatlabtest where fldtestid=&1 and fldtime_sample>=&2 and fldtime_sample<=&3 and fldsave_report=&4 and fldabnormal=&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), sTest, modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True, True)
      If res1.Available Then
        If res1!col Then
          xabn = xabn + res1!col
        Endif
      Endif

      res2 = modDatabase.$syConn.Exec("select count(fldid) as col from tblpatlabtest where fldtestid=&1 and fldtime_sample>=&2 and fldtime_sample<=&3 and fldsave_report=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), sTest, modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True)
      If res2.Available Then
        If res2!col Then
          xtot = xtot + res2!col
        Endif
      Endif
    Next

    xRowVal = New Collection
    xRowVal.Add(xTest, CStr(0))
    ' GridView1[Row, 0].Text = sTest
    xRowVal.Add(xabn, CStr(1))
    ' GridView1[Row, 1].Text = xabn
    xRowVal.Add(xtot, CStr(2))
    ' GridView1[Row, 2].Text = xtot
    xFinal.Add(xRowVal)

  Next

  If sType = "BACTERIOLOGY" Then
    For Each aSpec In modHMISRepOld.$HMISCultureSpecimens
      xabn = 0
      xtot = 0

      specList = modHMISReportOld.GetDBHMISettingList("Specimens", aSpec)
      If Not specList.Count Then
        spVar = modSettings.ShowHMISSettingFromFIle("Specimens" & "/" & aSpec)
        If spVar Then
          specList = Split(spVar, ";")
        Else
          specList = New String[]
        Endif
      Endif
      For Each sampType In specList
        For Each aTest In aList
          res1 = modDatabase.$syConn.Exec("select count(fldid) as col from tblpatlabtest where fldtestid=&1 and fldtime_sample>=&2 and fldtime_sample<=&3 and fldsave_report=&4 and fldabnormal=&5 and fldsampletype=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), aTest, modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True, True, sampType)
          If res1.Available Then
            If res1!col Then
              xabn = xabn + res1!col
            Endif
          Endif
          res2 = modDatabase.$syConn.Exec("select count(fldid) as col from tblpatlabtest where fldtestid=&1 and fldtime_sample>=&2 and fldtime_sample<=&3 and fldsave_report=&4 and fldsampletype=&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), aTest, modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True, sampType)
          If res2.Available Then
            If res2!col Then
              xtot = xtot + res2!col
            Endif
          Endif
        Next
      Next

      xRowVal = New Collection
      xRowVal.Add("Culture (" & aSpec & ")", CStr(0))
      ' GridView1[Row, 0].Text = "Culture (" & aSpec & ")"
      xRowVal.Add(xabn, CStr(1))
      ' GridView1[Row, 1].Text = xabn
      xRowVal.Add(xtot, CStr(2))
      ' GridView1[Row, 2].Text = xtot
      xFinal.Add(xRowVal)

      Row = Row + 1
    Next
  Endif

  Return xFinal

End

''-------------------- Delivery Type -------------------------
Private Function GetDeliveryTypeEnc(encid As String, sLocaType As String, sLocation As String) As String

  Dim res As Result
  Dim xval As String

  res = modDatabase.$syConn.Exec("select flddeltype from tblconfinement where fldencounterval=&1" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), encid)
  If res.Available Then
    res.MoveFirst
    If res!flddeltype Then
      xval = res!flddeltype
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif
  Return xval

End

Public Function SubDeliveryTypeReport(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xlist1 As String
  Dim xlist2 As String
  Dim xlist4 As String
  Dim xlist3 As String

  Dim xsponlist As String[]
  Dim xinstlist As String[]
  Dim xcesrlist As String[]
  Dim aVacumList As String[]
  Dim aForcepList As String[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result

  Dim aaxdeltype As String
  Dim bbxdeltype As String
  Dim ccxdeltype As String

  Dim aaxsponval As Integer
  Dim aaxinstval As Integer
  Dim aaxcessval As Integer

  Dim bbxsponval As Integer
  Dim bbxinstval As Integer
  Dim bbxcessval As Integer

  Dim ccxsponval As Integer
  Dim ccxinstval As Integer
  Dim ccxcessval As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xsponlist = modHMISReportOld.GetDBHMISettingList("DeliveryTypes", "Spontaneous")
  If Not xsponlist.Count Then
    xlist1 = modSettings.ShowHMISSettingFromFIle("DeliveryTypes/Spontaneous")
    If xlist1 Then
      xsponlist = Split(xlist1, ";")
    Else
      xsponlist = New String[]
    Endif
  Endif

  aVacumList = modHMISReportOld.GetDBHMISettingList("DeliveryTypes", "Vacuum")
  If Not aVacumList.Count Then
    xlist2 = modSettings.ShowHMISSettingFromFIle("DeliveryTypes/Vacuum")
    If xlist2 Then
      aVacumList = Split(xlist2, ";")
    Endif
  Endif

  aForcepList = modHMISReportOld.GetDBHMISettingList("DeliveryTypes", "Forceps")
  If Not aForcepList.Count Then
    xlist4 = modSettings.ShowHMISSettingFromFIle("DeliveryTypes/Forceps")
    If xlist4 Then
      aForcepList = Split(xlist4, ";")
    Endif
  Endif

  xinstlist = New String[]
  xinstlist.Insert(aVacumList)
  xinstlist.Insert(aForcepList)

  xcesrlist = modHMISReportOld.GetDBHMISettingList("DeliveryTypes", "Caeserian")
  If Not xcesrlist.Count Then
    xlist3 = modSettings.ShowHMISSettingFromFIle("DeliveryTypes/Caeserian")
    If xlist3 Then
      xcesrlist = Split(xlist3, ";")
    Else
      xcesrlist = New String[]
    Endif
  Endif

  xFinal = New Variant[]
  ' GridView1[0, 0].Text = "Spontaneous"
  ' GridView1[1, 0].Text = "Vacuum/Forcep"
  ' GridView1[2, 0].Text = "Surgery"

  aaxsponval = 0
  aaxinstval = 0
  aaxcessval = 0
  ' res1 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblexamgeneral where fldinput=&3 and fldtype=&4 and flditem=&5 and fldreportquali=&6)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Obstetrics", "Qualitative", "Presentation", "Cephalic")
  res1 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldpresent=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Cephalic")
  If res1.Available Then
    For Each res1
      aaxdeltype = GetDeliveryTypeEnc(res1!col, sLocaType, sLocation)
      If aaxdeltype Then
        If xsponlist.Exist(aaxdeltype) = True Then
          aaxsponval = aaxsponval + 1
        Endif
        If xinstlist.Exist(aaxdeltype) = True Then
          aaxinstval = aaxinstval + 1
        Endif
        If xcesrlist.Exist(aaxdeltype) = True Then
          aaxcessval = aaxcessval + 1
        Endif
      Endif
    Next
  Endif
  ' GridView1[0, 1].Text = xsponval
  ' GridView1[1, 1].Text = xinstval
  ' GridView1[2, 1].Text = xcessval

  bbxsponval = 0
  bbxinstval = 0
  bbxcessval = 0
  ' res2 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblexamgeneral where fldinput=&3 and fldtype=&4 and flditem=&5 and fldreportquali=&6)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Obstetrics", "Qualitative", "Presentation", "Shoulder")
  res2 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldpresent=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Shoulder")
  If res2.Available Then
    For Each res2
      bbxdeltype = GetDeliveryTypeEnc(res2!col, sLocaType, sLocation)
      If bbxdeltype Then
        If xsponlist.Exist(bbxdeltype) = True Then
          bbxsponval = bbxsponval + 1
        Endif
        If xinstlist.Exist(bbxdeltype) = True Then
          bbxinstval = bbxinstval + 1
        Endif
        If xcesrlist.Exist(bbxdeltype) = True Then
          bbxcessval = bbxcessval + 1
        Endif
      Endif
    Next
  Endif
  ' GridView1[0, 2].Text = xsponval
  ' GridView1[1, 2].Text = xinstval
  ' GridView1[2, 2].Text = xcessval

  ccxsponval = 0
  ccxinstval = 0
  ccxcessval = 0
  ' res3 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblexamgeneral where fldinput=&3 and fldtype=&4 and flditem=&5 and fldreportquali=&6)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Obstetrics", "Qualitative", "Presentation", "Breech")
  res3 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldpresent=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Breech")
  If res3.Available Then
    For Each res3
      ccxdeltype = GetDeliveryTypeEnc(res3!col, sLocaType, sLocation)
      If ccxdeltype Then
        If xsponlist.Exist(ccxdeltype) = True Then
          ccxsponval = ccxsponval + 1
        Endif
        If xinstlist.Exist(ccxdeltype) = True Then
          ccxinstval = ccxinstval + 1
        Endif
        If xcesrlist.Exist(ccxdeltype) = True Then
          ccxcessval = ccxcessval + 1
        Endif
      Endif
    Next
  Endif
  ' GridView1[0, 3].Text = xsponval
  ' GridView1[1, 3].Text = xinstval
  ' GridView1[2, 3].Text = xcessval

  xRowVal = New Collection
  xRowVal.Add("Spontaneous", CStr(0))
  xRowVal.Add(aaxsponval, CStr(1))
  xRowVal.Add(bbxsponval, CStr(2))
  xRowVal.Add(ccxsponval, CStr(3))
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Vacuum/Forcep", CStr(0))
  xRowVal.Add(aaxinstval, CStr(1))
  xRowVal.Add(bbxinstval, CStr(2))
  xRowVal.Add(ccxinstval, CStr(3))
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Surgery", CStr(0))
  xRowVal.Add(aaxcessval, CStr(1))
  xRowVal.Add(bbxcessval, CStr(2))
  xRowVal.Add(ccxcessval, CStr(3))
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubMaternalIncentiveCount(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim aTypeList As String[] = ["ANC Incentive", "Transport Incentive"]
  Dim xtype As String
  Dim res1 As Result
  Dim res2 As Result
  Dim xtot As Integer
  Dim xgot As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  For Each xtype In aTypeList
    xRowVal = New Collection
    xRowVal.Add(xtype, CStr(0))

    xtot = 0
    res1 = modDatabase.$syConn.Exec("select count(distinct(fldpatientval)) as col from tblencounter where fldencounterval in(select fldencounterval from tblconfinement where flddeltime>=&1 and flddeltime<=&2)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
    If res1.Available And If res1["col"] Then
      xtot = res1["col"]
    Endif
    xRowVal.Add(xtot, CStr(1))

    xgot = 0
    res2 = modDatabase.$syConn.Exec("select count(distinct(fldencounterval)) as col from tblpatientexam where fldhead=&1 and fldmethod=&2 and fldinput like &3 and fldtime>=&4 and fldtime<=&5 and fldencounterval in(select fldencounterval from tblconfinement)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), xtype, "HMIS 3.61", "PNC%", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
    If res2.Available And If res2["col"] Then
      xgot = res2["col"]
    Endif
    xRowVal.Add(xgot, CStr(2))

    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

Public Function SubMaternalDeathCount(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim respre As Result
  Dim reson As Result
  Dim respost As Result
  Dim xprecnt As Integer
  Dim xoncnt As Integer
  Dim xpostcnt As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xRowVal = New Collection
  xRowVal.Add("Number", CStr(0))

  xprecnt = 0
  respre = modDatabase.$syConn.Exec("select count(distinct(fldencounterval)) as col from tblpatientexam where fldhead=&1 and fldmethod=&2 and fldinput like &3 and fldtime>=&4 and fldtime<=&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), "Maternal Death Date", "HMIS 3.61", "ANC%", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
  If respre.Available And If respre["col"] Then
    xprecnt = respre["col"]
  Endif
  xRowVal.Add(xprecnt, CStr(1))

  xoncnt = 0
  reson = modDatabase.$syConn.Exec("select count(distinct(fldencounterval)) as col from tblpatientexam where fldhead=&1 and fldmethod=&2 and fldinput=&3 and fldencounterval in(select fldencounterval from tblconfinement where flddeltime>=&4 and flddeltime<=&5)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), "Maternal Death Date", "HMIS 3.61", "On Delivery", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
  If reson.Available And If reson["col"] Then
    xoncnt = reson["col"]
  Endif
  xRowVal.Add(xoncnt, CStr(2))

  xpostcnt = 0
  respost = modDatabase.$syConn.Exec("select count(distinct(fldencounterval)) as col from tblpatientexam where fldhead=&1 and fldmethod=&2 and fldinput like &3 and fldtime>=&4 and fldtime<=&5 and fldencounterval in(select fldencounterval from tblconfinement)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), "Maternal Death Date", "HMIS 3.61", "PNC%", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
  If respost.Available And If respre["col"] Then
    xpostcnt = respost["col"]
  Endif
  xRowVal.Add(xpostcnt, CStr(3))

  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubTransfusionCount(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim rtranpt As Result
  Dim xtranpt As Integer
  Dim rtrnpn As Result
  Dim xtranpn As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xRowVal = New Collection
  xRowVal.Add("Female", CStr(0))
  xtranpt = 0
  rtranpt = modDatabase.$syConn.Exec("select count(distinct(fldpatientval)) as col from tblencounter where fldencounterval in(select fldencounterval from tblpatientexam where fldhead=&1 and fldmethod=&2 and fldtime>=&3 and fldtime<=&4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), "Transfusion Date", "HMIS 3.61", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
  If rtranpt.Available And If rtranpt["col"] Then
    xtranpt = rtranpt["col"]
  Endif
  xRowVal.Add(xtranpt, CStr(1))
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Pint", CStr(0))
  xtranpn = 0
  rtrnpn = modDatabase.$syConn.Exec("select SUM(fldrepquanti) as col from tblpatientexam where fldhead=&1 and fldmethod=&2 and fldtime>=&3 and fldtime<=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), "Unit of Blood", "HMIS 3.61", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
  If rtrnpn.Available And If rtrnpn["col"] Then
    xtranpn = rtrnpn["col"]
  Endif
  xRowVal.Add(xtranpn, CStr(1))
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubPNCCheckreportAge(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim itmLst As String[]
  Dim xLst As String
  Dim xitem As String
  Dim xCommList As String[] = ["PNC: 1st Visit (in 24 Hours)"]
  Dim xcomment As String
  Dim xstr As String
  Dim xdatepre As Date

  Dim res1 As Result
  Dim res2 As Result
  Dim aa As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  itmLst = modHMISReportOld.GetDBHMISettingList("ObstetricVisits", "PNC")
  If Not itmLst.Count Then
    xLst = modSettings.ShowHMISSettingFromFIle("ObstetricVisits/" & "PNC")
    If xLst Then
      itmLst = Split(xLst, ";")
    Else
      itmLst = New String[]
    Endif
  Endif
  xstr = modMedReports.GetAgeStringByTable("tblopvisit", modDatabase.$syConn)
  xdatepre = DateAdd(xdtfir, gb.Month, -9)

  xFinal = New Variant[]
  For Each xcomment In xCommList
    xRowVal = New Collection
    xRowVal.Add(xcomment, CStr(0))

    aa = 0
    For Each xitem In itmLst
      res1 = modDatabase.$syConn.Exec("select COUNT(distinct(fldpatientval)) as xcnt from tblencounter where fldencounterval in(select fldencounterval from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname=&3 and fldcomment=&4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xitem, xcomment)
      If res1.Available And If res1["xcnt"] Then
        aa = aa + res1["xcnt"]
      Endif
    Next
    xRowVal.Add(aa, CStr(1))
    xFinal.Add(xRowVal)

  Next

  xRowVal = New Collection
  xRowVal.Add("Three check ups", CStr(0))
  aa = 0
  res2 = modDatabase.$syConn.Exec("select COUNT(distinct(fldpatientval)) as xcnt from tblencounter where fldencounterval in(select fldencounterval from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname like &3 GROUP BY fldencounterval HAVING COUNT(fldencounterval)>=&4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "PNC%", 3)
  If res2.Available And If res2["xcnt"] Then
    aa = aa + res2["xcnt"]
  Endif
  xRowVal.Add(aa, CStr(1))
  xFinal.Add(xRowVal)

  Return xFinal

End

''------------------------ Obs Complications ----------------------
Public Function SubObstetricComplications(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xList As String[]
  Dim xparam As String
  Dim xname As String
  Dim xcode As String

  Dim obslst As String[]
  Dim obscompl As String
  Dim xobs As String
  Dim res As Result
  Dim aa As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xList = modHMISRepOld.GetHMISObsComplicationList()
  For Each xparam In xList
    xname = Split(xparam, ";")[0]
    xcode = Split(xparam, ";")[1]

    xRowVal = New Collection
    xRowVal.Add(xname, CStr(0))
    xRowVal.Add(xcode, CStr(1))

    obslst = modHMISReportOld.GetDBHMISettingList("ObsComplications", xname)
    If Not obslst.Count Then
      obscompl = modSettings.ShowHMISSettingFromFIle("ObsComplications/" & xname)
      If obscompl Then
        obslst = Split(obscompl, ";")
      Else
        obslst = New String[]
      Endif
    Endif

    aa = 0
    For Each xobs In obslst
      res = modDatabase.$syConn.Exec("select COUNT(distinct(fldpatientval)) as xcnt from tblencounter where fldencounterval in(select fldencounterval from tblpatientexam where fldtime>=&1 and fldtime<=&2 and fldhead=&3)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xobs)
      If res.Available And If res["xcnt"] Then
        aa = aa + res["xcnt"]
      Endif
    Next
    xRowVal.Add(aa, CStr(2))
    xFinal.Add(xRowVal)

  Next

  Return xFinal

End

''------------------- Still Birth -------------------
Public Function SubStillBirthsCount(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xStillType As String[] = ["Fresh Still Birth", "Macerated Still Birth"]
  Dim xstill As String
  Dim res As Result
  Dim aa As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  For Each xstill In xStillType
    aa = 0
    xRowVal = New Collection
    xRowVal.Add(xstill, CStr(0))

    res = modDatabase.$syConn.Exec("select COUNT(fldid) as xcnt from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelresult=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xstill)
    If res.Available And If res["xcnt"] Then
      aa = res["xcnt"]
    Endif
    xRowVal.Add(aa, CStr(1))
    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

''------------------- Delivery SPot -------------------------
Public Function SubDeliverySPotAssist(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res11 As Result
  Dim res12 As Result

  Dim aa As Integer
  Dim bb As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]

  aa = 0
  bb = 0
  xRowVal = New Collection
  xRowVal.Add("SBA", CStr(0))

  res11 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelassist=&3 and (flddelspot=&4 or flddelspot=&5)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "SBA", "This facility", "Other facility")
  If res11.Available And If res11["xcnt"] Then
    aa = res11["xcnt"]
  Endif
  xRowVal.Add(aa, CStr(1))

  res12 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelassist=&3 and flddelspot=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "SBA", "Home")
  If res12.Available And If res12["xcnt"] Then
    bb = res12["xcnt"]
  Endif
  xRowVal.Add(bb, CStr(2))
  xFinal.Add(xRowVal)

  aa = 0
  bb = 0
  xRowVal = New Collection
  xRowVal.Add("Non SBA", CStr(0))

  res11 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelassist<>&3 and (flddelspot=&4 or flddelspot=&5)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "SBA", "This facility", "Other facility")
  If res11.Available And If res11["xcnt"] Then
    aa = res11["xcnt"]
  Endif
  xRowVal.Add(aa, CStr(1))

  res12 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelassist<>&3 and flddelspot=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "SBA", "Home")
  If res12.Available And If res12["xcnt"] Then
    bb = res12["xcnt"]
  Endif
  xRowVal.Add(bb, CStr(2))
  xFinal.Add(xRowVal)

  Return xFinal

End

''------------------- ANC Visit ------------------------
Public Function SubANCVisitreportAge(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim itmLst As String[]
  Dim xLst As String
  Dim xitem As String
  Dim xCommList As String[] = ["ANC: 1st Visit", "ANC: 4th Month"]
  Dim xcomment As String
  Dim xstr As String
  Dim xdatepre As Date

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim res4 As Result

  Dim aa As Integer
  Dim bb As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  itmLst = modHMISReportOld.GetDBHMISettingList("ObstetricVisits", "ANC")
  If Not itmLst.Count Then
    xLst = modSettings.ShowHMISSettingFromFIle("ObstetricVisits/" & "ANC")
    If xLst Then
      itmLst = Split(xLst, ";")
    Else
      itmLst = New String[]
    Endif
  Endif
  xstr = modMedReports.GetAgeStringByTable("tblopvisit", modDatabase.$syConn)
  xdatepre = DateAdd(xdtfir, gb.Month, -9)

  xFinal = New Variant[]
  For Each xcomment In xCommList
    xRowVal = New Collection
    xRowVal.Add(xcomment, CStr(0))

    aa = 0
    bb = 0
    For Each xitem In itmLst
      res1 = modDatabase.$syConn.Exec("select COUNT(distinct(tblencounter.fldpatientval)) as xcnt from (tblopvisit inner join tblencounter on tblopvisit.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblopvisit.fldconsulttime>=&1 and tblopvisit.fldconsulttime<=&2 and tblopvisit.fldconsultname=&3 and tblopvisit.fldcomment=&4 and tblpatientinfo.fldptbirday like &5 and " & xstr & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xitem, xcomment, "%", 7300)
      If res1.Available And If res1["xcnt"] Then
        aa = aa + res1["xcnt"]
      Endif

      res2 = modDatabase.$syConn.Exec("select COUNT(distinct(tblencounter.fldpatientval)) as xcnt from (tblopvisit inner join tblencounter on tblopvisit.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblopvisit.fldconsulttime>=&1 and tblopvisit.fldconsulttime<=&2 and tblopvisit.fldconsultname=&3 and tblopvisit.fldcomment=&4 and tblpatientinfo.fldptbirday like &5 and " & xstr & ">=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xitem, xcomment, "%", 7300)
      If res2.Available And If res2["xcnt"] Then
        bb = bb + res2["xcnt"]
      Endif
    Next
    xRowVal.Add(aa, CStr(1))
    xRowVal.Add(bb, CStr(2))
    xFinal.Add(xRowVal)

  Next

  xRowVal = New Collection
  xRowVal.Add("Four check ups", CStr(0))
  aa = 0
  bb = 0

  res3 = modDatabase.$syConn.Exec("select COUNT(distinct(tblencounter.fldpatientval)) as xcnt from (tblopvisit inner join tblencounter on tblopvisit.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblopvisit.fldconsulttime>=&1 and tblopvisit.fldconsulttime<=&2 and tblopvisit.fldconsultname like &3 and tblpatientinfo.fldptbirday like &5 and " & xstr & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " GROUP BY tblopvisit.fldencounterval HAVING COUNT(tblopvisit.fldencounterval)>=&4", modDate.StartSqlDate(xdatepre), modDate.EndSqlDate(xdtlast), "ANC%", 4, "%", 7300)
  If res3.Available And If res3["xcnt"] Then
    aa = aa + res3["xcnt"]
  Endif

  res4 = modDatabase.$syConn.Exec("select COUNT(distinct(tblencounter.fldpatientval)) as xcnt from (tblopvisit inner join tblencounter on tblopvisit.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblopvisit.fldconsulttime>=&1 and tblopvisit.fldconsulttime<=&2 and tblopvisit.fldconsultname like &3 and tblpatientinfo.fldptbirday like &5 and " & xstr & ">=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " GROUP BY tblopvisit.fldencounterval HAVING COUNT(tblopvisit.fldencounterval)>=&4", modDate.StartSqlDate(xdatepre), modDate.EndSqlDate(xdtlast), "ANC%", 4, "%", 7300)
  If res4.Available And If res4["xcnt"] Then
    bb = bb + res4["xcnt"]
  Endif

  xRowVal.Add(aa, CStr(1))
  xRowVal.Add(bb, CStr(2))
  xFinal.Add(xRowVal)

  Return xFinal

End

''-------------------- Delivery QTY -------------------------------
Private Function GetEncCountDel(encid As String, sLocaType As String, sLocation As String) As Integer

  Dim res As Result
  Dim xval As Integer

  res = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as col from tblconfinement where fldencounterval=&1 and flddelresult=&2" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), encid, "Live Baby")
  If res.Available Then
    If res!col Then
      xval = res!col
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

Public Function SubGetLiveDeliveryBabyQTY(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim xcount As Integer

  Dim xsingle As Integer
  Dim xdouble As Integer
  Dim xmultiple As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xsingle = 0
  xdouble = 0
  xmultiple = 0
  res1 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelresult=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Live Baby")
  If res1.Available Then
    For Each res1
      xcount = GetEncCountDel(res1!col, sLocaType, sLocation)
      If xcount = 1 Then
        xsingle = xsingle + 1
      Else If xcount = 2 Then
        xdouble = xdouble + 1
      Else If xcount > 2 Then
        xmultiple = xmultiple + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Total Mothers", CStr(0))
  ' GridView1[0, 0].Text = "Total Mothers"
  xRowVal.Add(xsingle, CStr(1))
  ' GridView1[0, 1].Text = xsingle
  xRowVal.Add(xdouble, CStr(2))
  ' GridView1[0, 2].Text = xdouble
  xRowVal.Add(xmultiple, CStr(3))
  ' GridView1[0, 3].Text = xmultiple
  xFinal.Add(xRowVal)

  xsingle = 0
  xdouble = 0
  xmultiple = 0
  res2 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelresult=&3 and fldbabypatno in(select fldpatientval from tblpatientinfo where fldptsex=&4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Live Baby", "Female")
  If res2.Available Then
    For Each res2
      xcount = GetEncCountDel(res2!col, sLocaType, sLocation)
      If xcount = 1 Then
        xsingle = xsingle + 1
      Else If xcount = 2 Then
        xdouble = xdouble + 1
      Else If xcount > 2 Then
        xmultiple = xmultiple + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Live Baby(Female)", CStr(0))
  ' GridView1[1, 0].Text = "Live Baby(Female)"
  xRowVal.Add(xsingle, CStr(1))
  ' GridView1[1, 1].Text = xsingle
  xRowVal.Add(xdouble, CStr(2))
  ' GridView1[1, 2].Text = xdouble
  xRowVal.Add(xmultiple, CStr(3))
  ' GridView1[1, 3].Text = xmultiple
  xFinal.Add(xRowVal)

  xsingle = 0
  xdouble = 0
  xmultiple = 0
  res3 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelresult=&3 and fldbabypatno in(select fldpatientval from tblpatientinfo where fldptsex=&4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Live Baby", "Male")
  If res3.Available Then
    For Each res3
      xcount = GetEncCountDel(res3!col, sLocaType, sLocation)
      If xcount = 1 Then
        xsingle = xsingle + 1
      Else If xcount = 2 Then
        xdouble = xdouble + 1
      Else If xcount > 2 Then
        xmultiple = xmultiple + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Live Baby(Male)", CStr(0))
  ' GridView1[2, 0].Text = "Live Baby(Male)"
  xRowVal.Add(xsingle, CStr(1))
  ' GridView1[2, 1].Text = xsingle
  xRowVal.Add(xdouble, CStr(2))
  ' GridView1[2, 2].Text = xdouble
  xRowVal.Add(xmultiple, CStr(3))
  ' GridView1[2, 3].Text = xmultiple
  xFinal.Add(xRowVal)

  Return xFinal

End

''------------------- Birth Weight ------------------------
Public Function SubBirthWeightreportCompli(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result

  Dim xtotal As Integer
  Dim xrespd As Integer
  Dim xmalfrm As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]

  xtotal = 0
  xrespd = 0
  xmalfrm = 0
  res3 = modDatabase.$syConn.Exec("select fldencounterval,fldcomplication from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelwt>=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), 2500)
  If res3.Available Then
    xtotal = res3.Count
    For Each res3
      If res3!fldcomplication And If res3!fldcomplication = "Asphyxia" Then
        xrespd = xrespd + 1
      Else If res3!fldcomplication And If res3!fldcomplication = "Malformations" Then
        xmalfrm = xmalfrm + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Normal(>=2.5Kg)", CStr(0))
  ' GridView1[2, 0].Text = "Normal(>=2.5Kg)"
  xRowVal.Add(xtotal, CStr(1))
  ' GridView1[2, 1].Text = xtotal
  xRowVal.Add(xrespd, CStr(2))
  ' GridView1[2, 2].Text = xrespd
  xRowVal.Add(xmalfrm, CStr(3))
  ' GridView1[2, 3].Text = xmalfrm
  xFinal.Add(xRowVal)

  xtotal = 0
  xrespd = 0
  xmalfrm = 0
  res2 = modDatabase.$syConn.Exec("select fldencounterval,fldcomplication from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelwt>=&3 and flddelwt<&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), 1500, 2500)
  If res2.Available Then
    xtotal = res2.Count
    For Each res2
      If res2!fldcomplication And If res2!fldcomplication = "Asphyxia" Then
        xrespd = xrespd + 1
      Else If res2!fldcomplication And If res2!fldcomplication = "Malformations" Then
        xmalfrm = xmalfrm + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Low(1.5-2.5Kg)", CStr(0))
  ' GridView1[1, 0].Text = "Low(1.5-2.5Kg)"
  xRowVal.Add(xtotal, CStr(1))
  ' GridView1[1, 1].Text = xtotal
  xRowVal.Add(xrespd, CStr(2))
  ' GridView1[1, 2].Text = xrespd
  xRowVal.Add(xmalfrm, CStr(3))
  ' GridView1[1, 3].Text = xmalfrm
  xFinal.Add(xRowVal)

  xtotal = 0
  xrespd = 0
  xmalfrm = 0
  res1 = modDatabase.$syConn.Exec("select fldencounterval,fldcomplication from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelwt<&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), 1500)
  If res1.Available Then
    xtotal = res1.Count
    For Each res1
      If res1!fldcomplication And If res1!fldcomplication = "Asphyxia" Then
        xrespd = xrespd + 1
      Else If res1!fldcomplication And If res1!fldcomplication = "Malformations" Then
        xmalfrm = xmalfrm + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Very Low(<1.5Kg)", CStr(0))
  ' GridView1[0, 0].Text = "Very Low(<1.5Kg)"
  xRowVal.Add(xtotal, CStr(1))
  ' GridView1[0, 1].Text = xtotal
  xRowVal.Add(xrespd, CStr(2))
  ' GridView1[0, 2].Text = xrespd
  xRowVal.Add(xmalfrm, CStr(3))
  ' GridView1[0, 3].Text = xmalfrm
  xFinal.Add(xRowVal)

  Return xFinal

End

''-------------------- Gravida/Maternal Age --------------------
Private Function GetEncounterGestWeek(encid As String, sLocaType As String, sLocation As String) As Integer

  Dim res As Result
  Dim xval As Integer

  res = modDatabase.$syConn.Exec("select fldreportquanti from tblexamgeneral where fldencounterval=&1 and fldinput=&2 and fldtype=&3 and flditem=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), encid, "Obstetrics", "Quantitative", "Gestation")
  If res.Available Then
    If res!fldreportquanti Then
      xval = res!fldreportquanti
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

Public Function SubGetGravidaReport(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result

  Dim agefir As Integer
  Dim agesec As Integer
  Dim agethrd As Integer
  Dim agefour As Integer
  Dim xval As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  agefir = 0
  agesec = 0
  agethrd = 0
  agefour = 0
  res1 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblexamgeneral where fldinput=&3 and fldtype=&4 and flditem=&5 and fldreportquanti=&6)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Obstetrics", "Quantitative", "Gravida", 1)
  If res1.Available Then
    For Each res1
      xval = GetEncounterGestWeek(res1!col, sLocaType, sLocation)
      If xval >= 148 And If xval < 196 Then
        agefir = agefir + 1
      Else If xval >= 196 And If xval < 259 Then
        agesec = agesec + 1
      Else If xval >= 259 And If xval < 294 Then
        agethrd = agethrd + 1
      Else If xval >= 294 Then
        agefour = agefour + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Primi(G=1)", CStr(0))
  ' GridView1[0, 0].Text = "Primi(G=1)"
  xRowVal.Add(agefir, CStr(1))
  ' GridView1[0, 1].Text = agefir
  xRowVal.Add(agesec, CStr(2))
  ' GridView1[0, 2].Text = agesec
  xRowVal.Add(agethrd, CStr(3))
  ' GridView1[0, 3].Text = agethrd
  xRowVal.Add(agefour, CStr(4))
  ' GridView1[0, 4].Text = agefour
  xFinal.Add(xRowVal)

  agefir = 0
  agesec = 0
  agethrd = 0
  agefour = 0
  res2 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblexamgeneral where fldinput=&3 and fldtype=&4 and flditem=&5 and fldreportquanti>=&6 and fldreportquanti<&7)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Obstetrics", "Quantitative", "Gravida", 2, 5)
  If res2.Available Then
    For Each res2
      xval = GetEncounterGestWeek(res2!col, sLocaType, sLocation)
      If xval >= 148 And If xval < 196 Then
        agefir = agefir + 1
      Else If xval >= 196 And If xval < 259 Then
        agesec = agesec + 1
      Else If xval >= 259 And If xval < 294 Then
        agethrd = agethrd + 1
      Else If xval >= 294 Then
        agefour = agefour + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Multi(G=1-4)", CStr(0))
  ' GridView1[1, 0].Text = "Multi(G=1-4)"
  xRowVal.Add(agefir, CStr(1))
  ' GridView1[1, 1].Text = agefir
  xRowVal.Add(agesec, CStr(2))
  ' GridView1[1, 2].Text = agesec
  xRowVal.Add(agethrd, CStr(3))
  ' GridView1[1, 3].Text = agethrd
  xRowVal.Add(agefour, CStr(4))
  ' GridView1[1, 4].Text = agefour
  xFinal.Add(xRowVal)

  agefir = 0
  agesec = 0
  agethrd = 0
  agefour = 0
  res3 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblexamgeneral where fldinput=&3 and fldtype=&4 and flditem=&5 and fldreportquanti>=&6)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Obstetrics", "Quantitative", "Gravida", 5)
  If res3.Available Then
    For Each res3
      xval = GetEncounterGestWeek(res3!col, sLocaType, sLocation)
      If xval >= 148 And If xval < 196 Then
        agefir = agefir + 1
      Else If xval >= 196 And If xval < 259 Then
        agesec = agesec + 1
      Else If xval >= 259 And If xval < 294 Then
        agethrd = agethrd + 1
      Else If xval >= 294 Then
        agefour = agefour + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Grand Multi(G>=5)", CStr(0))
  ' GridView1[2, 0].Text = "Grand Multi(G>=5)"
  xRowVal.Add(agefir, CStr(1))
  ' GridView1[2, 1].Text = agefir
  xRowVal.Add(agesec, CStr(2))
  ' GridView1[2, 2].Text = agesec
  xRowVal.Add(agethrd, CStr(3))
  ' GridView1[2, 3].Text = agethrd
  xRowVal.Add(agefour, CStr(4))
  ' GridView1[2, 4].Text = agefour
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubFillMaternalAgeData(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result

  Dim agefir As Integer
  Dim agesec As Integer
  Dim agethrd As Integer
  Dim agefour As Integer
  Dim xval As Integer
  Dim xstr As String

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xstr = modMedReports.GetAgeStringByTable("tblconfinement", modDatabase.$syConn)
  xFinal = New Variant[]
  agefir = 0
  agesec = 0
  agethrd = 0
  agefour = 0
  res1 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptbirday like &3 and " & xstr & "<&4))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "%", 7300)
  If res1.Available Then
    For Each res1
      xval = GetEncounterGestWeek(res1!col, sLocaType, sLocation)
      If xval >= 148 And If xval < 196 Then
        agefir = agefir + 1
      Else If xval >= 196 And If xval < 259 Then
        agesec = agesec + 1
      Else If xval >= 259 And If xval < 294 Then
        agethrd = agethrd + 1
      Else If xval >= 294 Then
        agefour = agefour + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("<20 Yrs", CStr(0))
  ' GridView1[0, 0].Text = "<20 Yrs"
  xRowVal.Add(agefir, CStr(1))
  ' GridView1[0, 1].Text = agefir
  xRowVal.Add(agesec, CStr(2))
  ' GridView1[0, 2].Text = agesec
  xRowVal.Add(agethrd, CStr(3))
  ' GridView1[0, 3].Text = agethrd
  xRowVal.Add(agefour, CStr(4))
  ' GridView1[0, 4].Text = agefour
  xFinal.Add(xRowVal)

  agefir = 0
  agesec = 0
  agethrd = 0
  agefour = 0
  res2 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptbirday like &3 and " & xstr & ">=&4 and " & xstr & "<&5))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "%", 7300, 12775)
  If res2.Available Then
    For Each res2
      xval = GetEncounterGestWeek(res2!col, sLocaType, sLocation)
      If xval >= 148 And If xval < 196 Then
        agefir = agefir + 1
      Else If xval >= 196 And If xval < 259 Then
        agesec = agesec + 1
      Else If xval >= 259 And If xval < 294 Then
        agethrd = agethrd + 1
      Else If xval >= 294 Then
        agefour = agefour + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("20-34 Yrs", CStr(0))
  ' GridView1[1, 0].Text = "20-34 Yrs"
  xRowVal.Add(agefir, CStr(1))
  ' GridView1[1, 1].Text = agefir
  xRowVal.Add(agesec, CStr(2))
  ' GridView1[1, 2].Text = agesec
  xRowVal.Add(agethrd, CStr(3))
  ' GridView1[1, 3].Text = agethrd
  xRowVal.Add(agefour, CStr(4))
  ' GridView1[1, 4].Text = agefour
  xFinal.Add(xRowVal)

  agefir = 0
  agesec = 0
  agethrd = 0
  agefour = 0
  res3 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptbirday like &3 and " & xstr & ">=&4))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "%", 12775)
  If res3.Available Then
    For Each res3
      xval = GetEncounterGestWeek(res3!col, sLocaType, sLocation)
      If xval >= 148 And If xval < 196 Then
        agefir = agefir + 1
      Else If xval >= 196 And If xval < 259 Then
        agesec = agesec + 1
      Else If xval >= 259 And If xval < 294 Then
        agethrd = agethrd + 1
      Else If xval >= 294 Then
        agefour = agefour + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add(">=35 Yrs", CStr(0))
  ' GridView1[2, 0].Text = ">=35 Yrs"
  xRowVal.Add(agefir, CStr(1))
  ' GridView1[2, 1].Text = agefir
  xRowVal.Add(agesec, CStr(2))
  ' GridView1[2, 2].Text = agesec
  xRowVal.Add(agethrd, CStr(3))
  ' GridView1[2, 3].Text = agethrd
  xRowVal.Add(agefour, CStr(4))
  ' GridView1[2, 4].Text = agefour
  xFinal.Add(xRowVal)

  Return xFinal

End

''-------------------- outpatient morbidity --------------
Public Function SubGetNewOPDMorbidity(sType As String, xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim resx As Result
  Dim sexList As String[]
  Dim sex As String

  Dim res As Result
  Dim k As Integer
  Dim xcnt As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  If sType = "Obstetrics Complications" Then
    sexList = ["Female"]
  Else
    sexList = ["Female", "Male"]
  Endif

  xFinal = New Variant[]
  resx = modDatabase.$syConn.Exec("select fldcodeid,flditemname from tbldiagnogroup where fldgroupname=&1", sType)
  If resx.Available Then
    For Each resx
      xRowVal = New Collection
      If sType = "Obstetrics Complications" Then
        xRowVal.Add(resx["flditemname"], CStr(0))
        xRowVal.Add(resx["fldcodeid"], CStr(1))
      Else
        xRowVal.Add(resx["fldcodeid"], CStr(0))
        xRowVal.Add(resx["flditemname"], CStr(1))
      Endif

      k = 2
      For Each sex In sexList
        xcnt = 0
        res = modDatabase.$syConn.Exec("select COUNT(fldid) as col from tblpatfindings where fldtime>=&1 and fldtime<=&2 and fldtype=&3 and fldcodeid like &4 and fldsave=&5 and fldencounterval in(select fldencounterval from tblencounter where flddod IS NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", resx["fldcodeid"], True, sex)  ''  and fldvisit=&7                     ''
        If res!col Then
          xcnt = xcnt + res!col
        Endif
        xRowVal.Add(xcnt, CStr(k))
        ' GridView1[Row, k].Text = xcnt
        k = k + 1
      Next

      xFinal.Add(xRowVal)
    Next
  Endif

  Return xFinal

End

''--------------------- IP morbidity --------------------------
Private Function GetHMISAgeValue(agegroup As String) As String

  Dim xx As String

  If agegroup = "<=28 days" Then
    xx = "0;28"
  Else If agegroup = "29 days-1 year" Then
    xx = "29;364"
  Else If agegroup = "1-4 years" Then
    xx = "365;1824"
  Else If agegroup = "5-14 years" Then
    xx = "1825;5474"
  Else If agegroup = "15-19 years" Then
    xx = "5475;7299"
  Else If agegroup = "20-29 years" Then
    xx = "7300;10949"
  Else If agegroup = "30-39 years" Then
    xx = "10950;14599"
  Else If agegroup = "40-49 years" Then
    xx = "14600;18249"
  Else If agegroup = "50-59 years" Then
    xx = "18250;21899"
  Else If agegroup = ">= 60 years" Then
    xx = "21900;730000"
  Else
    xx = modMedReports.GetAgeValuefromgroup(agegroup)
  Endif
  Return xx

End

Public Function SubGetAgeWiseMorbidity(sType As String, ageList As String[], itmList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim aitem As String
  Dim asx As String[]
  Dim xage As String
  Dim agelim As String[]

  Dim xdtstr As String
  Dim res As Result
  Dim k As Integer
  Dim xcnt As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xdtstr = modMedReports.GetAgeStringByTable("tblpatfindings", modDatabase.$syConn)
  xFinal = New Variant[]
  For Each aitem In itmList
    xRowVal = New Collection
    xRowVal.Add(aitem, CStr(0))
    ' GridView1[Row, 0].Text = aitem
    xRowVal.Add(modPathology.GetDiagnoCodeValue(aitem), CStr(1))
    ' GridView1[Row, 1].Text = modPathology.GetDiagnoCodeValue(aitem)

    k = 2
    For Each xage In ageList
      asx = Split(xage, ":")   ''asx[1] is gender
      If asx[0] = "Death" Then
        xRowVal.Add(0, CStr(k))
        ' GridView1[Row, k].Text = 0
      Else
        agelim = Split(GetHMISAgeValue(asx[0]), ";")   ''agelim[0] is min age agelim[1] is max age
        xcnt = 0
        If aitem = "Z32" Then
          If sType = "InPatient" Then
            res = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblpatfindings.fldtime>=&1 and tblpatfindings.fldtime<=&2 and tblpatfindings.fldtype=&3 and tblpatfindings.fldcodeid like &4 and tblpatientinfo.fldptsex like &5 and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8 and tblencounter.flddod IS NOT NULL" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", "Obstetrics", asx[1], CInt(agelim[0]), CInt(agelim[1]), True)  ''                      ''
          Else If sType = "General" Then
            res = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblpatfindings.fldtime>=&1 and tblpatfindings.fldtime<=&2 and tblpatfindings.fldtype=&3 and tblpatfindings.fldcodeid like &4 and tblpatientinfo.fldptsex like &5 and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", "Obstetrics", asx[1], CInt(agelim[0]), CInt(agelim[1]), True)  ''
          Endif
        Else If aitem = "R69" Then
          If sType = "InPatient" Then
            res = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblpatfindings.fldtime>=&1 and tblpatfindings.fldtime<=&2 and tblpatfindings.fldtype=&3 and tblpatfindings.fldcodeid like &4 and tblpatientinfo.fldptsex like &5 and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8 and tblencounter.flddod IS NOT NULL" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", "Other", asx[1], CInt(agelim[0]), CInt(agelim[1]), True)  ''                      ''
          Else If sType = "General" Then
            res = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblpatfindings.fldtime>=&1 and tblpatfindings.fldtime<=&2 and tblpatfindings.fldtype=&3 and tblpatfindings.fldcodeid like &4 and tblpatientinfo.fldptsex like &5 and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", "Other", asx[1], CInt(agelim[0]), CInt(agelim[1]), True)  ''
          Endif
        Else
          If sType = "InPatient" Then
            res = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblpatfindings.fldtime>=&1 and tblpatfindings.fldtime<=&2 and tblpatfindings.fldtype=&3 and tblpatfindings.fldcodeid like &4 and tblpatientinfo.fldptsex like &5 and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8 and tblencounter.flddod IS NOT NULL" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", aitem & "%", asx[1], CInt(agelim[0]), CInt(agelim[1]), True)  ''                      ''
          Else If sType = "General" Then
            res = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblpatfindings.fldtime>=&1 and tblpatfindings.fldtime<=&2 and tblpatfindings.fldtype=&3 and tblpatfindings.fldcodeid like &4 and tblpatientinfo.fldptsex like &5 and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", aitem & "%", asx[1], CInt(agelim[0]), CInt(agelim[1]), True)  ''
          Endif
        Endif
        If res!col Then
          xcnt = xcnt + res!col
        Endif
        xRowVal.Add(xcnt, CStr(k))
        ' GridView1[Row, k].Text = xcnt
      Endif
      k = k + 1
    Next

    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

''--------------------- inpatient outcomes
Private Function GetTotalPatOutcome(dt1 As Date, dt2 As Date, sLocaType As String, sLocation As String, sGender As String, sMinage As Integer, sMaxage As Integer, sStatus As String, Optional sComment As String, Optional sComment1 As String) As Integer

  Dim res As Result
  Dim xx As Integer
  Dim agestring As String

  xx = 0
  agestring = modMedReports.GetAgeStringByTable("tblpatientdate", modDatabase.$syConn)
  If sComment Then
    If sComment1 Then
      res = modDatabase.$syConn.Exec("select count(tblpatientdate.fldid) as cnt from (tblpatientdate inner join tblencounter on tblpatientdate.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblpatientdate.fldtime>=&1 and tblpatientdate.fldtime<=&2 and tblpatientdate.fldhead=&3 and (tblpatientdate.fldcomment=&4 or tblpatientdate.fldcomment=&5) and tblpatientinfo.fldptsex=&6 and " & agestring & ">=&7 and " & agestring & "<&8" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatientdate"), modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sStatus, sComment, sComment1, sGender, sMinage, sMaxage)
    Else
      res = modDatabase.$syConn.Exec("select count(tblpatientdate.fldid) as cnt from (tblpatientdate inner join tblencounter on tblpatientdate.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblpatientdate.fldtime>=&1 and tblpatientdate.fldtime<=&2 and tblpatientdate.fldhead=&3 and tblpatientdate.fldcomment=&4 and tblpatientinfo.fldptsex=&5 and " & agestring & ">=&6 and " & agestring & "<&7" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatientdate"), modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sStatus, sComment, sGender, sMinage, sMaxage)                                                   ''
    Endif
  Else
    res = modDatabase.$syConn.Exec("select count(tblpatientdate.fldid) as cnt from (tblpatientdate inner join tblencounter on tblpatientdate.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblpatientdate.fldtime>=&1 and tblpatientdate.fldtime<=&2 and tblpatientdate.fldhead=&3 and tblpatientinfo.fldptsex=&4 and " & agestring & ">=&5 and " & agestring & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatientdate"), modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sStatus, sGender, sMinage, sMaxage)
  Endif
  If res!cnt Then
    xx = xx + res!cnt
  Endif
  Return xx

End

Private Function GetTotalDeathOutcome(dt1 As Date, dt2 As Date, sLocaType As String, sLocation As String, sGender As String, sMinage As Integer, sMaxage As Integer, sMinDy As Integer, Optional sMaxDy As Integer) As Integer

  Dim res As Result
  Dim xx As Integer
  Dim agestring As String

  Dim xdtstr As String

  xdtstr = modDate.GetSQLDateDiffStr("tblpatientdate.fldtime", "tblencounter.fldregdate", modDatabase.$syConn)

  xx = 0
  agestring = modMedReports.GetAgeStringByTable("tblpatientdate", modDatabase.$syConn)
  If sMaxDy Then
    res = modDatabase.$syConn.Exec("select count(tblpatientdate.fldid) as cnt from (tblpatientdate inner join tblencounter on tblpatientdate.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblpatientdate.fldtime>=&1 and tblpatientdate.fldtime<=&2 and tblpatientdate.fldhead=&3 and tblpatientinfo.fldptsex=&4 and " & agestring & ">=&5 and " & agestring & "<&6 and " & xdtstr & ">=&7 and " & xdtstr & "<&8" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatientdate"), modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), "Death", sGender, sMinage, sMaxage, sMinDy, sMaxDy)
  Else
    res = modDatabase.$syConn.Exec("select count(tblpatientdate.fldid) as cnt from (tblpatientdate inner join tblencounter on tblpatientdate.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblpatientdate.fldtime>=&1 and tblpatientdate.fldtime<=&2 and tblpatientdate.fldhead=&3 and tblpatientinfo.fldptsex=&4 and " & agestring & ">=&5 and " & agestring & "<&6 and " & xdtstr & ">=&7" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatientdate"), modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), "Death", sGender, sMinage, sMaxage, sMinDy)
  Endif
  If res!cnt Then
    xx = xx + res!cnt
  Endif
  Return xx

End

Public Function SubShowInpatientsOutcome(ageList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xval As String
  Dim asx As String[]

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  For Each xval In ageList
    xRowVal = New Collection
    asx = Split(xval, ";")
    xRowVal.Add(asx[0], CStr(0))
    ' GridView1[Row, 0].Text = asx[0]

    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Female", CInt(asx[1]), CInt(asx[2]), "Discharged", "Recovered", "Improved"), CStr(1))
    ' GridView1[Row, 1].Text = GetTotalPatOutcome(xdtfir, xdtlast, "Female", CInt(asx[1]), CInt(asx[2]), "Discharged", "Recovered", "Improved")
    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Male", CInt(asx[1]), CInt(asx[2]), "Discharged", "Recovered", "Improved"), CStr(2))
    ' GridView1[Row, 2].Text = GetTotalPatOutcome(xdtfir, xdtlast, "Male", CInt(asx[1]), CInt(asx[2]), "Discharged", "Recovered", "Improved")

    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Female", CInt(asx[1]), CInt(asx[2]), "Discharged", "Unchanged", "Worse"), CStr(3))
    ' GridView1[Row, 3].Text = GetTotalPatOutcome(xdtfir, xdtlast, "Female", CInt(asx[1]), CInt(asx[2]), "Discharged", "Unchanged", "Worse")
    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Male", CInt(asx[1]), CInt(asx[2]), "Discharged", "Unchanged", "Worse"), CStr(4))
    ' GridView1[Row, 4].Text = GetTotalPatOutcome(xdtfir, xdtlast, "Male", CInt(asx[1]), CInt(asx[2]), "Discharged", "Unchanged", "Worse")

    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Female", CInt(asx[1]), CInt(asx[2]), "Refer"), CStr(5))
    ' GridView1[Row, 5].Text = GetTotalPatOutcome(xdtfir, xdtlast, "Female", CInt(asx[1]), CInt(asx[2]), "Refer")
    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Male", CInt(asx[1]), CInt(asx[2]), "Refer"), CStr(6))
    ' GridView1[Row, 6].Text = GetTotalPatOutcome(xdtfir, xdtlast, "Male", CInt(asx[1]), CInt(asx[2]), "Refer")

    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Female", CInt(asx[1]), CInt(asx[2]), "LAMA"), CStr(7))
    ' GridView1[Row, 7].Text = GetTotalPatOutcome(xdtfir, xdtlast, "Female", CInt(asx[1]), CInt(asx[2]), "LAMA")
    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Male", CInt(asx[1]), CInt(asx[2]), "LAMA"), CStr(8))
    ' GridView1[Row, 8].Text = GetTotalPatOutcome(xdtfir, xdtlast, "Male", CInt(asx[1]), CInt(asx[2]), "LAMA")

    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Female", CInt(asx[1]), CInt(asx[2]), "Absconder"), CStr(9))
    ' GridView1[Row, 9].Text = GetTotalPatOutcome(xdtfir, xdtlast, "Female", CInt(asx[1]), CInt(asx[2]), "Absconder")
    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Male", CInt(asx[1]), CInt(asx[2]), "Absconder"), CStr(10))
    ' GridView1[Row, 10].Text = GetTotalPatOutcome(xdtfir, xdtlast, "Male", CInt(asx[1]), CInt(asx[2]), "Absconder")

    xRowVal.Add(GetTotalDeathOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Female", CInt(asx[1]), CInt(asx[2]), 0, 2), CStr(11))
    ' GridView1[Row, 11].Text = GetTotalDeathOutcome(xdtfir, xdtlast, "Female", CInt(asx[1]), CInt(asx[2]), 0, 2)
    xRowVal.Add(GetTotalDeathOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Male", CInt(asx[1]), CInt(asx[2]), 0, 2), CStr(12))
    ' GridView1[Row, 12].Text = GetTotalDeathOutcome(xdtfir, xdtlast, "Male", CInt(asx[1]), CInt(asx[2]), 0, 2)

    xRowVal.Add(GetTotalDeathOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Female", CInt(asx[1]), CInt(asx[2]), 2), CStr(13))
    ' GridView1[Row, 13].Text = GetTotalDeathOutcome(xdtfir, xdtlast, "Female", CInt(asx[1]), CInt(asx[2]), 2)
    xRowVal.Add(GetTotalDeathOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Male", CInt(asx[1]), CInt(asx[2]), 2), CStr(14))
    ' GridView1[Row, 14].Text = GetTotalDeathOutcome(xdtfir, xdtlast, "Male", CInt(asx[1]), CInt(asx[2]), 2)

    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

''--------------- Diagnostic services
Public Function SubGetRadiologyService(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim itmLst As String[]
  Dim xLst As String
  Dim xitem As String
  Dim xval As String
  Dim res As Result
  Dim res1 As Result
  Dim xcnt As Integer
  Dim acnt As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection
  Dim aSource As String

  aSource = modSettings.ShowSettingFromFIle("HMISReporting/RadiologySource")
  xFinal = New Variant[]
  For Each xval In modHMISRepOld.$HMISDiagnosticList
    xRowVal = New Collection
    itmLst = modHMISReportOld.GetDBHMISettingList("DiagnosticServices", xval)
    If Not itmLst.Count Then
      xLst = modSettings.ShowHMISSettingFromFIle("DiagnosticServices/" & xval)
      If xLst Then
        itmLst = Split(xLst, ";")
      Else
        itmLst = New String[]
      Endif
    Endif
    xcnt = 0
    For Each xitem In itmLst
      If xval = "Endoscopy" Or If xval = "Colonoscopy" Or If xval = "Nuclear Medicine" Then
        If aSource = "Service" Then
          res = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemname=&3 and fldsave=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xitem, True)
        Else
          res = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemname=&3 and fldsave=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xitem, True)
        Endif
      Else
        If aSource = "Service" Then
          res = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemname=&3 and fldsave=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xitem, True)
        Else
          res = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemname=&3 and fldsave=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xitem, True)
        Endif
      Endif
      If res!tot Then
        xcnt = xcnt + res!tot
      Endif
    Next
    xRowVal.Add(xval, CStr(0))
    ' GridView1[Row, 0].Text = xval
    If xval = "Endoscopy" Or If xval = "Colonoscopy" Or If xval = "Nuclear Medicine" Then
      xRowVal.Add("Persons", CStr(1))
      ' GridView1[Row, 1].Text = "Persons"
    Else
      xRowVal.Add("Number", CStr(1))
      ' GridView1[Row, 1].Text = "Number"
    Endif
    xRowVal.Add(xcnt, CStr(2))
    ' GridView1[Row, 2].Text = xcnt

    xFinal.Add(xRowVal)
  Next

  xRowVal = New Collection
  xRowVal.Add("Total Preventive service Provided", CStr(0))
  xRowVal.Add("Persons", CStr(1))
  xRowVal.Add(0, CStr(2))
  xFinal.Add(xRowVal)

  acnt = 0
  xRowVal = New Collection
  res1 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xtot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Diagnostic Tests", True)
  If res1["xtot"] Then
    acnt = acnt + res1["xtot"]
  Endif
  xRowVal.Add("Total Laboratory service Provided", CStr(0))
  ' GridView1[Row, 0].Text = "Diagnostic Services"
  xRowVal.Add("Persons", CStr(1))
  ' GridView1[Row, 1].Text = "Persons"
  xRowVal.Add(acnt, CStr(2))
  ' GridView1[Row, 2].Text = acnt
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Other Service Provided (if any)", CStr(0))
  xRowVal.Add("Persons", CStr(1))
  xRowVal.Add(0, CStr(2))
  xFinal.Add(xRowVal)

  Return xFinal

End

''------------------------- Emergency
Public Function SubGetEmergencyServices(ageList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xDeptList As String[]
  Dim sdept As String
  Dim xlist As String

  Dim xval As String
  Dim asx As String[]

  Dim sexList As String[]
  Dim sex As String
  Dim agestring As String
  Dim res As Result
  Dim k As Integer
  Dim xcnt As Integer

  Dim xmale As Integer
  Dim xfemale As Integer
  Dim xother As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xDeptList = modHMISReportOld.GetDBHMISettingList("Departments", "Emergency")
  If Not xDeptList.Count Then
    xlist = modSettings.ShowHMISSettingFromFIle("Departments/Emergency")
    If xlist Then
      xDeptList = Split(xlist, ";")
    Else
      xDeptList = New String[]
    Endif
  Endif
  If xDeptList.Count Then
    sexList = ["Female", "Male"]
    agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)

    xFinal = New Variant[]
    xmale = 0
    xfemale = 0
    xother = 0
    For Each xval In ageList
      xRowVal = New Collection
      asx = Split(xval, ";")
      xRowVal.Add(asx[0], CStr(0))
      ' GridView1[Row, 0].Text = asx[0]
      k = 1
      For Each sex In sexList
        xcnt = 0
        For Each sdept In xDeptList
          res = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblpatientinfo.fldptsex=&3 and " & agestring & ">=&4 and " & agestring & "<&5 and tblencounter.fldadmitlocat=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), sex, CInt(asx[1]), CInt(asx[2]), sdept)                                                       ''
          If res["tot"] Then
            xcnt = xcnt + res["tot"]
          Endif
        Next
        xRowVal.Add(xcnt, CStr(k))
        ' GridView1[Row, k].Text = xcnt

        If sex = "Male" Then
          xmale = xmale + xcnt
        Else If sex = "Female" Then
          xfemale = xfemale + xcnt
        Else If sex = "Other" Then
          xother = xother + xcnt
        Endif
        k = k + 1
      Next

      xFinal.Add(xRowVal)
    Next

    xRowVal = New Collection
    xRowVal.Add("Total", CStr(0))
    ' GridView1[Row, 0].Text = "Total"
    xRowVal.Add(xfemale, CStr(1))
    ' GridView1[Row, 1].Text = xfemale
    xRowVal.Add(xmale, CStr(2))
    ' GridView1[Row, 2].Text = xmale
    xFinal.Add(xRowVal)
  Endif

  Return xFinal

End

''------------------------- Hospital services
Public Function SubGetEthnicReport(ethList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim sexList As String[]
  Dim res As Result
  Dim xtot As Integer
  Dim stot As Integer
  Dim Row As Integer
  Dim i As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  sexList = ["Female", "Male"]

  xFinal = New Variant[]
  For Row = 0 To sexList.Count - 1
    xRowVal = New Collection

    xRowVal.Add(sexList[Row], CStr(0))
    ' GridView1[Row, 0].Text = sexList[Row]
    stot = 0

    For i = 0 To ethList.Count - 1
      xtot = 0
      res = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&3 and (fldethniccode=&4 or fldethniccode=&5))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), sexList[Row], ethList[i], "0" & ethList[i])
      If res.Available And If res["tot"] Then
        xtot = xtot + res["tot"]
      Endif
      stot = stot + xtot
      xRowVal.Add(xtot, CStr(i + 1))
      ' GridView1[Row, i + 1].Text = xtot
    Next

    xRowVal.Add(stot, CStr(ethList.Count + 1))
    ' GridView1[Row, ethList.Count + 1].Text = stot

    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

Public Function SubGetHospServiceSelectedOnly(sType As String, ageList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim asx As String[]
  Dim sexList As String[]
  Dim agestring As String
  Dim i As Integer
  Dim Row As Integer
  Dim xtot As Integer
  Dim atot As Integer

  Dim res As Result

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  sexList = ["Female", "Male"]
  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)

  xFinal = New Variant[]
  For Row = 0 To sexList.Count - 1
    xRowVal = New Collection
    xRowVal.Add(sexList[Row], CStr(0))
    ' GridView1[Row, 0].Text = sexList[Row]
    atot = 0

    For i = 0 To ageList.Count - 1
      asx = Split(ageList[i], ";")
      xtot = 0
      res = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblpatientinfo.fldptsex=&3 and " & agestring & ">=&4 and " & agestring & "<&5 and tblencounter.fldvisit like &6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), sexList[Row], CInt(asx[1]), CInt(asx[2]), sType)                                                       ''
      If res.Available And If res["tot"] Then
        xtot = xtot + res["tot"]
      Endif
      atot = atot + xtot
      xRowVal.Add(xtot, CStr(i + 1))
      ' GridView1[Row, i + 1].Text = xtot
    Next

    xRowVal.Add(atot, CStr(ageList.Count + 1))
    ' GridView1[Row, ageList.Count + 1].Text = atot

    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

Public Function SubGetHospitalService(ageList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xval As String
  Dim asx As String[]
  Dim sexList As String[]
  Dim agestring As String
  Dim res As Result
  Dim resx As Result
  Dim res1 As Result
  Dim res1x As Result

  Dim Row As Integer
  Dim xmale As Integer
  Dim xfemale As Integer
  Dim nmale As Integer
  Dim nfemale As Integer
  Dim totxmale As Integer
  Dim totxfem As Integer
  Dim totnmale As Integer
  Dim totnfem As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  sexList = ["Female", "Male"]
  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  Row = 0
  totxmale = 0
  totxfem = 0
  totnmale = 0
  totnfem = 0
  xFinal = New Variant[]
  For Each xval In ageList
    xRowVal = New Collection
    asx = Split(xval, ";")
    xRowVal.Add(asx[0], CStr(0))
    'GridView1[Row, 0].Text = asx[0]

    nfemale = 0
    nmale = 0
    xmale = 0
    xfemale = 0

    res = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblpatientinfo.fldptsex=&3 and " & agestring & ">=&4 and " & agestring & "<&5 and tblencounter.fldvisit=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Female", CInt(asx[1]), CInt(asx[2]), "NEW")                                                       ''
    If res.Available And If res["tot"] Then
      nfemale = nfemale + res["tot"]
    Endif

    resx = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblpatientinfo.fldptsex=&3 and " & agestring & ">=&4 and " & agestring & "<&5 and tblencounter.fldvisit=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Male", CInt(asx[1]), CInt(asx[2]), "NEW")                                                       ''
    If resx.Available And If resx["tot"] Then
      nmale = nmale + resx["tot"]
    Endif

    res1 = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblpatientinfo.fldptsex=&3 and " & agestring & ">=&4 and " & agestring & "<&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Female", CInt(asx[1]), CInt(asx[2]))                                                       ''
    If res1.Available And If res1["tot"] Then
      xfemale = xfemale + res1["tot"]
    Endif

    res1x = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblpatientinfo.fldptsex=&3 and " & agestring & ">=&4 and " & agestring & "<&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Male", CInt(asx[1]), CInt(asx[2]))                                                       ''
    If res1x.Available And If res1x["tot"] Then
      xmale = xmale + res1x["tot"]
    Endif

    totxmale = totxmale + xmale
    totxfem = totxfem + xfemale
    totnmale = totnmale + nmale
    totnfem = totnfem + nfemale

    xRowVal.Add(nfemale, CStr(1))
    ' GridView1[Row, 1].Text = nfemale
    xRowVal.Add(nmale, CStr(2))
    ' GridView1[Row, 2].Text = nmale
    xRowVal.Add(xfemale, CStr(3))
    ' GridView1[Row, 3].Text = xfemale
    xRowVal.Add(xmale, CStr(4))
    ' GridView1[Row, 4].Text = xmale

    xFinal.Add(xRowVal)
  Next

  xRowVal = New Collection
  xRowVal.Add("Total", CStr(0))
  ' GridView1[Row, 0].Text = "Total"
  xRowVal.Add(totnfem, CStr(1))
  ' GridView1[Row, 1].Text = totnfem
  xRowVal.Add(totnmale, CStr(2))
  ' GridView1[Row, 2].Text = totnmale
  xRowVal.Add(totxfem, CStr(3))
  ' GridView1[Row, 3].Text = totxfem
  xRowVal.Add(totxmale, CStr(4))
  ' GridView1[Row, 4].Text = totxmale
  xFinal.Add(xRowVal)

  Return xFinal

End

''============================== REGISTER ============================================
Private Function HMIS11FootSummary(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String, ageList As String[], ethList As String[]) As String

  Dim aa As String
  Dim bb As String
  Dim cc As String
  Dim agecol As String[]
  Dim xage As String
  Dim ethcol As String[]
  Dim xeth As String
  Dim xx As String

  agecol = New String[]
  agecol.Add("Gender")
  For Each xage In ageList
    agecol.Add(Split(xage, ";")[0])
  Next
  agecol.Add("Total")

  ethcol = New String[]
  ethcol.Add("Gender")
  For Each xeth In ethList
    ethcol.Add(Split(xeth, ";")[0])
  Next
  ethcol.Add("Total")

  xx = modRepoTemplete.HTMLTableSyntax()
  xx = xx & "<tr>" & gb.NewLine

  ' GetHospServiceSelectedOnly("%")
  aa = modString.GetRichTableStringFromVariant(agecol, modHMISReportOld.SubGetHospServiceSelectedOnly("%", ageList, xdtfir, xdtlast, sLocaType, sLocation))
  xx = xx & "<td style='vertical-align:top'>" & "<b>" & "Total Consultations" & "</b><br>" & aa & "<br>" & "</td>" & gb.NewLine

  ' GetHospServiceSelectedOnly("NEW")
  bb = modString.GetRichTableStringFromVariant(agecol, modHMISReportOld.SubGetHospServiceSelectedOnly("NEW", ageList, xdtfir, xdtlast, sLocaType, sLocation))
  xx = xx & "<td style='vertical-align:top'>" & "<b>" & "New Consultations" & "</b><br>" & bb & "<br>" & "</td>" & gb.NewLine

  ' GetEthnicReport()
  cc = modString.GetRichTableStringFromVariant(ethcol, modHMISReportOld.SubGetEthnicReport(ethList, xdtfir, xdtlast, sLocaType, sLocation))
  xx = xx & "<td style='vertical-align:top'>" & "<b>" & "Ethnicity Report" & "</b><br>" & cc & "<br>" & "</td>" & gb.NewLine

  xx = xx & "</tr>" & gb.NewLine
  xx = xx & "</table>"

  Return xx

End

''-------------------- Registers -------------------
Public Sub HMISRegister11(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String, ageList As String[], ethList As String[], sDecrypt As Boolean) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim agestring As String
  Dim res As Result
  Dim i As Integer
  Dim rsx As String[]
  Dim xfoot As String
  Dim xexpense As Float
  Dim xrefer As String

  $BillingReport = New CReportHTMLong($ColmHMIS11, "", "")
  $BillingReport.UserData.Add("HMIS-1.1 (MASTER REGISTER)", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  i = 1
  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  res = modDatabase.$syConn.Exec("select tblencounter.fldencounterval as fldencounterval,tblencounter.fldadmitlocat as fldadmitlocat,tblencounter.fldvisit as fldvisit,tblencounter.fldregdate as fldregdate,tblpatientinfo.fldptnamefir as fldptnamefir,tblpatientinfo.fldptnamelast as fldptnamelast,tblpatientinfo.fldethniccode as fldethniccode,tblpatientinfo.fldptsex as fldptsex,tblpatientinfo.fldptaddvill as fldptaddvill,tblpatientinfo.fldptadddist as fldptadddist,tblpatientinfo.fldptcontact as fldptcontact,tblpatientinfo.fldptbirday as fldptbirday,tblpatientinfo.fldencrypt as fldencrypt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and (tblpatientinfo.fldptsex=&3 or tblpatientinfo.fldptsex=&4) and " & agestring & ">=&5 and " & agestring & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Male", "Female", 0, 730000)
  If res.Available Then
    For Each res
      xexpense = modNonMedical.TotalExpenseAmountbyPatient(modDatabase.$syConn, res["fldencounterval"])
      xrefer = modPatient.GetDemographAccountValue(res["fldencounterval"], "Referral Hospital")
      With asx
        .Add(CStr(i))
        If res["fldvisit"] = "NEW" Then
          .Add(res["fldencounterval"])
          .Add("")
        Else If res["fldvisit"] = "OLD" Then
          .Add("")
          .Add(res["fldencounterval"])
        Endif
        If sDecrypt = True Then
          .Add(modPassword.DecryptPatData(res["fldptnamefir"], res["fldencrypt"]))
          .Add(modPassword.DecryptPatData(res["fldptnamelast"], res["fldencrypt"]))
        Else
          .Add(res["fldptnamefir"])
          .Add(res["fldptnamelast"])
        Endif
        .Add(res["fldethniccode"])
        If res["fldptsex"] = "Female" Then
          .Add(Format(DateDiff(res["fldptbirday"], res["fldregdate"], gb.Minute) / (60 * 24 * 365), gb.Fixed))
          .Add("")
        Else If res["fldptsex"] = "Male" Then
          .Add("")
          .Add(Format(DateDiff(res["fldptbirday"], res["fldregdate"], gb.Minute) / (60 * 24 * 365), gb.Fixed))
        Endif
        .Add(res["fldptadddist"])
        If res["fldptaddvill"] Then
          rsx = Split(res["fldptaddvill"], "-")
          If rsx.Count = 1 Then
            .Add(rsx[0])
            .Add("")
          Else
            .Add(rsx[0])
            .Add(rsx[1])
          Endif
        Else
          .Add("")
          .Add("")
        Endif
        If sDecrypt = True Then
          .Add(modPassword.DecryptPatData(res["fldptcontact"], res["fldencrypt"]))
        Else
          .Add(res["fldptcontact"])
        Endif
        .Add(modHMISRepOld.GetConsultationTypeONE(res["fldadmitlocat"]))
        If xexpense Then
          .Add(modReportVar.GetLocaleNumberFormat(xexpense, gb.Currency))
        Else
          .Add("Free")
        Endif
        .Add(xrefer)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1
    Next
  Endif

  xfoot = HMIS11FootSummary(xdtfir, xdtlast, sLocaType, sLocation, ageList, ethList)
  $BillingReport.AddSummary(xfoot)

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

Public Function HMISRegister13(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String, sDecrypt As Boolean) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim res As Result
  Dim i As Integer
  Dim OPDDeptList As String[]
  Dim xdeptList As String[]
  Dim xopd As String
  Dim agestring As String
  Dim xgenvio As String
  Dim xrefer As String

  Dim xlabLst As String[]
  Dim xmedList As String[]

  $BillingReport = New CReportHTMLong($ColmHMIS13, "", "")
  $BillingReport.UserData.Add("HMIS-1.3 (OUT PATIENT REGISTER)", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  xdeptList = modGeneral.GetDepartmentAllList("Consultation")
  If xdeptList.Count Then
    OPDDeptList = xdeptList
  Else
    OPDDeptList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldconsultname) as col from tblconsult"))
  Endif
  agestring = modMedReports.GetAgeStringByTable("tblconsult", modDatabase.$syConn)

  i = 1
  For Each xopd In OPDDeptList
    res = modDatabase.$syConn.Exec("select tblconsult.fldencounterval as fldencounterval,tblconsult.fldconsultname as fldconsultname,tblconsult.fldconsulttime as fldconsulttime,tblencounter.fldpatientval as fldpatientval,tblencounter.flddisctype as flddisctype,tblencounter.fldvisit as fldvisit,tblpatientinfo.fldptnamefir as fldptnamefir,tblpatientinfo.fldptnamelast as fldptnamelast,tblpatientinfo.fldethniccode as fldethniccode,tblpatientinfo.fldptsex as fldptsex,tblpatientinfo.fldptaddvill as fldptaddvill,tblpatientinfo.fldptadddist as fldptadddist,tblpatientinfo.fldptcontact as fldptcontact,tblpatientinfo.fldptbirday as fldptbirday,tblpatientinfo.fldencrypt as fldencrypt from (tblconsult inner join tblencounter on tblconsult.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblconsult.fldconsulttime>=&1 and tblconsult.fldconsulttime<=&2 and tblconsult.fldconsultname=&3 and (tblpatientinfo.fldptsex=&4 or tblpatientinfo.fldptsex=&5) and " & agestring & ">=&6 and " & agestring & "<&7" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblconsult"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xopd, "Male", "Female", 0, 730000)
    If res.Available Then
      For Each res
        xgenvio = modPatient.GetDemographAccountValue(res["fldencounterval"], "Gender Violence")
        xrefer = modPatient.GetDemographAccountValue(res["fldencounterval"], "Referral Hospital")
        xlabLst = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flditemname) as col from tblpatbilling where fldencounterval=&1 and (flditemtype=&2 or flditemtype=&3)", res["fldencounterval"], "Diagnostic Tests", "Radio Diagnostics"))
        xmedList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flddrug) as col from tblmedbrand where fldbrandid in(select flditem from tblpatdosing where fldencounterval=&1 and flditemtype=&2)", res["fldencounterval"], "Medicines"))
        With asx
          .Add(CStr(i))
          .Add(res["fldpatientval"])
          If res["fldvisit"] = "NEW" Then
            .Add(res["fldencounterval"])
            .Add("")
          Else If res["fldvisit"] = "OLD" Then
            .Add("")
            .Add(res["fldencounterval"])
          Endif
          If sDecrypt = True Then
            .Add(modPassword.DecryptPatData(res["fldptnamefir"], res["fldencrypt"]) & "<br>" & modPassword.DecryptPatData(res["fldptnamelast"], res["fldencrypt"]))
          Else
            .Add(res["fldptnamefir"] & "<br>" & res["fldptnamelast"])
          Endif
          .Add(res["fldethniccode"])
          If res["fldptsex"] = "Female" Then
            .Add(Format(DateDiff(res["fldptbirday"], res["fldconsulttime"], gb.Minute) / (60 * 24 * 365), gb.Fixed))
            .Add("")
          Else If res["fldptsex"] = "Male" Then
            .Add("")
            .Add(Format(DateDiff(res["fldptbirday"], res["fldconsulttime"], gb.Minute) / (60 * 24 * 365), gb.Fixed))
          Endif
          If sDecrypt = True Then
            .Add(res["fldptadddist"] & "<br>" & res["fldptaddvill"] & "<br>" & modPassword.DecryptPatData(res["fldptcontact"], res["fldencrypt"]))
          Else
            .Add(res["fldptadddist"] & "<br>" & res["fldptaddvill"] & "<br>" & res["fldptcontact"])
          Endif
          If xlabLst And If xlabLst.Count Then
            .Add(xlabLst.Join("; "))
          Else
            .Add("")
          Endif
          .Add(modHMISRepOld.GetDiagnosisTableEIGHT(res["fldencounterval"], "Provisional Diagnosis"))
          .Add(xmedList.Join("<br>"))

          .Add(modPatPatho.PatSelectProcedureString(res["fldencounterval"], "Procedures", "Done"))
          If xgenvio = "Yes" Then
            .Add("X")
          Else
            .Add("")
          Endif
          .Add(modHMISRepOld.GetDiscountGradeEIGHT(res["flddisctype"]))
          .Add(xrefer)
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        i = i + 1
      Next
    Endif
  Next

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

Public Function HMISRegister81(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String, sDecrypt As Boolean) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim res As Result
  Dim i As Integer
  Dim xlabLst As String[]
  Dim agestring As String
  Dim xaddlst As String[]
  Dim xpolice As String

  $BillingReport = New CReportHTMLong($ColmHMIS81, "", "")
  $BillingReport.UserData.Add("HMIS-8.1 (PATIENT ADMISSION REGISTER)", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  i = 1
  res = modDatabase.$syConn.Exec("select tblencounter.fldencounterval as fldencounterval,tblencounter.fldadmitlocat as fldadmitlocat,tblencounter.fldcurrlocat as fldcurrlocat,tblencounter.flddoa as flddoa,tblencounter.fldvisit as fldvisit,tblpatientinfo.fldptnamefir as fldptnamefir,tblpatientinfo.fldptnamelast as fldptnamelast,tblpatientinfo.fldethniccode as fldethniccode,tblpatientinfo.fldptsex as fldptsex,tblpatientinfo.fldptaddvill as fldptaddvill,tblpatientinfo.fldptadddist as fldptadddist,tblpatientinfo.fldptguardian as fldptguardian,tblpatientinfo.fldptcontact as fldptcontact,tblpatientinfo.fldencrypt as fldencrypt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddoa>=&1 and tblencounter.flddoa<=&2 and (tblpatientinfo.fldptsex=&3 or tblpatientinfo.fldptsex=&4) and " & agestring & ">=&5 and " & agestring & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Male", "Female", 0, 730000)
  If res.Available Then
    For Each res
      xlabLst = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flditemname) as col from tblpatbilling where fldencounterval=&1 and (flditemtype=&2 or flditemtype=&3)", res["fldencounterval"], "Diagnostic Tests", "Radio Diagnostics"))
      xpolice = modPatient.GetDemographAccountValue(res["fldencounterval"], "Police Case")
      With asx
        .Add(CStr(i))
        .Add(modHMISRepOld.GetDateFormatHMISEight(res["flddoa"]))
        If res["fldvisit"] = "NEW" Then
          .Add(res["fldencounterval"])
          .Add("")
        Else If res["fldvisit"] = "OLD" Then
          .Add("")
          .Add(res["fldencounterval"])
        Endif
        If sDecrypt = True Then
          .Add(modPassword.DecryptPatData(res["fldptnamefir"], res["fldencrypt"]) & "<br>" & modPassword.DecryptPatData(res["fldptnamelast"], res["fldencrypt"]))
        Else
          .Add(res["fldptnamefir"] & "<br>" & res["fldptnamelast"])
        Endif
        .Add(res["fldethniccode"])

        .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "<=28 days"))
        .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "<=28 days"))
        .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "1-11 Months"))
        .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "1-11 Months"))
        .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Female", ">=1 Year"))
        .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Male", ">=1 Year"))

        If res["fldptaddvill"] Then
          xaddlst = Split(res["fldptaddvill"], "-")
          If xaddlst.Count = 1 Then
            .Add(res["fldptadddist"] & "<br>" & "<br>" & res["fldptaddvill"])
          Else
            .Add(res["fldptadddist"] & "<br>" & xaddlst[1] & "<br>" & xaddlst[0])
          Endif
        Else
          .Add(res["fldptadddist"])
        Endif

        If sDecrypt = True Then
          .Add(res["fldptguardian"] & "<br>" & modPassword.DecryptPatData(res["fldptcontact"], res["fldencrypt"]))
        Else
          .Add(res["fldptguardian"] & "<br>" & res["fldptcontact"])
        Endif
        .Add(res["fldadmitlocat"])
        .Add(modGeneral.GetDepartmentNameFromBed(res["fldcurrlocat"]))

        .Add(modPatPatho.PatSelectProcedureString(res["fldencounterval"], "Procedures", "Done"))
        If xlabLst And If xlabLst.Count Then
          .Add(xlabLst.Join("; "))
        Else
          .Add("")
        Endif
        .Add(modPatient.PatientFindingList(res["fldencounterval"], "Provisional Diagnosis").Join("<br>"))

        If xpolice = "Yes" Then
          .Add("X")
          .Add("")
        Else
          .Add("")
          .Add("X")
        Endif
        .Add("")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1
    Next
  Endif

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

Public Function HMISRegister82(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String, sDecrypt As Boolean) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim res As Result
  Dim i As Integer
  Dim sDept As String
  Dim agestring As String
  Dim xpolice As String

  Dim xlive As Integer
  Dim xdisc As Float
  Dim xdisper As Float

  $BillingReport = New CReportHTMLong($ColmHMIS82, "", "")
  $BillingReport.UserData.Add("HMIS-8.2 (PATIENT DISCHARGE REGISTER)", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  i = 1
  res = modDatabase.$syConn.Exec("select tblencounter.fldencounterval as fldencounterval,tblencounter.fldpatientval as fldpatientval,tblencounter.fldadmitlocat as fldadmitlocat,tblencounter.fldcurrlocat as fldcurrlocat,tblencounter.flddoa as flddoa,tblencounter.flddod as flddod,tblencounter.fldadmission as fldadmission,tblencounter.flddisctype as flddisctype,tblencounter.fldvisit as fldvisit,tblpatientinfo.fldptnamefir as fldptnamefir,tblpatientinfo.fldptnamelast as fldptnamelast,tblpatientinfo.fldethniccode as fldethniccode,tblpatientinfo.fldptsex as fldptsex,tblpatientinfo.fldptaddvill as fldptaddvill,tblpatientinfo.fldptadddist as fldptadddist,tblpatientinfo.fldptcontact as fldptcontact,tblpatientinfo.fldptbirday as fldptbirday,tblpatientinfo.fldencrypt as fldencrypt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and (tblpatientinfo.fldptsex=&3 or tblpatientinfo.fldptsex=&4) and " & agestring & ">=&5 and " & agestring & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Male", "Female", 0, 730000)
  If res.Available Then
    For Each res
      sDept = modGeneral.GetDepartmentNameFromBed(res["fldcurrlocat"])
      xdisc = modNonMedical.GetTotalDiscByEnc(res["fldencounterval"])
      xdisper = modNonMedical.GetAverageDiscountPerEnc(modDatabase.$syConn, res["fldencounterval"])
      xpolice = modPatient.GetDemographAccountValue(res["fldencounterval"], "Police Case")
      With asx
        .Add(CStr(i))
        .Add(res["fldpatientval"])
        .Add(modHMISRepOld.GetDateFormatHMISEight(res["flddod"]))
        .Add(modHMISRepOld.GetDateFormatHMISEight(res["flddoa"]))
        If res["flddoa"] Then
          .Add(DateDiff(res["flddoa"], res["flddod"], gb.Day))
        Else
          .Add("")
        Endif
        If sDecrypt = True Then
          .Add(modPassword.DecryptPatData(res["fldptnamefir"], res["fldencrypt"]) & "<br>" & modPassword.DecryptPatData(res["fldptnamelast"], res["fldencrypt"]))
        Else
          .Add(res["fldptnamefir"] & "<br>" & res["fldptnamelast"])
        Endif
        .Add(res["fldethniccode"])

        .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "<=28 days"))
        .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "<=28 days"))
        .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "1-11 Months"))
        .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "1-11 Months"))
        .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Female", ">=1 Year"))
        .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Male", ">=1 Year"))

        .Add(modHMISRepOld.GetServiceDischargeEIGHT(sDept))
        .Add(sDept & " : " & res["fldcurrlocat"])

        .Add(modHMISRepOld.GetProcedureAllEIGHT(res["fldencounterval"])) ''surgery name
        .Add("")
        .Add("")

        .Add(modHMISRepOld.GetDiagnosisTableEIGHT(res["fldencounterval"], "Final Diagnosis"))
        .Add(modHMISRepOld.GetHMISOutcomeEIGHT(res["fldencounterval"], res["fldadmission"]))

        If res["fldadmission"] = "Death" Then
          xlive = DateDiff(res["flddoa"], res["flddod"], gb.Hour)
          If xlive < 48 Then
            .Add("X")
            .Add("")
            .Add(modPatient.GetPatExitComment(res["fldencounterval"], "Death"))
          Else
            .Add("")
            .Add("X")
            .Add(modPatient.GetPatExitComment(res["fldencounterval"], "Death"))
          Endif
        Else
          .Add("")
          .Add("")
          .Add("")
        Endif

        If xdisper = 0 Then
          .Add("")
          .Add("")
          .Add("")
        Else If xdisper = 100 Then
          .Add("X")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xdisc, gb.Currency))
        Else
          .Add("")
          .Add("X")
          .Add(modReportVar.GetLocaleNumberFormat(xdisc, gb.Currency))
        Endif
        .Add(modHMISRepOld.GetDiscountGradeEIGHT(res["flddisctype"]))

        If xpolice = "Yes" Then
          .Add("X")
          .Add("")
        Else
          .Add("")
          .Add("X")
        Endif
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1
    Next
  Endif

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

Public Function HMISRegister83(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String, sDecrypt As Boolean) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim res As Result
  Dim xdept As String
  Dim xDeptList As String[]
  Dim xlist As String
  Dim agestring As String
  Dim xpolice As String
  Dim xrefer As String

  Dim i As Integer
  Dim xlabLst As String[]
  Dim xmedList As String[]

  Dim xaddlst As String[]
  Dim xdisc As Float
  Dim xdisper As Float

  $BillingReport = New CReportHTMLong($ColmHMIS83, "", "")
  $BillingReport.UserData.Add("HMIS-8.3 (EMERGENCY SERVICE REGISTER)", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  xDeptList = modHMISReportOld.GetDBHMISettingList("Departments", "Emergency")
  If Not xDeptList.Count Then
    xlist = modSettings.ShowHMISSettingFromFIle("Departments/Emergency")
    If xlist Then
      xDeptList = Split(xlist, ";")
    Else
      xDeptList = New String[]
    Endif
  Endif

  i = 1
  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  For Each xdept In xDeptList
    res = modDatabase.$syConn.Exec("select tblencounter.fldencounterval as fldencounterval,tblencounter.fldpatientval as fldpatientval,tblencounter.fldadmitlocat as fldadmitlocat,tblencounter.fldcurrlocat as fldcurrlocat,tblencounter.flddoa as flddoa,tblencounter.flddod as flddod,tblencounter.fldregdate as fldregdate,tblencounter.fldadmission as fldadmission,tblencounter.flddisctype as flddisctype,tblpatientinfo.fldptnamefir as fldptnamefir,tblpatientinfo.fldptnamelast as fldptnamelast,tblpatientinfo.fldethniccode as fldethniccode,tblpatientinfo.fldptsex as fldptsex,tblpatientinfo.fldptaddvill as fldptaddvill,tblpatientinfo.fldptadddist as fldptadddist,tblpatientinfo.fldptcontact as fldptcontact,tblpatientinfo.fldptguardian as fldptguardian,tblpatientinfo.fldencrypt as fldencrypt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and (tblpatientinfo.fldptsex=&3 or tblpatientinfo.fldptsex=&4) and " & agestring & ">=&5 and " & agestring & "<&6 and tblencounter.fldadmitlocat=&7" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Female", "Male", 0, 730000, xdept)
    If res.Available Then
      For Each res
        xmedList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flddrug) as col from tblmedbrand where fldbrandid in(select flditem from tblpatdosing where fldencounterval=&1 and flditemtype=&2)", res["fldencounterval"], "Medicines"))
        xlabLst = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flditemname) as col from tblpatbilling where fldencounterval=&1 and (flditemtype=&2 or flditemtype=&3)", res["fldencounterval"], "Diagnostic Tests", "Radio Diagnostics"))

        xdisc = modNonMedical.GetTotalDiscByEnc(res["fldencounterval"])
        xdisper = modNonMedical.GetAverageDiscountPerEnc(modDatabase.$syConn, res["fldencounterval"])
        xpolice = modPatient.GetDemographAccountValue(res["fldencounterval"], "Police Case")
        xrefer = modPatient.GetDemographAccountValue(res["fldencounterval"], "Referral Hospital")
        With asx
          .Add(CStr(i))
          .Add(res["fldencounterval"])
          .Add(modHMISRepOld.GetDateFormatHMISEight(res["fldregdate"]))
          If sDecrypt = True Then
            .Add(modPassword.DecryptPatData(res["fldptnamefir"], res["fldencrypt"]) & "<br>" & modPassword.DecryptPatData(res["fldptnamelast"], res["fldencrypt"]))
          Else
            .Add(res["fldptnamefir"] & "<br>" & res["fldptnamelast"])
          Endif
          .Add(res["fldethniccode"])

          .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "<=28 days"))
          .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "<=28 days"))
          .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "1-11 Months"))
          .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "1-11 Months"))
          .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Female", ">=1 Year"))
          .Add(modHMISRepOld.GetHMISAgeFormatEight(res["fldencounterval"], "Male", ">=1 Year"))

          If res["fldptaddvill"] Then
            xaddlst = Split(res["fldptaddvill"], "-")
            If xaddlst.Count = 1 Then
              .Add(res["fldptadddist"] & "<br>" & "<br>" & res["fldptaddvill"])
            Else
              .Add(res["fldptadddist"] & "<br>" & xaddlst[1] & "<br>" & xaddlst[0])
            Endif
          Else
            .Add(res["fldptadddist"])
          Endif
          If sDecrypt = True Then
            .Add(res["fldptguardian"] & "<br>" & modPassword.DecryptPatData(res["fldptcontact"], res["fldencrypt"]))
          Else
            .Add(res["fldptguardian"] & "<br>" & res["fldptcontact"])
          Endif
          .Add("")  ''source (self)
          .Add(xrefer)  ''source (Refer)
          .Add("")  ''brought dead

          .Add(modPatReports.GetPatientPresentingSymptomReport(res["fldencounterval"]).Join("<br>"))
          If xlabLst And If xlabLst.Count Then
            .Add(xlabLst.Join("; "))
          Else
            .Add("")
          Endif
          .Add(modHMISRepOld.GetDiagnosisTableEIGHT(res["fldencounterval"], "Provisional Diagnosis"))
          .Add(xmedList.Join("<br>"))

          .Add("")  ''observation (yes)
          .Add("")  ''observation (no)
          .Add(modHMISRepOld.GetDateFormatHMISEight(res["flddod"]))
          .Add(modHMISRepOld.GetHMISOutcomeEIGHT(res["fldencounterval"], res["fldadmission"]))

          If res["fldadmission"] = "Death" Then
            .Add("X")
            .Add(modPatient.GetPatExitComment(res["fldencounterval"], "Death"))
          Else
            .Add("")
            .Add("")
          Endif

          If xdisper = 0 Then
            .Add("")
            .Add("")
            .Add("")
          Else If xdisper = 100 Then
            .Add("X")
            .Add("")
            .Add(modReportVar.GetLocaleNumberFormat(xdisc, gb.Currency))
          Else
            .Add("")
            .Add("X")
            .Add(modReportVar.GetLocaleNumberFormat(xdisc, gb.Currency))
          Endif
          .Add(modHMISRepOld.GetDiscountGradeEIGHT(res["flddisctype"]))

          If xpolice = "Yes" Then
            .Add("X")
            .Add("")
          Else
            .Add("")
            .Add("X")
          Endif
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        i = i + 1
      Next
    Endif
  Next

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

Public Function EWARSRegister(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim res As Result

  Dim agestring As String
  Dim i As Integer
  Dim xdiagno As String
  Dim xlab As String

  $BillingReport = New CReportHTMLong($ColmEWARS, "", "")
  $BillingReport.UserData.Add("EWARS REPORT", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  agestring = modMedReports.GetAgeStringByTable("tblpatfindings", modDatabase.$syConn)
  res = modDatabase.$syConn.Exec("select tblpatfindings.fldencounterval as fldencounterval,tblpatfindings.fldtype as fldtype,tblpatfindings.fldcodeid as fldcodeid,tblpatfindings.fldcode as fldcode,tblpatfindings.fldtime as fldtime from tblpatfindings where tblpatfindings.fldtime>=&1 and tblpatfindings.fldtime<=&2 and (tblpatfindings.fldtype=&3 or tblpatfindings.fldtype=&4) and tblpatfindings.fldcodeid in(select tblsurveillance.fldcodeid from tblsurveillance) and tblpatfindings.fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where (tblpatientinfo.fldptsex=&5 or tblpatientinfo.fldptsex=&6) and " & agestring & ">=&7 and " & agestring & "<&8)) and tblpatfindings.fldsave=&9" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", "Final Diagnosis", "Female", "Male", 0, 730000, True)

  i = 1
  If res.Available Then
    For Each res
      If res["fldtype"] = "Provisional Diagnosis" Then
        xdiagno = "Probable"
      Else If res["fldtype"] = "Final Diagnosis" Then
        xdiagno = "Confirmed"
      Endif
      xlab = modPatReports.GetLaboratoryHTMLTable(res["fldencounterval"], modLabTest.PaientAllTestNameArray(res["fldencounterval"]), MMain.$defUnit, "FitsrVal")
      With asx
        .Add(CStr(i))
        .Add(modPatient.GetRecordDate(res["fldencounterval"]))
        .Add("")
        .Add(res["fldencounterval"])
        .Add(modPatient.CurrentAdmissionStatus(res["fldencounterval"]))
        .Add(modPatient.GetPatientNameByEnc(res["fldencounterval"], modDatabase.$syConn))
        .Add(modPatient.GetPatientAgeString(res["fldencounterval"], res["fldtime"]))
        .Add(modPatient.GetPatientSex(res["fldencounterval"], modDatabase.$syConn))
        .Add(modPatient.GetPatDistrictByEnc(res["fldencounterval"], modDatabase.$syConn))
        .Add(modPatient.GetPatientAddressByEnc(res["fldencounterval"], modDatabase.$syConn))
        .Add(modPatient.GetPatientContactByEnc(res["fldencounterval"], modDatabase.$syConn))
        .Add(res["fldcode"])
        .Add(res["fldcodeid"])
        .Add(xdiagno)
        .Add(xlab)   'lab
        .Add(modPatient.GetPatExitComment(res["fldencounterval"], "Discharged"))
        .Add(modPatient.GetReferLocation(res["fldencounterval"]))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1
    Next
  Endif

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

Public Function BipannaRegister(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String

  Dim xDeptList As String[]
  Dim xlist As String
  Dim xpackage As String
  Dim i As Integer

  Dim res As Result
  Dim xrefer As String
  Dim xgender As String
  Dim xage As String
  Dim xcitizen As String
  Dim xfree As String
  Dim xbipcode As String
  Dim xexpense As Float
  Dim xvisit As String

  $BillingReport = New CReportHTMLong($ColmBipana, "", "")
  $BillingReport.UserData.Add("BIPANNA NAGARIK EXPENSE REPORT", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  xDeptList = modHMISReportOld.GetDBHMISettingList("BipannaScheme", "Bipanna")
  If Not xDeptList.Count Then
    xlist = modSettings.ShowHMISSettingFromFIle("BipannaScheme/Bipanna")
    If xlist Then
      xDeptList = Split(xlist, ";")
    Else
      xDeptList = New String[]
    Endif
  Endif

  i = 1
  For Each xpackage In xDeptList
    res = modDatabase.$syConn.Exec("select distinct(fldencounterval) as fldencounterval from tblpatbilling where flddisctype like &1 and fldtime>=&2 and fldtime<=&3 and fldsave=&4 and fldprint=&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), xpackage, modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True, True)

    If res.Available Then
      For Each res
        xvisit = modPatient.GetPatVisitHMIS(res["fldencounterval"])
        xbipcode = modPatient.GetDemographAccountValue(res["fldencounterval"], "Bipanna ID")
        xrefer = modPatient.GetDemographAccountValue(res["fldencounterval"], "Referral District")
        xgender = modPatient.GetPatientSex(res["fldencounterval"], modDatabase.$syConn)
        xage = modPatient.GetPatientAgeString(res["fldencounterval"], xdtlast)
        xcitizen = modPatient.GetDemographAccountValue(res["fldencounterval"], "Citizenship No")
        xfree = modPatient.GetDemographAccountValue(res["fldencounterval"], "Bipanna Scheme")
        xexpense = modHMISRepOld.GetCreditExpesnseSelectPackage(modDatabase.$syConn, res["fldencounterval"], xpackage, xdtfir, xdtlast)
        With asx
          .Add(CStr(i))
          .Add(xrefer)
          If xvisit = "OLD" Then
            .Add("")
            .Add(xbipcode)
          Else
            .Add(xbipcode)
            .Add("")
          Endif
          .Add(modPatient.GetPatientNameByEnc(res["fldencounterval"], modDatabase.$syConn))
          If xgender = "Female" Then
            .Add(xage)
            .Add("")
            .Add("")
          Else If xgender = "Male" Then
            .Add("")
            .Add(xage)
            .Add("")
          Else
            .Add("")
            .Add("")
            .Add(xage)
          Endif
          .Add(xcitizen)
          .Add(xfree)
          .Add(modReportVar.GetLocaleNumberFormat(xexpense, gb.Currency))
          .Add(res["fldencounterval"])
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        i = i + 1
      Next
    Endif

  Next

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

Public Function HMISRegister36(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String, sDecrypt As Boolean) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim res As Result
  Dim i As Integer

  Dim res1 As Result
  Dim xdoa As Date
  Dim xdod As Date
  Dim xstatus As String
  Dim xoutc As String

  Dim reDel As Result

  $BillingReport = New CReportHTMLong($ColmHMIS36, "", "")
  $BillingReport.UserData.Add("HMIS-3.6 (MATERNAL AND NEWBORN SERVICE REGISTER)", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  i = 1
  res = modDatabase.$syConn.Exec("select distinct(fldencounterval) as fldencounterval from tblexamgeneral where fldinput=&1 and fldtime>=&2 and fldtime<=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), "Obstetrics", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
  If res.Available Then
    For Each res
      res1 = modDatabase.$syConn.Exec("select fldpatientval,fldptnamefir,fldptnamelast,fldethniccode,fldptaddvill,fldptadddist,fldptcontact,fldptguardian,fldrelation,fldptbirday,fldencrypt from tblpatientinfo where fldpatientval in(select fldpatientval from tblencounter where fldencounterval=&1)", res["fldencounterval"])
      If res1.Available Then
        xdoa = modPatient.GetAdmissionDate(res["fldencounterval"])
        xdod = modPatient.GetDischargeDate(res["fldencounterval"])
        xstatus = modPatient.CurrentAdmissionStatus(res["fldencounterval"])
        Select xstatus
          Case "Discharged"
            xoutc = modPatient.GetPatExitComment(res["fldencounterval"], "Discharged")
          Case "Refer"
            xoutc = "Referred out"
          Case "Absconder"
            xoutc = "Absconded"
          Case "Death"
            xoutc = "Died"
          Case "LAMA"
            xoutc = "LAMA"
        End Select

        reDel = modDatabase.$syConn.Exec("select flddeltime,fldpresent,flddeltype,flddelresult,flddelphysician,flddelassist,flddelspot,fldcomplication,flddelwt,fldbabypatno,fldcomment from tblconfinement where fldencounterval=&1", res["fldencounterval"])

        With asx
          .Add(CStr(i))
          .Add(modString.GetUniColumnTableFromList(["MR No.", res["fldencounterval"], "SR No.", res["fldencounterval"]]))
          If sDecrypt = True Then
            .Add(modPassword.DecryptPatData(res1["fldptnamefir"], res1["fldencrypt"]) & "<br>" & modPassword.DecryptPatData(res1["fldptnamelast"], res1["fldencrypt"]))
          Else
            .Add(res1["fldptnamefir"] & "<br>" & res1["fldptnamelast"])
          Endif
          .Add(modHMISRepOld.GetAgeContact36Format(res1["fldptbirday"], modPatient.GetRecordDate(res["fldencounterval"]), res1["fldethniccode"], res1["fldptcontact"])) ''age/contact
          .Add(res1["fldptaddvill"] & "<br>" & res1["fldptadddist"])
          If res1["fldrelation"] = "Husband" Then
            .Add(res1["fldptguardian"])
          Else
            .Add("")
          Endif
          .Add(modHMISRepOld.GravidaParity36Value(res["fldencounterval"]))
          .Add(modHMISRepOld.ANCVisit36(res["fldencounterval"]))
          .Add(modHMISRepOld.GetHivSyphilisTable(res["fldencounterval"]))
          .Add(modHMISRepOld.GetMaternalComplication(res["fldencounterval"])) ''obs complication
          .Add("") ''other complication
          .Add(modHMISRepOld.GetExamValueMatRegister(res["fldencounterval"], "(18) Treatment/Suggestion", "ANC%"))
          .Add(modString.GetUniColumnTableFromList(["Date", modDate.ConvertToLocaldate(Date(xdoa)), "Time", Time(xdoa), "Condition/Status", modPatient.GetPatExitComment(res["fldencounterval"], "Admitted")])) ''admission
          If reDel.Available Then
            reDel.MoveFirst
            .Add(modString.GetUniColumnTableFromList(["Date", modDate.ConvertToLocaldate(Date(reDel["flddeltime"])), "Time", Time(reDel["flddeltime"]), "Place", reDel["flddelspot"]])) ''delivery
            .Add(modString.GetUniColumnTableFromList(["Presentation", reDel["fldpresent"], "Type of Delivery", reDel["flddeltype"], "Delivery Attended By", reDel["flddelassist"]])) ''baby
            .Add(reDel["flddelphysician"]) ''attendant
            .Add(reDel["fldcomment"])  ''treatmet on delivery
          Else
            .Add("") ''delivery
            .Add("") ''baby
            .Add("") ''attendant
            .Add("")  ''treatmet on delivery
          Endif
          If reDel.Available Then
            .Add(modHMISRepOld.GetNewBornStatus36(res["fldencounterval"])) ''status
          Else
            .Add("") ''status
          Endif
          .Add(modHMISRepOld.GetExamValueMatRegister(res["fldencounterval"], "(25) Treatment/Suggestions", "Baby Examination"))
          .Add(modHMISRepOld.PNCVisit36(res["fldencounterval"])) ''pnc visit
          .Add(modHMISRepOld.BloodTransfuse36(res["fldencounterval"])) ''blood
          .Add(modHMISRepOld.GetExamValueMatRegister(res["fldencounterval"], "(28) Treatment/Suggestion", "PNC%"))
          .Add(modHMISRepOld.GetUniColumnTableFromList(["Date", modDate.ConvertToLocaldate(Date(xdod)), "Time", Time(xdod), "Length of Stay", Fix(modPatient.GetHospitalStayInHours(res["fldencounterval"]) / 24), "Outcome", xoutc])) ''discharge
          .Add(modHMISRepOld.MaterNeonDeath36(res["fldencounterval"])) ''death
          .Add(modHMISRepOld.MaternalIncentive36(res["fldencounterval"])) ''incentive
          .Add("") ''remark
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        i = i + 1
      Endif
    Next
  Endif

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End
