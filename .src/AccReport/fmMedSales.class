' Gambas class file

Private $ItemList As String[]
Private $rData As Result
Private $aMyFields As String[]
Private $SSQLFields As String[]
Private $ProgressBar1 As ProgressBar

Private $ColCount As Integer
Private $newColumn As String[]
Private $RepoStr As String

Public Sub Form_Open()

  Dim xhospfld As String

  modGeneralMain.ArrangeEmbedForms(Me, Panel1, "Column")
  Me.Icon = Picture[modGeneralMain.$strLogo]
  btnmnuqty.Menu = "mnuchart"

  cmbordcomp.List = modBasic.$AllCompPerList
  cmbordcomp.Text = "%"
  If modBasic.$ViewLockInventory = "Location" Then
    cmbdispcomp.Text = modBasic.$compID
    cmbdispcomp.Enabled = False
  Else
    cmbdispcomp.List = modBasic.$AllCompPerList
    cmbdispcomp.Text = "%"
  Endif
  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      ' cmblocation.Text = "Hospital"
      cmblocation.Text = modDataRepo.$RepositoryMode
      cmbvalue.Text = modBasic.$HospCode
      pnlocat.Enabled = False
    Else
      cmblocation.List = ["Hospital", "Municipality", "Category", "District", "Province"]
    Endif
  Else
    cmblocation.List = ["Category"]
  Endif

  cmbadmission.List = ["Recorded", "Registered", "Follow Up", "Refer(OPD)", "Death(OPD)", "Admitted", "Discharged", "LAMA", "Refer", "Death", "Absconder", "%"]
  cmbadmission.Text = "%"

  dtfir.Value = Now()
  dtlast.Value = Now()
  rbmed.Value = True
  rball.Value = True
  GetRoutesList()

  xhospfld = modDataRepo.HospitalField()
  $SSQLFields = ["fldencounterval", "fldencounterval", "flditemname", "flditemrate", "flditemqty", "flditemrate*flditemqty", "flddiscper", "fldtaxper", "fldditemamt", "fldtime", "fldbillno", "flditemno", "flditemno", "flditemno", "fldordcomp", "fldcomp", "fldid"]
  If xhospfld Then
    $SSQLFields.Add(xhospfld)
  Endif

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub cmblocation_Click()

  cmbvalue.Clear()
  If cmblocation.Text Then
    cmbvalue.List = modDataRepo.GetRepoValueListType(cmblocation.Text)
  Endif

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub mnufiscal_Click()

  Dim res As Result
  Dim xyear As String

  xyear = InputCombo("Select Fiscal Year Range", "Select Year", modBasic.$FiscalYearList, "", True)
  If xyear Then
    res = modDatabase.$myConn.Exec("select fldfrom,fldend from tblfiscalid where fldlabel=&1", xyear)
    If res.Available Then
      res.MoveFirst
      dtfir.Value = res["fldfrom"]
      dtlast.Value = res["fldend"]
    Endif
  Endif

End

Private Sub GetRoutesList()

  If rbmed.Value = True Then
    cmbroute.List = ["oral", "liquid", "fluid", "injection", "resp", "topical", "eye/ear", "anal/vaginal", "IVpush", "CIV", "IIV", "SC", "IM", "IT", "IDer", "ICar", "ISyn", "%"]
  Else If rbsurg.Value = True Then
    cmbroute.List = ["suture", "msurg", "ortho", "%"]
  Else If rbextra.Value = True Then
    cmbroute.List = ["extra", "%"]
  Endif
  cmbroute.Text = "%"

End

Public Sub rbmed_Click()

  GetRoutesList()

End

Public Sub rbsurg_Click()

  GetRoutesList()

End

Public Sub rbextra_Click()

  GetRoutesList()

End

Public Sub btnrefresh_Click()

  Dim res As Result
  Dim xtype As String

  If MMain.$WebReport = "Multiple" Then
    $RepoStr = modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text)
  Else
    $RepoStr = ""
  Endif
  If rbmed.Value = True Then
    xtype = "Medicines"
  Else If rbsurg.Value = True Then
    xtype = "Surgicals"
  Else If rbextra.Value = True Then
    xtype = "Extra Items"
  Endif
  res = modDatabase.$syConn.Exec("select distinct(flditemname) as col from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4" & $RepoStr, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), xtype, True)
  If res.Available Then
    $ItemList = modControlSub.GetDirectFillresult(res)
    FillListBox()
  Endif

End

Private Sub FillListBox()

  Dim xList As String[]

  If $ItemList Then
    If txtcustom.Text Then
      xList = modString.SelectStringArrayToText(txtcustom.Text, $ItemList)
    Else
      xList = $ItemList
    Endif
    If xList Then
      ListBox1.List = xList.Sort()
    Else
      ListBox1.Clear()
    Endif
  Endif

End

Public Sub txtcustom_Change()

  FillListBox()

End

Private Function GetSQLColumns() As String[]

  Dim xFldList As String[]
  Dim i As Integer

  modCustPatient.FillNewCOlumnCollection(Me.Tag)
  $newColumn = modCustPatient.CustomNewColumnsTitle(Me.Tag)
  xFldList = $SSQLFields.Copy()
  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      xFldList.Add("fldencounterval")
    Next
  Endif
  Return xFldList

End

Private Function ExecuteQuery($con As Connection, strItem As String, xFldList As String[]) As Result

  Dim sql As String
  Dim res As Result
  Dim xroute As String
  Dim xcateg As String
  Dim xdosing As String
  Dim xformat As String

  If rbmed.Value = True Then
    xcateg = "Medicines"
  Else If rbsurg.Value = True Then
    xcateg = "Surgicals"
  Else If rbextra.Value = True Then
    xcateg = "Extra Items"
  Endif

  If cmbroute.Text = "%" Then
    xroute = ""
  Else
    If rbmed.Value = True Then
      xroute = " and flditemname in(select fldbrandid from tblmedbrand where flddrug in(select flddrug from tbldrug where fldroute like &7))"
    Else If rbsurg.Value = True Then
      xroute = " and flditemname in(select fldbrandid from tblsurgbrand where fldsurgid in(select fldsurgid from tblsurgicals where fldsurgcateg like &7))"
    Else If rbextra.Value = True Then
      xroute = " and flditemname in(select fldbrandid from tblextrabrand)"
    Endif
  Endif

  If cmbordcomp.Text = "%" And If cmbadmission.Text = "%" Then
    xdosing = ""
  Else
    xdosing = " and fldparent in(select fldid from tblpatdosing where fldstatus like &8 and fldcomp_order like &9)"
  Endif

  If MMain.$WebReport = "Multiple" Then
    xformat = ""
    $RepoStr = modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text)
  Else
    If cmblocation.Text = "Category" Then
      xformat = " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldcategory like &{10}))"
    Else
      xformat = ""
    Endif
    $RepoStr = ""
  Endif

  sql = "select " & xFldList.Join(",") & " from tblpatbilling where flditemtype like &1 and fldtime>=&2 and fldtime<=&3 and fldcomp like &4 and fldsave=&5 and flditemname like &6" & xroute & xdosing & xformat & $RepoStr
  res = $con.Exec(sql, xcateg, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbdispcomp.Text, True, strItem, cmbroute.Text, cmbadmission.Text, cmbdispcomp.Text, cmbvalue.Text)

  Return res

End

Private Function ExecuteQueryList($con As Connection, strItem As String[], xFldList As String[]) As Result

  Dim sql As String
  Dim res As Result
  Dim xroute As String
  Dim xcateg As String
  Dim xdosing As String
  Dim xformat As String
  Dim i As Integer

  For i = 0 To strItem.Count - 1
    strItem[i] = "'" & strItem[i] & "'"
  Next
  If rbmed.Value = True Then
    xcateg = "Medicines"
  Else If rbsurg.Value = True Then
    xcateg = "Surgicals"
  Else If rbextra.Value = True Then
    xcateg = "Extra Items"
  Endif

  If cmbroute.Text = "%" Then
    xroute = ""
  Else
    If rbmed.Value = True Then
      xroute = " and flditemname in(select fldbrandid from tblmedbrand where flddrug in(select flddrug from tbldrug where fldroute like &7))"
    Else If rbsurg.Value = True Then
      xroute = " and flditemname in(select fldbrandid from tblsurgbrand where fldsurgid in(select fldsurgid from tblsurgicals where fldsurgcateg like &7))"
    Else If rbextra.Value = True Then
      xroute = " and flditemname in(select fldbrandid from tblextrabrand)"
    Endif
  Endif

  If cmbordcomp.Text = "%" And If cmbadmission.Text = "%" Then
    xdosing = ""
  Else
    xdosing = " and fldparent in(select fldid from tblpatdosing where fldstatus like &8 and fldcomp_order like &9)"
  Endif

  If MMain.$WebReport = "Multiple" Then
    xformat = ""
    $RepoStr = modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text)
  Else
    If cmblocation.Text = "Category" Then
      xformat = " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldcategory like &{10}))"
    Else
      xformat = ""
    Endif
    $RepoStr = ""
  Endif

  sql = "select " & xFldList.Join(",") & " from tblpatbilling where flditemtype like &1 and fldtime>=&2 and fldtime<=&3 and fldcomp like &4 and fldsave=&5 and flditemname in(" & strItem.Join(",") & ")" & xroute & xdosing & xformat & $RepoStr
  res = $con.Exec(sql, xcateg, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbdispcomp.Text, True, "%", cmbroute.Text, cmbadmission.Text, cmbdispcomp.Text, cmbvalue.Text)

  Return res

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant
  Dim i As Integer

  If Column = 1 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 3 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 4 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, -2)
  Else If Column = 5 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 6 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, -2)
  Else If Column = 7 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, -2)
  Else If Column = 8 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 9 Then
    Try xxx = modReportVar.GetDateTimeReport(xVariable, gb.GeneralDate)
  Else If Column = 11 Then
    xxx = modStock.GetStockNameFromStockno(xVariable)
  Else If Column = 12 Then
    xxx = modStock.GetBatchFromStockNo(xVariable)
  Else If Column = 13 Then
    xxx = modReportVar.GetDateTimeReport(modStock.GetExpiryFromStockNo(xVariable), gb.MediumDate)
  Else If Column = 17 Then
    xxx = modDataRepo.GetHospitalTextLabel(xVariable)
  Else
    xxx = xVariable
  Endif

  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      If Column = $ColCount + i Then
        xxx = modCustPatient.NewColValue(Me.Tag, $newColumn[i], xVariable)
      Endif
    Next
  Endif
  Return xxx

End

Public Sub btnfilldata_Click()

  Dim xitem As String
  Dim xFldList As String[]
  Dim xList As String[]

  TabStrip1.Index = 0
  Inc Application.Busy
  xFldList = GetSQLColumns()

  If rbsel.Value = True Then
    If chkcustom.Value = True Then
      xitem = Trim(txtcustom.Text) & "%"
      If xitem Then
        $rData = ExecuteQuery(modDatabase.$syConn, xitem, xFldList)
        If chkgrid.Value = True Then
          FillTransferGrid()
        Endif
        If chkchart.Value = True Then
          FillChartData(xitem)
        Endif
      Endif
    Else
      xList = modFillContainer.GetSelectedItemsListBox(ListBox1)
      $rData = ExecuteQueryList(modDatabase.$syConn, xList, xFldList)
      If chkgrid.Value = True Then
        FillTransferGrid()
      Endif
    Endif

  Else If rball.Value = True Then
    $rData = ExecuteQuery(modDatabase.$syConn, "%", xFldList)
    If chkgrid.Value = True Then
      FillTransferGrid()
    Endif

  Endif
  Dec Application.Busy

End

Private Sub FillTransferGrid()

  Dim i As Integer

  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
  $ColCount = $SSQLFields.Count
  With GridView1
    .Columns[0].Width = 125 * modBasic.$AppWidthRatio
    .Columns[1].Width = 175 * modBasic.$AppWidthRatio
    .Columns[2].Width = 275 * modBasic.$AppWidthRatio
    .Columns[3].Width = 100 * modBasic.$AppWidthRatio
    .Columns[4].Width = 75 * modBasic.$AppWidthRatio
    .Columns[5].Width = 100 * modBasic.$AppWidthRatio
    .Columns[6].Width = 75 * modBasic.$AppWidthRatio
    .Columns[7].Width = 75 * modBasic.$AppWidthRatio
    .Columns[8].Width = 100 * modBasic.$AppWidthRatio
    .Columns[9].Width = 150 * modBasic.$AppWidthRatio
    .Columns[10].Width = 150 * modBasic.$AppWidthRatio
    .Columns[11].Width = 300 * modBasic.$AppWidthRatio
    .Columns[12].Width = 100 * modBasic.$AppWidthRatio
    .Columns[13].Width = 125 * modBasic.$AppWidthRatio
    .Columns[14].Width = 75 * modBasic.$AppWidthRatio
    .Columns[15].Width = 75 * modBasic.$AppWidthRatio
    .Columns[16].Width = 1

    .Columns[0].Text = "Encounter"
    .Columns[1].Text = "Patient"
    .Columns[2].Text = "Particulars"
    .Columns[3].Text = "Rate"
    .Columns[4].Text = "QTY"
    .Columns[5].Text = "Gross"
    .Columns[6].Text = "Disc%"
    .Columns[7].Text = "Tax%"
    .Columns[8].Text = "Total"
    .Columns[9].Text = "DateTime"
    .Columns[10].Text = "Invoice"
    .Columns[11].Text = "Item Name"
    .Columns[12].Text = "Batch"
    .Columns[13].Text = "Expiry"
    .Columns[14].Text = "Order"
    .Columns[15].Text = "Sale"

    If $newColumn.Count Then
      For i = 0 To $newColumn.Count - 1
        .Columns[$ColCount + i].Text = $newColumn[i]
        .Columns[$ColCount + i].Width = 150 * modBasic.$AppWidthRatio
      Next
    Endif
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer)

  $rData.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView1, Row)
  If Column > $SSQLFields.Count - 1 Then
    GridView1.Data.RichText = modString.TextToHTML(GetGridViewValue(Column, $rData[$aMyFields[Column]]))
  Else
    GridView1.Data.Text = GetGridViewValue(Column, $rData[$aMyFields[Column]])
  Endif
  GridView1.Rows[Row].Height = Max(GridView1.Rows[Row].Height, GridView1.Data.Font.RichTextHeight(GridView1.Data.Text, GridView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (GridView1.Rows.Height - GridView1.Font.Height))
  GridView1.Data.WordWrap = True

End

Public Sub btnfullrep_Click()

  Dim xHeader As String[]
  Dim xhide As Integer[]
  Dim Column As Integer
  Dim xCollRow As Collection
  Dim xColum As Integer

  Dim $hGridExportTable As CExportResult
  Dim xparam1 As String
  Dim xparam2 As String
  Dim encColumn As Integer

  Dim xFldList As String[]

  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  xHeader = New String[]
  xhide = New Integer[]
  For Column = 0 To GridView1.Columns.Count - 1
    xHeader.Add(GridView1.Columns[Column].Text)
    If GridView1.Columns[Column].Width < 5 Then
      xhide.Add(Column)
    Endif
  Next
  xparam1 = "DISPENSING REPORT"
  xparam2 = modReportVar.GetDateTimeReport(modDate.StartSqlDate(dtfir.value), gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(modDate.EndSqlDate(dtlast.value), gb.MediumDate)
  encColumn = 3
  $hGridExportTable = New CExportResult(Me.Tag, xHeader, xhide, xparam1, xparam2, encColumn)

  Inc Application.Busy
  xFldList = GetSQLColumns()

  For Each $rData
    xCollRow = New Collection
    For xColum = 0 To xFldList.Count - 1
      xCollRow.Add(GetGridViewValue(xColum, $rData[xFldList[xColum]]), CStr(xColum))
    Next
    $hGridExportTable.Add($rData.Index, xCollRow)

    If MMain.$IsGUIApp = True Then
      $ProgressBar1.Value = ($rData.Index + 1) / $rData.Count
      Wait
    Endif
  Next

  Dec Application.Busy
  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif
  modControlSub.DisplayReportExport($hGridExportTable.HTMLPath())

End

Private Sub FillChartData(sItem As String)

  Dim xLst As String[]
  Dim sFile As String

  xLst = New String[]
  For Each $rData
    xLst.Add(DateDiff(dtfir.Value, $rData["fldtime"], modChart.GetDateIntegerFromSetting()))
  Next

  sFile = Temp()
  File.Save(sFile, xLst.Join(gb.NewLine))
  mnustats.Tag = sFile
  mnuexpochart.Tag = sItem
  If modBasic.$ChartExecStat = "PSPP" Then
    modImage.StretchtPictureToBox(PictureBox1, modChart.FrequencyChart(sFile, sItem & " : Patient Count"))
  Else
    modImage.StretchtPictureToBox(PictureBox1, modChart.FrequencyChart(sFile, sItem & " : Patient Count"))
  Endif

End

Public Sub PictureBox1_Menu()

  mnuchart.Popup

End

Public Sub mnuexpochart_Click()

  If Dialog.SelectDirectory() Then Return
  PictureBox1.Image.Save(Dialog.Path &/ mnuexpochart.Tag & ".png")

End

Public Sub mnustats_Click()

  If modBasic.$ChartExecStat = "PSPP" Then
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("freqtable", mnustats.Tag))
  Else
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("freqtable", mnustats.Tag))
  Endif

End

Public Sub chkchart_Click()

  TabStrip1.Index = 1

End

Public Sub GridView1_DblClick()

  Dim xx As Integer
  Dim yy As Integer

  xx = Mouse.StartX - GridView1.Left
  yy = Mouse.StartY - GridView1.Top

  Balloon.Info(("Current Column is ") & CStr(GridView1.Column + 1), GridView1, xx, yy)
  Balloon.Delay = 1000

End

Public Sub mnuenchart_Click()

  Dim xx As String
  Dim xField As String
  Dim Column As Integer
  Dim res As Result
  Dim xval As Variant
  Dim hFile As CUnivariate
  Dim xFldList As String[]
  Dim sOrder As String[]

  Dim hUniv As FmAnalyzeSett

  hUniv = New FmAnalyzeSett("Univariate", modGridView.GetGridViewColumns(GridView1))
  hUniv.ShowModal

  xFldList = GetSQLColumns()
  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif
  Inc Application.Busy
  hFile = New CUnivariate

  Column = modCustPatient.GetUnivariateColumn(0)
  xField = xFldList[Column]
  If rbsel.Value = True Then
    res = ExecuteQuery(modDatabase.$syConn, ListBox1.Text, [xField])
  Else If rball.Value = True Then
    res = ExecuteQuery(modDatabase.$syConn, "%", [xField])
  Endif

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Column, res[xField])
      If xval Then
        hFile.Add(xval)
      Endif

      If MMain.$IsGUIApp = True Then
        $ProgressBar1.Value = (res.Index + 1) / res.Count
        Wait
      Endif
    Next
  Endif
  Dec Application.Busy
  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif

  If modSettings.ShowSettingFromFIle("UnivariateAnalysis/DataType") = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetEncChartGridNew(hFile.GetSPSSFile(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrosstab_Click()

  Dim xx As String
  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hFile As CBivariate
  Dim xFldList As String[]
  Dim sOrder As String[]
  Dim hBivar As FmAnalyzeSett

  hBivar = New FmAnalyzeSett("Bivariate", modGridView.GetGridViewColumns(GridView1))
  hBivar.ShowModal

  xFldList = GetSQLColumns()
  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  Inc Application.Busy
  hFile = New CBivariate
  Row = modCustPatient.GetCrossVarRow(0)
  xFieRow = xFldList[Row]
  Column = modCustPatient.GetCrossVarColumn(0)
  xFieColm = xFldList[Column]
  If rbsel.Value = True Then
    res = ExecuteQuery(modDatabase.$syConn, ListBox1.Text, [xFieRow, xFieColm])
  Else If rball.Value = True Then
    res = ExecuteQuery(modDatabase.$syConn, "%", [xFieRow, xFieColm])
  Endif

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Row, res[xFieRow])
      yval = GetGridViewValue(Column, res[xFieColm])
      If xval And If yval Then
        hFile.Add([xval, yval])
      Endif

      If MMain.$IsGUIApp = True Then
        $ProgressBar1.Value = (res.Index + 1) / res.Count
        Wait
      Endif
    Next
  Endif
  Dec Application.Busy
  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif

  If modCustPatient.$CrossOutcomeType = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetCrossTabStatNew(hFile.GetSPSSFile(), hFile.GetGroups(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrotab_Click()

  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hForm As FmGridCrossTab
  Dim xForm As CCrossTab
  Dim xFldList As String[]
  Dim hGdChr As FmAnalyzeSett

  hGdChr = New FmAnalyzeSett("GridCrossTab", modGridView.GetGridViewColumns(GridView1))
  hGdChr.ShowModal

  xFldList = GetSQLColumns()
  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  If modCustPatient.$TabRowColumn And If modCustPatient.$TabFieldColumn Then
    xForm = New CCrossTab
    Inc Application.Busy
    Row = CInt(modCustPatient.$TabRowColumn) - 1
    xFieRow = xFldList[Row]
    Column = CInt(modCustPatient.$TabFieldColumn) - 1
    xFieColm = xFldList[Column]
    If rbsel.Value = True Then
      res = ExecuteQuery(modDatabase.$syConn, ListBox1.Text, [xFieRow, xFieColm])
    Else If rball.Value = True Then
      res = ExecuteQuery(modDatabase.$syConn, "%", [xFieRow, xFieColm])
    Endif

    If res.Available Then
      For Each res
        xval = GetGridViewValue(Row, res[xFieRow])
        yval = GetGridViewValue(Column, res[xFieColm])
        If xval And If yval Then
          xForm.Add([xval, yval])
        Endif

        If MMain.$IsGUIApp = True Then
          $ProgressBar1.Value = (res.Index + 1) / res.Count
          Wait
        Endif
      Next
    Endif
    Dec Application.Busy

    hForm = New FmGridCrossTab(GridView1.Columns[Row].Text, xForm.GetSPSSFile())
    hForm.ShowModal
    modExternal.$ExecValueColl.Clear()
  Endif

  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif

End

Public Sub mnugridsummary_Click()

  Dim xx As String
  Dim ChapCol As String
  Dim GropCol As String
  Dim xChapList As String[]
  Dim xGropList As String[]

  Dim res As Result
  Dim valCol As String
  Dim xFieldList As String[]

  Dim xFinList As Variant[]
  Dim xrowVar As Variant[]
  Dim xchapval As String
  Dim xgroup As String
  Dim xPath As String
  Dim xFldList As String[]

  Dim hGdSum As FmAnalyzeSett

  hGdSum = New FmAnalyzeSett("GridSummary", modGridView.GetGridViewColumns(GridView1))
  hGdSum.ShowModal

  xFldList = GetSQLColumns()
  Inc Application.Busy
  xFieldList = New String[]
  If modCustPatient.$SumChapterColumn Then
    ChapCol = xFldList[modCustPatient.$SumChapterColumn - 1]
    xFieldList.Add(ChapCol)
  Endif
  GropCol = xFldList[modCustPatient.$SumGroupColumn - 1]
  valCol = xFldList[modCustPatient.$SumValueColumn - 1]
  xFieldList.Add(GropCol)
  xFieldList.Add(valCol)

  xChapList = New String[]
  xGropList = New String[]
  xFinList = New Variant[]
  If rbsel.Value = True Then
    res = ExecuteQuery(modDatabase.$syConn, ListBox1.Text, xFieldList)
  Else If rball.Value = True Then
    res = ExecuteQuery(modDatabase.$syConn, "%", xFieldList)
  Endif

  If res.Available Then
    For Each res
      xrowVar = New Variant[]
      If modCustPatient.$SumChapterColumn Then
        xchapval = GetGridViewValue(modCustPatient.$SumChapterColumn - 1, res[ChapCol])
        xrowVar.Add(xchapval)
        xChapList.Add(xchapval)
      Endif
      xgroup = GetGridViewValue(modCustPatient.$SumGroupColumn - 1, res[GropCol])
      xrowVar.Add(xgroup)
      xGropList.Add(xgroup)

      xrowVar.Add(GetGridViewValue(modCustPatient.$SumValueColumn - 1, res[valCol]))
      xFinList.Add(xrowVar)
    Next
  Endif
  Dec Application.Busy

  xx = "Date: " & modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  If modCustPatient.$SumGroupColumn And If modCustPatient.$SumValueColumn Then
    If modCustPatient.$SumChapterColumn Then
      If modCustPatient.$SummaryType = "Summation(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapterTableReport("Service Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else If modCustPatient.$SummaryType = "Count(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapCountTableReport("Service Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else
        xPath = modCHTMLReport.SummaryGridChapterReport("Service Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Endif
    Else
      xPath = modCHTMLReport.SummaryGridReport("Service Report Summary", xx, modString.GetDistinctStringArray(xGropList), xFinList)
    Endif
    modControlSub.DisplayReportExport(xPath)
  Endif

End

Public Sub mnuaddcolm_Click()

  Dim hForm As FmAddNewColumn

  hForm = New FmAddNewColumn(Me.Tag)
  hForm.ShowModal

End

Public Sub mnucolumns_Click()

  If Message.Question(modGridView.GetColumnsListString(GridView1), ("OK"), ("Setting")) = 2 Then
    fmChartSetting.Close
    fmChartSetting.ShowModal
  Endif

End

Public Sub mnuexpocolumn_Click()

  Dim hForm As FmCustColumnSet

  hForm = New FmCustColumnSet(Me.Tag)
  hForm.ShowModal

End
