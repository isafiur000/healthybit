' Gambas class file

Private $strType As String
Private xItemList As String[]
Private $RepoStr As String
Private $quickReport As String

Public Sub _new(sLocaType As String, sLocation As String)

  cmblocation.Text = sLocaType
  cmbvalue.Text = sLocation

End

Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me)
  rbmed.Value = True
  If modBasic.$ViewLockInventory = "Location" Then
    chkall.Value = False
    chkall.Enabled = False
  Endif
  dtfir.Value = Now()
  dtlast.Value = Now()
  $RepoStr = modDataRepo.GetRepoLastStr()
  $quickReport = modSettings.ShowSettingFromFIle("HealthReport/QuickInventory")

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Private Function GetCompID() As String

  Dim xcomp As String

  If chkall.Value = True Then
    xcomp = "%"
  Else
    xcomp = modBasic.$compID
  Endif
  Return xcomp

End

Public Sub btnaddlist_Click()

  Dim aList As String[]

  aList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldstockid) as col from tblentry where fldcategory=&1", $strType))
  If aList Then
    xItemList = GridListView(("Select Particulars"), aList.Sort())
  Endif

End

Public Sub btnrefresh_Click()

  If xItemList Then
    GridView2.Clear
    GridView2.Columns.Count = 7
    GridView2.Rows.Count = xItemList.Count
    ResizeGrid()

    If $quickReport = "Disable" Then
      ShowStockGrid(xItemList)
    Else
      ShowStockCollGrid(xItemList)
    Endif
  Endif

End

'NOTE:TWO CON
Private Sub ShowStockGrid(xList As String[])

  Dim Row As Integer

  Inc Application.Busy
  For Row = 0 To xList.Count - 1
    GridView2[Row, 0].Text = xList[Row]
    GridView2[Row, 1].Text = modInventory.GetTransactionPurchase(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xList[Row], cmblocation.Text, cmbvalue.Text)
    GridView2[Row, 2].Text = modInventory.GetTransactionBulkSale(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xList[Row], cmblocation.Text, cmbvalue.Text)
    GridView2[Row, 3].Text = modInventory.GetTransactionBilling(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xList[Row], cmblocation.Text, cmbvalue.Text)
    GridView2[Row, 4].Text = modInventory.GetTransactionTransferFrom(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xList[Row], cmblocation.Text, cmbvalue.Text)
    GridView2[Row, 5].Text = modInventory.GetTransactionTransferTo(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xList[Row], cmblocation.Text, cmbvalue.Text)
    GridView2[Row, 6].Text = modInventory.GetTransactionAdjustment(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xList[Row], cmblocation.Text, cmbvalue.Text)
    GridView2.Rows[Row].Height = Max(GridView2.Rows[Row].Height, GridView2[Row, 0].Font.RichTextHeight(GridView2[Row, 0].Text, GridView2.Columns[0].Width - 5 * modBasic.$AppWidthRatio) + (GridView2.Rows.Height - GridView2.Font.Height))
    GridView2[Row, 0].WordWrap = True
  Next
  Dec Application.Busy

End

Private Sub ShowStockCollGrid(xList As String[])

  Dim bCollPurchPast As Collection
  Dim bCollBulkPast As Collection
  Dim bCollSalePast As Collection
  Dim bCollSentPast As Collection
  Dim bCollRecvPast As Collection
  Dim bCollAdjusPast As Collection
  Dim Row As Integer

  Inc Application.Busy
  bCollPurchPast = modTransaction.GetTransactionPurchaseColl(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), cmblocation.Text, cmbvalue.Text)
  bCollBulkPast = modTransaction.GetTransactionBulkSaleColl(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), cmblocation.Text, cmbvalue.Text)
  bCollSalePast = modTransaction.GetTransactionBillingColl(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), cmblocation.Text, cmbvalue.Text)
  bCollSentPast = modTransaction.GetTransactionTransferFromColl(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), cmblocation.Text, cmbvalue.Text)
  bCollRecvPast = modTransaction.GetTransactionTransferToColl(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), cmblocation.Text, cmbvalue.Text)
  bCollAdjusPast = modTransaction.GetTransactionAdjustmentColl(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), cmblocation.Text, cmbvalue.Text)

  For Row = 0 To xList.Count - 1
    GridView2[Row, 0].Text = xList[Row]
    GridView2[Row, 1].Text = bCollPurchPast[xList[Row]] 'modInventory.GetTransactionPurchase(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xList[Row], cmblocation.Text, cmbvalue.Text)
    GridView2[Row, 2].Text = bCollBulkPast[xList[Row]] 'modInventory.GetTransactionBulkSale(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xList[Row], cmblocation.Text, cmbvalue.Text)
    GridView2[Row, 3].Text = bCollSalePast[xList[Row]] 'modInventory.GetTransactionBilling(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xList[Row], cmblocation.Text, cmbvalue.Text)
    GridView2[Row, 4].Text = bCollSentPast[xList[Row]] 'modInventory.GetTransactionTransferFrom(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xList[Row], cmblocation.Text, cmbvalue.Text)
    GridView2[Row, 5].Text = bCollRecvPast[xList[Row]] 'modInventory.GetTransactionTransferTo(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xList[Row], cmblocation.Text, cmbvalue.Text)
    GridView2[Row, 6].Text = bCollAdjusPast[xList[Row]] 'modInventory.GetTransactionAdjustment(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xList[Row], cmblocation.Text, cmbvalue.Text)
    GridView2.Rows[Row].Height = Max(GridView2.Rows[Row].Height, GridView2[Row, 0].Font.RichTextHeight(GridView2[Row, 0].Text, GridView2.Columns[0].Width - 5 * modBasic.$AppWidthRatio) + (GridView2.Rows.Height - GridView2.Font.Height))
    GridView2[Row, 0].WordWrap = True
  Next
  Dec Application.Busy

End

Private Sub ResizeGrid()

  With GridView2
    .Columns[0].Width = 300 * modBasic.$AppWidthRatio
    .Columns[1].Width = 75 * modBasic.$AppWidthRatio
    .Columns[2].Width = 75 * modBasic.$AppWidthRatio
    .Columns[3].Width = 75 * modBasic.$AppWidthRatio
    .Columns[4].Width = 75 * modBasic.$AppWidthRatio
    .Columns[5].Width = 75 * modBasic.$AppWidthRatio
    .Columns[6].Width = 75 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Particulars"
    .Columns[1].Text = "Purchase"
    .Columns[2].Text = "Consume"
    .Columns[3].Text = "Dispensed"
    .Columns[4].Text = "TransOut"
    .Columns[5].Text = "TransIn"
    .Columns[6].Text = "Adjusted"
  End With

End

Public Sub rbmed_Click()

  $strType = "Medicines"

End

Public Sub rbsurg_Click()

  $strType = "Surgicals"

End

Public Sub rbextra_Click()

  $strType = "Extra Items"

End

Private Function GetFieldList(sType As String) As String[]

  Dim xhospfld As String
  Dim xList As String[]

  xList = New String[]
  xhospfld = modDataRepo.HospitalField()
  If sType = "Dispensed" Then
    xList = ["fldencounterval", "fldencounterval", "flditemname", "flditemrate", "flditemqty", "flddiscper", "fldtaxper", "fldditemamt", "fldtime", "fldbillno", "flditemno", "fldordcomp", "fldcomp", "fldid"]
  Else If sType = "Purchase" Then
    xList = ["fldsuppname", "fldpurtype", "fldstockid", "flsuppcost", "fldnetcost", "(fldtotalqty-fldreturnqty)", "(fldtotalqty-fldreturnqty)*fldnetcost", "fldtime", "fldbillno", "fldreference", "fldcomp", "fldid"]
  Else If sType = "Consume" Then
    xList = ["fldtarget", "fldcategory", "fldstockid", "fldnetcost", "(fldqtydisp-fldqtyret)", "fldnetcost*(fldqtydisp-fldqtyret)", "fldtime", "fldreference", "fldcomp", "fldid"]
  Endif
  If xhospfld Then
    xList.Add(xhospfld)
  Endif
  Return xList

End

Public Sub GridView2_Click()

  Dim xFldList As String[]
  Dim hForm As FRequest
  Dim xformat As String
  Dim sql As String
  Dim res As Result

  If GridView2.Rows.Selection.Count Then
    If GridView2.Column = 1 Then
      xformat = "Transaction:Purchase"
      xFldList = GetFieldList("Purchase")
      sql = "select " & xFldList.Join(",") & " from tblpurchase where fldtime>=&1 and fldtime<=&2 and fldcomp like &3 and fldstockid like &4 and fldcategory=&5 and fldsav=&6" & $RepoStr                                  ''
      res = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), GetCompID(), GridView2[GridView2.Row, 0].Text, $strType, False)

    Else If GridView2.Column = 2 Then
      xformat = "Transaction:Consume"
      xFldList = GetFieldList("Consume")
      sql = "select " & xFldList.Join(",") & " from tblbulksale where fldtime>=&1 and fldtime<=&2 and fldcomp like &3 and fldstockid like &4 and fldcategory=&5 and fldsave=&6" & $RepoStr                           ''
      res = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), GetCompID(), GridView2[GridView2.Row, 0].Text, $strType, True)

    Else If GridView2.Column = 3 Then
      xformat = "Transaction:Dispensed"
      xFldList = GetFieldList("Dispensed")
      sql = "select " & xFldList.Join(",") & " from tblpatbilling where fldtime>=&1 and fldtime<=&2 and fldcomp like &3 and fldsave=&4 and flditemtype=&5 and flditemno in(select fldstockno from tblentry where fldstockid like &6)" & $RepoStr                                 ''
      res = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), GetCompID(), True, $strType, GridView2[GridView2.Row, 0].Text)

    Endif
    If xformat Then
      If res.Available Then
        hForm = New FRequest(res, GridView2[GridView2.Row, 0].Text, xformat, False)
        hForm.ShowModal
      Endif
    Endif

  Endif

End

Public Sub btnexpo_Click()

  modCHTMLReport.ExportGridToHTML(GridView2, "Transaction Report", modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End
