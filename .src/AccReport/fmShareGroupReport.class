' Gambas class file

Private $rData As Result
Private $aMyFields As String[]
Private $SSQLFields As String[]
Private $sUser As String
Private $ProgressBar1 As ProgressBar

Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me)
  cmbusertype.List = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flditem) as col from tblprocedureuser"))
  cmbusertype.Add("%")
  cmbusertype.Text = "%"
  cmbpackage.List = modNonMedical.FillDiscountCombo()
  cmbpackage.Add("%")
  cmbpackage.Text = "%"
  cmbcashmode.List = ["Credit", "Cash", "%"]
  cmbcashmode.Text = "%"
  cmbadmission.List = ["OPD", "IPD", "Any"]
  cmbadmission.Text = "Any"
  cmbcategory.List = modNonMedical.GetGroupNameAccount()
  cmbcategory.Add("%")
  cmbcategory.Text = "%"

  cmbdisc.List = ["=", ">=", "<=", ">", "<"]
  cmbdisc.Text = ">"
  cmbitemname.Text = "%"

  dtfir.Value = Now()
  dtlast.Value = Now()
  rbentry.Value = True
  rbselect.Value = True
  rbtotal.Value = True
  rbshareamt.Value = True

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub cmbusertype_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbusertype)
  modFillContainer.RestrictComboToContent(cmbusertype)

End

Public Sub cmbpackage_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbpackage)
  modFillContainer.RestrictComboToContent(cmbpackage)

End

Public Sub cmbcategory_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbcategory)
  modFillContainer.RestrictComboToContent(cmbcategory)

End

Public Sub cmbitemname_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbitemname)
  modFillContainer.RestrictComboToContent(cmbitemname)

End

Public Sub cmbcashmode_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbcashmode)
  modFillContainer.RestrictComboToContent(cmbcashmode)

End

Public Sub cmbadmission_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbadmission)
  modFillContainer.RestrictComboToContent(cmbadmission)

End

Public Sub cmbcategory_Click()

  Dim res As Result

  If cmbcategory.Text Then
    If cmbcategory.Text = "%" Then
      res = modDatabase.$syConn.Exec("select distinct(flditemname) as col from tblprocedureshare")
    Else
      res = modDatabase.$syConn.Exec("select distinct(flditemname) as col from tblprocedureshare where flditemname in(select flditemname from tblreportgroup where fldgroup=&1)", cmbcategory.Text)
    Endif
    cmbitemname.List = modControlSub.GetDirectFillresult(res)                                ''
    cmbitemname.Add("%")
  Endif
  cmbitemname.Text = "%"

End

Public Sub btnuserrefr_Click()

  Dim res As Result
  Dim pic1 As Picture

  If rbinv.Value = True Then
    res = modDatabase.$syConn.Exec("select flduserid as col1,fldusername as col2 from tbluser where flduserid in(select fldvalue from tblpatgenshare where flditemid in(select fldid from tblpatbilling where fldtime>=&1 and fldtime<=&2) and fldusertype like &3 and fldsave=&4)", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbusertype.Text, True)
  Else
    res = modDatabase.$syConn.Exec("select flduserid as col1,fldusername as col2 from tbluser where flduserid in(select fldvalue from tblpatgenshare where fldtime>=&1 and fldtime<=&2 and fldusertype like &3 and fldsave=&4)", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbusertype.Text, True)                                        '''
  Endif
  pic1 = Picture["icon:/small/identity"]
  lstitem.Clear()
  For Each res
    lstitem.Add(res["col1"], res["col2"], pic1)
  Next

End

Private Function GetTotalFormat() As String

  Dim xx As String

  If rbrate.Value = True Then
    xx = "SubTotal"
  Else If rbtotal.Value = True Then
    xx = "NetTotal"
  Endif
  Return xx

End

Private Function GetShareInput() As String

  Dim xx As String

  If rbshareper.Value = True Then
    xx = "Percent"
  Else If rbshareamt.Value = True Then
    xx = "Amount"
  Endif
  Return xx

End

Private Sub GetFieldList()

  Dim xhospfld As String
  Dim xList As String[]

  xList = New String[]
  xhospfld = modDataRepo.HospitalField()
  If rbrate.Value = True Then
    xList = ["tblpatgenshare.fldid", "tblpatgenshare.fldencounterval", "tblpatgenshare.fldencounterval", "tblpatbilling.flditemname", "tblpatbilling.flditemrate", "(tblpatbilling.flditemqty-tblpatbilling.fldretqty)", "(tblpatbilling.flditemrate*(tblpatbilling.flditemqty-tblpatbilling.fldretqty))", "tblpatgenshare.fldid", "tblpatgenshare.fldchange", "tblpatgenshare.fldid", "tblpatgenshare.fldid", "tblpatbilling.fldtime", "tblpatgenshare.fldtime", "tblpatbilling.fldbillno", "tblpatbilling.fldbilltype", "tblpatbilling.flddisctype", "tblpatgenshare.fldusertype", "tblpatgenshare.fldvalue", "tblpatgenshare.flditemid", "tblpatgenshare.flditemid"]
  Else If rbtotal.Value = True Then
    xList = ["tblpatgenshare.fldid", "tblpatgenshare.fldencounterval", "tblpatgenshare.fldencounterval", "tblpatbilling.flditemname", "tblpatbilling.flditemrate", "(tblpatbilling.flditemqty-tblpatbilling.fldretqty)", "(tblpatbilling.flditemrate*(tblpatbilling.flditemqty-tblpatbilling.fldretqty)*(1-tblpatbilling.flddiscper/100))", "tblpatgenshare.fldid", "tblpatgenshare.fldchange", "tblpatgenshare.fldid", "tblpatgenshare.fldid", "tblpatbilling.fldtime", "tblpatgenshare.fldtime", "tblpatbilling.fldbillno", "tblpatbilling.fldbilltype", "tblpatbilling.flddisctype", "tblpatgenshare.fldusertype", "tblpatgenshare.fldvalue", "tblpatgenshare.flditemid", "tblpatgenshare.flditemid"]                ''
  Endif
  If xhospfld Then
    xList.Add(xhospfld)
  Endif
  $SSQLFields = xList

End

Private Function ExecuteQuery(xFldList As String[], sUser As String, $con As Connection) As Result

  Dim sql As String
  Dim res As Result
  Dim xregist As String
  Dim xregval As String
  Dim xdiscstr As String

  If cmbadmission.Text = "Any" Then
    xregist = "" '" and tblpatbilling.fldcurrlocat like &6"
    xregval = "%"
  Else If cmbadmission.Text = "OPD" Then
    xregist = " and tblpatbilling.fldcurrlocat in(select flddept from tbldepartment where fldcateg<>&6)"
    xregval = "Patient Ward"
  Else If cmbadmission.Text = "IPD" Then
    xregist = " and tblpatbilling.fldcurrlocat in(select fldbed from tbldepartmentbed where flddept in(select flddept from tbldepartment where fldcateg like &6))"
    xregval = "Patient Ward"
  Endif

  If chkdiscount.Value = True Then
    xdiscstr = " and tblpatbilling.flddiscper" & cmbdisc.Text & "&{14}"
  Else
    xdiscstr = ""
  Endif

  If cmbcategory.Text = "%" Then
    If rbinv.Value = True Then
      sql = "select " & xFldList.Join(",") & " from tblpatgenshare inner join tblpatbilling on tblpatgenshare.flditemid=tblpatbilling.fldid " & "where tblpatbilling.fldsave=&1 and tblpatbilling.flditemname like &2 and tblpatbilling.fldbilltype like &3 and tblpatbilling.flddisctype like &4 and (tblpatbilling.flditemqty-tblpatbilling.fldretqty)>&{13}" & xregist & " and tblpatgenshare.fldvalue like &7 and tblpatgenshare.fldactive=&8 and tblpatbilling.fldtime>=&9 and tblpatbilling.fldtime<=&{10} and tblpatgenshare.fldusertype like &{11} and tblpatgenshare.fldsave=&{12}" & xdiscstr          ''
    Else
      sql = "select " & xFldList.Join(",") & " from tblpatgenshare inner join tblpatbilling on tblpatgenshare.flditemid=tblpatbilling.fldid " & "where tblpatbilling.fldsave=&1 and tblpatbilling.flditemname like &2 and tblpatbilling.fldbilltype like &3 and tblpatbilling.flddisctype like &4 and (tblpatbilling.flditemqty-tblpatbilling.fldretqty)>&{13}" & xregist & " and tblpatgenshare.fldvalue like &7 and tblpatgenshare.fldactive=&8 and tblpatgenshare.fldtime>=&9 and tblpatgenshare.fldtime<=&{10} and tblpatgenshare.fldusertype like &{11} and tblpatgenshare.fldsave=&{12}" & xdiscstr         ''
    Endif
  Else
    If rbinv.Value = True Then
      sql = "select " & xFldList.Join(",") & " from tblpatgenshare inner join tblpatbilling on tblpatgenshare.flditemid=tblpatbilling.fldid " & "where tblpatbilling.fldsave=&1 and tblpatbilling.flditemname like &2 and tblpatbilling.fldbilltype like &3 and tblpatbilling.flddisctype like &4 and tblpatbilling.flditemname in(select flditemname from tblreportgroup where fldgroup like &5) and (tblpatbilling.flditemqty-tblpatbilling.fldretqty)>&{13}" & xregist & " and tblpatgenshare.fldvalue like &7 and tblpatgenshare.fldactive=&8 and tblpatbilling.fldtime>=&9 and tblpatbilling.fldtime<=&{10} and tblpatgenshare.fldusertype like &{11} and tblpatgenshare.fldsave=&{12}" & xdiscstr          ''
    Else
      sql = "select " & xFldList.Join(",") & " from tblpatgenshare inner join tblpatbilling on tblpatgenshare.flditemid=tblpatbilling.fldid " & "where tblpatbilling.fldsave=&1 and tblpatbilling.flditemname like &2 and tblpatbilling.fldbilltype like &3 and tblpatbilling.flddisctype like &4 and tblpatbilling.flditemname in(select flditemname from tblreportgroup where fldgroup like &5) and (tblpatbilling.flditemqty-tblpatbilling.fldretqty)>&{13}" & xregist & " and tblpatgenshare.fldvalue like &7 and tblpatgenshare.fldactive=&8 and tblpatgenshare.fldtime>=&9 and tblpatgenshare.fldtime<=&{10} and tblpatgenshare.fldusertype like &{11} and tblpatgenshare.fldsave=&{12}" & xdiscstr         ''
    Endif
  Endif
  res = $con.Exec(sql, True, cmbitemname.Text, cmbcashmode.Text, cmbpackage.Text, cmbcategory.Text, xregval, sUser, "Active", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbusertype.Text, True, 0, txtdisc.Value)
  Return res

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant
  Dim aCon As Connection

  If fmshareGroup.$sCon.Opened = True Then
    aCon = fmshareGroup.$sCon
  Else
    aCon = modDatabase.$syConn
  Endif

  If Column = 2 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 4 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 6 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 7 Then
    If rbshareper.Value = True Then
      xxx = Round(modSharingGroup.GetUserPayPercentGroup("Punched", aCon, xVariable), -2)
    Else If rbshareamt.Value = True Then
      xxx = Round(modSharingGroup.GetUserPayAmountGroup("Punched", aCon, xVariable), -2)
    Endif
  Else If Column = 8 Then
    xxx = Round(xVariable, -2)
  Else If Column = 9 Then
    xxx = Round(modSharingGroup.GetUserPayTaxGroup("Punched", aCon, xVariable), -2)
  Else If Column = 10 Then
    If rbshareper.Value = True Then
      xxx = Round(modSharingGroup.GetUserPayOrReferAmtGroup("Punched", aCon, xVariable, GetTotalFormat()), -2)
    Else If rbshareamt.Value = True Then
      xxx = Round(modSharingGroup.GetUserPayOrReferDirectGroup("Punched", aCon, xVariable, GetTotalFormat()), -2)
    Endif
  Else If Column = 11 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.GeneralDate)
  Else If Column = 12 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.GeneralDate)
  Else If Column = 17 Then
    xxx = modGeneral.GetUserFullName(xVariable)
  Else If Column = 18 Then
    xxx = modNonMedical.GetClaimCodeFromBilling(xVariable)
  Else
    xxx = xVariable
  Endif

  Return xxx

End

Public Sub btnshow_Click()

  Dim aCon As Connection

  If fmshareGroup.$sCon.Opened = True Then
    aCon = fmshareGroup.$sCon
  Else
    aCon = modDatabase.$syConn
  Endif

  GetFieldList()
  If rbselect.Value = True Then
    If lstitem.Selection.Count Then
      $sUser = lstitem.Current.Key
      $rData = ExecuteQuery($SSQLFields.Copy(), $sUser, aCon)
    Endif
  Else If rballuser.Value = True Then
    $rData = ExecuteQuery($SSQLFields.Copy(), "%", aCon)
  Endif
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
  ShowSaleData()

End

Public Sub GridView1_Data(Row As Integer, Column As Integer)

  $rData.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView1, Row)
  GridView1.Data.Text = GetGridViewValue(Column, $rData[$aMyFields[Column]])

End

Private Sub ShowSaleData()

  With GridView1
    .Columns[0].Width = 1
    .Columns[1].Width = 125 * modBasic.$AppWidthRatio
    .Columns[2].Width = 175 * modBasic.$AppWidthRatio
    .Columns[3].Width = 250 * modBasic.$AppWidthRatio
    .Columns[4].Width = 100 * modBasic.$AppWidthRatio
    .Columns[5].Width = 75 * modBasic.$AppWidthRatio
    .Columns[6].Width = 100 * modBasic.$AppWidthRatio
    .Columns[7].Width = 75 * modBasic.$AppWidthRatio
    .Columns[8].Width = 75 * modBasic.$AppWidthRatio
    .Columns[9].Width = 75 * modBasic.$AppWidthRatio
    .Columns[10].Width = 100 * modBasic.$AppWidthRatio
    .Columns[11].Width = 125 * modBasic.$AppWidthRatio
    .Columns[12].Width = 125 * modBasic.$AppWidthRatio
    .Columns[13].Width = 125 * modBasic.$AppWidthRatio
    .Columns[14].Width = 75 * modBasic.$AppWidthRatio
    .Columns[15].Width = 125 * modBasic.$AppWidthRatio
    .Columns[16].Width = 100 * modBasic.$AppWidthRatio
    .Columns[17].Width = 150 * modBasic.$AppWidthRatio
    .Columns[18].Width = 100 * modBasic.$AppWidthRatio
    .Columns[19].Width = 75 * modBasic.$AppWidthRatio

    .Columns[1].Text = "Encounter"
    .Columns[2].Text = "PatientName"
    .Columns[3].Text = "Particulars"
    .Columns[4].Text = "Rate"
    .Columns[5].Text = "QTY"
    .Columns[6].Text = "Total"
    If rbshareper.Value = True Then
      .Columns[7].Text = "Share%"
    Else If rbshareamt.Value = True Then
      .Columns[7].Text = "ShareAmt"
    Endif
    .Columns[8].Text = "Extra"
    .Columns[9].Text = "TDS%"
    .Columns[10].Text = "NetAmt"
    .Columns[11].Text = "BillingDate"
    .Columns[12].Text = "EntryDate"
    .Columns[13].Text = "Invoice"
    .Columns[14].Text = "Mode"
    .Columns[15].Text = "Package"
    .Columns[16].Text = "Position"
    .Columns[17].Text = "UserName"
    .Columns[18].Text = "Reference"
    .Columns[19].Text = "ItemNo"
  End With

End

Public Sub btnexport_Click()

  Dim xparam2 As String
  Dim xparam1 As String

  xparam1 = "USER SHARING CATEG: " & cmbcategory.Text & " PACK: " & cmbpackage.Text & " POS: " & cmbusertype.Text
  xparam2 = "DATE: " & modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate) & " TYPE: " & cmbcashmode.Text & " STATE: " & cmbadmission.Text
  modCHTMLReport.ExportGridToHTML(GridView1, xparam1, xparam2)

End

Public Sub btncalcnew_Click()

  Dim xx As Float
  Dim xamt As Float
  Dim aCon As Connection

  If fmshareGroup.$sCon.Opened = True Then
    aCon = fmshareGroup.$sCon
  Else
    aCon = modDatabase.$syConn
  Endif

  Inc Application.Busy
  xx = 0
  For Each $rData
    If rbshareper.Value = True Then
      xamt = Round(modSharingGroup.GetUserPayOrReferAmtGroup("Punched", aCon, $rData["tblpatgenshare.fldid"], GetTotalFormat()), -2)
    Else If rbshareamt.Value = True Then
      xamt = Round(modSharingGroup.GetUserPayOrReferDirectGroup("Punched", aCon, $rData["tblpatgenshare.fldid"], GetTotalFormat()), -2)
    Endif
    xx = xx + xamt
  Next
  txttotal.Value = Round(xx, -2)
  Dec Application.Busy

End

' Public Sub btncalc_Click()
'
'   Inc Application.Busy
'   txttotal.Value = Round(modGridView.SumGridAmountt(GridView1, 9) + modGridView.SumGridAmountt(GridView1, 10), -2)
'   Dec Application.Busy
'
' End

Public Sub GridView1_DblClick()

  Dim xx As Integer
  Dim yy As Integer

  xx = Mouse.StartX - GridView1.Left
  yy = Mouse.StartY - GridView1.Top

  Balloon.Info(("Current Column is ") & CStr(GridView1.Column + 1), GridView1, xx, yy)
  Balloon.Delay = 1000

End

Public Sub btnsummary_Click()

  Dim xx As String

  xx = "Date: " & modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  modGridAnalyze.CreateOldGridViewSummary(GridView1, "SHARE SUMMARY", xx)

End

Public Sub btnposition_Click()

  Dim xPath As String
  Dim xList As String[]
  Dim aCon As Connection

  If fmshareGroup.$sCon.Opened = True Then
    aCon = fmshareGroup.$sCon
  Else
    aCon = modDatabase.$syConn
  Endif

  If cmbusertype.Text Then
    cmbadmission.Text = "Any"
    If rbinv.Value = True Then
      xList = modControlSub.GetDirectFillresult(aCon.Exec("select distinct(fldvalue) from tblpatgenshare where flditemid in(select fldid from tblpatbilling where fldtime>=&1 and fldtime<=&2) and fldusertype like &3", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbusertype.Text))
    Else
      xList = modControlSub.GetDirectFillresult(aCon.Exec("select distinct(fldvalue) from tblpatgenshare where fldtime>=&1 and fldtime<=&2 and fldusertype like &3", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbusertype.Text))
    Endif
    If xList Then
      Inc Application.Busy
      xPath = modRHTMLShareGroup.SharingPaymentPreciseGROUP("Punched", aCon, "Group", dtfir.Value, dtlast.Value, cmbcategory.Text, cmbusertype.Text, False, cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
      Dec Application.Busy
      modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
    Endif
  Endif

End

Public Sub btnlockentry_Click()

  Dim res As Result
  Dim xshare As Float
  Dim xtax As Float
  Dim xamt As Float

  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  If rbshareamt.Value = True Then
    If Message.Question("Are you sure to lock selected Share Data ?", ("No"), ("Yes")) = 2 Then

      Inc Application.Busy
      modDatabase.$myConn.Begin
      For Each $rData
        xshare = 0
        xtax = 0
        xamt = 0
        If $rData["tblpatbilling.fldbillno"] Then

          If rbshareper.Value = True Then
            xshare = Round(modSharingGroup.GetUserPayPercentGroup("Punched", modDatabase.$syConn, $rData["tblpatgenshare.fldid"]), -2)
          Else If rbshareamt.Value = True Then
            xshare = Round(modSharingGroup.GetUserPayAmountGroup("Punched", modDatabase.$syConn, $rData["tblpatgenshare.fldid"]), -2)
          Endif
          xtax = Round(modSharingGroup.GetUserPayTaxGroup("Punched", modDatabase.$syConn, $rData["tblpatgenshare.fldid"]), -2)
          If rbshareper.Value = True Then
            xamt = Round(modSharingGroup.GetUserPayOrReferAmtGroup("Punched", modDatabase.$syConn, $rData["tblpatgenshare.fldid"], GetTotalFormat()), -2)
          Else If rbshareamt.Value = True Then
            xamt = Round(modSharingGroup.GetUserPayOrReferDirectGroup("Punched", modDatabase.$syConn, $rData["tblpatgenshare.fldid"], GetTotalFormat()), -2)
          Endif

          res = modDatabase.$myConn.Edit("tblpatgenshare", "fldid=&1", $rData["tblpatgenshare.fldid"])
          res["fldshareamt"] = xshare
          res["fldtdsper"] = xtax
          res["fldsharenet"] = xamt
          res["fldsave"] = False
          res.Update

        Endif
        If MMain.$IsGUIApp = True Then
          $ProgressBar1.Value = ($rData.Index + 1) / $rData.Count
          Wait
        Endif
      Next
      modDatabase.$myConn.Commit
      Dec Application.Busy

    Endif
  Endif

  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif
  btnshow_Click()

Catch
  modDatabase.$myConn.Rollback
  Dec Application.Busy
  modHelpVariable.CreateErrorReport()

End

Public Sub chkbulk_Click()

  Panel1.Enabled = chkbulk.Value

End

Public Sub btnbulkupdate_Click()

  Dim res As Result

  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  If Trim(txtbulkreason.Text) Then
    If Message.Question("Are you sure to update?", ("No"), ("Yes")) = 2 Then

      Inc Application.Busy
      modDatabase.$myConn.Begin
      For Each $rData

        res = modDatabase.$myConn.Edit("tblpatgenshare", "fldid=&1", $rData["tblpatgenshare.fldid"])
        res["fldmixper"] = txtbulkvalue.Value
        res["fldchreason"] = Trim(txtbulkreason.Text)
        res.Update

        If MMain.$IsGUIApp = True Then
          $ProgressBar1.Value = ($rData.Index + 1) / $rData.Count
          Wait
        Endif
      Next
      modDatabase.$myConn.Commit
      Dec Application.Busy

    Endif
  Endif

  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif
  btnshow_Click()

Catch
  modDatabase.$myConn.Rollback
  Dec Application.Busy
  modHelpVariable.CreateErrorReport()

End

Public Sub chkbulkextra_Click()

  Panel3.Enabled = chkbulkextra.Value

End

Public Sub btnbulkextra_Click()

  Dim res As Result

  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  If Trim(txtbulkreasonextra.Text) Then
    If Message.Question("Are you sure to update?", ("No"), ("Yes")) = 2 Then

      Inc Application.Busy
      modDatabase.$myConn.Begin
      For Each $rData

        res = modDatabase.$myConn.Edit("tblpatgenshare", "fldid=&1", $rData["tblpatgenshare.fldid"])
        res["fldchange"] = txtamtextra.Value
        res["fldchreason"] = Trim(txtbulkreasonextra.Text)
        res.Update

        If MMain.$IsGUIApp = True Then
          $ProgressBar1.Value = ($rData.Index + 1) / $rData.Count
          Wait
        Endif
      Next
      modDatabase.$myConn.Commit
      Dec Application.Busy

    Endif
  Endif

  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif
  btnshow_Click()

Catch
  modDatabase.$myConn.Rollback
  Dec Application.Busy
  modHelpVariable.CreateErrorReport()

End
