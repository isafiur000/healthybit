' Gambas class file

Private $rData6 As Result
Private $aMyFields6 As String[]
Private $rData9 As Result
Private $aMyFields9 As String[]
Private $rData10 As Result
Private $aMyFields10 As String[]

Public Sub Form_Open()

  modGeneralMain.ArrangeEmbedForms(Me, Panel1, "Vertical")
  Me.Icon = Picture[modGeneralMain.$strLogo]
  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      ' cmblocation.Text = "Hospital"
      cmblocation.Text = modDataRepo.$RepositoryMode
      cmbvalue.Text = modBasic.$HospCode
      Panel13.Enabled = False
    Else
      cmblocation.List = ["Hospital", "Municipality", "Category", "District", "Province"]
    Endif
  Else
    Panel13.Visible = False
  Endif

  ''invoice
  cmbinvoice.List = ["Category", "Cashier", "Location", "Ledger A/C", "Status"]
  cmbinvoice.Text = "Category"
  cmbsource.List = ["Invoice", "Receipt"]
  cmbsource.Text = "Invoice"
  ''Register
  cmbregister.List = modNonMedical.FillDiscountCombo()
  cmbregister.Add("%")
  cmbregister.Text = "%"
  '' visit
  cmbvisitmode.List = modNonMedical.FillCashModeCombo()
  cmbvisitmode.Add("%")
  cmbvisitmode.Text = "%"
  ''IP events
  ' cmbinpatstatus.List = ["Admissions", "Bed Occupancy", "Exits(All)", "Outcome"]
  cmbinpatstatus.List = ["Admissions", "Exits(All)", "Outcome"]
  cmbpackage.List = modNonMedical.FillDiscountCombo()
  cmbpackage.Add("%")
  cmbpackage.Text = "%"
  ''diagnostics
  cmbdiagnostic.List = ["Diagnostic Tests", "Radio Diagnostics"]
  ''dispensing
  cmbpharmacy.List = ["Medicines", "Surgicals", "Extra Items"]
  ''purchase
  cmbpurchase.List = ["Medicines", "Surgicals", "Extra Items"]
  ''general

  dtfir.Value = Now()
  dtlast.Value = Now()

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub cmblocation_Click()

  cmbvalue.Clear()
  If cmblocation.Text Then
    cmbvalue.List = modDataRepo.GetRepoValueListType(cmblocation.Text)
  Endif

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub mnufiscal_Click()

  Dim res As Result
  Dim xyear As String

  xyear = InputCombo("Select Fiscal Year Range", "Select Year", modBasic.$FiscalYearList, "", True)
  If xyear Then
    res = modDatabase.$myConn.Exec("select fldfrom,fldend from tblfiscalid where fldlabel=&1", xyear)
    If res.Available Then
      res.MoveFirst
      dtfir.Value = res["fldfrom"]
      dtlast.Value = res["fldend"]
    Endif
  Endif

End

Public Sub btntoday_Click()

  dtfir.Value = Now()
  dtlast.Value = Now()

End

Public Sub btnyesterday_Click()

  dtfir.Value = DateAdd(Now(), gb.Day, -1)
  dtlast.Value = DateAdd(Now(), gb.Day, -1)

End

Public Sub btnmonth_Click()

  If modBasic.$DateFormat = "BS Date" Then
    dtfir.Value = modDate.StartSqlMonthBS(Now())
    dtlast.Value = modDate.EndSqlMonthBS(Now())
  Else
    dtfir.Value = modDate.StartSqlMonth(Now())
    dtlast.Value = modDate.EndSqlMonth(Now())
  Endif

End

Public Sub btnyear_Click()

  If modBasic.$DateFormat = "BS Date" Then
    dtfir.Value = modDate.StartSqlYearBS(Now())
    dtlast.Value = modDate.EndSqlYearBS(Now())
  Else
    dtfir.Value = modDate.StartSqlYear(Now())
    dtlast.Value = modDate.EndSqlYear(Now())
  Endif

End

Public Sub rfninvoice_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, TabPanel1[0].Text & ":" & cmbinvoice.Text, modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End

Public Sub rfnregister_Click()

  modCHTMLReport.ExportGridToHTML(GridView3, TabPanel1[1].Text, modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End

Public Sub rfnallvisit_Click()

  modCHTMLReport.ExportGridToHTML(GridView2, TabPanel1[2].Text, modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End

Public Sub rfninpat_Click()

  modCHTMLReport.ExportGridToHTML(GridView4, TabPanel1[3].Text & ":" & cmbinpatstatus.Text, modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End

Public Sub rfndiagno_Click()

  modCHTMLReport.ExportGridToHTML(GridView5, TabPanel1[4].Text & ":" & cmbdiagnostic.Text, modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End

Public Sub rfnproced_Click()

  modCHTMLReport.ExportGridToHTML(GridView6, TabPanel1[5].Text, modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End

Public Sub rfndelivery_Click()

  modCHTMLReport.ExportGridToHTML(GridView8, TabPanel1[6].Text, modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End

Public Sub rfnpharmacy_Click()

  modCHTMLReport.ExportGridToHTML(GridView9, TabPanel1[7].Text & ":" & cmbpharmacy.Text, modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End

Public Sub rfnpurchase_Click()

  modCHTMLReport.ExportGridToHTML(GridView10, TabPanel1[8].Text & ":" & cmbpurchase.Text, modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End

''--------------------------------------------- Confinement --------------------------------------------
Private Function GetDeliveryRecords(sType As String) As Result

  Dim xFldList As String[]
  Dim xhospfld As String
  Dim res As Result

  xhospfld = modDataRepo.HospitalField()
  xFldList = ["fldid", "fldencounterval", "fldencounterval", modDataRepo.SerialField(), "fldencounterval", "flddeltime", "flddeltype", "flddelresult", "flddelwt", "fldbabypatno", "fldbabypatno", "flddelphysician"]
  If xhospfld Then
    xFldList.Add(xhospfld)
  Endif
  res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelresult like &3" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), sType)

  Return res

End

Private Function GetGridViewValueDelivery(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant

  If Column = 2 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 3 Then
    xxx = modMedReports.GetPatientPastAgeString("tblconfinement", xVariable)
  Else If Column = 4 Then
    xxx = modPatient.GetPatientGuardianByEnc(xVariable)
  Else If Column = 5 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.GeneralDate)
  Else If Column = 10 Then
    xxx = modPatient.PatientGenderByPatNo(xVariable)
  Else If Column = 11 Then
    xxx = modGeneral.GetUserFullName(xVariable)
  Else If Column = 12 Then
    xxx = modDataRepo.GetHospitalTextLabel(xVariable)
  Else
    xxx = xVariable
  Endif
  Return xxx

End

Public Sub btndelivery_Click()

  Dim xFinal As Variant[]
  Dim delTyList As String[]

  delTyList = modControlSub.GetDirectFillresultNoNull(modDatabase.$syConn.Exec("select distinct(flddeltype) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2", modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value)))
  GridView8.Clear
  GridView8.Rows.Count = delTyList.Count
  GridView8.Columns.Count = 5

  Inc Application.Busy
  xFinal = modDashBoard.GetConfinementReportDash(delTyList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView8)
  Dec Application.Busy

  With GridView8
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 150 * modBasic.$AppWidthRatio
    .Columns[1].Width = 150 * modBasic.$AppWidthRatio
    .Columns[2].Width = 150 * modBasic.$AppWidthRatio
    .Columns[3].Width = 150 * modBasic.$AppWidthRatio
    .Columns[4].Width = 150 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Delivery Type"
    .Columns[1].Text = "Live Baby"
    .Columns[2].Text = "Fresh Still Birth"
    .Columns[3].Text = "Macerated Still Birth"
    .Columns[4].Text = "Total"
  End With

End

''----------------------------------------  Visits -------------------------------------------
Public Sub btnallvisit_Click()

  Dim grpList As String[]
  Dim frpList As String[]
  Dim xFinal As Variant[]

  grpList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldconsultname) as col from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname like &3 and fldstatus<>&4" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "%", "Cancelled"))
  frpList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldconsultname) as col from tblconsult where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname like &3 and fldstatus<>&4" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "%", "Cancelled"))
  GridView2.Clear
  GridView2.Rows.Count = frpList.Count + grpList.Count
  GridView2.Columns.Count = 5

  Inc Application.Busy
  If grpList Then
    grpList.Sort()
  Endif
  xFinal = modDashBoard.GetAllVisitReportDash(frpList, grpList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, cmbvisitmode.Text)
  LoadVariableToGrid(xFinal, GridView2)
  Dec Application.Busy

  With GridView2
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 300 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio
    .Columns[3].Width = 100 * modBasic.$AppWidthRatio
    .Columns[4].Width = 150 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Department"
    .Columns[1].Text = "Male"
    .Columns[2].Text = "Female"
    .Columns[3].Text = "Other"
    .Columns[4].Text = "Total"
  End With

End

''--------------------------------- Procedures ----------------------------------------------
Private Function GetProcedureRecords() As Result

  Dim xFldList As String[]
  Dim xhospfld As String
  Dim res As Result

  xhospfld = modDataRepo.HospitalField()
  xFldList = ["fldid", "fldencounterval", "fldencounterval", modDataRepo.SerialField(), "fldencounterval", "fldtime", "flditem"]
  If xhospfld Then
    xFldList.Add(xhospfld)
  Endif
  res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from tblpatgeneral where fldtime>=&1 and fldtime<=&2 and fldinput=&3 and fldreportquali like &4" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), "Procedures", "Done")
  Return res

End

Private Function GetGridViewValueProcedure(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant

  If Column = 2 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 3 Then
    xxx = modMedReports.GetPatientPastAgeString("tblpatgeneral", xVariable)
  Else If Column = 4 Then
    xxx = modPatient.GetPatientSex(xVariable, modDatabase.$syConn)
  Else If Column = 5 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.GeneralDate)
  Else If Column = 7 Then
    xxx = modDataRepo.GetHospitalTextLabel(xVariable)
  Else
    xxx = xVariable
  Endif
  Return xxx

End

Public Sub btnproced_Click()

  $rData6 = GetProcedureRecords()
  $aMyFields6 = New String[]
  modGridView.ReadSmallData(GridView6, $rData6, $aMyFields6)
  txttotproced.Value = $rData6.Count
  With GridView6
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 1
    .Columns[1].Width = 75 * modBasic.$AppWidthRatio
    .Columns[2].Width = 200 * modBasic.$AppWidthRatio
    .Columns[3].Width = 75 * modBasic.$AppWidthRatio
    .Columns[4].Width = 75 * modBasic.$AppWidthRatio
    .Columns[5].Width = 150 * modBasic.$AppWidthRatio
    .Columns[6].Width = 400 * modBasic.$AppWidthRatio

    .Columns[1].Text = "EncID"
    .Columns[2].Text = "Name"
    .Columns[3].Text = "Age"
    .Columns[4].Text = "Gender"
    .Columns[5].Text = "DateTime"
    .Columns[6].Text = "Procedure"
  End With

End

Public Sub GridView6_Data(Row As Integer, Column As Integer)

  $rData6.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView6, Row)
  GridView6.Data.Text = GetGridViewValueProcedure(Column, $rData6[$aMyFields6[Column]])

End

''-------------------- dispensing ---------------------
Private Function GetDispensingRecords(sType As String) As Result

  Dim res As Result

  res = modDatabase.$syConn.Exec("select fldroute,flditem,SUM(fldqtydisp-fldqtyret) as tot from tblpatdosing where fldsave_order=&1 and fldtime>=&2 and fldtime<=&3 and flditemtype=&4" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text) & " GROUP BY flditem", True, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), sType)
  Return res

End

Private Function GetGridViewValueDispensing(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant

  If Column = 2 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, -2)
  Else
    xxx = xVariable
  Endif
  Return xxx

End

Public Sub btnpharmacy_Click()

  If cmbpharmacy.Text Then
    $rData9 = GetDispensingRecords(cmbpharmacy.Text)
    $aMyFields9 = New String[]
    modGridView.ReadSmallData(GridView9, $rData9, $aMyFields9)

    With GridView9
      .Rows.Height = modBasic.$AppGridRowHeight
      .Columns[0].Width = 100 * modBasic.$AppWidthRatio
      .Columns[1].Width = 450 * modBasic.$AppWidthRatio
      .Columns[2].Width = 100 * modBasic.$AppWidthRatio
      .Columns[0].Text = "Route"
      .Columns[1].Text = "Particulars"
      .Columns[2].Text = "Count"
    End With

  Endif

End

Public Sub GridView9_Data(Row As Integer, Column As Integer)

  $rData9.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView9, Row)
  GridView9.Data.Text = GetGridViewValueDispensing(Column, $rData9[$aMyFields9[Column]])

End

''-------------------------- Purchase --------------
Private Function GetPurchaserecords(sType As String) As Result

  Dim res As Result

  res = modDatabase.$syConn.Exec("select fldstockid,SUM(fldtotalqty-fldreturnqty) as totqty,AVG(fldnetcost) as netcost,SUM(fldnetcost*(fldtotalqty-fldreturnqty)) as totcost from tblpurchase where fldsav=&1 and fldtime>=&2 and fldtime<=&3 and fldcategory=&4" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text) & " GROUP BY fldstockid", False, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), sType)                   ''
  Return res

End

Private Function GetGridViewValuePurchase(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant

  If Column = 1 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, -2)
  Else If Column = 2 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 3 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else
    xxx = xVariable
  Endif
  Return xxx

End

Public Sub btnpurchase_Click()

  If cmbpurchase.Text Then
    $rData10 = GetPurchaserecords(cmbpurchase.Text)
    $aMyFields10 = New String[]
    modGridView.ReadSmallData(GridView10, $rData10, $aMyFields10)

    With GridView10
      .Rows.Height = modBasic.$AppGridRowHeight
      .Columns[0].Width = 400 * modBasic.$AppWidthRatio
      .Columns[1].Width = 75 * modBasic.$AppWidthRatio
      .Columns[2].Width = 120 * modBasic.$AppWidthRatio
      .Columns[3].Width = 120 * modBasic.$AppWidthRatio
      .Columns[0].Text = "Particulars"
      .Columns[1].Text = "QTY"
      .Columns[2].Text = "Rate"
      .Columns[3].Text = "Total"
    End With

  Endif

End

Public Sub GridView10_Data(Row As Integer, Column As Integer)

  $rData10.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView10, Row)
  GridView10.Data.Text = GetGridViewValuePurchase(Column, $rData10[$aMyFields10[Column]])

End

Private Sub LoadVariableToGrid(xFinal As Variant[], xGridView As GridView)

  Dim xRowVal As Collection
  Dim Row As Integer
  Dim Column As Integer

  For Row = 0 To xFinal.Count - 1
    xRowVal = xFinal[Row]
    For Column = 0 To xGridView.Columns.Count - 1
      xGridView[Row, Column].Text = xRowVal[CStr(Column)]
    Next
  Next

End

''--------------------------------------- Invoice Report ----------------------------------------
Public Sub btninvoice_Click()

  Dim xFinal As Variant[]
  Dim grpList As String[]

  If cmbsource.Text Then
    If cmbinvoice.Text = "Cashier" Then
      grpList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flduserid) as col from tblpatbilldetail where fldtime>=&1 and fldtime<=&2" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value)))
    Else If cmbinvoice.Text = "Location" Then
      grpList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldcomp) as col from tblpatbilldetail where fldtime>=&1 and fldtime<=&2" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value)))
    Else If cmbinvoice.Text = "Ledger A/C" Then
      grpList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldbankname) as col from tblpatbilldetail where fldtime>=&1 and fldtime<=&2 and fldbankname like &3" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), "%"))
    Else If cmbinvoice.Text = "Status" Then
      grpList = ["OPD", "Admitted", "Discharged"]
    Else
      grpList = ["Counter Billing", "Pharmacy Billing", "Due Clearance"]
    Endif
    Wait

    GridView1.Clear
    GridView1.Rows.Count = grpList.Count + 1
    GridView1.Columns.Count = 6

    Inc Application.Busy
    xFinal = modDashBoard.GetInvoiceReportDash(cmbsource.Text, grpList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, cmbinvoice.Text)
    LoadVariableToGrid(xFinal, GridView1)
    Dec Application.Busy

    With GridView1
      .Rows.Height = modBasic.$AppGridRowHeight
      .Columns[0].Width = 150 * modBasic.$AppWidthRatio
      .Columns[1].Width = 150 * modBasic.$AppWidthRatio
      .Columns[2].Width = 125 * modBasic.$AppWidthRatio
      .Columns[3].Width = 125 * modBasic.$AppWidthRatio
      .Columns[4].Width = 150 * modBasic.$AppWidthRatio
      .Columns[5].Width = 150 * modBasic.$AppWidthRatio

      .Columns[0].Text = "Particulars"
      .Columns[1].Text = "SubTotal"
      .Columns[2].Text = "Disc"
      .Columns[3].Text = "Tax"
      .Columns[4].Text = "Credit"
      .Columns[5].Text = "Cash"
    End With
  Endif

End

''---------------------------------- Register --------------------------------------
Public Sub btnregister_Click()

  Dim grpList As String[]
  Dim xFinal As Variant[]

  grpList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldadmitlocat) as col from tblencounter where fldregdate>=&1 and fldregdate<=&2 and fldadmitlocat like &3" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "%"))
  GridView3.Clear
  GridView3.Rows.Count = grpList.Count
  GridView3.Columns.Count = 4

  Inc Application.Busy
  If grpList Then
    grpList.Sort()
  Endif
  xFinal = modDashBoard.GetRegisterReportDash(grpList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, cmbregister.Text)
  LoadVariableToGrid(xFinal, GridView3)
  Dec Application.Busy

  With GridView3
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 300 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio
    .Columns[3].Width = 150 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Department"
    .Columns[1].Text = "New"
    .Columns[2].Text = "Follow Up"
    .Columns[3].Text = "Total"
  End With

End

''---------------------------- In patients -------------------------------------
Public Sub btninpat_Click()

  Dim depList As String[]
  Dim xFinal As Variant[]

  If cmbinpatstatus.Text Then
    If cmbinpatstatus.Text = "Admissions" Then
      depList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldadmitward) as col from tblencounter where flddoa>=&1 and flddoa<=&2 and fldadmitlocat like &3", modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "%"))
    Else If cmbinpatstatus.Text = "Bed Occupancy" Then
      depList = modGeneral.GetDepartmentWithBedList()
    Else If cmbinpatstatus.Text = "Exits(All)" Then
      ' depList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flddept) as col from tbldepartmentbed where fldbed in(select fldcurrlocat from tblencounter where flddod>=&1 and flddod<=&2 and fldcurrlocat like &3)", modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "%"))
      depList = modGeneral.GetDepartmentWithBedList()
    Else If cmbinpatstatus.Text = "Outcome" Then
      depList = ["Discharged", "LAMA", "Refer", "Death", "Absconder"]
    Endif
    If depList Then
      depList.Sort()
    Endif

    GridView3.Clear
    GridView4.Rows.Count = depList.Count
    GridView4.Columns.Count = 5

    Inc Application.Busy
    xFinal = modDashBoard.GetInPatientReportDash(depList, cmbpackage.Text, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, cmbinpatstatus.Text)
    LoadVariableToGrid(xFinal, GridView4)
    Dec Application.Busy

    With GridView4
      .Rows.Height = modBasic.$AppGridRowHeight
      .Columns[0].Width = 300 * modBasic.$AppWidthRatio
      .Columns[1].Width = 100 * modBasic.$AppWidthRatio
      .Columns[2].Width = 100 * modBasic.$AppWidthRatio
      .Columns[3].Width = 100 * modBasic.$AppWidthRatio
      .Columns[4].Width = 150 * modBasic.$AppWidthRatio

      If cmbinpatstatus.Text = "Admissions" Then
        .Columns[0].Text = "Registered"
      Else If cmbinpatstatus.Text = "Bed Occupancy" Then
        .Columns[0].Text = "Current"
      Else If cmbinpatstatus.Text = "Exits(All)" Then
        .Columns[0].Text = "Exit"
      Else If cmbinpatstatus.Text = "Outcome" Then
        .Columns[0].Text = "Outcome"
      Endif
      .Columns[1].Text = "Male"
      .Columns[2].Text = "Female"
      .Columns[3].Text = "Other"
      .Columns[4].Text = "Total"
    End With
  Endif

End

''-------------------------------- diagnostics -------------------
'NOTE:TWO CON
Public Sub btndiagno_Click()

  Dim depList As String[]
  Dim xFinal As Variant[]

  If cmbdiagnostic.Text Then
    If cmbdiagnostic.Text = "Diagnostic Tests" Then
      depList = modMedicine.GetPathoCategoryList("Test")
    Else If cmbdiagnostic.Text = "Radio Diagnostics" Then
      depList = modMedicine.GetPathoCategoryList("Radio")
    Endif
    GridView5.Clear
    GridView5.Rows.Count = depList.Count
    GridView5.Columns.Count = 4

    Inc Application.Busy
    xFinal = modDashBoard.GetDiagnosticReportDash(depList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, cmbdiagnostic.Text)
    LoadVariableToGrid(xFinal, GridView5)
    Dec Application.Busy

    With GridView5
      .Rows.Height = modBasic.$AppGridRowHeight
      .Columns[0].Width = 300 * modBasic.$AppWidthRatio
      .Columns[1].Width = 100 * modBasic.$AppWidthRatio
      .Columns[2].Width = 100 * modBasic.$AppWidthRatio
      .Columns[3].Width = 150 * modBasic.$AppWidthRatio

      .Columns[0].Text = "Section"
      If cmbdiagnostic.Text = "Diagnostic Tests" Then
        .Columns[1].Text = "Sampled"
        .Columns[2].Text = "Reported"
        .Columns[3].Text = "Verified"
      Else If cmbdiagnostic.Text = "Radio Diagnostics" Then
        .Columns[1].Text = "Male"
        .Columns[2].Text = "Female"
        .Columns[3].Text = "Total"
      Endif
    End With
  Endif

End

''============================== Item Summary ======================
Public Sub btncountdepart_Click()

  If Dialog.OpenFile() Then Return
  btncountdepart.Text = Dialog.Path

End

Public Sub btncountsett_Click()

  Dim hForm As FmSelectionList
  Dim xList As String[]
  Dim xItemList As String[]

  If btncountdepart.Text Then
    xList = modString.GetStringArrayFromFile(btncountdepart.Text, True)
    xItemList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select flditemname from tblservicecost"))
    hForm = New FmSelectionList("ItemCount", xList, xItemList)
    hForm.ShowModal()
  Endif

End

Public Sub btncountshow_Click()

  FillItemCountView()

End

Private Sub FillItemCountView()

  Dim xFinal As Variant[]
  Dim xList As String[]

  xList = modString.GetStringArrayFromFile(btncountdepart.Text, True)
  GridView7.Clear()
  GridView7.Columns.Count = 3
  GridView7.Rows.Count = xList.Count
  With GridView7
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 250 * modBasic.$AppWidthRatio
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Particulars"
    .Columns[1].Text = "Unit"
    .Columns[2].Text = "Number"
  End With
  Wait

  Inc Application.Busy
  xFinal = GetRadiologyService(xList, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text)
  LoadVariableToGrid(xFinal, GridView7)
  Dec Application.Busy

End

Private Function GetRadiologyService(xList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim sql As String
  Dim xval As String
  Dim res As Result
  Dim xcnt As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  For Each xval In xList
    xRowVal = New Collection
    sql = modHMISReport.GetDBHMISettingQuery("ItemCount", xval)

    xcnt = 0
    res = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemname in " & sql & " and fldsave=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True)
    If res["tot"] Then
      xcnt = xcnt + res["tot"]
    Endif

    xRowVal.Add(xval, CStr(0))
    xRowVal.Add("Number", CStr(1))
    xRowVal.Add(xcnt, CStr(2))

    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

Public Sub btnexpocount_Click()

  modCHTMLReport.ExportGridToHTML(GridView7, "ItemCount", modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End

''======================= ALL REPORT ================================
Private Function GetRichTableStringFromResult(sType As String, sColmList As String[], res As Result) As String

  Dim xx As String
  Dim xhead As String
  Dim ref As ResultField
  Dim Column As Integer

  If res.Available Then
    xx = modRepoTemplete.HTMLTableSyntax()
    xx = xx & "<tr>" & gb.NewLine
    For Each xhead In sColmList
      xx = xx & "<td class='reportmid_table_h'>" & xhead & "</td>" & gb.NewLine
    Next
    xx = xx & "</tr>" & gb.NewLine

    For Each res
      xx = xx & "<tr>" & gb.NewLine
      Column = 0
      For Each ref In res.Fields
        If sType = "Procedures" Then
          xx = xx & "<td>" & GetGridViewValueProcedure(Column, res[ref.Name]) & "</td>" & gb.NewLine
        Else If sType = "Delivery" Then
          xx = xx & "<td>" & GetGridViewValueDelivery(Column, res[ref.Name]) & "</td>" & gb.NewLine
        Else If sType = "Dispensing" Then
          xx = xx & "<td>" & GetGridViewValueDispensing(Column, res[ref.Name]) & "</td>" & gb.NewLine
        Else If sType = "Purchase" Then
          xx = xx & "<td>" & GetGridViewValuePurchase(Column, res[ref.Name]) & "</td>" & gb.NewLine
        Else
          xx = xx & "<td>" & res[ref.Name] & "</td>" & gb.NewLine
        Endif
        Column = Column + 1
      Next
      xx = xx & "</tr>" & gb.NewLine
    Next
    xx = xx & "</table>"
  Else
    xx = ""
  Endif
  Return xx

End

Public Sub btnall_Click()

  Dim $BillingReport As CReportHTML
  Dim xPath As String
  Dim allList As String[] = ["Billing", "Registration", "Consultation", "Inpatient", "Diagnostics", "Procedures", "Delivery", "Dispensing", "Purchase"]
  Dim chapList As String[]

  chapList = SelectListView(("Select Components"), allList, False)
  If chapList And If chapList.Count Then
    $BillingReport = New CReportHTML(["Data"], "", "")
    $BillingReport.UserData.Add("SUMMARY REPORT", "PARAM1")
    $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate), "PARAM2")

    Inc Application.Busy
    ''invoices
    If chapList.Exist("Billing") Then
      $BillingReport.AddSection("Invoices", True)
      AddInvoiceData($BillingReport)
      $BillingReport.AddSection("Receipts", True)
      AddReceiptData($BillingReport)
    Endif

    ''Register
    If chapList.Exist("Registration") Then
      $BillingReport.AddSection("Registration", True)
      AddRegistrationData($BillingReport)
    Endif

    ''consultation
    If chapList.Exist("Consultation") Then
      $BillingReport.AddSection("Consultations", True)
      AddConsultationData($BillingReport)
    Endif

    ''inpatient
    If chapList.Exist("Inpatient") Then
      $BillingReport.AddSection("InPatient Departments", True)
      AddInpatientsData($BillingReport)
    Endif

    ''diagnostics
    If chapList.Exist("Diagnostics") Then
      $BillingReport.AddSection("Diagnostics", True)
      AddDiagnosticData($BillingReport)
    Endif

    ''procedures
    If chapList.Exist("Procedures") Then
      $BillingReport.AddSection("Procedures", True)
      AddProcedureData($BillingReport)
    Endif

    ''delivery
    If chapList.Exist("Delivery") Then
      $BillingReport.AddSection("Delivery", True)
      AddDeliveryData($BillingReport)
    Endif

    ''dispensing
    If chapList.Exist("Dispensing") Then
      $BillingReport.AddSection("Dispensing", True)
      AddDispenseData($BillingReport)
    Endif

    ''purchase
    If chapList.Exist("Purchase") Then
      $BillingReport.AddSection("Purchase", True)
      AddPurchaseData($BillingReport)
    Endif

    Dec Application.Busy

    xPath = $BillingReport.NewHTMLPath()
    modControlSub.DisplayReportExport(xPath)
  Endif

End

Private Sub AddInvoiceData($BillingReport As CReportHTML)

  Dim asx As New String[0]
  Dim invcolm As String[]
  Dim invrow As String[]
  Dim invstr As String

  invrow = ["Counter Billing", "Pharmacy Billing", "Due Clearance"]
  invcolm = ["Particulars", "SubTotal", "Disc", "Tax", "Credit", "Cash"]
  invstr = modString.GetRichTableStringFromVariant(invcolm, modDashBoard.GetInvoiceReportDash("Invoice", invrow, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, "Category"))
  With asx
    .Add(invstr)
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("*****")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

End

Private Sub AddReceiptData($BillingReport As CReportHTML)

  Dim asx As New String[0]
  Dim invcolm As String[]
  Dim invrow As String[]
  Dim invstr As String

  invrow = ["Counter Billing", "Pharmacy Billing", "Due Clearance"]
  invcolm = ["Particulars", "SubTotal", "Disc", "Tax", "Credit", "Cash"]
  invstr = modString.GetRichTableStringFromVariant(invcolm, modDashBoard.GetInvoiceReportDash("Receipt", invrow, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, "Category"))
  With asx
    .Add(invstr)
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("*****")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

End

Private Sub AddRegistrationData($BillingReport As CReportHTML)

  Dim asx As New String[0]
  Dim registList As String[]
  Dim xregist As String

  Dim registtcol As String[]
  Dim registrow As String[]
  Dim registstr As String

  registList = modNonMedical.FillDiscountCombo()
  registtcol = ["Department", "New", "Follow-up", "Total"]
  For Each xregist In registList
    registrow = New String[]
    registrow = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldadmitlocat) as col from tblencounter where fldregdate>=&1 and fldregdate<=&2 and fldadmitlocat like &3 and flddisctype=&4" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "%", xregist))
    If registrow And If registrow.Count Then
      registrow.Sort()

      registstr = modString.GetRichTableStringFromVariant(registtcol, modDashBoard.GetRegisterReportDash(registrow, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, xregist))
      $BillingReport.AddChapter(xregist)
      With asx
        .Add(registstr)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif
  Next
  With asx
    .Add("*****")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

End

Private Sub AddConsultationData($BillingReport As CReportHTML)

  Dim asx As New String[0]
  Dim consultList As String[]
  Dim xconsult As String

  Dim consultcol As String[]
  Dim consultrow As String[]
  Dim opvisitrow As String[]
  Dim consultstr As String

  consultList = modNonMedical.FillCashModeCombo()
  consultrow = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldconsultname) as col from tblconsult where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname like &3 and fldstatus<>&4" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "%", "Cancelled"))
  opvisitrow = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldconsultname) as col from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname like &3 and fldstatus<>&4" & modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text), modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "%", "Cancelled"))
  If consultrow Then
    consultrow.Sort()
  Endif
  consultcol = ["Department", "Male", "Female", "Other", "Total"]
  For Each xconsult In consultList
    consultstr = modString.GetRichTableStringFromVariant(consultcol, modDashBoard.GetAllVisitReportDash(consultrow, opvisitrow, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, xconsult))

    $BillingReport.AddChapter(xconsult)
    With asx
      .Add(consultstr)
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next
  With asx
    .Add("*****")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

End

Private Sub AddInpatientsData($BillingReport As CReportHTML)

  Dim asx As New String[0]
  Dim ipList As String[] = ["Admissions", "Exits(All)"]
  Dim xip As String

  Dim ipstatcol As String[]
  Dim ipstatrow As String[]
  Dim ipstatstr As String

  For Each xip In ipList
    If xip = "Admissions" Then
      ipstatrow = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldadmitlocat) as col from tblencounter where flddoa>=&1 and flddoa<=&2 and fldadmitlocat like &3", modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "%"))
      ipstatcol = ["RegistDepartment", "Male", "Female", "Total"]
    Else If xip = "Exits(All)" Then
      ipstatrow = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flddept) as col from tbldepartmentbed where fldbed in(select fldcurrlocat from tblencounter where flddod>=&1 and flddod<=&2 and fldcurrlocat like &3)", modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "%"))
      ipstatcol = ["ExitDepartment", "Male", "Female", "Total"]
    Else If xip = "Outcome" Then
      ipstatrow = ["Discharged", "LAMA", "Refer", "Death", "Absconder"]
      ipstatcol = ["Outcome", "Male", "Female", "Total"]
    Endif
    If ipstatrow Then
      ipstatrow.Sort()
    Endif
    ipstatstr = modString.GetRichTableStringFromVariant(ipstatcol, modDashBoard.GetInPatientReportDash(ipstatrow, "%", dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, xip))

    $BillingReport.AddChapter(xip)
    With asx
      .Add(ipstatstr)
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next
  With asx
    .Add("*****")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

End

Private Sub AddDiagnosticData($BillingReport As CReportHTML)

  Dim asx As New String[0]
  Dim diagnoList As String[] = ["Diagnostic Tests", "Radio Diagnostics"]
  Dim xdiagno As String

  Dim diagnosol As String[]
  Dim diagnorow As String[]
  Dim diagnostr As String

  For Each xdiagno In diagnoList
    If xdiagno = "Diagnostic Tests" Then
      diagnorow = modMedicine.GetPathoCategoryList("Test")
      diagnosol = ["Section", "Sampled", "Reported", "Verified"]
    Else If xdiagno = "Radio Diagnostics" Then
      diagnorow = modMedicine.GetPathoCategoryList("Radio")
      diagnosol = ["Section", "Male", "Female", "Total"]
    Endif
    diagnostr = modString.GetRichTableStringFromVariant(diagnosol, modDashBoard.GetDiagnosticReportDash(diagnorow, dtfir.Value, dtlast.Value, cmblocation.Text, cmbvalue.Text, xdiagno))

    $BillingReport.AddChapter(xdiagno)
    With asx
      .Add(diagnostr)
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next
  With asx
    .Add("*****")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

End

Private Sub AddProcedureData($BillingReport As CReportHTML)

  Dim asx As New String[0]
  Dim procedcolm As String[]
  Dim procedstr As String

  procedcolm = ["SNo", "EncID", "Name", "Age", "Gender", "DateTime", "Procedure"]
  procedstr = GetRichTableStringFromResult("Procedures", procedcolm, GetProcedureRecords())

  With asx
    .Add(procedstr)
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("*****")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

End

Private Sub AddDeliveryData($BillingReport As CReportHTML)

  Dim asx As New String[0]
  Dim delList As String[] = ["Live Baby", "Fresh Still Birth", "Macerated Still Birth"]
  Dim xdel As String

  Dim delivcolm As String[]
  Dim delivstr As String

  delivcolm = ["SNo", "EncID", "Mother", "Age", "Guardian", "DateTime", "DelMode", "Result", "Weight(g)", "BabyNo", "Baby Sex", "Consultant"]
  For Each xdel In delList
    $BillingReport.AddChapter(xdel)
    delivstr = GetRichTableStringFromResult("Delivery", delivcolm, GetDeliveryRecords(xdel))

    With asx
      .Add(delivstr)
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next
  With asx
    .Add("*****")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

End

Private Sub AddDispenseData($BillingReport As CReportHTML)

  Dim asx As New String[0]
  Dim medList As String[] = ["Medicines", "Surgicals", "Extra Items"]
  Dim xdisp As String
  Dim dispcolm As String[]
  Dim dispstr As String

  dispcolm = ["Route", "Particulars", "Count"]
  For Each xdisp In medList
    $BillingReport.AddChapter(xdisp)
    dispstr = GetRichTableStringFromResult("Dispensing", dispcolm, GetDispensingRecords(xdisp))

    With asx
      .Add(dispstr)
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next
  With asx
    .Add("*****")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

End

Private Sub AddPurchaseData($BillingReport As CReportHTML)

  Dim asx As New String[0]
  Dim medList As String[] = ["Medicines", "Surgicals", "Extra Items"]
  Dim xpurc As String

  Dim purchcolm As String[]
  Dim purchstr As String

  purchcolm = ["Particulars", "QTY", "Rate", "Total"]
  For Each xpurc In medList
    $BillingReport.AddChapter(xpurc)
    purchstr = GetRichTableStringFromResult("Purchase", purchcolm, GetPurchaserecords(xpurc))

    Wait
    With asx
      .Add(purchstr)
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next
  With asx
    .Add("*****")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

End
