' Gambas class file

Private $rData As Result
Private $aMyFields As String[]
Private $qtyChart As String[]
Private $amtCHart As String[]
Private $ProgressBar1 As ProgressBar
Private $SSQLFields As String[]

Private $ColCount As Integer
Private $newColumn As String[]
Private $RepoStr As String

Private $tblpatbilling As String
Private $tblpatbilldetail As String
Private $tbltempbilldetail As String

Public Sub Form_Open()

  modGeneralMain.ArrangeEmbedForms(Me, Panel1, "Vertical")
  Me.Icon = Picture[modGeneralMain.$strLogo]

  cmbcomp.List = modBasic.$AllCompPerList
  cmbcomp.Text = "%"
  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      ' cmbsearch.Text = "Hospital"
      cmbsearch.Text = modDataRepo.$RepositoryMode
      txtselect.Text = modBasic.$HospCode
      cmbsearch.Enabled = False
      txtselect.Enabled = False
    Else
      cmbsearch.List = ["Hospital", "Municipality", "Category", "District", "Province"]
    Endif

  Else
    Select modHelpVariable.$LogInCategory
      Case "Cashier", "Dispensar"
        If modBasic.$ViewLockInvoice = "User" Then
          cmbsearch.List = ["Encounter", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Credit Only"]
        Else If modBasic.$ViewLockInvoice = "Location" Then
          cmbsearch.List = ["Encounter", "Cashier", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Credit Only"]
          cmbcomp.Text = modBasic.$compID
          cmbcomp.Enabled = False
        Else
          cmbsearch.List = ["Encounter", "Cashier", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Credit Only"]
        Endif
      Case Else
        cmbsearch.List = ["Encounter", "Cashier", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Credit Only"]
    End Select

  Endif

  cmbtype.List = ["All Types", "Cash Deposit", "Counter Sales", "Counter Return", "Pharmacy Sales", "Pharmacy Return", "Due Clearance"]
  cmbtype.Text = "All Types"
  cmbcategory.List = ["%", "Diagnostic Tests", "General Services", "Procedures", "Equipment", "Radio Diagnostics", "Other Items", "Medicines", "Surgicals", "Extra Items"]
  cmbcashcredit.List = ["Credit", "Cash", "%"]
  cmbaccount.List = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldacledger) as col from tblacledger"))
  cmbaccount.Add("%")
  cmbaccount.Text = "%"
  cmblocation.List = ["OPD", "IPD", "All"]
  cmblocation.Text = "All"

  Select modHelpVariable.$LogInCategory
    Case "Cashier", "Dispensar"
      modAccount.PasInvoiceSetting(cmbfiscal, False)
    Case Else
      modAccount.PasInvoiceSetting(cmbfiscal, True)
  End Select

  dtfir.Value = Now()
  dtlast.Value = Now()
  txtselect.Text = ""
  cmbcashcredit.Text = "%"
  cmbcategory.Text = "%"
  rbinvoice.Value = True
  LoadTableNames()

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub cmbsearch_Click()

  txtselect.Clear
  txtselect.Text = ""
  If cmbsearch.Text = "Cashier" Then
    txtselect.List = modGeneral.GetUserIDAll()
  Else If cmbsearch.Text = "Package" Then
    txtselect.List = modNonMedical.FillDiscountCombo()
  Else If cmbsearch.Text = "RatePlan" Then
    txtselect.List = modNonMedical.FillCashModeCombo()
  Endif

End

Private Sub LoadTableNames()

  Dim res As Result

  If cmbfiscal.Text = "Current" Then
    $tblpatbilling = "tblpatbilling"
    $tblpatbilldetail = "tblpatbilldetail"
    $tbltempbilldetail = "tbltempbilldetail"
  Else
    res = modDatabase.$syConn.Exec("select fldpatbilling,fldpatbilldetail,fldtempbilldetail from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", cmbfiscal.Text, "Active")
    If res.Available Then
      If res["fldpatbilling"] Then
        $tblpatbilling = res["fldpatbilling"]
      Else
        $tblpatbilling = "tblpatbilling"
      Endif
      If res["fldpatbilldetail"] Then
        $tblpatbilldetail = res["fldpatbilldetail"]
      Else
        $tblpatbilldetail = "tblpatbilldetail"
      Endif
      If res["fldtempbilldetail"] Then
        $tbltempbilldetail = res["fldtempbilldetail"]
      Else
        $tbltempbilldetail = "tbltempbilldetail"
      Endif
    Else
      $tblpatbilling = "tblpatbilling"
      $tblpatbilldetail = "tblpatbilldetail"
      $tbltempbilldetail = "tbltempbilldetail"
    Endif
  Endif

End

Public Sub cmbfiscal_Click()

  LoadTableNames()

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub mnufiscal_Click()

  Dim res As Result
  Dim xyear As String

  xyear = InputCombo("Select Fiscal Year Range", "Select Year", modBasic.$FiscalYearList, "", True)
  If xyear Then
    res = modDatabase.$myConn.Exec("select fldfrom,fldend from tblfiscalid where fldlabel=&1", xyear)
    If res.Available Then
      res.MoveFirst
      dtfir.Value = res["fldfrom"]
      dtlast.Value = res["fldend"]
    Endif
  Endif

End

Public Sub cmbsearch_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbsearch)
  modFillContainer.RestrictComboToContent(cmbsearch)

End

Public Sub cmbcategory_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbcategory)
  modFillContainer.RestrictComboToContent(cmbcategory)

End

Public Sub cmbcashcredit_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbcashcredit)
  modFillContainer.RestrictComboToContent(cmbcashcredit)

End

Public Sub cmbtype_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbtype)
  modFillContainer.RestrictComboToContent(cmbtype)

End

Private Sub GetFields()

  Dim xhospfld As String
  Dim afld As String

  xhospfld = modDataRepo.HospitalField()
  If modDatabase.$syConn.Type = "postgresql" Then
    afld = "string_agg(fldbillno, ';')"
  Else ''If modDatabase.$syConn.Type = "mysql" Then
    afld = "GROUP_CONCAT(fldbillno SEPARATOR ';')"
  Endif
  $SSQLFields = ["fldencounterval", "fldencounterval", "fldencounterval", "fldencounterval", "fldencounterval", "SUM(flditemamt)", "SUM(flddiscountamt)", "SUM(fldtaxamt)", "SUM(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt)", "SUM(fldreceivedamt)", afld, afld]
  If xhospfld Then
    $SSQLFields.Add(xhospfld)
  Endif

End

Private Function GetSQLColumns() As String[]

  Dim xFldList As String[]
  Dim i As Integer

  GetFields()
  modCustPatient.FillNewCOlumnCollection(Me.Tag)
  $newColumn = modCustPatient.CustomNewColumnsTitle(Me.Tag)
  xFldList = $SSQLFields.Copy()
  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      xFldList.Add("fldencounterval")
    Next
  Endif
  Return xFldList

End

Public Sub mnuaddcolumn_Click()

  Dim hForm As FmAddNewColumn

  hForm = New FmAddNewColumn(Me.Tag)
  hForm.ShowModal

End

Private Function ExecuteQuery(xFldList As String[]) As Result

  Dim res As Result
  Dim Bll As String
  Dim Bll1 As String
  Dim Bll2 As String
  Dim txuser As String
  Dim xcateg As String
  Dim xregist As String
  Dim yregist As String
  Dim xsear As String
  Dim xorder As String

  If cmbtype.Text = "All Types" Then
    Bll = "%"
    Bll1 = "%"
    Bll2 = "%"
  Else
    If rbinvoice.Value = True Then
      Bll = modBillLock.InvSign(cmbtype.Text) & "%"
    Else If rbreceipt.Value = True Then
      Bll = modBillLock.ReceiptSign(cmbtype.Text) & "%"
    Else If rbboth.Value = True
      Bll1 = modBillLock.InvSign(cmbtype.Text) & "%"
      Bll2 = modBillLock.ReceiptSign(cmbtype.Text) & "%"
    Endif
  Endif

  If modBasic.$ViewLockInvoice = "User" Then
    txuser = modBasic.$lbluser
  Else
    txuser = "%"
  Endif

  If cmbcategory.Text = "%" Then
    xcateg = ""
  Else
    xcateg = " and fldbillno in(select fldbillno from " & $tblpatbilling & " where flditemtype like &7)"
  Endif

  If cmbaccount.Text = "%" Then
    xregist = ""
  Else
    xregist = " and lower(fldbankname) like &8"
  Endif

  If cmblocation.Text = "All" Then
    yregist = ""
  Else
    If cmblocation.Text = "OPD" Then
      yregist = " and fldprevdeposit=&9"
    Else If cmblocation.Text = "IPD" Then
      yregist = " and fldprevdeposit>&9"
    Endif
  Endif

  If MMain.$WebReport = "Multiple" Then
    $RepoStr = modDataRepo.GetWhereStringRepo(cmbsearch.Text, txtselect.Text)
  Else
    $RepoStr = ""
  Endif
  If Not cmbsearch.Text Then
    xsear = ""
  Else
    If cmbsearch.Text = "Encounter" Then
      xsear = " and lower(fldencounterval) like &{10}"
    Else If cmbsearch.Text = "Cashier" Then
      xsear = " and lower(flduserid) like &{10}"
    Else If cmbsearch.Text = "Invoice" Then
      xsear = " and lower(fldbillno) like &{10}"
    Else If cmbsearch.Text = "Package" Then
      xsear = " and fldencounterval in(select fldencounterval from tblencounter where flddisctype like &{10})"
    Else If cmbsearch.Text = "Reference" Then
      xsear = " and lower(fldchequeno) like &{10}"
    Else If cmbsearch.Text = "PatientCode" Then
      xsear = " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptcode like &{10}))"
    Else If cmbsearch.Text = "RatePlan" Then
      xsear = " and fldencounterval in(select fldencounterval from tblencounter where fldbillingmode like &{10})"
    Else If cmbsearch.Text = "Credit Only" Then
      xsear = " and (flditemamt>fldreceivedamt)"
    Else
      xsear = "" 'modDataRepo.GetWhereStringRepo(cmbsearch.Text, txtselect.Text)
    Endif
  Endif

  xorder = " GROUP BY fldencounterval,fldbankname ORDER BY fldencounterval"
  If rbinvoice.Value = True Then
    res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from " & $tblpatbilldetail & " where fldcomp like &1 and fldbillno like &2 and fldtime>=&3 and fldtime<=&4 and fldbilltype like &5 and flduserid like &6" & xcateg & xregist & yregist & xsear & $RepoStr & xorder, cmbcomp.Text, Bll, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbcashcredit.Text, txuser, cmbcategory.Text, LCase(cmbaccount.Text), 1, LCase(txtselect.Text))
  Else If rbreceipt.Value = True Then
    res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from " & $tbltempbilldetail & " where fldcomp like &1 and fldbillno like &2 and fldtime>=&3 and fldtime<=&4 and fldbilltype like &5 and flduserid like &6" & xcateg & xregist & yregist & xsear & $RepoStr & xorder, cmbcomp.Text, Bll, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbcashcredit.Text, txuser, cmbcategory.Text, LCase(cmbaccount.Text), 1, LCase(txtselect.Text))
  Else If rbboth.Value = True Then
    res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from " & $tblpatbilldetail & " where fldcomp like &1 and fldbillno like &2 and fldtime>=&3 and fldtime<=&4 and fldbilltype like &5 and flduserid like &6" & xcateg & xregist & yregist & xsear & $RepoStr & " UNION ALL " & "select " & xFldList.Join(",") & " from " & $tbltempbilldetail & " where fldcomp like &1 and fldbillno like &{11} and fldtime>=&3 and fldtime<=&4 and fldbilltype like &5 and flduserid like &6" & xcateg & xregist & yregist & xsear & $RepoStr, cmbcomp.Text, Bll1, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbcashcredit.Text, txuser, cmbcategory.Text, LCase(cmbaccount.Text), 1, LCase(txtselect.Text), Bll2)              ''
  Endif
  Return res

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant
  Dim i As Integer

  If Column = 1 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 2 Then
    xxx = modPatient.GetPatientSex(xVariable, modDatabase.$syConn)
  Else If Column = 3 Then
    xxx = modPatient.GetPatientAgeString(xVariable, modPatient.GetRecordDate(xVariable))
  Else If Column = 4 Then
    xxx = modReportVar.GetDateTimeReport(modPatient.GetRecordDate(xVariable), gb.MediumDate)
  Else If Column = 5 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 6 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 7 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 8 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 9 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 11 Then
    xxx = GetItemTypesArray(Split(xVariable, ";")).Join(";")
  Else
    xxx = xVariable
  Endif

  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      If Column = $ColCount + i Then
        xxx = modCustPatient.NewColValue(Me.Tag, $newColumn[i], xVariable)
      Endif
    Next
  Endif
  Return xxx

End

Private Function GetItemTypesArray(sbilList As String[]) As String[]

  Dim xbill As String
  Dim xList As String[]
  Dim yList As String[]
  Dim res As Result

  xList = New String[]
  For Each xbill In sbilList
    res = modDatabase.$syConn.Exec("select flditemtype from " & $tblpatbilling & " where fldbillno=&1", xbill)
    If res.Available Then
      For Each res
        xList.Add(res["flditemtype"])
      Next
    Endif
  Next

  yList = modString.GetDistinctStringArray(xList)
  Return yList

End

Public Sub chkok_Click()

  Dim subtot As Float
  Dim xdisc As Float
  Dim xcredit As Float
  Dim xcashamt As Float
  Dim xFieldList As String[]

  Inc Application.Busy

  subtot = 0
  xdisc = 0
  xcredit = 0
  xcashamt = 0

  TabStrip1.Index = 0
  xFieldList = GetSQLColumns()
  $rData = ExecuteQuery(xFieldList)
  If $rData.Available Then
    For Each $rData
      If $rData[$SSQLFields[5]] Then
        subtot = subtot + $rData[$SSQLFields[5]]
      Endif
      If $rData[$SSQLFields[6]] Then
        xdisc = xdisc + $rData[$SSQLFields[6]]
      Endif
      If $rData[$SSQLFields[8]] Then
        xcredit = xcredit + $rData[$SSQLFields[8]]
      Endif
      If $rData[$SSQLFields[9]] Then
        xcashamt = xcashamt + $rData[$SSQLFields[9]]
      Endif
    Next
  Endif
  If chkqty.Value = True Or If chkamt.Value = True Then
    ExportData()
  Endif

  FillGrid()

  If chkqty.Value = True Then
    FillItemChartQTY()
  Endif
  If chkamt.Value = True Then
    FillItemChartAMT()
  Endif

  txtsubtotal.Value = subtot
  txtdiscamt.Value = xdisc
  txtcredit.Value = xcredit
  txtcash.Value = xcashamt
  Dec Application.Busy

End

Private Sub FillGrid()

  Dim i As Integer

  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
  $ColCount = $SSQLFields.Count
  With GridView1
    .Columns[0].Width = 100 * modBasic.$AppWidthRatio
    .Columns[1].Width = 175 * modBasic.$AppWidthRatio
    .Columns[2].Width = 75 * modBasic.$AppWidthRatio
    .Columns[3].Width = 76 * modBasic.$AppWidthRatio
    .Columns[4].Width = 125 * modBasic.$AppWidthRatio
    .Columns[5].Width = 100 * modBasic.$AppWidthRatio
    .Columns[6].Width = 100 * modBasic.$AppWidthRatio
    .Columns[7].Width = 100 * modBasic.$AppWidthRatio
    .Columns[8].Width = 100 * modBasic.$AppWidthRatio
    .Columns[9].Width = 100 * modBasic.$AppWidthRatio
    .Columns[10].Width = 150 * modBasic.$AppWidthRatio
    .Columns[11].Width = 150 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Encounter"
    .Columns[1].Text = "Name"
    .Columns[2].Text = "Gender"
    .Columns[3].Text = "Age"
    .Columns[4].Text = "DOReg"
    .Columns[5].Text = "SubTotal"
    .Columns[6].Text = "Disc"
    .Columns[7].Text = "Tax"
    .Columns[8].Text = "Credit"
    .Columns[9].Text = "Cash"
    .Columns[10].Text = "Invoices"
    .Columns[11].Text = "Category"

    If $newColumn.Count Then
      For i = 0 To $newColumn.Count - 1
        .Columns[$ColCount + i].Text = $newColumn[i]
        .Columns[$ColCount + i].Width = 150 * modBasic.$AppWidthRatio
      Next
    Endif
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer)

  $rData.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView1, Row)
  If Column > $SSQLFields.Count - 1 Then
    GridView1.Data.RichText = modString.TextToHTML(GetGridViewValue(Column, $rData[$aMyFields[Column]]))
  Else
    GridView1.Data.Text = GetGridViewValue(Column, $rData[$aMyFields[Column]])
  Endif
  ' GridView1.Rows[Row].Height = Max(GridView1.Rows[Row].Height, GridView1.Data.Font.RichTextHeight(GridView1.Data.Text, GridView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (GridView1.Rows.Height - GridView1.Font.Height))
  ' GridView1.Data.WordWrap = True

End

Private Sub ExportData()

End

''----------------------------------------- Grid menu ---------------------------------------
Public Sub GridView1_DblClick()

  Dim xx As Integer
  Dim yy As Integer

  xx = Mouse.StartX - GridView1.Left
  yy = Mouse.StartY - GridView1.Top

  Balloon.Info(("Current Column is ") & CStr(GridView1.Column + 1), GridView1, xx, yy)
  Balloon.Delay = 1000

End

Public Sub mnusummgrid_Click()

  Dim xx As String
  Dim ChapCol As String
  Dim GropCol As String
  Dim xChapList As String[]
  Dim xGropList As String[]

  Dim res As Result
  Dim valCol As String
  Dim xFieldList As String[]

  Dim xFinList As Variant[]
  Dim xrowVar As Variant[]
  Dim xchapval As String
  Dim xgroup As String
  Dim xPath As String
  Dim xFldList As String[]

  Dim hGdSum As FmAnalyzeSett

  hGdSum = New FmAnalyzeSett("GridSummary", modGridView.GetGridViewColumns(GridView1))
  hGdSum.ShowModal

  xFldList = GetSQLColumns()
  Inc Application.Busy
  xFieldList = New String[]
  If modCustPatient.$SumChapterColumn Then
    ChapCol = xFldList[modCustPatient.$SumChapterColumn - 1]
    xFieldList.Add(ChapCol)
  Endif
  GropCol = xFldList[modCustPatient.$SumGroupColumn - 1]
  valCol = xFldList[modCustPatient.$SumValueColumn - 1]
  xFieldList.Add(GropCol)
  xFieldList.Add(valCol)

  xChapList = New String[]
  xGropList = New String[]
  xFinList = New Variant[]
  res = ExecuteQuery(xFieldList)
  If res.Available Then
    For Each res
      xrowVar = New Variant[]
      If modCustPatient.$SumChapterColumn Then
        xchapval = GetGridViewValue(modCustPatient.$SumChapterColumn - 1, res[ChapCol])
        xrowVar.Add(xchapval)
        xChapList.Add(xchapval)
      Endif
      xgroup = GetGridViewValue(modCustPatient.$SumGroupColumn - 1, res[GropCol])
      xrowVar.Add(xgroup)
      xGropList.Add(xgroup)

      xrowVar.Add(GetGridViewValue(modCustPatient.$SumValueColumn - 1, res[valCol]))
      xFinList.Add(xrowVar)
    Next
  Endif
  Dec Application.Busy

  xx = "Date: " & modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  If modCustPatient.$SumGroupColumn And If modCustPatient.$SumValueColumn Then
    If modCustPatient.$SumChapterColumn Then
      If modCustPatient.$SummaryType = "Summation(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapterTableReport("Invoice Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else If modCustPatient.$SummaryType = "Count(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapCountTableReport("Invoice Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else
        xPath = modCHTMLReport.SummaryGridChapterReport("Invoice Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Endif
    Else
      xPath = modCHTMLReport.SummaryGridReport("Invoice Report Summary", xx, modString.GetDistinctStringArray(xGropList), xFinList)
    Endif
    modControlSub.DisplayReportExport(xPath)
  Endif

End

Public Sub mnuenchart_Click()

  Dim xx As String
  Dim xField As String
  Dim Column As Integer
  Dim res As Result
  Dim xval As Variant
  Dim hFile As CUnivariate
  Dim xFldList As String[]
  Dim sOrder As String[]

  Dim hUniv As FmAnalyzeSett

  hUniv = New FmAnalyzeSett("Univariate", modGridView.GetGridViewColumns(GridView1))
  hUniv.ShowModal

  xFldList = GetSQLColumns()
  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif
  Inc Application.Busy
  hFile = New CUnivariate

  Column = modCustPatient.GetUnivariateColumn(0)
  xField = xFldList[Column]
  res = ExecuteQuery([xField])

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Column, res[xField])
      If xval Then
        hFile.Add(xval)
      Endif

      If MMain.$IsGUIApp = True Then
        $ProgressBar1.Value = (res.Index + 1) / res.Count
        Wait
      Endif
    Next
  Endif
  Dec Application.Busy
  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif

  If modSettings.ShowSettingFromFIle("UnivariateAnalysis/DataType") = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetEncChartGridNew(hFile.GetSPSSFile(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrosstab_Click()

  Dim xx As String
  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hFile As CBivariate
  Dim xFldList As String[]
  Dim sOrder As String[]
  Dim hBivar As FmAnalyzeSett

  hBivar = New FmAnalyzeSett("Bivariate", modGridView.GetGridViewColumns(GridView1))
  hBivar.ShowModal

  xFldList = GetSQLColumns()
  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  Inc Application.Busy
  hFile = New CBivariate
  Row = modCustPatient.GetCrossVarRow(0)
  xFieRow = xFldList[Row]
  Column = modCustPatient.GetCrossVarColumn(0)
  xFieColm = xFldList[Column]
  res = ExecuteQuery([xFieRow, xFieColm])

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Row, res[xFieRow])
      yval = GetGridViewValue(Column, res[xFieColm])
      If xval And If yval Then
        hFile.Add([xval, yval])
      Endif

      If MMain.$IsGUIApp = True Then
        $ProgressBar1.Value = (res.Index + 1) / res.Count
        Wait
      Endif
    Next
  Endif
  Dec Application.Busy
  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif

  If modCustPatient.$CrossOutcomeType = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetCrossTabStatNew(hFile.GetSPSSFile(), hFile.GetGroups(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrotab_Click()

  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hForm As FmGridCrossTab
  Dim xForm As CCrossTab
  Dim xFldList As String[]
  Dim hGdChr As FmAnalyzeSett

  hGdChr = New FmAnalyzeSett("GridCrossTab", modGridView.GetGridViewColumns(GridView1))
  hGdChr.ShowModal

  xFldList = GetSQLColumns()
  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  If modCustPatient.$TabRowColumn And If modCustPatient.$TabFieldColumn Then
    xForm = New CCrossTab
    Inc Application.Busy
    Row = CInt(modCustPatient.$TabRowColumn) - 1
    xFieRow = xFldList[Row]
    Column = CInt(modCustPatient.$TabFieldColumn) - 1
    xFieColm = xFldList[Column]
    res = ExecuteQuery([xFieRow, xFieColm])

    If res.Available Then
      For Each res
        xval = GetGridViewValue(Row, res[xFieRow])
        yval = GetGridViewValue(Column, res[xFieColm])
        If xval And If yval Then
          xForm.Add([xval, yval])
        Endif

        If MMain.$IsGUIApp = True Then
          $ProgressBar1.Value = (res.Index + 1) / res.Count
          Wait
        Endif
      Next
    Endif
    Dec Application.Busy

    hForm = New FmGridCrossTab(GridView1.Columns[Row].Text, xForm.GetSPSSFile())
    hForm.ShowModal
    modExternal.$ExecValueColl.Clear()
  Endif

  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif

End

''---------------------------------------- QTY Chart ------------------------------------
Private Sub FillItemChartQTY()

  Dim sFile As String

  sFile = Temp()
  File.Save(sFile, $qtyChart.Join(gb.NewLine))
  If modBasic.$ChartExecStat = "PSPP" Then
    modImage.StretchtPictureToBox(PictureBox1, modChart.FrequencyChart(sFile, "Invoice Count"))
  Else
    modImage.StretchtPictureToBox(PictureBox1, modChart.FrequencyChart(sFile, "Invoice Count"))
  Endif
  mnustatsqty.Tag = sFile

End

Public Sub PictureBox1_Menu()

  mnuqty.Popup

End

Public Sub mnuexpoqty_Click()

  If Dialog.SelectDirectory() Then Return
  PictureBox1.Image.Save(Dialog.Path &/ "InvoiceCount" & ".png")

End

Public Sub mnustatsqty_Click()

  If modBasic.$ChartExecStat = "PSPP" Then
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("freqtable", mnustatsqty.Tag))
  Else
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("freqtable", mnustatsqty.Tag))
  Endif

End

''---------------------------------------- AMT Chart --------------------------------------------
Private Sub FillItemChartAMT()

  Dim sPath As String
  Dim sNew As String

  sPath = Temp()
  File.Save(sPath, $amtCHart.Join(gb.NewLine))
  sNew = modString.GetGroupSUmmaryCSV(sPath, 0, 1, ";", gb.Tab, gb.Float)

  If modBasic.$ChartExecStat = "PSPP" Then
    modImage.StretchtPictureToBox(PictureBox2, modChart.HistogramChart(sNew, "[Received Amount in " & modChart.GetAMTLabelChart() & "]"))
  Else
    modImage.StretchtPictureToBox(PictureBox2, modChart.HistogramChart(sNew, "[Received Amount in " & modChart.GetAMTLabelChart() & "]"))
  Endif
  mnustatsamt.Tag = sNew

End

Public Sub PictureBox2_Menu()

  mnuamt.Popup

End

Public Sub mnuqtyamt_Click()

  If Dialog.SelectDirectory() Then Return
  PictureBox2.Image.Save(Dialog.Path &/ "ReceivedAmount" & ".png")

End

Public Sub mnustatsamt_Click()

  modDevice.DesktopOpenFile(mnustatsamt.Tag)

End

''----------------------------------------------------------- Reports -----------------------------------
Public Sub btnfullrep_Click()

  Dim xHeader As String[]
  Dim xhide As Integer[]
  Dim Column As Integer
  Dim xCollRow As Collection
  Dim xColum As Integer

  Dim $hGridExportTable As CExportResult
  Dim xparam1 As String
  Dim xparam2 As String
  Dim encColumn As Integer

  Dim xFldList As String[]

  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  xHeader = New String[]
  xhide = New Integer[]
  For Column = 0 To GridView1.Columns.Count - 1
    xHeader.Add(GridView1.Columns[Column].Text)
    If GridView1.Columns[Column].Width < 5 Then
      xhide.Add(Column)
    Endif
  Next
  xparam1 = "BILLING REPORT: " & txtselect.Text
  xparam2 = modReportVar.GetDateTimeReport(modDate.StartSqlDate(dtfir.value), gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(modDate.EndSqlDate(dtlast.value), gb.MediumDate)
  encColumn = 0
  $hGridExportTable = New CExportResult(Me.Tag, xHeader, xhide, xparam1, xparam2, encColumn)

  Inc Application.Busy
  xFldList = GetSQLColumns()

  For Each $rData
    xCollRow = New Collection
    For xColum = 0 To xFldList.Count - 1
      xCollRow.Add(GetGridViewValue(xColum, $rData[xFldList[xColum]]), CStr(xColum))
    Next
    $hGridExportTable.Add($rData.Index, xCollRow)

    If MMain.$IsGUIApp = True Then
      $ProgressBar1.Value = ($rData.Index + 1) / $rData.Count
      Wait
    Endif
  Next

  Dec Application.Busy
  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif
  modControlSub.DisplayReportExport($hGridExportTable.HTMLPath())

End

Public Sub txtselect_KeyPress()

  If Key.Code = Key.Down Then
    If modBasic.$AutoEncSuffix = "Yes" Then
      txtselect.Text = txtselect.Text & modBasic.$HospCode
    Endif
  Else
    modGeneralMain.InputTextKeyOnly()
  Endif

End

Public Sub chkqty_Click()

  TabStrip1.Index = 1

End

Public Sub chkamt_Click()

  TabStrip1.Index = 2

End

Public Sub GridView1_Menu()

  mnuhide.Popup

End

Public Sub mnubillreport_Click()

  Dim xPath As String

  If GridView1.Rows.Selection.Count > 0 Then
    Inc Application.Busy
    xPath = modCHTMLInvoice.ShowTotalInvoicebyPatient(GridView1[GridView1.Row, 0].Text, "Complete")
    Dec Application.Busy
    modControlSub.OpenHTMLPreview(GridView1[GridView1.Row, 0].Text, xPath, "ReportSize")
  Endif

End

Public Sub mnuexpense_Click()

  Dim xPath As String

  If GridView1.Rows.Selection.Count > 0 Then
    Inc Application.Busy
    xPath = modCHTMLInvoice.ShowTotalExpensebyPatient(modDatabase.$syConn, GridView1[GridView1.Row, 0].Text, "Complete")
    Dec Application.Busy
    modControlSub.OpenHTMLPreview(GridView1[GridView1.Row, 0].Text, xPath, "ReportSize")
  Endif

End

Public Sub mnuexsummary_Click()

  Dim xPath As String

  If GridView1.Rows.Selection.Count > 0 Then
    Inc Application.Busy
    xPath = modCHTMLInvoice.ShowSummaryExpensebyPatient(modDatabase.$syConn, GridView1[GridView1.Row, 0].Text, "Complete")
    Dec Application.Busy
    modControlSub.OpenHTMLPreview(GridView1[GridView1.Row, 0].Text, xPath, "ReportSize")
  Endif

End

Public Sub mnugroupsumm_Click()

  Dim xPath As String

  If GridView1.Rows.Selection.Count > 0 Then
    Inc Application.Busy
    xPath = modCHTMLInvoice.ShowTotalGroupbyPatient(modDatabase.$syConn, GridView1[GridView1.Row, 0].Text, "Complete")
    Dec Application.Busy
    modControlSub.OpenHTMLPreview(GridView1[GridView1.Row, 0].Text, xPath, "ReportSize")
  Endif

End

Public Sub mnucountuni_Click()

  Dim Column As Integer
  Dim xFieColm As String
  Dim res As Result
  Dim yval As Variant
  Dim xList As String[]

  Dim xVar As Variant[]
  Dim xFldList As String[]
  Dim xPath As String

  Column = ListIndex("Column Index", modGridView.GetGridViewColumns(GridView1))
  If Column + 1 > 0 Then
    xFldList = GetSQLColumns()
    If MMain.$IsGUIApp = True Then
      $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
      $ProgressBar1.Visible = True
      $ProgressBar1.Value = 0
    Endif

    Inc Application.Busy
    xFieColm = xFldList[Column]
    res = ExecuteQuery([xFieColm])
    xList = New String[]
    If res.Available Then
      For Each res
        yval = GetGridViewValue(Column, res[xFieColm])
        If yval Then
          xList.Add(yval)
        Endif

        If MMain.$IsGUIApp = True Then
          $ProgressBar1.Value = (res.Index + 1) / res.Count
          Wait
        Endif
      Next
    Endif
    If xList.Count Then
      xVar = modString.GetUnivariateSummary(xList)
      xPath = modCHTMLReport.CreateHTMLReportFromArray(["Variable", "Count"], xVar, GridView1.Columns[Column].Text, modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))
    Endif
    Dec Application.Busy

    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnucolumns_Click()

  If Message.Question(modGridView.GetColumnsListString(GridView1), ("OK"), ("Setting")) = 2 Then
    fmChartSetting.Close
    fmChartSetting.ShowModal
  Endif

End

Public Sub mnuexpocolumn_Click()

  Dim hForm As FmCustColumnSet

  hForm = New FmCustColumnSet(Me.Tag)
  hForm.ShowModal

End
