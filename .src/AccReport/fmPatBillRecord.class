' Gambas class file

Private $rData As Result
Private $aMyFields As String[]
Private $qtyChart As String[]
Private $amtCHart As String[]
Private $ProgressBar1 As ProgressBar
Private $RepoOption As String
Private $SSQLFields As String[]

Private $ColCount As Integer
Private $newColumn As String[]
Private $RepoStr As String

Private $tblpatbilling As String
Private $tblpatbilldetail As String
Private $tbltempbilldetail As String

Public Sub Form_Open()

  modGeneralMain.ArrangeEmbedForms(Me, Panel1, "Vertical")
  Me.Icon = Picture[modGeneralMain.$strLogo]

  modBillingAll.$InvLockLocation = ""
  modReceiptAll.$RecLockLocation = ""
  cmbcomp.List = modBasic.$AllCompPerList
  cmbcomp.Text = "%"
  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      ' cmbsearch.Text = "Hospital"
      cmbsearch.Text = modDataRepo.$RepositoryMode
      txtselect.Text = modBasic.$HospCode
      cmbsearch.Enabled = False
      txtselect.Enabled = False
    Else
      cmbsearch.List = ["Hospital", "Municipality", "Category", "District", "Province"]
      mnucashinvoice.Enabled = False
    Endif

  Else
    Select modHelpVariable.$LogInCategory
      Case "Cashier", "Dispensar"
        mnulocked.Visible = False
        If modBasic.$ViewLockInvoice = "User" Then
          cmbsearch.List = ["Encounter", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Doc Upload", "CBMS Upload"]
        Else If modBasic.$ViewLockInvoice = "Location" Then
          cmbsearch.List = ["Encounter", "Cashier", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Doc Upload", "CBMS Upload"]
          cmbcomp.Text = modBasic.$compID
          cmbcomp.Enabled = False
          lblcomp.Text = "Lock"
        Else
          cmbsearch.List = ["Encounter", "Cashier", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Doc Upload", "CBMS Upload"]
        Endif
      Case Else
        cmbsearch.List = ["Encounter", "Cashier", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Doc Upload", "CBMS Upload"]
    End Select

  Endif

  cmbtype.List = ["All Types", "Cash Deposit", "Counter Sales", "Counter Return", "Pharmacy Sales", "Pharmacy Return", "Due Clearance", "Deposit Adjustment"]
  cmbtype.Text = "All Types"
  cmbcategory.List = ["%", "Diagnostic Tests", "General Services", "Procedures", "Equipment", "Radio Diagnostics", "Other Items", "Medicines", "Surgicals", "Extra Items"]
  cmbcashcredit.List = ["Credit", "Cash", "%"]
  cmbaccount.List = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldacledger) as col from tblacledger"))
  cmbaccount.Add("%")
  cmbaccount.Text = "%"
  cmblocation.List = ["OPD", "IPD", "All"]
  cmblocation.Text = "All"

  Select modHelpVariable.$LogInCategory
    Case "Cashier", "Dispensar"
      modAccount.PasInvoiceSetting(cmbfiscal, False)
      mnufinance.Enabled = False
      mnufinansumm.Enabled = False
      If modBasic.$BillReportSummary = "Hidden" Then
        Panel4.Visible = False
        btnfullrep.Enabled = False
      Endif
    Case Else
      modAccount.PasInvoiceSetting(cmbfiscal, True)
      mnufinance.Enabled = True
      mnufinansumm.Enabled = True
  End Select

  dtfir.Value = Now()
  dtlast.Value = Now()
  txtselect.Text = ""
  cmbcashcredit.Text = "%"
  cmbcategory.Text = "%"
  If MMain.$WebReport = "Multiple" Then
    $RepoOption = "Date"
    mnurepoformat.Enabled = False
  Else
    $RepoOption = "Invoice"
  Endif
  SHowEntryBox()
  rbinvoice.Value = True
  LoadTableNames()

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub mnulocked_Click()

  Dim xcomp As String

  xcomp = InputCombo("Select Location to be Locked", "Reports", modBasic.$AllCompList, "", False)
  If xcomp Then
    modBillingAll.$InvLockLocation = xcomp
    modReceiptAll.$RecLockLocation = xcomp
    cmbcomp.Text = xcomp
    cmbcomp.Enabled = False
    lblcomp.Text = "Lock"
  Else
    modBillingAll.$InvLockLocation = ""
    modReceiptAll.$RecLockLocation = ""
    cmbcomp.Text = "%"
    cmbcomp.Enabled = True
    lblcomp.Text = "Comp"
  Endif

End

Private Sub SetRepoString()

  If MMain.$WebReport = "Multiple" Then
  Else
    cmbsearch.Text = ""
    txtselect.Text = ""
  Endif

End

Public Sub cmbsearch_Click()

  txtselect.Clear
  txtselect.Text = ""
  If cmbsearch.Text = "Cashier" Then
    txtselect.List = modGeneral.GetUserIDAll()
  Else If cmbsearch.Text = "Package" Then
    txtselect.List = modNonMedical.FillDiscountCombo()
  Else If cmbsearch.Text = "RatePlan" Then
    txtselect.List = modNonMedical.FillCashModeCombo()
  Else If cmbsearch.Text = "Doc Upload" Then
    txtselect.List = ["Pending", "Completed"]
  Else If cmbsearch.Text = "CBMS Upload" Then
    txtselect.List = ["Pending", "Completed"]
  Endif

End

Public Sub mnurepoformat_Click()

  If mnurepoformat.Checked = True Then
    $RepoOption = "Invoice"
    mnurepoformat.Checked = False
    SHowEntryBox()
  Else If mnurepoformat.Checked = False Then
    $RepoOption = "Date"
    mnurepoformat.Checked = True
    SHowEntryBox()
  Endif

End

Private Sub SHowEntryBox()

  If $RepoOption = "Date" Then
    txtdtfrom.Visible = True
    txtdtto.Visible = True
    txtinvfrom.Visible = False
    txtinvto.Visible = False
    txtdtfrom.Value = modDate.StartSqlDate(Now())
    txtdtto.Value = modDate.EndSqlDate(Now())
  Else
    txtdtfrom.Visible = False
    txtdtto.Visible = False
    txtinvfrom.Visible = True
    txtinvto.Visible = True
  Endif

End

Private Sub LoadTableNames()

  Dim res As Result

  If cmbfiscal.Text = "Current" Then
    $tblpatbilling = "tblpatbilling"
    $tblpatbilldetail = "tblpatbilldetail"
    $tbltempbilldetail = "tbltempbilldetail"
  Else
    res = modDatabase.$syConn.Exec("select fldpatbilling,fldpatbilldetail,fldtempbilldetail from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", cmbfiscal.Text, "Active")
    If res.Available Then
      If res["fldpatbilling"] Then
        $tblpatbilling = res["fldpatbilling"]
      Else
        $tblpatbilling = "tblpatbilling"
      Endif
      If res["fldpatbilldetail"] Then
        $tblpatbilldetail = res["fldpatbilldetail"]
      Else
        $tblpatbilldetail = "tblpatbilldetail"
      Endif
      If res["fldtempbilldetail"] Then
        $tbltempbilldetail = res["fldtempbilldetail"]
      Else
        $tbltempbilldetail = "tbltempbilldetail"
      Endif
    Else
      $tblpatbilling = "tblpatbilling"
      $tblpatbilldetail = "tblpatbilldetail"
      $tbltempbilldetail = "tbltempbilldetail"
    Endif
  Endif

End

Public Sub cmbfiscal_Click()

  LoadTableNames()

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub mnufiscal_Click()

  Dim res As Result
  Dim xyear As String

  xyear = InputCombo("Select Fiscal Year Range", "Select Year", modBasic.$FiscalYearList, "", True)
  If xyear Then
    res = modDatabase.$myConn.Exec("select fldfrom,fldend from tblfiscalid where fldlabel=&1", xyear)
    If res.Available Then
      res.MoveFirst
      dtfir.Value = res["fldfrom"]
      dtlast.Value = res["fldend"]
    Endif
  Endif

End

Public Sub cmbsearch_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbsearch)
  modFillContainer.RestrictComboToContent(cmbsearch)

End

Public Sub cmbcategory_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbcategory)
  modFillContainer.RestrictComboToContent(cmbcategory)

End

Public Sub cmbcashcredit_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbcashcredit)
  modFillContainer.RestrictComboToContent(cmbcashcredit)

End

Public Sub cmbtype_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbtype)
  modFillContainer.RestrictComboToContent(cmbtype)

End

Private Sub GetFields()

  Dim xhospfld As String

  xhospfld = modDataRepo.HospitalField()
  If rbreceipt.Value = True And If cmbtype.Text = "Deposit Adjustment" Then
    $SSQLFields = ["fldtime", "fldtime", "fldbillno", "fldencounterval", "fldencounterval", "fldbilltype", "fldbankname", "fldchequeno", "flditemamt", "flddiscountamt", "fldtaxamt", "fldchargedamt", "fldreceivedamt", "fldcurdeposit", "flduserid", "fldbilltype", "fldtaxamt", "flddiscountamt", "fldbillno", "flddiscountgroup", "fldcomp", "fldprevdeposit", "flddepoadjust"]
  Else
    $SSQLFields = ["fldtime", "fldtime", "fldbillno", "fldencounterval", "fldencounterval", "fldbilltype", "fldbankname", "fldchequeno", "flditemamt", "flddiscountamt", "fldtaxamt", "fldchargedamt", "fldreceivedamt", "fldcurdeposit", "flduserid", "fldbilltype", "fldtaxamt", "flddiscountamt", "fldbillno", "flddiscountgroup", "fldcomp", "fldprevdeposit"]
  Endif
  If xhospfld Then
    $SSQLFields.Add(xhospfld)
  Endif

End

Private Function GetSQLColumns() As String[]

  Dim xFldList As String[]
  Dim i As Integer

  GetFields()
  modCustPatient.FillNewCOlumnCollection(Me.Tag)
  $newColumn = modCustPatient.CustomNewColumnsTitle(Me.Tag)
  xFldList = $SSQLFields.Copy()
  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      xFldList.Add("fldencounterval")
    Next
  Endif
  Return xFldList

End

Private Sub SetRepoStr()

  If MMain.$WebReport = "Multiple" Then
    $RepoStr = modDataRepo.GetWhereStringRepo(cmbsearch.Text, txtselect.Text)
  Else
    $RepoStr = ""
  Endif

End

Public Sub mnusaleall_Click()

  Dim xFieldList As String[]
  Dim xtype As String
  Dim xstr As String

  xtype = InputCombo("Select Category", "Invoices", ["All Types", "With Discount", "With Tax"], "", True)
  If xtype Then
    If xtype = "With Discount" Then
      xstr = db.Subst(" and flddiscountamt>&1", 0)
    Else If xtype = "With Tax" Then
      xstr = db.Subst(" and fldtaxamt>&1", 0)
    Else
      xstr = ""
    Endif
    xFieldList = GetSQLColumns()
    SetRepoStr()
    If rbinvoice.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2 and (fldbillno like &3 or fldbillno like &4)" & xstr & $RepoStr & " ORDER BY fldtime ASC", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), "CAS" & "%", "PHM" & "%")                                                  ''
    Else If rbreceipt.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2 and (fldbillno like &3 or fldbillno like &4)" & xstr & $RepoStr & " ORDER BY fldtime ASC", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), "TMP" & "%", "TPM" & "%")
    Endif
    txttaxamt.Value = 0
    txtdiscamt.Value = 0
    txttotalrecv.Value = 0
    txttotalamt.Value = 0
    FillGrid()
  Endif

End

Public Sub mnuretall_Click()

  Dim xFieldList As String[]
  Dim xtype As String
  Dim xstr As String

  xtype = InputCombo("Select Category", "Invoices", ["All Types", "With Discount", "With Tax"], "", True)
  If xtype Then
    If xtype = "With Discount" Then
      xstr = db.Subst(" and flddiscountamt<&1", 0)
    Else If xtype = "With Tax" Then
      xstr = db.Subst(" and fldtaxamt<&1", 0)
    Else
      xstr = ""
    Endif
    xFieldList = GetSQLColumns()
    SetRepoStr()
    If rbinvoice.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2 and (fldbillno like &3 or fldbillno like &4)" & xstr & $RepoStr & " ORDER BY fldtime ASC", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), "CRE" & "%", "RET" & "%")                                                  ''
    Else If rbreceipt.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2 and (fldbillno like &3 or fldbillno like &4)" & xstr & $RepoStr & " ORDER BY fldtime ASC", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), "TRE" & "%", "TPR" & "%")
    Endif
    txttaxamt.Value = 0
    txtdiscamt.Value = 0
    txttotalrecv.Value = 0
    txttotalamt.Value = 0
    FillGrid()
  Endif

End

Public Sub mnuaddcolumn_Click()

  Dim hForm As FmAddNewColumn

  hForm = New FmAddNewColumn(Me.Tag)
  hForm.ShowModal

End

Public Sub mnusearch_Click()

  Dim xname As String[]
  Dim xFieldList As String[]

  xFieldList = GetSQLColumns()
  SetRepoStr()
  xname = InputDoubleText(("Search Patient Name"), ["First Name", "SurName"], ["%", "%"], modBasic.$SurNameList)
  If xname Then
    If rbinvoice.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where lower(fldptnamefir) like &3 and lower(fldptnamelast) like &4))" & $RepoStr, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), LCase(xname[0]), LCase(xname[1]))                                                  ''
    Else If rbreceipt.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where lower(fldptnamefir) like &3 and lower(fldptnamelast) like &4))" & $RepoStr, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), LCase(xname[0]), LCase(xname[1]))
    Endif
    txttaxamt.Value = 0
    txtdiscamt.Value = 0
    txttotalrecv.Value = 0
    txttotalamt.Value = 0
    FillGrid()
  Endif

End

Public Sub mnusearchitem_Click()

  Dim xname As String
  Dim xFieldList As String[]
  Dim xList As String[]

  xFieldList = GetSQLColumns()
  SetRepoStr()
  xList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select flditemname as col from tblservicecost"))
  xname = GridViewNew("Select Particulars", xList, True)
  If xname Then
    If rbinvoice.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2 and fldbillno in(select fldbillno from " & $tblpatbilling & " where flditemname like &3)" & $RepoStr, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), xname)                                                  ''
    Else If rbreceipt.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2 and fldbillno in(select fldbillno from " & $tblpatbilling & " where flditemname like &3)" & $RepoStr, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), xname)
    Endif
    txttaxamt.Value = 0
    txtdiscamt.Value = 0
    txttotalrecv.Value = 0
    txttotalamt.Value = 0
    FillGrid()
  Endif

End

Private Function ExecuteQuery(xFldList As String[]) As Result

  Dim res As Result
  Dim Bll As String
  Dim Bll1 As String
  Dim Bll2 As String
  Dim txuser As String
  Dim xcateg As String
  Dim xregist As String
  Dim yregist As String
  Dim xsear As String
  Dim xorder As String

  If cmbtype.Text = "All Types" Then
    Bll = "%"
    Bll1 = "%"
    Bll2 = "%"
  Else
    If rbinvoice.Value = True Then
      Bll = modBillLock.InvSign(cmbtype.Text) & "%"
    Else If rbreceipt.Value = True Then
      Bll = modBillLock.ReceiptSign(cmbtype.Text) & "%"
    Else If rbboth.Value = True
      Bll1 = modBillLock.InvSign(cmbtype.Text) & "%"
      Bll2 = modBillLock.ReceiptSign(cmbtype.Text) & "%"
    Endif
  Endif

  If modBasic.$ViewLockInvoice = "User" Then
    txuser = modBasic.$lbluser
  Else
    txuser = "%"
  Endif

  If cmbcategory.Text = "%" Then
    xcateg = ""
  Else
    xcateg = " and fldbillno in(select fldbillno from " & $tblpatbilling & " where flditemtype like &7)"
  Endif

  If cmbaccount.Text = "%" Then
    xregist = ""
  Else
    xregist = " and lower(fldbankname) like &8"
  Endif

  If cmblocation.Text = "All" Then
    yregist = ""
  Else
    If cmblocation.Text = "OPD" Then
      yregist = " and fldprevdeposit=&9"
    Else If cmblocation.Text = "IPD" Then
      yregist = " and fldprevdeposit>&9"
    Endif
  Endif

  SetRepoStr()
  If Not cmbsearch.Text Then
    xsear = ""
  Else
    If cmbsearch.Text = "Encounter" Then
      xsear = " and lower(fldencounterval) like &{10}"
    Else If cmbsearch.Text = "Cashier" Then
      xsear = " and lower(flduserid) like &{10}"
    Else If cmbsearch.Text = "Invoice" Then
      xsear = " and lower(fldbillno) like &{10}"
    Else If cmbsearch.Text = "Reference" Then
      xsear = " and lower(fldchequeno) like &{10}"
    Else If cmbsearch.Text = "PatientCode" Then
      xsear = " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptcode like &{10}))"

    Else If cmbsearch.Text = "Package" Then
      xsear = " and fldbillno in(select fldbillno from tblpatbilling where flddisctype like &{10})"
    Else If cmbsearch.Text = "RatePlan" Then
      xsear = " and fldbillno in(select fldbillno from tblpatbilling where fldbillingmode like &{10})"

    Else If cmbsearch.Text = "Doc Upload" Then
      If txtselect.Text = "Pending" Then
        xsear = " and fldbillno not in(select fldbillno from tblbillupload)"
      Else
        xsear = " and fldbillno in(select fldbillno from tblbillupload)"
      Endif
    Else If cmbsearch.Text = "CBMS Upload" Then
      If txtselect.Text = "Pending" Then
        xsear = Subst(" and fldbillno in(select fldbillno from tblfiscal where (fldsync IS NULL or fldsync<>&1))", 200)
      Else
        xsear = Subst(" and fldbillno in(select fldbillno from tblfiscal where fldsync=&1)", 200)
      Endif
    Else
      xsear = "" 'modDataRepo.GetWhereStringRepo(cmbsearch.Text, txtselect.Text)
    Endif
  Endif

  If cmbsearch.Text = "Doc Upload" And If txtselect.Text = "Pending" Then
    xorder = " ORDER BY fldchequeno"
  Else
    xorder = " ORDER BY fldid"
  Endif

  If rbinvoice.Value = True Then
    res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from " & $tblpatbilldetail & " where fldcomp like &1 and fldbillno like &2 and fldtime>=&3 and fldtime<=&4 and fldbilltype like &5 and flduserid like &6" & xcateg & xregist & yregist & xsear & $RepoStr & xorder, cmbcomp.Text, Bll, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbcashcredit.Text, txuser, cmbcategory.Text, LCase(cmbaccount.Text), 1, LCase(txtselect.Text))
  Else If rbreceipt.Value = True Then
    res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from " & $tbltempbilldetail & " where fldcomp like &1 and fldbillno like &2 and fldtime>=&3 and fldtime<=&4 and fldbilltype like &5 and flduserid like &6" & xcateg & xregist & yregist & xsear & $RepoStr & xorder, cmbcomp.Text, Bll, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbcashcredit.Text, txuser, cmbcategory.Text, LCase(cmbaccount.Text), 1, LCase(txtselect.Text))
  Else If rbboth.Value = True Then
    res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from " & $tblpatbilldetail & " where fldcomp like &1 and fldbillno like &2 and fldtime>=&3 and fldtime<=&4 and fldbilltype like &5 and flduserid like &6" & xcateg & xregist & yregist & xsear & $RepoStr & " UNION ALL " & "select " & xFldList.Join(",") & " from " & $tbltempbilldetail & " where fldcomp like &1 and fldbillno like &{11} and fldtime>=&3 and fldtime<=&4 and fldbilltype like &5 and flduserid like &6" & xcateg & xregist & yregist & xsear & $RepoStr, cmbcomp.Text, Bll1, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbcashcredit.Text, txuser, cmbcategory.Text, LCase(cmbaccount.Text), 1, LCase(txtselect.Text), Bll2)              ''
  Endif
  Return res

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant
  Dim i As Integer

  If Column = 0 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.MediumDate)
  Else If Column = 1 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.LongTime)
  Else If Column = 4 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 8 Then
    If modHelpVariable.$LogInCategory = "Cashier" And If modBasic.$BillReportSummary = "Hidden" Then
      xxx = "***"
    Else
      xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
    Endif
  Else If Column = 9 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 10 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 11 Then
    If modHelpVariable.$LogInCategory = "Cashier" And If modBasic.$BillReportSummary = "Hidden" Then
      xxx = "***"
    Else
      xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
    Endif
  Else If Column = 12 Then
    If modHelpVariable.$LogInCategory = "Cashier" And If modBasic.$BillReportSummary = "Hidden" Then
      xxx = "***"
    Else
      xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
    Endif
  Else If Column = 13 Then
    If modHelpVariable.$LogInCategory = "Cashier" And If modBasic.$BillReportSummary = "Hidden" Then
      xxx = "***"
    Else
      xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
    Endif
  Else If Column = 18 Then
    xxx = modNonMedical.GetReturnInvoices(xVariable).Join("; ")
  Else If Column = 22 Then
    If rbreceipt.Value = True And If cmbtype.Text = "Deposit Adjustment" Then
      xxx = xVariable
    Else
      xxx = modDataRepo.GetHospitalTextLabel(xVariable)
    Endif
  Else
    xxx = xVariable
  Endif

  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      If Column = $ColCount + i Then
        xxx = modCustPatient.NewColValue(Me.Tag, $newColumn[i], xVariable)
      Endif
    Next
  Endif
  Return xxx

End

Public Sub chkok_Click()

  Dim res As Result
  Dim totamt As Float
  Dim taxamt As Float
  Dim discamt As Float
  Dim recvamt As Float
  Dim xFldList As String[]
  Dim xFieldList As String[]

  Inc Application.Busy

  TabStrip1.Index = 0
  xFieldList = GetSQLColumns()
  $rData = ExecuteQuery(xFieldList)
  If chkqty.Value = True Or If chkamt.Value = True Then
    ExportData()
  Else
    taxamt = 0
    discamt = 0
    recvamt = 0
    totamt = 0
    xFldList = ["SUM(fldchargedamt) as totamt", "SUM(fldtaxamt) as taxamt", "SUM(flddiscountamt) as dscamt", "SUM(fldreceivedamt+fldcurdeposit) as recvamt"]
    res = ExecuteQuery(xFldList)
    ' res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from tblpatbilldetail where fldcomp like &1 and fldencounterval like &2 and flduserid like &3 and fldbillno like &4 and fldbillno like &5 and fldtime>=&6 and fldtime<=&7 and fldbilltype like &8" & xst & xregist, cmbcomp.Text, txencid, txuser, txtbillno, Bll, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbmode.Text, cmbcategory.Text, cmbregist.Text)
    If res.Available Then
      For Each res
        If res["taxamt"] Then
          taxamt = taxamt + res["taxamt"]
        Endif
        If res["dscamt"] Then
          discamt = discamt + res["dscamt"]
        Endif
        If res["recvamt"] Then
          recvamt = recvamt + res["recvamt"]
        Endif
        If res["totamt"] Then
          totamt = totamt + res["totamt"]
        Endif
      Next

      txttaxamt.Value = Round(taxamt, -2)
      txtdiscamt.Value = Round(discamt, -2)
      txttotalrecv.Value = Round(recvamt, -2)
      txttotalamt.Value = Round(totamt, -2)
    Endif
  Endif

  FillGrid()

  If chkqty.Value = True Then
    FillItemChartQTY()
  Endif
  If chkamt.Value = True Then
    FillItemChartAMT()
  Endif

  If $rData.Available Then
    $rData.MoveFirst
    txtinvfrom.Text = $rData["fldbillno"]
    $rData.MoveLast
    txtinvto.Text = $rData["fldbillno"]
  Endif
  Dec Application.Busy

End

Private Sub FillGrid()

  Dim i As Integer

  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
  $ColCount = $SSQLFields.Count
  With GridView1
    .Columns[0].Width = 100 * modBasic.$AppWidthRatio
    .Columns[1].Width = 75 * modBasic.$AppWidthRatio
    .Columns[2].Width = 150 * modBasic.$AppWidthRatio
    .Columns[3].Width = 100 * modBasic.$AppWidthRatio
    .Columns[4].Width = 200 * modBasic.$AppWidthRatio
    .Columns[5].Width = 50 * modBasic.$AppWidthRatio
    .Columns[6].Width = 100 * modBasic.$AppWidthRatio
    .Columns[7].Width = 100 * modBasic.$AppWidthRatio
    .Columns[8].Width = 100 * modBasic.$AppWidthRatio
    .Columns[9].Width = 100 * modBasic.$AppWidthRatio
    .Columns[10].Width = 100 * modBasic.$AppWidthRatio
    .Columns[11].Width = 100 * modBasic.$AppWidthRatio
    .Columns[12].Width = 100 * modBasic.$AppWidthRatio
    .Columns[13].Width = 100 * modBasic.$AppWidthRatio
    .Columns[14].Width = 75 * modBasic.$AppWidthRatio
    .Columns[15].Width = 1
    .Columns[16].Width = 1
    .Columns[17].Width = 1
    .Columns[18].Width = 100 * modBasic.$AppWidthRatio
    .Columns[19].Width = 125 * modBasic.$AppWidthRatio
    .Columns[20].Width = 100 * modBasic.$AppWidthRatio
    .Columns[21].Width = 1

    .Columns[0].Text = "Date"
    .Columns[1].Text = "Time"
    .Columns[2].Text = "Invoice"
    .Columns[3].Text = "EncID"
    .Columns[4].Text = "Name"
    .Columns[5].Text = "Type"
    .Columns[6].Text = "Account"
    .Columns[7].Text = "Reference"
    .Columns[8].Text = "SubTotal"
    .Columns[9].Text = "DiscAmt"
    .Columns[10].Text = "TaxAmt"
    .Columns[11].Text = "NetTotal"
    .Columns[12].Text = "Received"
    .Columns[13].Text = "Deposit"
    .Columns[14].Text = "User"
    .Columns[18].Text = "Comment"
    .Columns[19].Text = "Label"
    .Columns[20].Text = "Location"

    If $newColumn.Count Then
      For i = 0 To $newColumn.Count - 1
        .Columns[$ColCount + i].Text = $newColumn[i]
        .Columns[$ColCount + i].Width = 150 * modBasic.$AppWidthRatio
      Next
    Endif
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer)

  $rData.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView1, Row)
  If Column > $SSQLFields.Count - 1 Then
    GridView1.Data.RichText = modString.TextToHTML(GetGridViewValue(Column, $rData[$aMyFields[Column]]))
  Else
    GridView1.Data.Text = GetGridViewValue(Column, $rData[$aMyFields[Column]])
  Endif
  ' GridView1.Rows[Row].Height = Max(GridView1.Rows[Row].Height, GridView1.Data.Font.RichTextHeight(GridView1.Data.Text, GridView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (GridView1.Rows.Height - GridView1.Font.Height))
  ' GridView1.Data.WordWrap = True

End

Private Sub ExportData()

  Dim totamt As Float
  Dim nettot As Float
  Dim taxamt As Float
  Dim discamt As Float
  Dim recvamt As Float
  Dim newdepo As Float

  totamt = 0
  nettot = 0
  taxamt = 0
  discamt = 0
  recvamt = 0
  newdepo = 0

  $qtyChart = New String[]
  $amtCHart = New String[]
  $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
  $ProgressBar1.Visible = True
  $ProgressBar1.Value = 0
  For Each $rData
    totamt = totamt + $rData["flditemamt"]
    taxamt = taxamt + $rData["fldtaxamt"]
    discamt = discamt + $rData["flddiscountamt"]
    nettot = nettot + $rData["fldchargedamt"]
    recvamt = recvamt + $rData["fldreceivedamt"]
    newdepo = newdepo + $rData["fldcurdeposit"]
    If chkqty.Value = True Then
      $qtyChart.Add(DateDiff(dtfir.Value, $rData["fldtime"], modChart.GetDateIntegerFromSetting()))
    Endif
    If chkamt.Value = True Then
      $amtCHart.Add(DateDiff(dtfir.Value, $rData["fldtime"], modChart.GetDateIntegerFromSetting()) & ";" & CStr($rData["fldreceivedamt"] / modChart.GetAMTValueChart()))
    Endif
    $ProgressBar1.Value = ($rData.Index + 1) / $rData.Count
    Wait
  Next

  txttotalamt.Value = Round(totamt, -2)
  txttaxamt.Value = Round(taxamt, -2)
  txtdiscamt.Value = Round(discamt, -2)
  txttotalrecv.Value = Round(recvamt, -2)
  If $ProgressBar1 Then
    $ProgressBar1.Visible = False
  Endif

End

''----------------------------------------- Grid menu ---------------------------------------
Public Sub GridView1_DblClick()

  Dim xx As Integer
  Dim yy As Integer

  xx = Mouse.StartX - GridView1.Left
  yy = Mouse.StartY - GridView1.Top

  Balloon.Info(("Current Column is ") & CStr(GridView1.Column + 1), GridView1, xx, yy)
  Balloon.Delay = 1000
  If GridView1.Column = 2 Then
    If txtinvfrom.Text = "" Then
      txtinvfrom.Text = GridView1[GridView1.Row, 2].Text
    Else
      txtinvto.Text = GridView1[GridView1.Row, 2].Text
    Endif
  Endif

End

Public Sub GridView1_Menu()

  mnuhide.Popup

End

Public Sub mnusummgrid_Click()

  Dim xx As String
  Dim ChapCol As String
  Dim GropCol As String
  Dim xChapList As String[]
  Dim xGropList As String[]

  Dim res As Result
  Dim valCol As String
  Dim xFieldList As String[]

  Dim xFinList As Variant[]
  Dim xrowVar As Variant[]
  Dim xchapval As String
  Dim xgroup As String
  Dim xPath As String
  Dim xFldList As String[]

  Dim hGdSum As FmAnalyzeSett

  hGdSum = New FmAnalyzeSett("GridSummary", modGridView.GetGridViewColumns(GridView1))
  hGdSum.ShowModal

  xFldList = GetSQLColumns()
  Inc Application.Busy
  xFieldList = New String[]
  If modCustPatient.$SumChapterColumn Then
    ChapCol = xFldList[modCustPatient.$SumChapterColumn - 1]
    xFieldList.Add(ChapCol)
  Endif
  GropCol = xFldList[modCustPatient.$SumGroupColumn - 1]
  valCol = xFldList[modCustPatient.$SumValueColumn - 1]
  xFieldList.Add(GropCol)
  xFieldList.Add(valCol)

  xChapList = New String[]
  xGropList = New String[]
  xFinList = New Variant[]
  res = ExecuteQuery(xFieldList)
  If res.Available Then
    For Each res
      xrowVar = New Variant[]
      If modCustPatient.$SumChapterColumn Then
        xchapval = GetGridViewValue(modCustPatient.$SumChapterColumn - 1, res[ChapCol])
        xrowVar.Add(xchapval)
        xChapList.Add(xchapval)
      Endif
      xgroup = GetGridViewValue(modCustPatient.$SumGroupColumn - 1, res[GropCol])
      xrowVar.Add(xgroup)
      xGropList.Add(xgroup)

      xrowVar.Add(GetGridViewValue(modCustPatient.$SumValueColumn - 1, res[valCol]))
      xFinList.Add(xrowVar)
    Next
  Endif
  Dec Application.Busy

  xx = "Date: " & modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  If modCustPatient.$SumGroupColumn And If modCustPatient.$SumValueColumn Then
    If modCustPatient.$SumChapterColumn Then
      If modCustPatient.$SummaryType = "Summation(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapterTableReport("Invoice Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else If modCustPatient.$SummaryType = "Count(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapCountTableReport("Invoice Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else
        xPath = modCHTMLReport.SummaryGridChapterReport("Invoice Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Endif
    Else
      xPath = modCHTMLReport.SummaryGridReport("Invoice Report Summary", xx, modString.GetDistinctStringArray(xGropList), xFinList)
    Endif
    modControlSub.DisplayReportExport(xPath)
  Endif

End

Public Sub mnuenchart_Click()

  Dim xx As String
  Dim xField As String
  Dim Column As Integer
  Dim res As Result
  Dim xval As Variant
  Dim hFile As CUnivariate
  Dim xFldList As String[]
  Dim sOrder As String[]

  Dim hUniv As FmAnalyzeSett

  hUniv = New FmAnalyzeSett("Univariate", modGridView.GetGridViewColumns(GridView1))
  hUniv.ShowModal

  xFldList = GetSQLColumns()
  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif
  Inc Application.Busy
  hFile = New CUnivariate

  Column = modCustPatient.GetUnivariateColumn(3)
  xField = xFldList[Column]
  res = ExecuteQuery([xField])

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Column, res[xField])
      If xval Then
        hFile.Add(xval)
      Endif

      If MMain.$IsGUIApp = True Then
        $ProgressBar1.Value = (res.Index + 1) / res.Count
        Wait
      Endif
    Next
  Endif
  Dec Application.Busy
  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif

  If modSettings.ShowSettingFromFIle("UnivariateAnalysis/DataType") = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetEncChartGridNew(hFile.GetSPSSFile(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrosstab_Click()

  Dim xx As String
  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hFile As CBivariate
  Dim xFldList As String[]
  Dim sOrder As String[]
  Dim hBivar As FmAnalyzeSett

  hBivar = New FmAnalyzeSett("Bivariate", modGridView.GetGridViewColumns(GridView1))
  hBivar.ShowModal

  xFldList = GetSQLColumns()
  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  Inc Application.Busy
  hFile = New CBivariate
  Row = modCustPatient.GetCrossVarRow(3)
  xFieRow = xFldList[Row]
  Column = modCustPatient.GetCrossVarColumn(3)
  xFieColm = xFldList[Column]
  res = ExecuteQuery([xFieRow, xFieColm])

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Row, res[xFieRow])
      yval = GetGridViewValue(Column, res[xFieColm])
      If xval And If yval Then
        hFile.Add([xval, yval])
      Endif

      If MMain.$IsGUIApp = True Then
        $ProgressBar1.Value = (res.Index + 1) / res.Count
        Wait
      Endif
    Next
  Endif
  Dec Application.Busy
  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif

  If modCustPatient.$CrossOutcomeType = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetCrossTabStatNew(hFile.GetSPSSFile(), hFile.GetGroups(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrotab_Click()

  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hForm As FmGridCrossTab
  Dim xForm As CCrossTab
  Dim xFldList As String[]
  Dim hGdChr As FmAnalyzeSett

  hGdChr = New FmAnalyzeSett("GridCrossTab", modGridView.GetGridViewColumns(GridView1))
  hGdChr.ShowModal

  xFldList = GetSQLColumns()
  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  If modCustPatient.$TabRowColumn And If modCustPatient.$TabFieldColumn Then
    xForm = New CCrossTab
    Inc Application.Busy
    Row = CInt(modCustPatient.$TabRowColumn) - 1
    xFieRow = xFldList[Row]
    Column = CInt(modCustPatient.$TabFieldColumn) - 1
    xFieColm = xFldList[Column]
    res = ExecuteQuery([xFieRow, xFieColm])

    If res.Available Then
      For Each res
        xval = GetGridViewValue(Row, res[xFieRow])
        yval = GetGridViewValue(Column, res[xFieColm])
        If xval And If yval Then
          xForm.Add([xval, yval])
        Endif

        If MMain.$IsGUIApp = True Then
          $ProgressBar1.Value = (res.Index + 1) / res.Count
          Wait
        Endif
      Next
    Endif
    Dec Application.Busy

    hForm = New FmGridCrossTab(GridView1.Columns[Row].Text, xForm.GetSPSSFile())
    hForm.ShowModal
    modExternal.$ExecValueColl.Clear()
  Endif

  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif

End

Public Sub mnuinvcopy_Click()

  Dim ShowTax As Boolean
  Dim ShowDisc As Boolean
  Dim invType As String

  If GridView1.Rows.Selection.Count > 0 Then
    modNonMedical.$tblpatbilling = $tblpatbilling
    modNonMedical.$tblpatbilldetail = $tblpatbilldetail
    modNonMedical.$tbltempbilldetail = $tbltempbilldetail
    invType = modBillLock.GetInvoiceFormatNo(GridView1[GridView1.Row, 2].Text)
    If invType = "Invoice" Then
      If GridView1[GridView1.Row, 16].Text = 0 Then
        ShowTax = False
      Else
        ShowTax = True
      Endif
      If GridView1[GridView1.Row, 17].Text = 0 Then
        ShowDisc = False
      Else
        ShowDisc = True
      Endif
      modBILLFormat.BillingInvoice(GridView1[GridView1.Row, 3].Text, GridView1[GridView1.Row, 2].Text, modBillLock.GetCopyBillTypeFromBillNo(GridView1[GridView1.Row, 2].Text), ShowTax, ShowDisc)
    Else If invType = "Receipt" Then
      If GridView1[GridView1.Row, 2].Text Like "TDA" & "*" Then
        modBILLFormat.DischargeReceipt(GridView1[GridView1.Row, 3].Text, GridView1[GridView1.Row, 2].Text, "DISCHARGE SLIP (COPY)")
      Else
        modBILLFormat.BillingReceipt(GridView1[GridView1.Row, 3].Text, GridView1[GridView1.Row, 2].Text, "RECEIPT (COPY)")
      Endif
    Endif

    If modBasic.$BillWithInvoicePrint = "Prescription" Then
      modPatientSub.PrintRegistExtraReport(GridView1[GridView1.Row, 3].Text)
    Endif

    modNonMedical.$tblpatbilling = ""
    modNonMedical.$tblpatbilldetail = ""
    modNonMedical.$tbltempbilldetail = ""
  Endif

End

Public Sub mnuparti_Click()

  Dim sql As String
  Dim hForm As FRequest
  Dim res As Result

  If GridView1.Rows.Selection.Count > 0 Then
    If GridView1[GridView1.Row, 2].Text Like "DCL" & "*" Or If GridView1[GridView1.Row, 2].Text Like "TCL" & "*" Then
      sql = "select fldencounterval,fldbillitem,flditemrate,flditemqty,fldtaxper,flddiscper,fldditemamt as tot,fldtime,fldid,fldbillno from tblduebilling where fldbillno=&1"
    Else
      sql = "select fldencounterval,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldditemamt as tot,fldtime,fldid,fldbillno from " & $tblpatbilling & " where fldbillno=&1"                                                  ''
    Endif
    res = modDatabase.$syConn.Exec(sql, GridView1[GridView1.Row, 2].Text)
    If res.Available Then
      hForm = New FRequest(res, GridView1[GridView1.Row, 2].Text, "Billing:SelectedInvoice", False)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub mnugrouping_Click()

  Dim sql As String
  Dim hForm As FRequest
  Dim res As Result

  If GridView1.Rows.Selection.Count > 0 Then
    sql = "select fldencounterval,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldditemamt as tot,fldtime,fldid,fldbillno from " & $tblpatbilling & " where fldsample=&1 and fldencounterval=&2 and fldreason in(select flditemname from " & $tblpatbilling & " where fldbillno=&3)"                                                  ''
    res = modDatabase.$syConn.Exec(sql, "Grouped", GridView1[GridView1.Row, 3].Text, GridView1[GridView1.Row, 2].Text)
    If res.Available Then
      hForm = New FRequest(res, GridView1[GridView1.Row, 2].Text, "Billing:SelectedInvoice", False)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub mnusummary_Click()

  Dim xPath As String
  Dim invType As String

  If GridView1.Rows.Selection.Count > 0 Then
    Inc Application.Busy
    invType = modBillLock.GetInvoiceFormatNo(GridView1[GridView1.Row, 2].Text)
    If invType = "Invoice" Then
      xPath = modCHTMLInvoice.BillDepartmentWise(modDatabase.$syConn, GridView1[GridView1.Row, 2].Text, GridView1[GridView1.Row, 3].Text, "Invoice")
    Else If invType = "Receipt" Then
      xPath = modCHTMLInvoice.BillDepartmentWise(modDatabase.$syConn, GridView1[GridView1.Row, 2].Text, GridView1[GridView1.Row, 3].Text, "Receipt")
    Endif
    Dec Application.Busy
    modControlSub.OpenHTMLPreview(GridView1[GridView1.Row, 3].Text, xPath, "ReportSize")
  Endif

End

Public Sub mnubillreport_Click()

  Dim xPath As String

  If GridView1.Rows.Selection.Count > 0 Then
    Inc Application.Busy
    xPath = modCHTMLInvoice.ShowTotalInvoicebyPatient(GridView1[GridView1.Row, 3].Text, "Complete")
    Dec Application.Busy
    modControlSub.OpenHTMLPreview(GridView1[GridView1.Row, 3].Text, xPath, "ReportSize")
  Endif

End

Public Sub mnuexpense_Click()

  Dim xPath As String

  If GridView1.Rows.Selection.Count > 0 Then
    Inc Application.Busy
    xPath = modCHTMLInvoice.ShowTotalExpensebyPatient(modDatabase.$syConn, GridView1[GridView1.Row, 3].Text, "Complete")
    Dec Application.Busy
    modControlSub.OpenHTMLPreview(GridView1[GridView1.Row, 3].Text, xPath, "ReportSize")
  Endif

End

''---------------------------------------- QTY Chart ------------------------------------
Private Sub FillItemChartQTY()

  Dim sFile As String

  sFile = Temp()
  File.Save(sFile, $qtyChart.Join(gb.NewLine))
  If modBasic.$ChartExecStat = "PSPP" Then
    modImage.StretchtPictureToBox(PictureBox1, modChart.FrequencyChart(sFile, "Invoice Count"))
  Else
    modImage.StretchtPictureToBox(PictureBox1, modChart.FrequencyChart(sFile, "Invoice Count"))
  Endif
  mnustatsqty.Tag = sFile

End

Public Sub PictureBox1_Menu()

  mnuqty.Popup

End

Public Sub mnuexpoqty_Click()

  If Dialog.SelectDirectory() Then Return
  PictureBox1.Image.Save(Dialog.Path &/ "InvoiceCount" & ".png")

End

Public Sub mnustatsqty_Click()

  If modBasic.$ChartExecStat = "PSPP" Then
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("freqtable", mnustatsqty.Tag))
  Else
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("freqtable", mnustatsqty.Tag))
  Endif

End

''---------------------------------------- AMT Chart --------------------------------------------
Private Sub FillItemChartAMT()

  Dim sPath As String
  Dim sNew As String

  sPath = Temp()
  File.Save(sPath, $amtCHart.Join(gb.NewLine))
  sNew = modString.GetGroupSUmmaryCSV(sPath, 0, 1, ";", gb.Tab, gb.Float)

  If modBasic.$ChartExecStat = "PSPP" Then
    modImage.StretchtPictureToBox(PictureBox2, modChart.HistogramChart(sNew, "[Received Amount in " & modChart.GetAMTLabelChart() & "]"))
  Else
    modImage.StretchtPictureToBox(PictureBox2, modChart.HistogramChart(sNew, "[Received Amount in " & modChart.GetAMTLabelChart() & "]"))
  Endif
  mnustatsamt.Tag = sNew

End

Public Sub PictureBox2_Menu()

  mnuamt.Popup

End

Public Sub mnuqtyamt_Click()

  If Dialog.SelectDirectory() Then Return
  PictureBox2.Image.Save(Dialog.Path &/ "ReceivedAmount" & ".png")

End

Public Sub mnustatsamt_Click()

  modDevice.DesktopOpenFile(mnustatsamt.Tag)

End

''----------------------------------------------------------- Reports -----------------------------------
Public Sub btnfullrep_Click()

  Dim xHeader As String[]
  Dim xhide As Integer[]
  Dim Column As Integer
  Dim xCollRow As Collection
  Dim xColum As Integer

  Dim $hGridExportTable As CExportResult
  Dim xparam1 As String
  Dim xparam2 As String
  Dim encColumn As Integer

  Dim xFldList As String[]

  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Visible = True
    $ProgressBar1.Value = 0
  Endif

  xHeader = New String[]
  xhide = New Integer[]
  For Column = 0 To GridView1.Columns.Count - 1
    xHeader.Add(GridView1.Columns[Column].Text)
    If GridView1.Columns[Column].Width < 5 Then
      xhide.Add(Column)
    Endif
  Next
  xparam1 = "BILLING REPORT: " & txtselect.Text
  xparam2 = modReportVar.GetDateTimeReport(modDate.StartSqlDate(dtfir.value), gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(modDate.EndSqlDate(dtlast.value), gb.MediumDate)
  encColumn = 3
  $hGridExportTable = New CExportResult(Me.Tag, xHeader, xhide, xparam1, xparam2, encColumn)

  Inc Application.Busy
  xFldList = GetSQLColumns()

  For Each $rData
    xCollRow = New Collection
    For xColum = 0 To xFldList.Count - 1
      xCollRow.Add(GetGridViewValue(xColum, $rData[xFldList[xColum]]), CStr(xColum))
    Next
    $hGridExportTable.Add($rData.Index, xCollRow)

    If MMain.$IsGUIApp = True Then
      $ProgressBar1.Value = ($rData.Index + 1) / $rData.Count
      Wait
    Endif
  Next

  Dec Application.Busy
  If MMain.$IsGUIApp = True Then
    $ProgressBar1.Visible = False
  Endif
  modControlSub.DisplayReportExport($hGridExportTable.HTMLPath())

End

Public Sub txtselect_KeyPress()

  If Key.Code = Key.Down Then
    If modBasic.$AutoEncSuffix = "Yes" Then
      txtselect.Text = txtselect.Text & modBasic.$HospCode
    Endif
  Else
    modGeneralMain.InputTextKeyOnly()
  Endif

End

Public Sub txtinvfrom_KeyPress()

  modGeneralMain.InputUpCaseOnly()

End

Public Sub txtinvto_KeyPress()

  modGeneralMain.InputUpCaseOnly()

End

''===================== combined ==================================
Public Sub mnucombsummary_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "SUMMARY", [dtfir.Value, dtlast.Value])
  If xdate Then
    Inc Application.Busy
    xPath = modCombinedReport.CombinedReportBillingRangeSummary("Date", modDatabase.$syConn, modDate.StartSqlDate(xdate[0]), modDate.EndSqlDate(xdate[1]), cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnucombledger_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "SUMMARY", [dtfir.Value, dtlast.Value])
  If xdate Then
    Inc Application.Busy
    xPath = modCombinedReport.CombinedReportBillingRangeAccount("Date", modDatabase.$syConn, modDate.StartSqlDate(xdate[0]), modDate.EndSqlDate(xdate[1]), cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnucombuser_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "SUMMARY", [dtfir.Value, dtlast.Value])
  If xdate Then
    Inc Application.Busy
    xPath = modCombinedReport.CombinedReportBillingRangeUserBrief("Date", modDatabase.$syConn, modDate.StartSqlDate(xdate[0]), modDate.EndSqlDate(xdate[1]), cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnucombgroup_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "SUMMARY", [dtfir.Value, dtlast.Value])
  If xdate Then
    Inc Application.Busy
    xPath = modCombinedReport.CombinedReportBillingRangeGroupBrief("Date", modDatabase.$syConn, modDate.StartSqlDate(xdate[0]), modDate.EndSqlDate(xdate[1]), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail, $tbltempbilldetail)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnucomblocation_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "SUMMARY", [dtfir.Value, dtlast.Value])
  If xdate Then
    Inc Application.Busy
    xPath = modCombinedReport.CombinedReportBillingRangeLocation("Date", modDatabase.$syConn, modDate.StartSqlDate(xdate[0]), modDate.EndSqlDate(xdate[1]), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail, $tbltempbilldetail)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

''============================ SUMMARY REPORT ===========================================
Public Sub btnrecv_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeSummary($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeSummary($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeSummary($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeSummary($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modCombinedReport.CombinedReportBillingRangeSummary($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btnsummdepo_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeLocation($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeLocation($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeLocation($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeLocation($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modCombinedReport.CombinedReportBillingRangeLocation($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btndatewise_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeUserDetail($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeUserDetail($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeUserDetail($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeUserDetail($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modCombinedReport.CombinedReportBillingRangeUserDetail($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btninvsumm_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeUserBrief($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeUserBrief($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeUserBrief($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeUserBrief($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modCombinedReport.CombinedReportBillingRangeUserBrief($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btngrpdetail_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeGroupDetail($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeGroupDetail($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeGroupDetail($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeGroupDetail($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modCombinedReport.CombinedReportBillingRangeGroupDetail($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btngrpsummry_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeGroupBrief($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeGroupBrief($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeGroupBrief($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeGroupBrief($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modCombinedReport.CombinedReportBillingRangeGroupBrief($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btndiffitem_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportDetailByMismatch($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportDetailByMismatch($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptInvoiceReportDetailByMismatch($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptInvoiceReportDetailByMismatch($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modCombinedReport.BothInvoiceReportDetailByMismatch($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btnitemsumm_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeAccount($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeAccount($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeAccount($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeAccount($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modCombinedReport.CombinedReportBillingRangeAccount($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btndsc_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Discount", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Discount", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Discount", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Discount", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modCombinedReport.CombinedReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Discount", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btntax_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Tax", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Tax", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Tax", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Tax", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modCombinedReport.CombinedReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Tax", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btnsumdisc_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Credit", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Credit", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Credit", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Credit", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modCombinedReport.CombinedReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Credit", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btntaxsum_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Cash", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modBillingReport.InvoiceReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Cash", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Cash", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        Inc Application.Busy
        xPath = modReceiptReport.ReceiptReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Cash", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        Inc Application.Busy
        xPath = modCombinedReport.CombinedReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Cash", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub chkqty_Click()

  TabStrip1.Index = 1

End

Public Sub chkamt_Click()

  TabStrip1.Index = 2

End

''Date Range values specified in Procedures
Public Sub mnufinsummary_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  If rbinvoice.Value = True Then
    xdate = DoubleDates("Select Dates", "Invoices", [dtfir.Value, dtlast.Value])
  Else If rbreceipt.Value = True Then
    xdate = DoubleDates("Select Dates", "Receipts", [dtfir.Value, dtlast.Value])
  Endif

  If xdate Then
    Inc Application.Busy
    If rbinvoice.Value = True Then
      xPath = modBillingExtra.ServiceInvoiceSummaryCashCredit("Invoice", modDatabase.$syConn, xdate[0], xdate[1], $tblpatbilldetail, cmbsearch.Text, txtselect.Text, $tblpatbilling)
    Else If rbreceipt.Value = True Then
      xPath = modBillingExtra.ServiceInvoiceSummaryCashCredit("Receipt", modDatabase.$syConn, xdate[0], xdate[1], $tbltempbilldetail, cmbsearch.Text, txtselect.Text, $tblpatbilling)
    Endif
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnufree_Click()

  Dim hForm As FmAccountDates
  Dim xType As String

  SetRepoString()
  If rbinvoice.Value = True Then
    xType = "Invoice"
  Else If rbreceipt.Value = True Then
    xType = "Receipt"
  Endif
  hForm = New FmAccountDates("Discount", xType, cmbsearch.Text, txtselect.Text)
  hForm.ShowModal

End

Public Sub mnuselectcredit_Click()

  Dim hForm As FmAccountDates
  Dim xType As String

  SetRepoString()
  If rbinvoice.Value = True Then
    xType = "Invoice"
  Else If rbreceipt.Value = True Then
    xType = "Receipt"
  Endif
  hForm = New FmAccountDates("Credit Sales", xType, cmbsearch.Text, txtselect.Text)
  hForm.ShowModal

End

Public Sub mnudueselect_Click()

  Dim hForm As FmAccountDates
  Dim xType As String

  SetRepoString()
  If rbinvoice.Value = True Then
    xType = "Invoice"
  Else If rbreceipt.Value = True Then
    xType = "Receipt"
  Endif
  hForm = New FmAccountDates("Due Clearance", xType, cmbsearch.Text, txtselect.Text)
  hForm.ShowModal

End

''Date Range values specified in Procedures
Public Sub mnucashcollect_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "INCOME BOOKING", [dtfir.Value, dtlast.Value])
  If xdate Then
    Inc Application.Busy
    xPath = modFinance.GeIncomeBookingFinance(modDatabase.$syConn, xdate[0], xdate[1], cmbsearch.Text, txtselect.Text, cmbfiscal.Text)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnucashinvoice_Click()

  Dim hForm As FmIncomeBook

  SetRepoString()
  hForm = New FmIncomeBook("Income Booking", cmbsearch.Text, txtselect.Text, cmbfiscal.Text)
  hForm.ShowModal

End

''Date Range values specified in Procedures
Public Sub mnusercollsumm_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "USER COLLECTION", [dtfir.Value, dtlast.Value])
  If xdate Then
    Inc Application.Busy
    xPath = modBillingExtra.GetUserCollectionDateSummary(modDatabase.$syConn, xdate[0], xdate[1], cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnulocatusersum_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "USER COLLECTION", [dtfir.Value, dtlast.Value])
  If xdate Then
    Inc Application.Busy
    xPath = modBillingExtra.ShowUserCollectionStatusDetail(modDatabase.$syConn, xdate[0], xdate[1], cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnusercollbysum_Click()

  Dim hForm As FmIncomeBook

  SetRepoString()
  hForm = New FmIncomeBook("User Collection", cmbsearch.Text, txtselect.Text, cmbfiscal.Text)
  hForm.ShowModal

End

Public Sub mnucountuni_Click()

  Dim Column As Integer
  Dim xFieColm As String
  Dim res As Result
  Dim yval As Variant
  Dim xList As String[]

  Dim xVar As Variant[]
  Dim xFldList As String[]
  Dim xPath As String

  Column = ListIndex("Column Index", modGridView.GetGridViewColumns(GridView1))
  If Column + 1 > 0 Then
    xFldList = GetSQLColumns()
    If MMain.$IsGUIApp = True Then
      $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
      $ProgressBar1.Visible = True
      $ProgressBar1.Value = 0
    Endif

    Inc Application.Busy
    xFieColm = xFldList[Column]
    res = ExecuteQuery([xFieColm])
    xList = New String[]
    If res.Available Then
      For Each res
        yval = GetGridViewValue(Column, res[xFieColm])
        If yval Then
          xList.Add(yval)
        Endif

        If MMain.$IsGUIApp = True Then
          $ProgressBar1.Value = (res.Index + 1) / res.Count
          Wait
        Endif
      Next
    Endif
    If xList.Count Then
      xVar = modString.GetUnivariateSummary(xList)
      xPath = modCHTMLReport.CreateHTMLReportFromArray(["Variable", "Count"], xVar, GridView1.Columns[Column].Text, modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))
    Endif
    Dec Application.Busy

    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnucolumns_Click()

  If Message.Question(modGridView.GetColumnsListString(GridView1), ("OK"), ("Setting")) = 2 Then
    fmChartSetting.Close
    fmChartSetting.ShowModal
  Endif

End

Public Sub mnugrouped_Click()

  Dim xList As String[]
  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    xList = SelectListView("Select Locations", modGeneral.CompList(), False)
    If xList Then

      If $RepoOption = "Date" Then
        If txtdtfrom.Value And If txtdtto.Value Then
          Inc Application.Busy
          xPath = modBillingReport.InvoiceReportGroupsSummarySpecial($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, xList, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
          Dec Application.Busy
          modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        Endif

      Else
        If txtinvfrom.Text And If txtinvto.Text Then
          Inc Application.Busy
          xPath = modBillingReport.InvoiceReportGroupsSummarySpecial($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), xList, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
          Dec Application.Busy
          modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        Endif

      Endif

    Endif
  Endif

End

Public Sub mnuexpocolumn_Click()

  Dim hForm As FmCustColumnSet

  hForm = New FmCustColumnSet(Me.Tag)
  hForm.ShowModal

End

Public Sub mnucbmsupload_Click()

  Dim cClass As CCBMSUpload
  Dim rClass As CCBMSReturn
  Dim sBillNo As String
  Dim xout As String
  Dim res1 As Result
  Dim Row As Integer

  If modHelpVariable.$IRDLevel = "Yes" Then
    Inc Application.Busy
    For Row = 0 To GridView1.Rows.Count - 1
      xout = ""
      sBillNo = ""
      sBillNo = GridView1[Row, 2].Text
      res1 = modDatabase.$myConn.Edit("tblfiscal", "fldbillno=&1 and (fldsync IS NULL or fldsync<>&2)", sBillNo, "200")
      If res1.Available Then
        If sBillNo Like "CAS" & "*" Then
          cClass = New CCBMSUpload(sBillNo)
          xout = cClass.CBMSOutput()
        Else If sBillNo Like "PHM" & "*" Then
          cClass = New CCBMSUpload(sBillNo)
          xout = cClass.CBMSOutput()

        Else If sBillNo Like "CRE" & "*" Then
          rClass = New CCBMSReturn(sBillNo)
          xout = rClass.CBMSOutput()
        Else If sBillNo Like "RET" & "*" Then
          rClass = New CCBMSReturn(sBillNo)
          xout = rClass.CBMSOutput()
        Endif

        res1["fldsync"] = Trim(xout)
        res1["xyz"] = False
        res1.Update
      Else
        Message.Warning("Already Uploaded", "OK")
      Endif
    Next
    Dec Application.Busy
  Endif

Catch
  Dec Application.Busy
  Message.Error(xout)

End

Public Sub mnudetail_Click()

  Dim xdate As Date[]
  Dim xPath As String
  Dim sType As String

  SetRepoString()
  If rbinvoice.Value = True Then
    sType = "Invoice"
  Else If rbreceipt.Value = True Then
    sType = "Receipt"
  Else If rbboth.Value = True Then
    sType = "Both"
  Endif
  xdate = DoubleDates("Select Dates", "INVOICE DESCRIPTION", [dtfir.Value, dtlast.Value])
  If xdate Then
    Inc Application.Busy
    xPath = modCHTMLInvoice.ExportInvoiceDepartments(modDatabase.$syConn, sType, xdate[0], xdate[1], cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

''====================== customized for HDCS ==================
Private Sub ExportInvoiceDepartmentsHDCS1(res As Result)

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]

  Dim grpList As String[]
  Dim accList As String[]
  Dim hdr As String[]
  Dim xitem As String
  Dim yitem As String
  Dim zitem As String

  ' Dim xsex As String
  Dim aColl As Collection
  Dim i As Integer
  Dim xitemamt As Float
  Dim discamt As Float
  Dim taxamt As Float
  Dim curdepo As Float
  Dim xcredit As Float
  Dim xcash As Float
  Dim sumColl As Collection

  $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
  $ProgressBar1.Tag = "Const"

  grpList = modNonMedical.GetGroupNameAccount()
  accList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldacledger) as col from tblacledger"))
  hdr = New String[]
  hdr.Add("SNo")
  hdr.Add("Invoice")

  For Each yitem In grpList
    hdr.Add(yitem)
  Next

  hdr.Add("Deposit")
  hdr.Add("SubTotal")
  hdr.Add("Charity")
  ' hdr.Add("Tax")
  hdr.Add("Credit")
  For Each xitem In accList
    hdr.Add(xitem)
  Next
  hdr.Add("Cash")

  Inc Application.Busy
  $BillingReport = New CReportHTML(hdr, "", "")
  $BillingReport.UserData.Add(cmbtype.Text & " : " & cmbaccount.Text & "  Comp: " & cmbcomp.Text & " Type: " & cmbcashcredit.Text, "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate), "PARAM2")

  i = 1
  xitemamt = 0
  discamt = 0
  taxamt = 0
  curdepo = 0
  xcredit = 0
  xcash = 0
  sumColl = New Collection
  For Each res
    xitemamt = xitemamt + res["flditemamt"]
    discamt = discamt + res["flddiscountamt"]
    taxamt = taxamt + res["fldtaxamt"]
    curdepo = curdepo + res["fldcurdeposit"]
    xcredit = xcredit + res["flditemamt"] + res["fldtaxamt"] - res["flddiscountamt"] - res["fldreceivedamt"]
    xcash = xcash + res["fldreceivedamt"] + res["fldcurdeposit"]

    With asx
      .Add(CStr(i))
      .Add(res["fldbillno"])

      aColl = New Collection
      aColl = GetInvoiceGroupCollection(modDatabase.$syConn, res["fldbillno"])
      For Each zitem In grpList
        If aColl[zitem] Then
          .Add(modReportVar.GetLocaleNumberFormat(aColl[zitem], gb.Currency))
          If sumColl.Exist(zitem) Then
            sumColl[zitem] = sumColl[zitem] + aColl[zitem]
          Else
            sumColl.Add(aColl[zitem], zitem)
          Endif
        Else
          .Add("")
        Endif
      Next

      .Add(modReportVar.GetLocaleNumberFormat(res["fldcurdeposit"], gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(res["flditemamt"] + res["fldcurdeposit"], gb.Currency))
      If res["flddiscountamt"] Then
        .Add(modReportVar.GetLocaleNumberFormat(res["flddiscountamt"], gb.Currency) & Space(1) & " [" & modPatient.GetPatientNameByEnc(res["fldencounterval"], modDatabase.$syConn) & "]")
        ' .Add(modReportVar.GetLocaleNumberFormat(res["fldtaxamt"], gb.Currency))
      Else
        .Add(modReportVar.GetLocaleNumberFormat(res["flddiscountamt"], gb.Currency))
      Endif
      .Add(modReportVar.GetLocaleNumberFormat(res["flditemamt"] + res["fldtaxamt"] - res["flddiscountamt"] - res["fldreceivedamt"], gb.Currency))

      For Each xitem In accList
        If xitem = res["fldbankname"] Then
          .Add("X")
        Else
          .Add("")
        Endif
      Next
      .Add(modReportVar.GetLocaleNumberFormat(res["fldreceivedamt"] + res["fldcurdeposit"], gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    $ProgressBar1.Value = (res.Index + 1) / res.Count
    Wait
    i = i + 1

  Next

  With asx
    .Add("")
    .Add("GRAND TOTAL")

    For Each zitem In grpList
      If sumColl[zitem] Then
        .Add(modReportVar.GetLocaleNumberFormat(sumColl[zitem], gb.Currency))
      Else
        .Add("")
      Endif
    Next

    .Add(modReportVar.GetLocaleNumberFormat(curdepo, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(xitemamt + curdepo, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(discamt, gb.Currency))
    ' .Add(modReportVar.GetLocaleNumberFormat(taxamt, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(xcredit, gb.Currency))

    For Each xitem In accList
      .Add("")
    Next
    .Add(modReportVar.GetLocaleNumberFormat(xcash, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  Dec Application.Busy

  modControlSub.OpenHTMLPreview("", $BillingReport.NewHTMLPath(), "ReportSize")

End

Private Function GetInvoiceGroupCollection($con As Connection, billno As String) As Collection

  Dim res As Result
  Dim sColl As Collection

  sColl = New Collection
  res = $con.Exec("select SUM(tblpatbilling.flditemrate*tblpatbilling.flditemqty) as dueamt,tblreportgroup.fldgroup as fldgroup from tblpatbilling inner join tblreportgroup on tblpatbilling.flditemname=tblreportgroup.flditemname where tblpatbilling.fldbillno=&1 GROUP BY tblreportgroup.fldgroup", billno)
  If res.Available Then
    For Each res
      sColl.Add(res["dueamt"], res["fldgroup"])
    Next
  Endif

  Return sColl

End

Private Sub ExportInvoiceDepartmentsHDCS2(res As Result)

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]

  Dim grpList As String[]
  Dim accList As String[]
  Dim hdr As String[]
  Dim xitem As String
  Dim yitem As String
  Dim zitem As String

  Dim xsex As String
  Dim aColl As Collection
  Dim i As Integer
  Dim xcash As Float
  Dim sumColl As Collection

  $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
  $ProgressBar1.Tag = "Const"

  grpList = modNonMedical.GetGroupNameAccount()
  accList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldacledger) as col from tblacledger"))
  hdr = New String[]
  hdr.Add("SNo")
  hdr.Add("Encounter")
  hdr.Add("Invoice")
  hdr.Add("First Name")
  hdr.Add("Sur Name")
  hdr.Add("Age")
  hdr.Add("Female")
  hdr.Add("Male")
  hdr.Add("Ethnicity")
  hdr.Add("District")
  hdr.Add("Municipality")
  hdr.Add("Ward")

  hdr.Add("Outpatient")
  hdr.Add("Emergency")
  hdr.Add("Inpatient")

  For Each xitem In accList
    hdr.Add(xitem)
  Next

  For Each yitem In grpList
    hdr.Add(yitem)
  Next
  hdr.Add("SubTotal")

  $BillingReport = New CReportHTML(hdr, "", "")
  $BillingReport.UserData.Add(cmbtype.Text & " : " & cmbaccount.Text & "  Comp: " & cmbcomp.Text & " Type: " & cmbcashcredit.Text, "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate), "PARAM2")

  i = 1
  xcash = 0
  sumColl = New Collection
  For Each res
    If res["flddiscountamt"] Then
      xcash = xcash + res["flddiscountamt"]

      With asx
        .Add(CStr(i))
        .Add(res["fldencounterval"])
        .Add(res["fldbillno"])

        modPatient.GetPatientDataColl(res["fldencounterval"])
        .Add(modPatient.GetPatientFirstNameEnc(res["fldencounterval"], modDatabase.$syConn))
        .Add(modPatient.GetPatientLastNameEnc(res["fldencounterval"], modDatabase.$syConn))
        .Add(modPatient.GetPatientAgeString(res["fldencounterval"], modPatient.GetRecordDate(res["fldencounterval"])))
        xsex = modPatient.GetPatientSex(res["fldencounterval"], modDatabase.$syConn)
        If xsex = "Female" Then
          .Add("X")
          .Add("")
        Else
          .Add("")
          .Add("X")
        Endif
        .Add(modPatient.GetPatientEthnicity(res["fldencounterval"], modDatabase.$syConn))
        .Add(modPatient.GetPatDistrictByEnc(res["fldencounterval"], modDatabase.$syConn))
        .Add(modPatient.GetPatFirAddressByEnc(res["fldencounterval"], modDatabase.$syConn))
        .Add(modPatient.GetPatWardAddressByEnc(res["fldencounterval"], modDatabase.$syConn))

        If res["fldprevdeposit"] = 1 Then
          .Add("X")
          .Add("")
          .Add("")
        Else If res["fldprevdeposit"] > 1 Then
          .Add("")
          .Add("")
          .Add("X")
        Endif

        For Each xitem In accList
          If xitem = res["fldbankname"] Then
            .Add("X")
          Else
            .Add("")
          Endif
        Next

        aColl = New Collection
        aColl = GetInvoiceGroupDiscount(modDatabase.$syConn, res["fldbillno"])
        For Each zitem In grpList
          If aColl[zitem] Then
            .Add(modReportVar.GetLocaleNumberFormat(aColl[zitem], gb.Currency))
            If sumColl.Exist(zitem) Then
              sumColl[zitem] = sumColl[zitem] + aColl[zitem]
            Else
              sumColl.Add(aColl[zitem], zitem)
            Endif
          Else
            .Add("")
          Endif
        Next
        .Add(modReportVar.GetLocaleNumberFormat(res["flddiscountamt"], gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      $ProgressBar1.Value = (res.Index + 1) / res.Count
      Wait
      i = i + 1

    Endif
  Next

  With asx
    .Add("")
    .Add("GRAND TOTAL")
    .Add("")

    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")

    .Add("")
    .Add("")
    .Add("")

    For Each xitem In accList
      .Add("")
    Next

    For Each zitem In grpList
      If sumColl[zitem] Then
        .Add(modReportVar.GetLocaleNumberFormat(sumColl[zitem], gb.Currency))
      Else
        .Add("")
      Endif
    Next
    .Add(modReportVar.GetLocaleNumberFormat(xcash, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  modControlSub.DisplayReportExport($BillingReport.NewHTMLPath())

End

Private Function GetInvoiceGroupDiscount($con As Connection, billno As String) As Collection

  Dim res As Result
  Dim sColl As Collection

  sColl = New Collection
  res = $con.Exec("select SUM(tblpatbilling.flddiscamt) as itemamt,tblreportgroup.fldgroup as fldgroup from tblpatbilling inner join tblreportgroup on tblpatbilling.flditemname=tblreportgroup.flditemname where tblpatbilling.fldbillno=&1 GROUP BY tblreportgroup.fldgroup", billno)
  If res.Available Then
    For Each res
      sColl.Add(res["itemamt"], res["fldgroup"])
    Next
  Endif

  Return sColl

End

Public Sub mnuhdcscollection_Click()

  If $rData And If $rData.Count Then
    ExportInvoiceDepartmentsHDCS1($rData)
  Endif

End

Public Sub mnuhdcscharity_Click()

  If $rData And If $rData.Count Then
    ExportInvoiceDepartmentsHDCS2($rData)
  Endif

End
