' Gambas class file

Private $encid As String
Private $sPackage As String
Private $ProcList As Variant[]

Private $rData1 As Result
Private $aMyFields1 As String[]
Private $rData2 As Result
Private $aMyFields2 As String[]
Private $rData4 As Result
Private $aMyFields4 As String[]

Public Sub _new(encid As String, sPackage As String)

  $encid = encid
  $sPackage = sPackage

End

Public Sub Form_Open()

  Dim xstatus As String

  modGeneralMain.ArrangeFormCentre(Me, "False")
  SetProcedureData()
  cmbdisctype.List = modBasic.$BillDiscountCash
  If cmbdisctype.List.Count = 0 Then
    cmbdisctype.Add($sPackage)
  Endif
  cmbdisctype.Text = $sPackage
  txtpatientname.Text = modPatient.GetPatientNameByEnc($encid)
  txtgender.Text = modPatient.GetPatientSex($encid)

  xstatus = modPatient.CurrentAdmissionStatus($encid)
  txtlocation.Text = modPatient.GetLocationSetting($encid, xstatus)
  cmbsection.List = modControlSub.GetDirectFillresultNoNull(modDatabase.$myConn.Exec("select distinct(fldreport) as col from tblservicecost where flditemtype=&1", "Procedures"))
  cmbsection.Add("All Sections")
  cmbsection.Text = "All Sections"
  cmbstatus.List = ["Planned", "Referred", "On Hold", "Cancelled"]
  cmbstatus.Text = "Planned"
  txtmode.Text = modNonMedical.GetDiscBindBillMode($sPackage)
  If txtmode.Text Then
    cmbprocedure.List = modString.GetListFromCompareVariant($ProcList, "flditemname", "fldgroup", txtmode.Text, False)
  Endif
  dtplan.Value = Now()
  SHowUnpaidGrid()

  dtplan.SetFocus

End

Public Sub Form_KeyRelease()

  If Key.Code = Key.Esc Then
    Me.Close
  Endif

End

Private Sub SetProcedureData()

  Dim sql As String
  Dim res As Result
  Dim sColl As Collection

  $ProcList = New Variant[]
  sql = "select flditemname,fldtarget,fldreport,fldgroup from tblservicecost where flditemtype=&1 and fldstatus=&2 and (fldtarget=&3 or fldtarget=&4)"
  res = modDatabase.$myConn.Exec(sql, "Procedures", "Active", "Major", "Intermediate")
  If res.Available Then
    For Each res
      sColl = New Collection
      sColl.Add(res["flditemname"], "flditemname")
      sColl.Add(res["fldtarget"], "fldtarget")
      sColl.Add(res["fldreport"], "fldreport")
      sColl.Add(res["fldgroup"], "fldgroup")
      $ProcList.Add(sColl)
    Next
  Endif

End

Public Sub cmbdisctype_Click()

  If cmbdisctype.Text Then
    txtmode.Text = modNonMedical.GetDiscBindBillMode(cmbdisctype.Text)
    If txtmode.Text Then
      cmbprocedure.List = modString.GetListFromCompareVariant($ProcList, "flditemname", "fldgroup", txtmode.Text, False)
    Endif
  Endif

End

Public Sub cmbdisctype_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbdisctype)
  modFillContainer.RestrictComboToContent(cmbdisctype)

End

Public Sub TabPanel1_Click()

  If TabPanel1.Index = 0 Then
    SHowUnpaidGrid()
  Else If TabPanel1.Index = 1 Then
    SHowSavedGrid()
  Else If TabPanel1.Index = 2 Then
    CompleteGrid()
  Endif

End

Public Sub dtneplan_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtplan.Value))
  If xx Then
    dtplan.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub cmbstatus_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbstatus)
  modFillContainer.RestrictComboToContent(cmbstatus)

End

Public Sub cmbprocedure_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbprocedure)
  modFillContainer.RestrictComboToContent(cmbprocedure)

End

Private Function GetProcedureList(sRatePlan As String, sSection As String) As String[]

  Dim xList As String[]
  Dim aColl As Collection

  xList = New String[]
  If $ProcList And If $ProcList.Count Then
    For Each aColl In $ProcList
      If aColl["fldgroup"] = sRatePlan And If aColl["fldreport"] = sSection Then
        xList.Add(aColl["flditemname"])
      Endif
    Next
  Endif

  Return xList

End

Public Sub cmbsection_Click()

  If cmbsection.Text = "All Sections" Then
    cmbprocedure.List = modString.GetListFromCompareVariant($ProcList, "flditemname", "fldgroup", txtmode.Text, False)
  Else
    cmbprocedure.List = GetProcedureList(txtmode.Text, cmbsection.Text)
  Endif

End

Public Sub cmbprocedure_GotFocus()

  Dim xList As String[]

  If cmbsection.Text = "All Sections" Then
    xList = modString.GetListFromCompareVariant($ProcList, "flditemname", "fldgroup", txtmode.Text, False)
  Else
    xList = GetProcedureList(txtmode.Text, cmbsection.Text)
  Endif
  If Not cmbprocedure.Text Then
    If modBasic.$ItemListFormat = "GridView" Then
      If xList.Count Then
        xList.Sort()
        cmbprocedure.Text = GridViewNew("Select Particulars", xList, False, cmbprocedure)
      Endif
    Endif
  Endif

End

Private Function GetProcTarget(sItem As String) As String

  Dim sColl As Collection
  Dim xval As String

  For Each sColl In $ProcList
    If sColl["flditemname"] = sItem Then
      xval = sColl["fldtarget"]
      Break
    Endif
  Next

  Return xval

End

Public Sub btnsubOK_Click()

  Dim xrefer As String
  Dim xTarg As String

  If $encid And If cmbprocedure.Text And If cmbstatus.Text Then
    If modMisc.AllowDiagnoBilling($encid) = True Then
      If modNonMedical.AllowEntryWithDeposit($encid, "Procedure") = True Then

        If cmbstatus.Text = "Planned" Then
          xrefer = modBillings.GetReferralUserSetting("Procedure", $encid)
          xTarg = GetProcTarget(cmbprocedure.Text)
          If modBasic.$AutoBillProcedure = "Standard" Or If modBasic.$AutoBillProcedure = "Full" Or If modBasic.$AutoBillProcedure = "Partial" Then
            modBillings.GetAutoBillingEntry($encid, cmbdisctype.Text, "Procedure", cmbprocedure.Text, 1, "Punched", 0, False, False, "", xrefer, xTarg)
            SHowUnpaidGrid()
          Endif
        Endif
        Balloon.Info(("Information saved"), btnsubOK)
        Balloon.Delay = modBasic.$BalloonDelay

      Endif
    Else
      Message.Warning("Diagnosis not provided", ("OK"))
    Endif
  Endif

End

Public Sub btnsaveproc_Click()

  Dim res As Result
  Dim xadv As String

  Inc Application.Busy
  res = modDatabase.$myConn.Edit("tblpatbilling", "fldencounterval=&1 and flditemtype=&2 and fldsave=&3 and fldstatus=&4 and fldordcomp=&5", $encid, "Procedures", False, "Punched", modBasic.$compID)                 ''
  If res.Available Then
    If modBasic.$AutoBillAdvReceipt = "Enable" Then
      xadv = modBillLock.AdvanceReceiptString("Advance Receipt")
    Else
      xadv = ""
    Endif

    For Each res

      If modBasic.$AutoBillProcedure = "Standard" Then
        If modNonMedical.AllowPreCheckDeposit($encid, res["fldditemamt"], res["flddisctype"]) = True Then
          SavePartialEntry(res, xadv)
        Endif
      Else If modBasic.$AutoBillProcedure = "Full" Then
        If modNonMedical.AllowPreEntryWithDeposit($encid, "Procedure", res["fldditemamt"], res["flddisctype"], btnsaveproc) = True Then
          SavePartialEntry(res, xadv)
        Endif
      Else
        If modBasic.$AutoBillSaveZero = "Yes" And If res["flditemrate"] = 0 Then
          SavePartialEntry(res, xadv)
        Else If modBasic.$AutoBillSaveZero = "Yes" And If res["flddiscper"] = 100 Then
          SavePartialEntry(res, xadv)
        Else If modBasic.$AutoBillSaveFullCredit = "Yes" And If res["fldbilltype"] = "Credit" And If res["fldcashincredit"] = 0 Then
          SavePartialEntry(res, xadv)
        Endif
      Endif

    Next
  Endif
  Dec Application.Busy
  SHowUnpaidGrid()

End

Private Sub SavePartialEntry(res As Result, Optional advReceipt As String)

  res["fldstatus"] = "Done"
  If advReceipt Then
    res["fldextracol"] = advReceipt
  Endif
  res["fldsave"] = True
  res["flduserid"] = modBasic.$lbluser
  res["fldtime"] = Now()
  res["fldcomp"] = modBasic.$compID
  res["xyz"] = False
  res.Update()

End

''======================== Unpaid ======================
Private Sub SHowUnpaidGrid()

  Dim sql As String

  sql = "select fldid,fldordtime,flditemname,fldstatus,fldid from tblpatbilling where fldencounterval=&1 and flditemtype=&2 and fldsave=&3 and fldstatus=&4 and fldordcomp=&5 and (flditemqty-fldretqty)>&6"
  $rData4 = modDatabase.$myConn.Exec(sql, $encid, "Procedures", False, "Punched", modBasic.$compID, 0)
  $aMyFields4 = New String[]
  modGridView.ReadSmallData(GridView4, $rData4, $aMyFields4)

  With GridView4
    .Columns[0].Width = 1
    .Columns[1].Width = 150 * modBasic.$AppWidthRatio
    .Columns[2].Width = 275 * modBasic.$AppWidthRatio
    .Columns[3].Width = 75 * modBasic.$AppWidthRatio
    .Columns[4].Width = 25 * modBasic.$AppWidthRatio
    .Columns[1].Text = "DateTime"
    .Columns[2].Text = "Procedure"
    .Columns[3].Text = "Status"
  End With

End

Public Sub GridView4_Data(Row As Integer, Column As Integer)

  $rData4.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView4, Row)
  If Column = 1 Then
    GridView4.Data.Text = modReportVar.GetDateTimeReport($rData4[$aMyFields4[Column]], gb.GeneralDate)
  Else If Column = 4 Then
    GridView4.Data.Picture = Picture["icon:/tiny/cancel"]
    GridView4.Data.Text = ""
  Else
    GridView4.Data.Text = $rData4[$aMyFields4[Column]]
  Endif

End

Public Sub GridView4_Click()

  If GridView4.Column = 4 Then
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      modDatabase.$myConn.Delete("tblpatbilling", "fldid=&1 and fldsave=&2", GridView4[GridView4.Row, 0].Text, False)
      SHowUnpaidGrid()
    Endif
  Endif

End

''====================== Completed =====================================
Private Sub CompleteGrid()

  Dim sql As String

  sql = "select fldid,fldencounterval,fldnewdate,flditem,fldreportquali from tblpatgeneral where fldencounterval=&1 and fldinput=&2"
  $rData2 = modDatabase.$myConn.Exec(sql, $encid, "Procedures")
  $aMyFields2 = New String[]
  modGridView.ReadSmallData(GridView3, $rData2, $aMyFields2)

  With GridView3
    .Columns[0].Width = 1
    .Columns[1].Width = 1
    .Columns[2].Width = 150 * modBasic.$AppWidthRatio
    .Columns[3].Width = 275 * modBasic.$AppWidthRatio
    .Columns[4].Width = 75 * modBasic.$AppWidthRatio

    .Columns[2].Text = "Target Date"
    .Columns[3].Text = "Procedure"
    .Columns[4].Text = "Status"
  End With

End

Public Sub GridView3_Data(Row As Integer, Column As Integer)

  $rData2.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView3, Row)
  If Column = 2 Then
    GridView3.Data.Text = modReportVar.GetDateTimeReport($rData2[$aMyFields2[Column]], gb.GeneralDate)
  Else
    GridView3.Data.Text = $rData2[$aMyFields2[Column]]
  Endif

End

Public Sub GridView3_Menu()

  mnudone.Popup

End

Public Sub mnureport_Click()

  Dim xPath As String
  Dim abc As String[] = ["General:Status", "General:Personnel", "General:Summary", "Pre-Operative:Indication", "Pre-Operative:Discussion", "Pre-Operative:Discussion Panel", "Pre-Operative:Examination", "Pre-Operative:Medications", "Pre-Operative:Note", "Procedure:Components", "Procedure:Parameters", "Procedure:Medications", "Procedure:Incision", "Procedure:Findings", "Procedure:Proedures", "Procedure:Closure", "Procedure:Note", "Anaesthesia:Technique", "Anaesthesia:Parameters", "Anaesthesia:Medications", "Anaesthesia:Medications", "Anaesthesia:Note", "Post-Operative:Indication", "Post-Operative:Examination", "Post-Operative:Medications", "Post-Operative:Note"]
  Dim xxx As String[]

  If GridView3.Rows.Selection.Count > 0 Then
    xxx = SelectListView("Select Procedure Components", abc, False)
    If xxx Then
      Inc Application.Busy
      xPath = modCHTMLPatient.ShowUniProcedureReport(GridView3[GridView3.Row, 0].Text, $encid, xxx)
      Dec Application.Busy
      modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
    Endif
  Endif

End

''====================== Paid ===================================
Private Sub SHowSavedGrid()

  Dim sql As String

  sql = "select fldid,fldtime,flditemname,fldrefer,fldbillno from tblpatbilling where fldencounterval=&1 and flditemtype=&2 and fldsave=&3 and (fldstatus=&4 or fldstatus=&5) and fldsample=&6 and (flditemqty-fldretqty)>&7"
  $rData1 = modDatabase.$myConn.Exec(sql, $encid, "Procedures", True, "Done", "Cleared", "Waiting", 0)
  $aMyFields1 = New String[]
  modGridView.ReadSmallData(GridView2, $rData1, $aMyFields1)

  With GridView2
    .Columns[0].Width = 1
    .Columns[1].Width = 150 * modBasic.$AppWidthRatio
    .Columns[2].Width = 225 * modBasic.$AppWidthRatio
    .Columns[3].Width = 100 * modBasic.$AppWidthRatio
    .Columns[4].Width = 125 * modBasic.$AppWidthRatio
    .Columns[1].Text = "DateTime"
    .Columns[2].Text = "Procedure"
    .Columns[3].Text = "ReferBy"
    .Columns[4].Text = "Invoice"
  End With

End

Public Sub GridView2_Data(Row As Integer, Column As Integer)

  $rData1.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView2, Row)
  If Column = 1 Then
    GridView2.Data.Text = modReportVar.GetDateTimeReport($rData1[$aMyFields1[Column]], gb.GeneralDate)
  Else If Column = 3 Then
    GridView2.Data.Text = modGeneral.GetUserFullName($rData1[$aMyFields1[Column]])
  Else
    GridView2.Data.Text = $rData1[$aMyFields1[Column]]
  Endif

End
