' Gambas class file

Private $encid As String
Private $BillMode As String
Private $sPackage As String
Private $xFinClear As Boolean
Private $PatientNum As String
Private $xNHISCode As String

Private $rData4 As Result
Private $aMyFields4 As String[]
Private $rData1 As Result
Private $aMyFields1 As String[]
Private $rData3 As Result
Private $aMyFields3 As String[]

Public Sub _new(encid As String, DiscType As String)

  $encid = encid
  $sPackage = DiscType

End

Public Sub Form_Open()

  Dim xstatus As String

  modGeneralMain.ArrangeFormCentre(Me, "False")

  cmbdisctype.List = modBasic.$BillDiscountCash
  If cmbdisctype.List.Count = 0 Then
    cmbdisctype.Add($sPackage)
  Endif
  cmbdisctype.Text = $sPackage
  txtpatientname.Text = modPatient.GetPatientNameByEnc($encid)
  txtgender.Text = modPatient.GetPatientSex($encid)
  $PatientNum = modPatient.GetPatientNoByEnc($encid)
  $xNHISCode = modPatient.GetPatientExtCOdebyEnc($encid)
  $BillMode = modNonMedical.GetDiscBindBillMode($sPackage)
  If Not $BillMode Then
    $BillMode = modpatient.GetPatBillingMode($encid)
  Endif

  cmbsection.List = modControlSub.GetDirectFillresultNoNull(modDatabase.$myConn.Exec("select distinct(fldreport) as col from tblservicecost where flditemtype=&1", "Procedures"))
  cmbsection.Add("All Sections")
  cmbsection.Text = "All Sections"
  xstatus = modPatient.CurrentAdmissionStatus($encid)
  txtlocation.Text = modPatient.GetLocationSetting($encid, xstatus)
  $xFinClear = modNonMedical.GetFinanceClearance($encid)

  btnrefer.Tag = modBillings.GetReferralUserSetting("Procedure", $encid)
  If btnrefer.Tag Then
    btnrefer.Text = modGeneral.GetUserFullName(btnrefer.Tag)
  Endif
  If modBasic.$ReferralLockEntry = "Yes" Then
    btnrefer.Enabled = False
  Endif

  rbminor.Value = True
  FillComboList()
  Unpaidtable()

  If $xFinClear = True Then
    btnsave.Enabled = False
  Endif
  btnrefer.SetFocus

End

Public Sub Form_KeyRelease()

  If Key.Code = Key.Esc Then
    Me.Close
  Endif

End

Public Sub TabPanel1_Click()

  If TabPanel1.Index = 1 Then
    SHowSavedGrid()
  Else If TabPanel1.Index = 2 Then
    CompleteGrid()
  Endif

End

Public Sub cmbdisctype_Click()

  If cmbdisctype.Text Then
    $BillMode = modNonMedical.GetDiscBindBillMode(cmbdisctype.Text)
    If Not $BillMode Then
      $BillMode = modpatient.GetPatBillingMode($encid)
    Endif
    FillComboList()
  Endif

End

Public Sub cmbdisctype_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbdisctype)
  modFillContainer.RestrictComboToContent(cmbdisctype)

End

Public Sub btnrefer_Click()

  Dim xMedUser As String[]

  xMedUser = MedicalSelectedValue(("Select Payable User"), modBasic.$PayUserList)
  If xMedUser And If xMedUser.Count Then
    btnrefer.Tag = xMedUser[0]
    btnrefer.Text = xMedUser[1]
  Else
    btnrefer.Tag = ""
    btnrefer.Text = ""
  Endif

End

Public Sub btnrefer_Change()

  If btnrefer.Text = "" Then
    btnrefer.Tag = ""
  Endif

End

Private Function GetProcedType() As String

  Dim xtype As String

  If rbminor.Value = True Then
    xtype = "Minor"
  Else If rbextra.Value = True Then
    xtype = "Extra"
  Else If rbplaster.Value = True
    xtype = "Plaster"
  Endif

  Return xtype

End

Public Sub rbminor_Click()

  FillComboList()

End

Public Sub rbextra_Click()

  FillComboList()

End

Public Sub rbplaster_Click()

  FillComboList()

End

Public Sub txtsearch_Change()

  FillComboList()

End

Public Sub cmbsection_Click()

  FillComboList()

End

Private Sub FillComboList()

  Dim sql As String
  Dim res As Result
  Dim xsearch As String
  Dim xsect As String

  If cmbsection.Text = "All Sections" Then
    xsect = ""
  Else
    xsect = db.Subst(" and fldreport=&1", cmbsection.Text)
  Endif

  If Len(txtsearch.Text) Then
    If chkleftmain.Value = True Then
      xsearch = "%" & LCase(txtsearch.Text) & "%"
    Else
      xsearch = LCase(txtsearch.Text) & "%"
    Endif
    sql = "select flditemname as col from tblservicecost where flditemtype=&1 and (fldgroup like &2 or fldgroup=&4) and fldstatus=&3 and fldtarget like &5 and lower(flditemname) like &6" & xsect
  Else
    sql = "select flditemname as col from tblservicecost where flditemtype=&1 and (fldgroup like &2 or fldgroup=&4) and fldstatus=&3 and fldtarget like &5" & xsect
  Endif
  res = modDatabase.$myConn.Exec(sql, "Procedures", $BillMode, "Active", "%", GetProcedType(), xsearch)
  cmbprocedure.List = modControlSub.GetDirectFillresult(res)

End

Public Sub cmbprocedure_Click()

  Dim xdate As Date

  If cmbprocedure.Text Then
    xdate = modBillings.CheckLastSalesItemDate(cmbprocedure.Text, $PatientNum, $xNHISCode, cmbdisctype.Text)
    If xdate Then
      txtlastsaledate.Text = modReportVar.GetDateTimeReport(xdate, gb.MediumDate)
      If DateDiff(xdate, Now(), gb.Month) <= 3 Then
        txtlastsaledate.Foreground = Color.Red
      Else
        txtlastsaledate.Foreground = Color.Default
      Endif
    Else
      txtlastsaledate.Text = ""
      txtlastsaledate.Foreground = Color.Default
    Endif
  Endif

End

Public Sub btnsubOK_Click()

  Dim xrefer As String

  If $encid And If cmbprocedure.Text Then
    If modMisc.AllowDiagnoBilling($encid) = True Then
      If modNonMedical.AllowEntryWithDeposit($encid, "Procedure") = True Then

        If modBasic.$AutoBillProcedure = "Standard" Or If modBasic.$AutoBillProcedure = "Full" Or If modBasic.$AutoBillProcedure = "Partial" Then
          modBillings.GetAutoBillingEntry($encid, cmbdisctype.Text, "Procedure", cmbprocedure.Text, 1, "Punched", 0, False, False, "", btnrefer.Tag, GetProcedType())
          Unpaidtable()
        Endif
        Balloon.Info(("Information saved"), btnsubOK)
        Balloon.Delay = modBasic.$BalloonDelay

      Endif
    Else
      Message.Warning("Diagnosis not provided", ("OK"))
    Endif
  Endif

End

Public Sub Unpaidtable()

  Dim sql As String

  sql = "select fldid,fldordtime,flditemname,fldstatus,fldid from tblpatbilling where fldencounterval=&1 and flditemtype=&2 and fldsave=&3 and fldstatus=&4 and fldordcomp=&5 and (fldtarget=&6 or fldtarget=&7 or fldtarget=&8) and (flditemqty-fldretqty)>&9"
  $rData4 = modDatabase.$myConn.Exec(sql, $encid, "Procedures", False, "Punched", modBasic.$compID, "Minor", "Extra", "Plaster", 0)
  $aMyFields4 = New String[]
  modGridView.ReadSmallData(GridView4, $rData4, $aMyFields4)

  With GridView4
    .Columns[0].Width = 1
    .Columns[1].Width = 150 * modBasic.$AppWidthRatio
    .Columns[2].Width = 275 * modBasic.$AppWidthRatio
    .Columns[3].Width = 75 * modBasic.$AppWidthRatio
    .Columns[4].Width = 25 * modBasic.$AppWidthRatio
    .Columns[1].Text = "DateTime"
    .Columns[2].Text = "Procedure"
    .Columns[3].Text = "Status"
  End With

End

Public Sub GridView4_Data(Row As Integer, Column As Integer)

  $rData4.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView4, Row)
  If Column = 1 Then
    GridView4.Data.Text = modReportVar.GetDateTimeReport($rData4[$aMyFields4[Column]], gb.GeneralDate)
  Else If Column = 4 Then
    GridView4.Data.Picture = Picture["icon:/tiny/cancel"]
    GridView4.Data.Text = ""
  Else
    GridView4.Data.Text = $rData4[$aMyFields4[Column]]
  Endif

End

Public Sub GridView4_Click()

  If GridView4.Column = 4 Then
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      modDatabase.$myConn.Delete("tblpatbilling", "fldid=&1 and fldsave=&2", GridView4[GridView4.Row, 0].Text, False)
      Unpaidtable()
    Endif
  Endif

End

Public Sub btnsave_Click()

  Dim res As Result
  Dim xadv As String

  Inc Application.Busy
  res = modDatabase.$myConn.Edit("tblpatbilling", "fldencounterval=&1 and flditemtype=&2 and fldsave=&3 and fldstatus=&4 and fldordcomp=&5 and (fldtarget=&6 or fldtarget=&7 or fldtarget=&8)", $encid, "Procedures", False, "Punched", modBasic.$compID, "Minor", "Extra", "Plaster")                 ''
  If res.Available Then
    If modBasic.$AutoBillAdvReceipt = "Enable" Then
      xadv = modBillLock.AdvanceReceiptString("Advance Receipt")
    Else
      xadv = ""
    Endif

    For Each res

      If modBasic.$AutoBillProcedure = "Standard" Then
        If modNonMedical.AllowPreCheckDeposit($encid, res["fldditemamt"], res["flddisctype"]) = True Then
          SavePartialEntry(res, xadv)
        Endif
      Else If modBasic.$AutoBillProcedure = "Full" Then
        If modNonMedical.AllowPreEntryWithDeposit($encid, "Procedure", res["fldditemamt"], res["flddisctype"], btnsave) = True Then
          SavePartialEntry(res, xadv)
        Endif
      Else
        If modBasic.$AutoBillSaveZero = "Yes" And If res["flditemrate"] = 0 Then
          SavePartialEntry(res, xadv)
        Else If modBasic.$AutoBillSaveZero = "Yes" And If res["flddiscper"] = 100 Then
          SavePartialEntry(res, xadv)
        Else If modBasic.$AutoBillSaveFullCredit = "Yes" And If res["fldbilltype"] = "Credit" And If res["fldcashincredit"] = 0 Then
          SavePartialEntry(res, xadv)
        Endif
      Endif

    Next
  Endif
  Dec Application.Busy
  SHowSavedGrid()
  Unpaidtable()

End

Private Sub SavePartialEntry(res As Result, Optional advReceipt As String)

  res["fldstatus"] = "Done"
  If advReceipt Then
    res["fldextracol"] = advReceipt
  Endif
  res["fldsave"] = True
  res["flduserid"] = modBasic.$lbluser
  res["fldtime"] = Now()
  res["fldcomp"] = modBasic.$compID
  res["xyz"] = False
  res.Update()

End

''====================== Paid ===================================
Private Sub SHowSavedGrid()

  Dim sql As String

  sql = "select fldid,fldtime,flditemname,fldrefer,fldbillno from tblpatbilling where fldencounterval=&1 and flditemtype=&2 and fldsave=&3 and (fldstatus=&4 or fldstatus=&5) and fldsample=&6 and (fldtarget=&7 or fldtarget=&8 or fldtarget=&9) and (flditemqty-fldretqty)>&{10} and fldid NOT IN(select fldgroupid from tblpatgeneral where fldencounterval=&1)"
  $rData1 = modDatabase.$myConn.Exec(sql, $encid, "Procedures", True, "Done", "Cleared", "Waiting", "Minor", "Extra", "Plaster", 0)
  $aMyFields1 = New String[]
  modGridView.ReadSmallData(GridView2, $rData1, $aMyFields1)

  With GridView2
    .Columns[0].Width = 1
    .Columns[1].Width = 150 * modBasic.$AppWidthRatio
    .Columns[2].Width = 325 * modBasic.$AppWidthRatio
    .Columns[3].Width = 125 * modBasic.$AppWidthRatio
    .Columns[4].Width = 150 * modBasic.$AppWidthRatio

    .Columns[1].Text = "DateTime"
    .Columns[2].Text = "Procedure"
    .Columns[3].Text = "ReferBy"
    .Columns[4].Text = "Invoice"
  End With

End

Public Sub GridView2_Data(Row As Integer, Column As Integer)

  $rData1.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView2, Row)
  If Column = 1 Then
    GridView2.Data.Text = modReportVar.GetDateTimeReport($rData1[$aMyFields1[Column]], gb.GeneralDate)
  Else If Column = 3 Then
    GridView2.Data.Text = modGeneral.GetUserFullName($rData1[$aMyFields1[Column]])
  Else
    GridView2.Data.Text = $rData1[$aMyFields1[Column]]
  Endif

End

Public Sub GridView2_Click()

  txtprocindex.Value = GridView2[GridView2.Row, 0].Text
  lblproced.Text = GridView2[GridView2.Row, 2].Text

End

Public Sub btnsavesumm_Click()

  If txtprocindex.Value And If txtsummary.RichText Then
    modPatientGeneral.AddProcedureData($encid, txtprocindex.Value, "Minor Procedures", lblproced.Text, "Done", $BillMode, Now(), "Cleared", txtsummary.RichText)
    SHowSavedGrid()
    CompleteGrid()
    Balloon.Info(("Information saved"), btnsavesumm)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

' Public Sub btnsave_Click()
'
'   Dim res As Result
'   Dim res1 As Result
'
'   Dim xrefer As String
'   Dim xpayble As String
'
'   If btnrefer.Tag Then
'     xrefer = btnrefer.Tag
'   Else
'     xrefer = modBillings.GetReferralUserSetting("Procedure", $encid)
'   Endif
'   xpayble = modBillings.GetPayableUserSetting("Procedure", $encid)
'
'   res = modDatabase.$myConn.Exec("select fldid,fldencounterval,fldgroupid,fldnewdate,flditem,fldreportquali,flddetail,fldtime from tblpatgeneral where fldencounterval=&1 and fldinput=&2 and fldsave=&3 and fldcomp=&4 and fldreportquali=&5 and fldstatus=&6", $encid, "Minor Procedures", False, modBasic.$compID, "Done", "Waiting")                                      ''
'   If res.Available = True Then
'
'     Inc Application.Busy
'     modDatabase.$myConn.Begin
'     For Each res
'       If modBasic.$AutoBillProcedure Then
'         If modBasic.$AutoBillProcedure = "Standard" Then
'           modBillings.GetAutoBillingEntry($encid, cmbdisctype.Text, "Procedure", res["flditem"], 1, "Done", res["fldid"], True, False, xpayble, xrefer)
'         Else If modBasic.$AutoBillProcedure = "Full" Then
'           modBillings.GetAutoBillingEntry($encid, cmbdisctype.Text, "Procedure", res["flditem"], 1, "Done", res["fldid"], True, False, xpayble, xrefer)                          ''
'         Else If modBasic.$AutoBillProcedure = "Partial" Then
'           modBillings.GetAutoBillingEntry($encid, cmbdisctype.Text, "Procedure", res["flditem"], 1, "Punched", res["fldid"], False, False, xpayble, xrefer)
'         Endif
'       Endif
'       res1 = modDatabase.$myConn.Edit("tblpatgeneral", "fldid=&1", res["fldid"])
'       res1["fldstatus"] = "Cleared"
'       res1["fldsave"] = True
'       res1["flduserid"] = modBasic.$lbluser
'       res1["flduptime"] = Now()
'       res1["fldcomp"] = modBasic.$compID
'       res1["xyz"] = False
'       res1.Update()
'     Next
'     modDatabase.$myConn.Commit
'     FillLabtable()
'     CompleteGrid()
'     Dec Application.Busy
'
'     Balloon.Info(("Information saved"), btnsave)
'     Balloon.Delay = modBasic.$BalloonDelay
'   Endif
'
' Catch
'   modDatabase.$myConn.Rollback
'   Dec Application.Busy
'   modHelpVariable.CreateErrorReport()
'
' End

Public Sub btnsummary_Click()

  txtsummary.RichText = txtsummary.RichText & modCloudAI.GetPatCloudAIResponse($encid, txtsummary.Text)

End

Public Sub dctsummary_Click()

  Dim xx As String

  If lblproced.Text Then
    xx = GetRichTextArea(lblproced.Text, txtsummary.RichText)
    If xx Then
      txtsummary.RichText = xx
    Endif
  Endif

End

Public Sub btntemplsumm_Click()

  If lblproced.Text Then
    txtsummary.RichText = txtsummary.RichText & DictionaryVIew(lblproced.Text)
  Endif

End

''========================= completed ===========================================
Private Sub CompleteGrid()

  Dim sql As String

  sql = "select fldid,fldtime,fldencounterval,flditem,fldreportquali,flduserid,fldcomp from tblpatgeneral where fldencounterval=&1 and fldinput=&2 and fldsave=&3 and fldreportquali=&4 and fldstatus=&5"                                             ''
  $rData3 = modDatabase.$myConn.Exec(sql, $encid, "Minor Procedures", False, "Done", "Cleared")
  $aMyFields3 = New String[]
  modGridView.ReadSmallData(GridView3, $rData3, $aMyFields3)

  With GridView3
    .Columns[0].Width = 1
    .Columns[1].Width = 150 * modBasic.$AppWidthRatio
    .Columns[2].Width = 1
    .Columns[3].Width = 375 * modBasic.$AppWidthRatio
    .Columns[4].Width = 100 * modBasic.$AppWidthRatio
    .Columns[5].Width = 125 * modBasic.$AppWidthRatio
    .Columns[6].Width = 100 * modBasic.$AppWidthRatio

    .Columns[1].Text = "DateTime"
    .Columns[3].Text = "Procedure"
    .Columns[4].Text = "Status"
    .Columns[5].Text = "User"
    .Columns[6].Text = "Location"
  End With

End

Public Sub GridView3_Data(Row As Integer, Column As Integer)

  $rData3.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView3, Row)
  If Column = 1 Then
    GridView3.Data.Text = modReportVar.GetDateTimeReport($rData3[$aMyFields3[Column]], gb.GeneralDate)
  Else
    GridView3.Data.Text = $rData3[$aMyFields3[Column]]
  Endif

End
