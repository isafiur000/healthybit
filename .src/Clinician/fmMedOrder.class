' Gambas class file

Private $encid As String
Private $status As String
Private $DiscPackage As String
Private $Dept As String
Private $doa As Date
Private $xFinClear As Boolean
Private $PatientNum As String
Private $xNHISCode As String
Private $Ready As Boolean

Private $PatAge As Float
Private $PatSex As String
Private $PatWeight As Float
Private $PatHeight As Float

Private $rData1 As Result
Private $aMyFields1 As String[]
Private $rData2 As Result
Private $aMyFields2 As String[]
Private $rData5 As Result
Private $NumForm As FmQuantiEntry
Private $LastEncid As String

Private $HideErr As Boolean
Private $HideDos As Boolean
Private $ShowReview As String
Private $AlphaList As String[]
Private $LedgerAC As String
Private $xBillType As String
Private $sBillMode As String
Private $LabelType As String
Private xYear As Integer
Private $ClinicianLst As String[]
Private hOwnStockForm As FmWardStock

Public Sub _new(encid As String, sStatus As String, DiscPackage As String)

  $encid = encid
  $status = sStatus
  $DiscPackage = DiscPackage

End

Public Sub Form_Open()

  Dim mfglist As String
  Dim xbirthDate As Date

  modGeneralMain.ArrangeFormCentre(Me, "False")
  Select $status
    Case "Admitted", "Discharged", "LAMA", "Death", "Refer", "Absconder"
      $Dept = "IPD"
    Case Else
      $Dept = "OPD"
  End Select
  hOwnStockForm = New FmWardStock($encid, $status, $DiscPackage, pnlwardstock)
  hOwnStockForm.SetOwnDepartment($Dept)

  cmbdisctype.List = modBasic.$BillDiscountCash
  If cmbdisctype.List.Count = 0 Then
    cmbdisctype.Add($DiscPackage)
  Endif
  cmbdisctype.Text = $DiscPackage

  If modSettings.ShowSettingFromFIle("ClinicForms/ShowInjectionSubRoutes") = "Disable" Then
    cmbroute.List = modMedicine.AllComboRoute()
  Else
    cmbroute.List = modMedicine.InpatientRoute(False)
  Endif
  cmbfreq.List = modMedicine.FrequencyCombo()
  cmbcurrent.List = ["Continue", "On Hold", "Removed", "All Types"]
  cmbstatus.List = ["Continue", "Completed", "Discontinue", "On Hold", "Change", "ReWrite", "Cancelled", "Wasted"]
  $ClinicianLst = modGeneral.GetClinicianCodeList()
  modStockSub.DisplayDefaultDispensingMode(rbrand, rbgeneric)
  modSettings.ShowCheckBox(chkout, "OutOfStock/Dispensing")

  mfglist = modSettings.ShowSettingFromFIle("PharmacyForm/AdviceList")
  If mfglist Then
    If Exist(mfglist) Then
      txtdirection.List = modString.GetStringArrayFromFile(mfglist)
    Endif
  Endif

  txtpatientname.Text = modPatient.GetPatientNameByEnc($encid)
  $PatSex = modPatient.GetPatientSex($encid)
  xbirthDate = modPatient.GetPatientBirthDay($encid)
  txtgender.Text = modDate.GetAgeString(xbirthDate, Now()) & "/" & $PatSex
  xYear = DateDiff(xbirthDate, Now(), gb.Year)
  $doa = modPatient.GetRecordDate($encid)
  $PatientNum = modPatient.GetPatientNoByEnc($encid)
  $xNHISCode = modPatient.GetPatientExtCOdebyEnc($encid)

  $PatAge = xYear
  $PatHeight = modClinic.GetPatientHeightinCm($encid)
  $PatWeight = modClinic.GetBodyWeight($encid)

  ShowBillingParam($DiscPackage)
  If $status = "Admitted" Then
    $LabelType = "Inpatient"
  Else
    $LabelType = "Outpatient"
  Endif

  If $status = "Registered" Then
    $LastEncid = modPatient.GetSecondLastEncidPatient($encid)
  Else
    $LastEncid = $encid
  Endif
  $xFinClear = modNonMedical.GetFinanceClearance($encid)

  $ShowReview = modBasic.$MedErrorEnable
  If modPharmacy.DisableEncounterForReview($encid) = True Then
    $ShowReview = "No"
  Endif

  $AlphaList = New String[]
  dtdose.Value = Now()
  GetDoseFormatType()

  rbcurrent.Value = True
  cmbcurrent.Text = "Continue"
  ShowRunningMedicine(cmbcurrent.Text)

  If $xFinClear = True Then
    btngroup.Enabled = False
    btnrepeat.Enabled = False
    chksave.Enabled = False
    pnlwardstock.Enabled = False
  Endif
  modSysCons.ClearPatParameterCalc()
  ShowBasicParamStatus()
  $Ready = True

End

Public Sub Form_Close()

  modSysCons.ClearPatParameterCalc()

End

Private Sub ShowBasicParamStatus()

  Dim xmsg As String

  If $ShowReview = "No" Then
  Else

    xmsg = ""
    If Not $PatHeight Then
      $PatHeight = modSysCons.GetPatientEmptyHeight($PatAge, $PatSex)
      If $PatHeight Then
        xmsg = "Patient's height not set. Using " & $PatHeight & " cm for now" & gb.NewLine
      Endif
    Endif
    If Not $PatWeight Then
      If $PatHeight Then
        $PatWeight = modSysCons.GetPatientEmptyWeight($PatHeight, $PatSex)
        If $PatWeight Then
          xmsg = xmsg & "Patient's weight not set. Using " & $PatWeight & " Kg for now"
        Endif
      Endif
    Endif

    If xmsg Then
      Message.Warning(xmsg, ("OK"))
    Endif

  Endif

End

Public Sub Form_KeyRelease()

  If Key.Code = Key.Esc Then
    Me.Close
  Else If Key.Code = Key.F1 Then
    TabPanel1.Index = 0
    ShowRunningMedicine(cmbcurrent.Text)
  Else If Key.Code = Key.F2 Then
    TabPanel1.Index = 1
    modSettings.ShowCheckBox(chkout, "OutOfStock/Dispensing")
    FillDosingGrid()
    BlankDosingBox()
    cmbroute.SetFocus
  Else If Key.Code = Key.F3 Then

  Else If Key.Code = Key.F4 Then
    TabPanel1.Index = 3
    btndoserefresh_Click()
  Else If Key.Code = Key.F5 Then
    TabPanel1.Index = 4
    ShowOldEntry()
  Else
    modGeneralmain.GoToNextControlTab()
  Endif

End

Public Sub TabPanel1_Click()

  If TabPanel1.Index = 0 Then
    ShowRunningMedicine(cmbcurrent.Text)
  Else If TabPanel1.Index = 1 Then
    FillDosingGrid()
    BlankDosingBox()
    cmbroute.SetFocus
  Else If TabPanel1.Index = 2 Then
    hOwnStockForm.RearrangeGrid()
  Else If TabPanel1.Index = 3 Then
    btndoserefresh_Click()
  Else If TabPanel1.Index = 4 Then
    ShowOldEntry()
  Endif

End

Private Sub BlankDosingBox()

  cmbroute.Text = ""
  cmbmedicine.Text = ""
  cmbfreq.Text = ""
  txtdose.Value = 0
  txtday.Value = 0
  txtday.Tag = ""
  txtqty.Value = 0
  txtqty.Tag = ""
  txtdirection.Text = ""
  $HideErr = False
  $HideDos = False
  lbldose.Text = ""

End

Private Sub ShowKeyPad()

  If modBasic.$TabletModeEnable = "Yes" Then
    pnlquanti.Visible = True
  Else
    pnlquanti.Visible = False
  Endif

End

Private Sub ShowBillingParam(sDisctype As String)

  Dim resx As Result

  resx = modDatabase.$myConn.Exec("select fldmode,fldbillingmode,fldacledger,fldbilltype,fldreference,fldlimit,fldlockstate from tbldiscount where fldtype=&1", sDisctype)
  If resx.Available Then
    ''billingmode
    If resx["fldbillingmode"] Then
      $sBillMode = resx["fldbillingmode"]
    Else
      $sBillMode = modPatient.GetPatBillingMode($encid)
    Endif
    ''ledger A/C
    $LedgerAC = resx["fldacledger"]
    ''BillType
    $xBillType = resx["fldbilltype"]
    If Not $xBillType Then
      $xBillType = "Cash"
    Endif
  Endif

End

''------------------------------ Request ---------------------------------

Public Sub chkout_Click()

  modSettings.EnterCheckSetting(chkout, "OutOfStock/Dispensing")

End

Public Sub rbgeneric_Click()

  modSettings.SaveSettingsToFile("BrandOrGeneric/Dispensing", "Generic")

End

Public Sub rbrand_Click()

  modSettings.SaveSettingsToFile("BrandOrGeneric/Dispensing", "Brand")

End

Private Function GetBrandGenerricType() As String

  Dim brandOrGeneric As String

  If rbrand.Value = True Then
    brandOrGeneric = "Brand"
  Else
    brandOrGeneric = "Generic"
  Endif
  Return brandOrGeneric

End

Public Sub btnrepeat_Click()

  Dim sColl As Collection
  Dim xLst As Long[]

  sColl = GetSetRegimen($encid)
  If sColl And If sColl.Count Then
    For Each xLst In sColl
      If sColl.Key = "New Regimen" Then
        AddNewRegimen(xLst)
      Else If sColl.Key = "Past Regimen" Then
        AddPastRegimens(xLst)
      Endif
    Next
  Endif

End

Private Sub AddNewRegimen(itmList As Long[])

  Dim idx As Long
  Dim res As Result
  Dim txprescriber As String
  Dim txpresno As String

  Dim xtax As Float
  Dim xdisc As Float
  Dim itemtype As String
  Dim xfixrate As Float
  Dim xfixname As String
  Dim itemmode As String
  Dim xcurVal As String
  Dim xnarcotic As String[]
  Dim CPharmFix As CFixRatePharmacy

  If modBasic.$DispRequestStatus = "Reserve" Then
    xcurVal = "Reserve"
  Else
    xcurVal = "Continue"
  Endif

  If modMisc.AllowDiagnoBilling($encid) = True Then
    If itmList And If itmList.Count Then

      For Each idx In itmList
        res = modDatabase.$myConn.Exec("select fldroute,fldbrandid,flddose,fldfreq,fldday,fldqty,fldusage from tblmedregimen where fldid=&1", idx)
        If res.Available Then
          itemtype = modNonMedical.GetBillItemCategoryFromCombo(res["fldroute"])
          CPharmFix = New CFixRatePharmacy(itemtype, res["fldbrandid"], $sBillMode)
          xfixrate = CPharmFix.GetFixRate()
          xfixname = CPharmFix.GetFixItem()
          If xfixname Then
            itemmode = $sBillMode
          Else
            itemmode = "%"
          Endif
          ' xvarfix = modStock.GetSellingPriceFixByStockID(itemtype, res["flditem"], $sBillMode)
          ' If xvarfix Then
          '   xfixrate = xvarfix[1]
          '   xfixname = xvarfix[0]
          '   itemmode = $sBillMode
          ' Else
          '   xfixrate = 0
          '   xfixname = ""
          '   itemmode = "%"
          ' Endif
          xtax = modNonMedical.ShowTaxValues(itemtype, res["fldbrandid"])
          xdisc = modNonMedical.DiscPercentForCategoryValue($encid, cmbdisctype.Text, itemtype, res["fldbrandid"], itemmode)
          Select res["fldroute"]
            Case "suture", "msurg", "ortho"
              modPharmSub.InsertNonMedDosingEntry("Surgicals", $encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, res["fldroute"], res["fldbrandid"], res["fldqty"], $status, txtstart.Value, xtax, xdisc, xfixname, xfixrate, "Request", $Dept, res["fldusage"], False, xcurVal)
            Case "extra"
              modPharmSub.InsertNonMedDosingEntry("Extra Items", $encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, res["fldroute"], res["fldbrandid"], res["fldqty"], $status, txtstart.Value, xtax, xdisc, xfixname, xfixrate, "Request", $Dept, res["fldusage"], False, xcurVal)
            Case Else
              If modMedConstant.GetNarcoticType(res["fldbrandid"]) = "Yes" Then
                xnarcotic = DualGridValue(("Select Narcotic Prescriber"), $ClinicianLst, False)
                If xnarcotic Then
                  txprescriber = xnarcotic[1]
                  txpresno = xnarcotic[0]
                Endif
              Else
                txprescriber = ""
                txpresno = ""
              Endif
              modPharmSub.InsertDosingEntry($encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, res["fldroute"], res["fldbrandid"], res["flddose"], res["fldfreq"], res["fldday"], res["fldqty"], $status, txprescriber, txpresno, txtstart.Value, xtax, xdisc, xfixname, xfixrate, "Request", $Dept, res["fldusage"], False, xcurVal)
          End Select
        Endif
      Next

      BlankDosingBox()
      FillDosingGrid()
    Endif
  Else
    Message.Warning("Diagnosis not provided", ("OK"))
  Endif

End

Private Sub AddPastRegimens(itmList As Long[])

  Dim idx As Long
  Dim res As Result
  Dim txprescriber As String
  Dim txpresno As String

  Dim xtax As Float
  Dim xdisc As Float
  Dim itemtype As String
  Dim xfixrate As Float
  Dim xfixname As String
  Dim itemmode As String
  Dim xcurVal As String
  Dim xnarcotic As String[]
  Dim CPharmFix As CFixRatePharmacy

  If modBasic.$DispRequestStatus = "Reserve" Then
    xcurVal = "Reserve"
  Else
    xcurVal = "Continue"
  Endif

  If modMisc.AllowDiagnoBilling($encid) = True Then
    If itmList And If itmList.Count Then

      For Each idx In itmList
        res = modDatabase.$myConn.Exec("select fldroute,flditem,flddose,fldfreq,flddays,fldqtydisp,flddirection from tblpatdosing where fldid=&1", idx)
        If res.Available Then
          itemtype = modNonMedical.GetBillItemCategoryFromCombo(res["fldroute"])
          CPharmFix = New CFixRatePharmacy(itemtype, res["flditem"], $sBillMode)
          xfixrate = CPharmFix.GetFixRate()
          xfixname = CPharmFix.GetFixItem()
          If xfixname Then
            itemmode = $sBillMode
          Else
            itemmode = "%"
          Endif
          ' xvarfix = modStock.GetSellingPriceFixByStockID(itemtype, res["flditem"], $sBillMode)
          ' If xvarfix Then
          '   xfixrate = xvarfix[1]
          '   xfixname = xvarfix[0]
          '   itemmode = $sBillMode
          ' Else
          '   xfixrate = 0
          '   xfixname = ""
          '   itemmode = "%"
          ' Endif
          xtax = modNonMedical.ShowTaxValues(itemtype, res["flditem"])
          xdisc = modNonMedical.DiscPercentForCategoryValue($encid, cmbdisctype.Text, itemtype, res["flditem"], itemmode)
          Select res["fldroute"]
            Case "suture", "msurg", "ortho"
              modPharmSub.InsertNonMedDosingEntry("Surgicals", $encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, res["fldroute"], res["flditem"], res["fldqtydisp"], $status, txtstart.Value, xtax, xdisc, xfixname, xfixrate, "Request", $Dept, res["flddirection"], False, xcurVal)
            Case "extra"
              modPharmSub.InsertNonMedDosingEntry("Extra Items", $encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, res["fldroute"], res["flditem"], res["fldqtydisp"], $status, txtstart.Value, xtax, xdisc, xfixname, xfixrate, "Request", $Dept, res["flddirection"], False, xcurVal)
            Case Else
              If modMedConstant.GetNarcoticType(res["flditem"]) = "Yes" Then
                xnarcotic = DualGridValue(("Select Narcotic Prescriber"), $ClinicianLst, False)
                If xnarcotic Then
                  txprescriber = xnarcotic[1]
                  txpresno = xnarcotic[0]
                Endif
              Else
                txprescriber = ""
                txpresno = ""
              Endif
              modPharmSub.InsertDosingEntry($encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, res["fldroute"], res["flditem"], res["flddose"], res["fldfreq"], res["flddays"], res["fldqtydisp"], $status, txprescriber, txpresno, txtstart.Value, xtax, xdisc, xfixname, xfixrate, "Request", $Dept, res["flddirection"], False, xcurVal)
          End Select
        Endif
      Next

      BlankDosingBox()
      FillDosingGrid()
    Endif
  Else
    Message.Warning("Diagnosis not provided", ("OK"))
  Endif

End

Public Sub cmbdisctype_Click()

  If cmbdisctype.Text Then
    ShowBillingParam(cmbdisctype.Text)
    hOwnStockForm.$DiscPackage = cmbdisctype.Text
    hOwnStockForm.UpdateBillingParam()
  Endif

End

Public Sub cmbdisctype_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbdisctype)
  modFillContainer.RestrictComboToContent(cmbdisctype)

End

Public Sub cmbroute_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbroute)
  modFillContainer.RestrictComboToContent(cmbroute)

End

Private Sub RegimenBoxSetting(sBool As Boolean)

  txtdose.Enabled = sBool
  cmbfreq.Enabled = sBool
  txtday.Enabled = sBool

End

Public Sub cmbroute_Click()

  cmbmedicine.Clear
  cmbmedicine.Text = ""
  RegimenBoxSetting(True)

End

Private Function GetPharmTarget(sRoute As String) As String

  Dim xtarg As String

  Select sRoute
    Case "msurg"
      xtarg = modBasic.$BillTargetSurgical
    Case "suture"
      xtarg = modBasic.$BillTargetSutures
    Case "ortho"
      xtarg = modBasic.$BillTargetOrthopedics
    Case "extra"
      xtarg = modBasic.$BillTargetExtras
    Case Else
      xtarg = modBasic.$BillTargetMedicine
  End Select

  Return xtarg

End

Public Sub cmbmedicine_GotFocus()

  Dim res As Result
  Dim res1 As Result
  Dim xlist1 As String[]
  Dim xlist As String[]

  If Not cmbroute.Text Then
    cmbroute.SetFocus
  Else If cmbroute.Text Then
    If Not cmbmedicine.Text Then

      txtdose.Tag = "Auto"
      txtdose.Parent.Tag = "Auto"

      If cmbroute.Text = "suture" Or If cmbroute.Text = "msurg" Or If cmbroute.Text = "ortho" Or If cmbroute.Text = "extra" Then
        If modBasic.$ClinLockPharmStock = "Enable" Then
          res = modStock.FillMedicinesDispensingComboResult(cmbroute.Text, GetBrandGenerricType(), GetPharmTarget(cmbroute.Text), $sBillMode)
        Else
          res = modStock.FillMedicinesPrescribingComboResult(cmbroute.Text, GetBrandGenerricType(), $sBillMode)
        Endif
        xlist = modControlSub.GetDirectFillresult(res)
        If chkout.Value = True Then
          res1 = modStock.ItemListForPurchaseBillMode(cmbroute.Text, GetBrandGenerricType(), $sBillMode)
          xlist1 = modControlSub.GetDirectFillresult(res1)
          cmbmedicine.Text = GridViewMark("Select Particulars", xlist, xlist1, Panel7, GridView1.Height + cmbmedicine.Height)
        Else
          cmbmedicine.Text = GridViewNew("Select Particulars", modControlSub.GetDirectFillresult(res), False, Panel7, GridView1.Height + cmbmedicine.Height)
        Endif

      Else
        If modBasic.$ClinLockPharmStock = "Enable" Then
          res = modStock.FillMedicinesDispensingComboResult(cmbroute.Text, GetBrandGenerricType(), GetPharmTarget(cmbroute.Text), $sBillMode)
        Else
          res = modStock.FillMedicinesPrescribingComboResult(cmbroute.Text, GetBrandGenerricType(), $sBillMode)
        Endif
        If chkout.Value = True Then
          res1 = modStock.ItemListForPurchaseBillMode(cmbroute.Text, GetBrandGenerricType(), $sBillMode)
          xlist = modControlSub.GetDirectFillresult(res)
          xlist1 = modControlSub.GetDirectFillresult(res1)
          cmbmedicine.Text = GridViewMark("Select Particulars", xlist, xlist1, Panel7, GridView1.Height + cmbmedicine.Height)

        Else
          If modBasic.$ClinCategoryGrid = "Yes" Then
            xlist1 = modControlSub.GetDirectFillresult(res)
            If xlist1 Then
              xlist = modMedConstant.GetStockIDWithCategory(xlist1)
              If xlist Then
                cmbmedicine.Text = GridViewGroup("Select Medicine", xlist, False, Panel7, GridView1.Height + cmbmedicine.Height)
              Endif
            Endif
          Else
            xlist = modControlSub.GetDirectFillresult(res)
            cmbmedicine.Text = GridViewNew("Select Particulars", xlist, False, Panel7, GridView1.Height + cmbmedicine.Height)
          Endif

        Endif
      Endif

      If Not cmbmedicine.Text Then
        txtdose.SetFocus
      Endif

    Endif
  Endif

End

Public Sub txtdose_GotFocus()

  If cmbmedicine.Text Then
    If modStockSub.GetComboStockControl(cmbroute.Text, cmbmedicine.Text, rbgeneric, rbrand, modDatabase.$medConn) = False Then
      cmbmedicine.Text = ""
      Balloon.Warning(("Item not listed"), cmbmedicine)
      Balloon.Delay = modBasic.$BalloonDelay
      cmbroute.SetFocus
    Else

      If cmbroute.Text = "suture" Or If cmbroute.Text = "msurg" Or If cmbroute.Text = "ortho" Or If cmbroute.Text = "extra" Then
        RegimenBoxSetting(False)
        txtqty.SetFocus
        txtqty.SelectAll

      Else
        If rbrand.Value = True Then
          cmbmedicine.Text = modMedConstant.ConvertBrandToGeneric(cmbroute.Text, cmbmedicine.Text)
        Endif
        RegimenBoxSetting(True)
        lbldose.Text = modMedConstant.GetDrugDosingUnit(cmbmedicine.Text)

        If modBasic.$MedDoseRecommend = "Yes" Then
          txtdose.Value = modMedDosing.RecommendedDoseDrug($encid, xYear, cmbmedicine.Text)
          cmbfreq.Text = modMedDosing.RecommendedFrequencyDrug(xYear, cmbmedicine.Text, True)
        Endif

        If $HideDos = False Then
          $HideDos = True
          CheckLastDispensing(cmbmedicine.Text)
        Endif

        ClearNumPad()
        ShowKeyPad()
        If modBasic.$TabletModeEnable = "Yes" Then
          $NumForm = New FmQuantiEntry(txtdose, pnlquanti)
        Endif

        txtdose.SelectAll
      Endif

    Endif
  Endif

End

Private Sub CheckLastDispensing(xmedicine As String)

  Dim cForm As CLastDispensing
  Dim xdate As Date
  Dim xdays As Integer

  cForm = New CLastDispensing(xmedicine, $PatientNum, $xNHISCode, cmbdisctype.Text)
  txttotalqty.Value = cForm.GetLastQty()
  xdate = cForm.GetLastDate()
  xdays = cForm.GetLastDays()

  If xdate Then
    txtlastdispdate.Text = modReportVar.GetDateTimeReport(xdate, gb.MediumDate)
    If DateDiff(xdate, Now(), gb.Month) <= 3 Then
      txtlastdispdate.Foreground = Color.Red
    Endif

    If xdays Then
      If DateAdd(xdate, gb.Day, xdays) > Now() Then
        Message.Warning("Dispensed for " & xdays & " Days On " & modReportVar.GetDateTimeReport(xdate, gb.GeneralDate), ("OK"))
      Endif
    Endif
  Endif

End

Public Sub txtdose_KeyRelease()

  Dim hForm As FmDiseaseDose
  Dim xx As String
  Dim brandOrGeneric As String

  txtdose.Tag = ""
  txtdose.Parent.Tag = ""

  If Key.Code = Key.Right Then
    If cmbroute.Text And If cmbmedicine.Text Then
      If cmbroute.Text = "suture" Or If cmbroute.Text = "msurg" Or If cmbroute.Text = "ortho" Or If cmbroute.Text = "extra" Then
      Else
        If rbrand.Value = True Then
          brandOrGeneric = "Brand"
        Else
          brandOrGeneric = "Generic"
        Endif
        xx = CAlternative(cmbroute.Text, cmbmedicine.Text, brandOrGeneric)
        If xx Then
          cmbmedicine.Text = xx
        Endif

      Endif
    Endif
  Else If Key.Code = Key.Down Then
    If modBasic.$MedDiseaseDose Then
      If modBasic.$MedDiseaseDose = "None" Then
      Else
        hForm = New FmDiseaseDose(modBasic.$MedDiseaseDose, $encid, cmbroute.Text, cmbmedicine.Text, txtdose, cmbfreq, txtday)
        hForm.ShowModal
      Endif
    Endif
  Endif

End

Public Sub cmbfreq_GotFocus()

  If modBasic.$TabletModeEnable = "Yes" Then
    If Not cmbfreq.Text Then
      cmbfreq.Popup
    Endif
  Endif

End

Public Sub cmbfreq_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbfreq)
  modFillContainer.RestrictComboToContent(cmbfreq)
  If Key.Code = Key.Down Then
    $HideErr = True
  Endif

End

Public Sub cmbfreq_Click()

  $HideErr = False

End

Public Sub cmbfreq_LostFocus()

  Dim opt As String[]
  Dim Row As Integer
  Dim xval As String
  Dim xcount As Integer

  If $HideErr = False Then

    If txtdose.Value And If cmbfreq.Text Then
      If $ShowReview = "No" Then
      Else
        opt = New String[]
        For Row = 0 To GridView1.Rows.Count - 1
          If GridView1[Row, 2].Text = "suture" Or If GridView1[Row, 2].Text = "msurg" Or If GridView1[Row, 2].Text = "ortho" Or If GridView1[Row, 2].Text = "extra" Or If GridView1[Row, 2].Text = "topical" Then
          Else
            xval = modMedConstant.GetDrugFromStockID(GridView1[Row, 3].Text)
            If opt.Count = 0 Then
              opt.Add(xval)
            Else
              If opt.Exist(xval) = False Then
                opt.Add(xval)
              Endif
            Endif
          Endif
        Next

        If cmbroute.Text = "suture" Or If cmbroute.Text = "msurg" Or If cmbroute.Text = "ortho" Or If cmbroute.Text = "extra" Or If cmbroute.Text = "topical" Then
        Else
          $HideErr = True
          xcount = modMedError.ShowMedicationReviewPunching($encid, cmbroute.Text, cmbmedicine.Text, txtdose.Value, cmbfreq.Text, opt, "Message Box")
        Endif
      Endif
    Endif

  Endif

End

Public Sub txtday_GotFocus()

  ClearNumPad()
  ShowKeyPad()
  If modBasic.$TabletModeEnable = "Yes" Then
    $NumForm = New FmQuantiEntry(txtday, pnlquanti)
  Endif
  txtday.SelectAll

End

Public Sub txtqty_GotFocus()

  Dim xday As Integer

  ClearNumPad()
  ShowKeyPad()
  If modBasic.$TabletModeEnable = "Yes" Then
    $NumForm = New FmQuantiEntry(txtqty, pnlquanti)
  Endif

  If txtdose.Value And If cmbfreq.Text Then
    If txtday.Value Then
      xday = txtday.Value
    Else
      If modBasic.$ClinIPDVarDays = "Enable" And If $status = "Admitted" Then
        xday = 1
      Endif
    Endif

    If Not xday Then
      txtday.SetFocus
    Else
      txtqty.Value = Ceil(modMedConstant.GetQuantityDosing(cmbmedicine.Text, txtdose.Value, cmbfreq.Text, xday))
    Endif
  Endif
  txtqty.SelectAll

End

Public Sub chksave_Click()

  If cmbroute.Text And If cmbmedicine.Text And If txtqty.Value Then
    If modMisc.AllowDiagnoBilling($encid) = True Then
      EnterDosingRecord()
      ClearNumPad()
      pnlquanti.Visible = False
      cmbroute.SetFocus
    Else
      Message.Warning("Diagnosis not provided", ("OK"))
      cmbroute.SetFocus
    Endif
  Endif '

End

Public Sub chksave_GotFocus()

  chksave_Click()

End

Public Sub chksave_KeyRelease()

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    chksave_Click()
  Endif

End

Private Sub EnterDosingRecord()

  Dim txprescriber As String
  Dim txpresno As String

  Dim xtax As Float
  Dim xdisc As Float
  Dim itemtype As String
  Dim xfixrate As Float
  Dim xfixname As String
  ' Dim xvarfix As Variant[]
  Dim itemmode As String
  Dim xcurVal As String
  Dim xnarcotic As String[]
  Dim CPharmFix As CFixRatePharmacy

  If modBasic.$DispRequestStatus = "Reserve" Then
    xcurVal = "Reserve"
  Else
    xcurVal = "Continue"
  Endif
  If cmbroute.Text And If cmbmedicine.Text Then

    If cmbroute.Text = "suture" Or If cmbroute.Text = "msurg" Or If cmbroute.Text = "ortho" Or If cmbroute.Text = "extra" Then
      itemtype = modNonMedical.GetBillItemCategoryFromCombo(cmbroute.Text)
      CPharmFix = New CFixRatePharmacy(itemtype, cmbmedicine.Text, $sBillMode)
      xfixrate = CPharmFix.GetFixRate()
      xfixname = CPharmFix.GetFixItem()
      ' xvarfix = modStock.GetSellingPriceFixByStockID(itemtype, cmbmedicine.Text, $sBillMode)
      ' If xvarfix Then
      '   xfixrate = xvarfix[1]
      '   xfixname = xvarfix[0]
      ' Else
      '   xfixrate = 0
      '   xfixname = ""
      ' Endif
      itemmode = $sBillMode
      xtax = modNonMedical.ShowTaxValues(itemtype, cmbmedicine.Text)
      xdisc = modNonMedical.DiscPercentForCategoryValue($encid, cmbdisctype.Text, itemtype, cmbmedicine.Text, itemmode)
      modPharmSub.InsertNonMedDosingEntry(itemtype, $encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, cmbroute.Text, cmbmedicine.Text, txtqty.Value, $status, txtstart.Value, xtax, xdisc, xfixname, xfixrate, "Request", $Dept, Trim(txtdirection.Text), False, xcurVal)

    Else
      If modMedConstant.GetNarcoticType(cmbmedicine.Text) = "Yes" Then
        xnarcotic = DualGridValue(("Select Narcotic Prescriber"), $ClinicianLst, False)
        If xnarcotic Then
          txprescriber = xnarcotic[1]
          txpresno = xnarcotic[0]
        Endif
      Else
        txprescriber = ""
        txpresno = ""
      Endif
      itemtype = modNonMedical.GetBillItemCategoryFromCombo(cmbroute.Text)
      CPharmFix = New CFixRatePharmacy(itemtype, cmbmedicine.Text, $sBillMode)
      xfixrate = CPharmFix.GetFixRate()
      xfixname = CPharmFix.GetFixItem()
      ' xvarfix = modStock.GetSellingPriceFixByStockID(itemtype, cmbmedicine.Text, $sBillMode)
      ' If xvarfix Then
      '   xfixrate = xvarfix[1]
      '   xfixname = xvarfix[0]
      ' Else
      '   xfixrate = 0
      '   xfixname = ""
      ' Endif
      itemmode = $sBillMode
      xtax = modNonMedical.ShowTaxValues(itemtype, cmbmedicine.Text)
      xdisc = modNonMedical.DiscPercentForCategoryValue($encid, cmbdisctype.Text, itemtype, cmbmedicine.Text, itemmode)
      modPharmSub.InsertDosingEntry($encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, cmbroute.Text, cmbmedicine.Text, txtdose.Value, cmbfreq.Text, txtday.Value, txtqty.Value, $status, txprescriber, txpresno, txtstart.Value, xtax, xdisc, xfixname, xfixrate, "Request", $Dept, Trim(txtdirection.Text), False, xcurVal)                     '
    Endif

    BlankDosingBox()
    FillDosingGrid()
  Endif

End

Public Sub btngroup_Click()

  Dim pList As String[]
  Dim xgroup As String

  Dim res As Result
  Dim txprescriber As String
  Dim txpresno As String
  Dim xdose As Float
  Dim xtax As Float
  Dim xdisc As Float
  Dim itemtype As String
  Dim xfixrate As Float
  Dim xfixname As String
  ' Dim xvarfix As Variant[]
  Dim itemmode As String
  Dim xcurVal As String
  Dim xnarcotic As String[]
  Dim CPharmFix As CFixRatePharmacy

  If modBasic.$DispRequestStatus = "Reserve" Then
    xcurVal = "Reserve"
  Else
    xcurVal = "Continue"
  Endif

  If modMisc.AllowDiagnoBilling($encid) = True Then

    pList = modMedicine.GetMedicineProcolsList()
    xgroup = GridViewNew("Select Particulars", pList, False)
    If xgroup Then

      res = modDatabase.$myConn.Exec("select fldroute,flditem,flddose,flddoseunit,fldfreq,fldday,fldqty,fldstart,fldadvice from tblproductgroup where fldmedgroup=&1 and (fldcomp=&2 or fldcomp=&3)", xgroup, modBasic.$compID, "%")
      If res.Available Then
        For Each res

          itemtype = modNonMedical.GetBillItemCategoryFromCombo(res["fldroute"])
          CPharmFix = New CFixRatePharmacy(itemtype, res["flditem"], $sBillMode)
          xfixrate = CPharmFix.GetFixRate()
          xfixname = CPharmFix.GetFixItem()
          If xfixname Then
            itemmode = $sBillMode
          Else
            itemmode = "%"
          Endif
          ' xvarfix = modStock.GetSellingPriceFixByStockID(itemtype, res["flditem"], $sBillMode)
          ' If xvarfix Then
          '   xfixrate = xvarfix[1]
          '   xfixname = xvarfix[0]
          '   itemmode = $sBillMode
          ' Else
          '   xfixrate = 0
          '   xfixname = ""
          '   itemmode = "%"
          ' Endif
          xtax = modNonMedical.ShowTaxValues(itemtype, res["flditem"])
          xdisc = modNonMedical.DiscPercentForCategoryValue($encid, cmbdisctype.Text, itemtype, res["flditem"], itemmode)
          Select res["fldroute"]
            Case "suture", "msurg", "ortho"
              modPharmSub.InsertNonMedDosingEntry("Surgicals", $encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, res["fldroute"], res["flditem"], res["fldqty"], $status, res["fldstart"], xtax, xdisc, xfixname, xfixrate, "Request", $Dept, res["fldadvice"], False, xcurVal)
            Case "extra"
              modPharmSub.InsertNonMedDosingEntry("Extra Items", $encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, res["fldroute"], res["flditem"], res["fldqty"], $status, res["fldstart"], xtax, xdisc, xfixname, xfixrate, "Request", $Dept, res["fldadvice"], False, xcurVal)
            Case Else
              xdose = modMedDosing.GetDoseInMg(res["flddose"], res["flddoseunit"], $encid)
              If xdose Then
                If modMedConstant.GetNarcoticType(res["flditem"]) = "Yes" Then
                  xnarcotic = DualGridValue(("Select Narcotic Prescriber"), $ClinicianLst, False)
                  If xnarcotic Then
                    txprescriber = xnarcotic[1]
                    txpresno = xnarcotic[0]
                  Endif
                Else
                  txprescriber = ""
                  txpresno = ""
                Endif
                modPharmSub.InsertDosingEntry($encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, res["fldroute"], res["flditem"], xdose, res["fldfreq"], res["fldday"], res["fldqty"], $status, txprescriber, txpresno, res["fldstart"], xtax, xdisc, xfixname, xfixrate, "Request", $Dept, res["fldadvice"], False, xcurVal)
              Endif
          End Select

        Next
      Endif

      BlankDosingBox()
      FillDosingGrid()
    Endif

  Else
    Message.Warning("Diagnosis not provided", ("OK"))
  Endif

End

Private Sub FillDosingGrid()

  Dim sql As String
  Dim Column As Integer
  Dim fld As ResultField
  Dim res As Result

  If rblabel.Value = True Then
    sql = "select fldid,fldstarttime,fldroute,flditem,fldid,fldfreq,flddays,fldqtydisp,flduserid_order,fldid,fldid,fldstarttime,fldcurval,flddirection from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstatus=&3 and fldorder=&4 and (fldcurval=&5 or fldcurval=&6)"
  Else
    sql = "select fldid,fldstarttime,fldroute,flditem,flddose,fldfreq,flddays,fldqtydisp,flduserid_order,fldid,fldid,fldstarttime,fldcurval,flddirection from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstatus=&3 and fldorder=&4 and (fldcurval=&5 or fldcurval=&6)"                                                   ''
  Endif
  res = modDatabase.$myConn.Exec(sql, $encid, False, $status, "Request", "Continue", "Reserve")

  GridView1.Clear
  GridView1.Columns.Count = res.Fields.Count
  GridView1.Rows.Count = res.Count

  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 1
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 75 * modBasic.$AppWidthRatio
    .Columns[3].Width = 250 * modBasic.$AppWidthRatio
    .Columns[4].Width = 75 * modBasic.$AppWidthRatio
    .Columns[5].Width = 75 * modBasic.$AppWidthRatio
    .Columns[6].Width = 50 * modBasic.$AppWidthRatio
    .Columns[7].Width = 50 * modBasic.$AppWidthRatio
    .Columns[8].Width = 1
    .Columns[9].Width = 25 * modBasic.$AppWidthRatio
    .Columns[10].Width = 1
    .Columns[11].Width = 1
    .Columns[12].Width = 75 * modBasic.$AppWidthRatio
    .Columns[13].Width = 125 * modBasic.$AppWidthRatio

    .Columns[1].Text = "Start"
    .Columns[2].Text = "Route"
    .Columns[3].Text = "Particulars"
    .Columns[4].Text = "Dose"
    .Columns[5].Text = "Freq"
    .Columns[6].Text = "Day"
    .Columns[7].Text = "QTY"
    .Columns[12].Text = "Status"
    .Columns[13].Text = "Direction"
  End With

  For Each res
    Column = 0
    For Each fld In res.Fields
      modGeneralMain.GridExplicitDecoration(GridView1, res.Index, Column)
      If Column = 1 Then
        GridView1[res.Index, Column].Text = modReportVar.GetDateTimeReport(res["fldstarttime"], gb.GeneralDate)
      Else If Column = 4 Then
        If rblabel.Value = True Then
          GridView1[res.Index, Column].Text = modPharmacy.GetMedicineDoseInFormat(res[fld.Name], "Label")
        Else
          GridView1[res.Index, Column].Text = res[fld.Name]
        Endif
      Else If Column = 9 Then
        GridView1[res.Index, Column].Picture = Picture["icon:/tiny/cancel"]
        GridView1[res.Index, Column].Text = ""
      Else
        GridView1[res.Index, Column].Text = res[fld.Name]
      Endif
      GridView1.Rows[res.Index].Height = Max(GridView1.Rows[res.Index].Height, GridView1[res.Index, Column].Font.RichTextHeight(GridView1[res.Index, Column].Text, GridView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (GridView1.Rows.Height - GridView1.Font.Height))
      GridView1[res.Index, Column].WordWrap = True

      Column = Column + 1
    Next
  Next
  GridView1.Row = 0

End

Public Sub GridView1_Click()

  Dim xval As Float
  Dim yval As String
  Dim Column As Integer
  Dim Row As Integer
  Dim res As Result
  Dim xdate As Date

  Row = GridView1.Row
  Column = GridView1.Column
  If GridView1.Column = 1 Then
    If modGeneral.AllowClinicalEdit(GridView1[GridView1.Row, 8].Text) = True Then
      xdate = GetDateValue(GridView1[GridView1.Row, 3].Text, ("Alter Starting Date"), GridView1[GridView1.Row, 11].Text)
      If xdate Then
        modPharmSub.UpdateStartBefDispensing(GridView1[GridView1.Row, 0].Text, xdate)
        FillDosingGrid()
      Endif
    Endif

  Else If GridView1.Column = 4 Then
    If modGeneral.AllowClinicalEdit(GridView1[GridView1.Row, 8].Text) = True Then
      xval = InputValue(GridView1[GridView1.Row, 3].Text, ("Alter Unit Dose"), GridView1[GridView1.Row, 4].Text)
      If xval Then
        modPharmSub.UpdateDoseBefDispensing(GridView1[GridView1.Row, 0].Text, xval)
        FillDosingGrid()
      Endif
    Endif

  Else If GridView1.Column = 5 Then
    If modGeneral.AllowClinicalEdit(GridView1[GridView1.Row, 8].Text) = True Then
      yval = InputCombo(GridView1[GridView1.Row, 3].Text, ("Alter Frequency"), modMedicine.FrequencyCombo(), GridView1[GridView1.Row, 5].Text, True)
      If yval Then
        modPharmSub.UpdateFreqBefDispensing(GridView1[GridView1.Row, 0].Text, yval)
        FillDosingGrid()
      Endif
    Endif

  Else If GridView1.Column = 6 Then
    If modGeneral.AllowClinicalEdit(GridView1[GridView1.Row, 8].Text) = True Then
      xval = InputValue(GridView1[GridView1.Row, 3].Text, ("Alter Duration"), GridView1[GridView1.Row, 6].Text)
      If modBasic.$ClinIPDVarDays = "Enable" And If $status = "Admitted" Then
        modPharmSub.UpdateDaysBefDispensing(GridView1[GridView1.Row, 0].Text, xval)
        FillDosingGrid()
      Else
        If xval Then
          modPharmSub.UpdateDaysBefDispensing(GridView1[GridView1.Row, 0].Text, xval)
          FillDosingGrid()
        Endif
      Endif
    Endif

  Else If GridView1.Column = 7 Then
    xval = InputValue(GridView1[GridView1.Row, 3].Text, ("Alter Quantity"), GridView1[GridView1.Row, 7].Text)
    If xval Then
      modPharmSub.UpdateQTYBefDispensing(GridView1[GridView1.Row, 0].Text, xval)
      FillDosingGrid()
    Endif

  Else If GridView1.Column = 9 Then
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      res = modDatabase.$myConn.Edit("tblpatdosing", "fldid=&1 and fldsave_order=&2", GridView1[GridView1.Row, 0].Text, False)
      If modGeneral.AllowClinicalEdit(res["flduserid_order"]) = True Then
        modDatabase.$myConn.Delete("tblpatdosing", "fldid=&1 and fldsave_order=&2", GridView1[GridView1.Row, 0].Text, False)
      Else
        res["fldcurval"] = "Cancelled"
        res["flduserid_order"] = modBasic.$lbluser
        res["xyz"] = False
        res.Update
      Endif
      FillDosingGrid()
    Endif

  Else If GridView1.Column = 13 Then
    If modGeneral.AllowClinicalEdit(GridView1[GridView1.Row, 8].Text) = True Then
      yval = InputBox(GridView1[GridView1.Row, 3].Text, ("Alter Direction"), GridView1[GridView1.Row, 13].Text)
      If yval Then
        modPharmSub.UpdateAdviceBefDispensing(GridView1[GridView1.Row, 0].Text, yval)
        FillDosingGrid()
      Endif
    Endif

  Else
    modGridView.CheckUncheckGridWithDB(modDatabase.$myConn, GridView1, 8, "fldlabel", "fldid", "tblpatdosing", GridView1[GridView1.Row, 0].Text)
  Endif
  GridView1.Row = Row
  GridView1.Column = Column

End

Private Sub ClearNumPad()

  txtdose.Tag = ""
  txtday.Tag = ""
  txtqty.Tag = ""
  Try $NumForm.Close

End

Public Sub GridView1_Menu()

  mnuhide.Popup

End

Public Sub mnulabeling_Click()

  Dim Row As Integer
  Dim hClabel As CLabelSize

  If GridView1.Rows.Selection.Count > 0 Then
    Row = GridView1.Row
    hClabel = New CLabelSize(GridView1[GridView1.Row, 0].Text, $LabelType)
    modPrint.PrintPopUp(CStr(GridView1[GridView1.Row, 0].Text), hClabel.LabelPath(), "LabelSize")
    GridView1.Row = Row
  Endif

End

Public Sub mnutaper_Click()

  Dim Row As Integer
  Dim hForm As Fmtaperdose

  If GridView1.Rows.Selection.Count > 0 Then
    Row = GridView1.Row
    If GridView1[GridView1.Row, 5].Text = "Tapering" Then
      hForm = New Fmtaperdose(GridView1[GridView1.Row, 0].Text)
      hForm.ShowModal
    Endif
    GridView1.Row = Row
  Endif

End

Public Sub btndispown_Click()

  If GridView1.Rows.Selection.Count > 0 Then
    If Message.Question(("Dispense from LOCAL Stock. Are you sure ?"), ("No"), ("Yes")) = 2 Then
      SaveOwnDispensing(GridView1[GridView1.Row, 0].Text, "Continue")
      FillDosingGrid()
    Endif
  Endif

End

Private Sub SaveOwnDispensing(sID As Long, sStatus As String)

  Dim sql1 As String
  Dim res1 As Result
  Dim res2 As Result
  Dim sql2 As String

  Dim tax As Float
  Dim disc As Float
  Dim xrate As Float
  Dim xitem As String

  Dim qtynew As Float
  Dim xcateg As String
  ' Dim xdose As Float
  ' Dim xunit As String
  Dim xerr As String

  Dim xrefer As String
  Dim xpayble As String
  Dim xallow As Boolean
  Dim xCshCrd As Float

  xrefer = modBillings.GetReferralUserSetting("Pharmacy", $encid)
  xpayble = modBillings.GetPayableUserSetting("Pharmacy", $encid)

  xerr = ""
  sql1 = "select fldid,fldtime,fldroute,flditem,flddose,fldfreq,flddays,fldqtydisp,fldlabel,flditemtype,fldfixname,fldfixrate,fldtaxper,flddiscper,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from tblpatdosing where fldid=&1"                                                   ''
  res1 = modDatabase.$myConn.Exec(sql1, sID)
  If res1.Available = True Then

    'get tax and discount percentages
    xcateg = res1["flditemtype"]
    If res1["fldtaxper"] Then
      tax = res1["fldtaxper"]
    Else
      tax = 0
    Endif
    If res1["flddiscper"] Then
      disc = res1["flddiscper"]
    Else
      disc = 0
    Endif
    If res1["fldcashincredit"] Then
      xCshCrd = res1["fldcashincredit"]
    Else
      xCshCrd = 0
    Endif

    If res1["fldfixrate"] Then
      xrate = res1["fldfixrate"]
    Else
      xrate = modStock.GetCurrentSellingPrice(res1["flditem"], modBasic.$compID)
    Endif
    xallow = modNonMedical.AllowPharmProceedPreBill($encid, $DiscPackage, res1["fldqtydisp"], xrate, res1["flddiscper"], res1["fldbilltype"], xCshCrd, res1["fldroute"], res1["flditem"])
    If xallow = True Then

      Inc Application.Busy

      qtynew = res1["fldqtydisp"]
      modDatabase.$myConn.Begin
      While qtynew > 0
        'get stockno, rate and quantity based on expiry check
        sql2 = "select fldstockno,fldqty from tblentry where fldstockid=&1 and fldcomp=&2 and fldstatus=&3 and fldqty>&4"
        res2 = modDatabase.$myConn.Exec(sql2, res1["flditem"], modBasic.$compID, 1, 0)
        If res2.Available Then
          res2.MoveFirst

          xitem = res1["flditem"]
          If res1["fldfixname"] Then
            xitem = res1["fldfixname"]
            If res1["fldfixrate"] Then
              xrate = res1["fldfixrate"]
            Else
              xrate = 0
            Endif
          Else
            xrate = modStock.GetSellingPriceByStockNo(res2["fldstockno"], $sBillMode)
          Endif

          If qtynew <= res2["fldqty"] Then
            If modBasic.$AutoBillUseOwn = "Enable" Then
              modBillings.InsertBlankBillItemNewApp($encid, res1["fldbilltype"], res1["fldbillingmode"], res1["flddisctype"], res1["fldacledger"], res1["flditemtype"], res2["fldstockno"], xitem, xrate, qtynew, tax, disc, xCshCrd, "Done", res1["fldid"], True, False, "", xpayble, xrefer)
            Endif
            modStockSub.AddToExistEntry(res2["fldstockno"], (0 - qtynew), modBasic.$compID)
            qtynew = 0
          Else If qtynew > res2["fldqty"] Then
            If modBasic.$AutoBillUseOwn = "Enable" Then
              modBillings.InsertBlankBillItemNewApp($encid, res1["fldbilltype"], res1["fldbillingmode"], res1["flddisctype"], res1["fldacledger"], res1["flditemtype"], res2["fldstockno"], xitem, xrate, res2["fldqty"], tax, disc, xCshCrd, "Done", res1["fldid"], True, False, "", xpayble, xrefer)
            Endif
            modStockSub.AddToExistEntry(res2["fldstockno"], (0 - res2["fldqty"]), modBasic.$compID)
            qtynew = qtynew - res2["fldqty"]
          Endif
          Wait
        Else
          Break
        Endif
      Wend

      If res1["fldqtydisp"] > qtynew Then
        If qtynew > 0 Then
          modPharmSub.DuplicateRecordWithQTY(res1["fldid"], qtynew)
          modPharmSub.UpdateQTYBefDispensing(res1["fldid"], res1["fldqtydisp"] - qtynew)
        Endif
        If sStatus = "Completed" Then
          modPharmSub.UpdateDispensing(res1["fldid"], True, True)
        Else
          modPharmSub.UpdateDispensing(res1["fldid"], True, False)
        Endif
      Endif
      modDatabase.$myConn.Commit

      ''Why to insert dosing when save from local stock?
      ' If modNonMedical.GetBillItemCategoryFromCombo(res1["fldroute"]) = "Medicines" Then
      '   xdose = Round(res1["flddose"] / modMedConstant.GetDrugInitialStrength(res1["flditem"]), -2)
      '   xunit = modPharmLabel.GetDosageFormForLabel(res1["flditem"], "Inpatient")
      '   modPharmSub.InsertNurDosing(res1["fldid"], $encid, xdose, xunit, "")
      ' Endif
      Dec Application.Busy

    Else
      xerr = xerr & res1["fldfixname"] & gb.NewLine
    Endif
  Endif
  If xerr Then
    Balloon.Warning("<b>Over Set Discount/Credit Limit:</b>" & gb.NewLine & xerr, btndispown)
  Endif

Catch
  modDatabase.$myConn.Rollback
  Dec Application.Busy
  modHelpVariable.CreateErrorReport()

End

Public Sub mnusave_Click()

  If GridView1.Rows.Selection.Count > 0 Then
    If Message.Question(("Bring from OUTSIDE. Are you sure ?"), ("No"), ("Yes")) = 2 Then
      modPharmSub.UpdateDispensing(GridView1[GridView1.Row, 0].Text, True)
      FillDosingGrid()
    Endif
  Endif

End

Public Sub mnuonline_Click()

  Dim Row As Integer

  If GridView1.Rows.Selection.Count > 0 Then
    Row = GridView1.Row
    modPharmSub.DisableDispOnline(GridView1[GridView1.Row, 0].Text)
    FillDosingGrid()
    GridView1.Row = Row
    Message.Info(("Request sent"), ("OK"))
  Endif

End

Public Sub mnucontinue_Click()

  Dim Row As Integer

  If GridView1.Rows.Selection.Count > 0 Then
    Row = GridView1.Row
    modPharmSub.ContinueDispReq(GridView1[GridView1.Row, 0].Text)
    FillDosingGrid()
    GridView1.Row = Row
    Message.Info(("Request Continued"), ("OK"))
  Endif

End

Public Sub mnureview_Click()

  Dim opt As String[]
  Dim Row As Integer
  Dim xval As String

  If GridView1.Rows.Selection.Count > 0 Then
    If GridView1.Rows.Count > 0 Then
      opt = New String[]
      For Row = 0 To GridView1.Rows.Count - 1
        If GridView1[Row, 2].Text = "suture" Or If GridView1[Row, 2].Text = "msurg" Or If GridView1[Row, 2].Text = "ortho" Or If GridView1[Row, 2].Text = "extra" Or If GridView1[Row, 2].Text = "topical" Then
        Else
          xval = modMedConstant.GetDrugFromStockID(GridView1[Row, 3].Text)
          If opt.Count = 0 Then
            opt.Add(xval)
          Else
            If opt.Exist(xval) = False Then
              opt.Add(xval)
            Endif
          Endif

        Endif
      Next

      modMedError.ShowMedicationReviewSingleDosID(GridView1[GridView1.Row, 0].Text, opt, "Report")
    Endif
  Endif

End

Public Sub mnudisplabel_Click()

  Dim xPath As String

  If GridView1.Rows.Selection.Count > 0 Then
    Inc Application.Busy
    xPath = modCHTMLPatient.ShowSingleCounselingReport(GridView1[GridView1.Row, 0].Text)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub btnreview_Click()

  Dim opt As Long[]
  Dim Row As Integer

  If GridView1.Rows.Count > 0 Then
    opt = New Long[]
    For Row = 0 To GridView1.Rows.Count - 1
      If GridView1[Row, 2].Text = "suture" Or If GridView1[Row, 2].Text = "msurg" Or If GridView1[Row, 2].Text = "ortho" Or If GridView1[Row, 2].Text = "extra" Or If GridView1[Row, 2].Text = "topical" Then
      Else
        opt.Add(GridView1[Row, 0].Text)
      Endif
    Next
    modMedError.ShowMedicationReviewMultipleDosID($encid, opt, "Report")
  Endif

End

Public Sub btnaireview_Click()

  Dim opt As Long[]
  Dim Row As Integer
  Dim xdata As String
  Dim xans As String

  If GridView1.Rows.Count > 0 Then
    opt = New Long[]
    For Row = 0 To GridView1.Rows.Count - 1
      If GridView1[Row, 2].Text = "suture" Or If GridView1[Row, 2].Text = "msurg" Or If GridView1[Row, 2].Text = "ortho" Or If GridView1[Row, 2].Text = "extra" Or If GridView1[Row, 2].Text = "topical" Then
      Else
        opt.Add(GridView1[Row, 0].Text)
      Endif
    Next

    If opt.Count Then
      xdata = modPharmacy.ShowMedicationListDosID($encid, opt).Join(gb.NewLine)
      xans = modCloudAI.GetComboCloudAIResponse(xdata, modBasic.$CloudAIDrugQuery)
      If xans Then
        xans = MessageHtml("Cloud AI Response", modString.TextToHTML(xans), [("Useless"), ("Neutral"), ("Useful")])
      Endif
    Endif

  Endif

End

Public Sub btnshow_Click()

  Dim xPath As String

  Inc Application.Busy
  xPath = modCHTMLPatient.ShowMedicationOrder($encid)
  Dec Application.Busy
  modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")

End

''====================================Runnung medicines =================================
Private Sub GetDoseFormatType()

  Dim def As String

  def = modSettings.ShowSettingFromFIle("DoseFormat/Dispensing")
  If def Then
    If def = "Label" Then
      rblabel.Value = True
    Else
      rbvalue.Value = True
    Endif
  Else
    rbvalue.Value = True
  Endif

End

Public Sub rbvalue_Click()

  modSettings.SaveSettingsToFile("DoseFormat/Dispensing", "Value")
  RefreshGridsLabel()

End

Public Sub rblabel_Click()

  modSettings.SaveSettingsToFile("DoseFormat/Dispensing", "Label")
  RefreshGridsLabel()

End

Private Sub RefreshGridsLabel()

  If $Ready = True Then
    If TabPanel1.Index = 0 Then
      If rballdates.Value = True Then
        ShowAllMedicines()
      Else If rbcurrent.Value = True Then
        ShowRunningMedicine(cmbcurrent.Text)
      Endif
    Else If TabPanel1.Index = 1 Then
      FillDosingGrid()
    Endif
  Endif

End

Public Sub btncurrefresh_Click()

  If rballdates.Value = True Then
    ShowAllMedicines()
  Else If rbcurrent.Value = True Then
    ShowRunningMedicine(cmbcurrent.Text)
  Endif

End

Private Sub ShowAllMedicines()

  Dim sql1 As String
  Dim sql2 As String

  If rblabel.Value = True Then
    sql1 = "select fldstarttime,fldroute,flditem,fldid,fldfreq,flddays,fldcurval from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and flditemtype=&3 and flddays>&4"
    sql2 = "select fldstarttime,fldroute,flditem,fldid,fldfreq,COUNT(fldid),fldcurval from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and flditemtype=&3 and flddays=&4 GROUP BY flditem,flddose,fldfreq"
  Else
    sql1 = "select fldstarttime,fldroute,flditem,fldid,fldfreq,flddays,fldcurval from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and flditemtype=&3 and flddays>&4"                    ''
    sql2 = "select fldstarttime,fldroute,flditem,flddose,fldfreq,COUNT(fldid),fldcurval from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and flditemtype=&3 and flddays=&4 GROUP BY flditem,flddose,fldfreq"
  Endif
  $rData2 = modDatabase.$myConn.Exec(sql1 & " UNION ALL " & sql2, $encid, True, "Medicines", 0)

  $aMyFields2 = New String[]
  modGridView.ReadSmallData(grdmedicine, $rData2, $aMyFields2)

  With grdmedicine
    .Columns[0].Width = 125 * modBasic.$AppWidthRatio
    .Columns[1].Width = 75 * modBasic.$AppWidthRatio
    .Columns[2].Width = 275 * modBasic.$AppWidthRatio
    .Columns[3].Width = 75 * modBasic.$AppWidthRatio
    .Columns[4].Width = 50 * modBasic.$AppWidthRatio
    .Columns[5].Width = 50 * modBasic.$AppWidthRatio
    .Columns[6].Width = 100 * modBasic.$AppWidthRatio

    .Columns[0].Text = "StartDate"
    .Columns[1].Text = "Route"
    .Columns[2].Text = "Medicine"
    .Columns[3].Text = "Dose"
    .Columns[4].Text = "Freq"
    .Columns[5].Text = "Days"
    .Columns[6].Text = "Status"
  End With

End

Private Sub ShowRunningMedicine(xCurrent As String)

  Dim sql As String
  Dim asx As String[] = ["Completed", "Discontinue", "Change", "ReWrite", "Cancelled", "Wasted"]
  Dim i As Integer

  For i = 0 To asx.Count - 1
    asx[i] = "'" & asx[i] & "'"
  Next

  Select xCurrent
    Case "Continue", "On Hold"
      If rblabel.Value = True Then
        sql = "select fldid,fldstarttime,fldroute,flditem,fldid,fldfreq,flddays,fldcurval,fldid,fldstarttime,fldstatus,flduserid from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstarttime<=&3 and fldendtime>=&4 and flditemtype=&5 and fldcurval=&6 ORDER BY fldid DESC"
      Else
        sql = "select fldid,fldstarttime,fldroute,flditem,flddose,fldfreq,flddays,fldcurval,fldid,fldstarttime,fldstatus,flduserid from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstarttime<=&3 and fldendtime>=&4 and flditemtype=&5 and fldcurval=&6 ORDER BY fldid DESC"                    ''
      Endif
      $rData2 = modDatabase.$myConn.Exec(sql, $encid, True, Now(), DateAdd(Now(), gb.Hour, -3), "Medicines", xCurrent)

    Case "Removed"
      If rblabel.Value = True Then
        sql = "select fldid,fldstarttime,fldroute,flditem,fldid,fldfreq,flddays,fldcurval,fldid,fldstarttime,fldstatus,flduserid from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstarttime<=&3 and fldendtime>=&4 and flditemtype=&5 and fldcurval in(" & asx.Join(",") & ") ORDER BY fldid DESC"
      Else
        sql = "select fldid,fldstarttime,fldroute,flditem,flddose,fldfreq,flddays,fldcurval,fldid,fldstarttime,fldstatus,flduserid from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstarttime<=&3 and fldendtime>=&4 and flditemtype=&5 and fldcurval in(" & asx.Join(",") & ") ORDER BY fldid DESC"                    ''
      Endif
      $rData2 = modDatabase.$myConn.Exec(sql, $encid, True, Now(), DateAdd(Now(), gb.Hour, -3), "Medicines", xCurrent)

    Case "All Types"
      If rblabel.Value = True Then
        sql = "select fldid,fldstarttime,fldroute,flditem,fldid,fldfreq,flddays,fldcurval,fldid,fldstarttime,fldstatus,flduserid from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstarttime<=&3 and fldendtime>=&4 and flditemtype=&5 ORDER BY fldid DESC"
      Else
        sql = "select fldid,fldstarttime,fldroute,flditem,flddose,fldfreq,flddays,fldcurval,fldid,fldstarttime,fldstatus,flduserid from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstarttime<=&3 and fldendtime>=&4 and flditemtype=&5 ORDER BY fldid DESC"                    ''
      Endif
      $rData2 = modDatabase.$myConn.Exec(sql, $encid, True, Now(), DateAdd(Now(), gb.Hour, -3), "Medicines")

  End Select
  $aMyFields2 = New String[]
  modGridView.ReadSmallData(grdmedicine, $rData2, $aMyFields2)
  ResizeGrid()

End

Private Sub ResizeGrid()

  With grdmedicine
    .Columns[0].Width = 1
    .Columns[1].Width = 125 * modBasic.$AppWidthRatio
    .Columns[2].Width = 75 * modBasic.$AppWidthRatio
    .Columns[3].Width = 275 * modBasic.$AppWidthRatio
    .Columns[4].Width = 75 * modBasic.$AppWidthRatio
    .Columns[5].Width = 50 * modBasic.$AppWidthRatio
    .Columns[6].Width = 50 * modBasic.$AppWidthRatio
    .Columns[7].Width = 100 * modBasic.$AppWidthRatio
    .Columns[8].Width = 50 * modBasic.$AppWidthRatio
    .Columns[9].Width = 1
    .Columns[10].Width = 1
    .Columns[11].Width = 125 * modBasic.$AppWidthRatio

    .Columns[1].Text = "StartDate"
    .Columns[2].Text = "Route"
    .Columns[3].Text = "Medicine"
    .Columns[4].Text = "Dose"
    .Columns[5].Text = "Freq"
    .Columns[6].Text = "Days"
    .Columns[7].Text = "Status"
    .Columns[8].Text = "N"
    .Columns[11].Text = "Disp By"
  End With

End

Public Sub grdmedicine_Data(Row As Integer, Column As Integer)

  $rData2.MoveTo(Row)
  modGeneralMain.GridViewDecoration(grdmedicine, Row)
  If rballdates.Value = True Then
    If Column = 0 Then
      grdmedicine.Data.Text = modReportVar.GetDateTimeReport($rData2["fldstarttime"], gb.GeneralDate)
    Else If Column = 3 Then
      If rblabel.Value = True Then
        grdmedicine.Data.Text = modPharmacy.GetMedicineDoseInFormat($rData2["fldid"], "Label")
      Else
        grdmedicine.Data.Text = $rData2[$aMyFields2[Column]]
      Endif
    Else
      grdmedicine.Data.Text = $rData2[$aMyFields2[Column]]
    Endif

  Else If rbcurrent.Value = True Then
    If Column = 1 Then
      grdmedicine.Data.Text = modReportVar.GetDateTimeReport($rData2["fldstarttime"], gb.GeneralDate)
    Else If Column = 4 Then
      If rblabel.Value = True Then
        grdmedicine.Data.Text = modPharmacy.GetMedicineDoseInFormat($rData2["fldid"], "Label")
      Else
        grdmedicine.Data.Text = $rData2[$aMyFields2[Column]]
      Endif
    Else If Column = 8 Then
      grdmedicine.Data.Text = modPharmacy.TotalDoseCount($rData2["fldid"])
    Else If Column = 11 Then
      grdmedicine.Data.Text = modGeneral.GetUserFullName($rData2[$aMyFields2[Column]])
    Else
      grdmedicine.Data.Text = $rData2[$aMyFields2[Column]]
    Endif

  Endif
  grdmedicine.Rows[Row].Height = Max(grdmedicine.Rows[Row].Height, grdmedicine.Data.Font.RichTextHeight(grdmedicine.Data.Text, grdmedicine.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (grdmedicine.Rows.Height - grdmedicine.Font.Height))
  grdmedicine.Data.WordWrap = True

End

Public Sub btnstatus_Click()

  Dim res As Result

  If grdmedicine.Rows.Selection.Count Then
    If rbcurrent.Value = True Then
      If cmbcurrent.Text = "Continue" Or If cmbcurrent.Text = "On Hold" Then

        If cmbstatus.Text Then
          res = modDatabase.$myConn.Edit("tblpatdosing", "fldid=&1 and fldcurval=&2", grdmedicine[grdmedicine.Row, 0].Text, cmbcurrent.Text)
          res["fldcurval"] = cmbstatus.Text
          res["xyz"] = False
          res.Update()
          ShowRunningMedicine(cmbcurrent.Text)
          cmbstatus.Text = ""
          Balloon.Info(("Information saved"), btnstatus)
          Balloon.Delay = modBasic.$BalloonDelay
        Endif

      Endif
    Endif
  Endif

End

Public Sub btnaiadvice_Click()

  Dim xList As String[]
  Dim xans As String

  xList = New String[]
  For Each $rData2
    xList.Add($rData2["fldroute"] & Space(1) & modMedConstant.GetCodeFromStockID($rData2["flditem"]) & Space(2) & $rData2["flddose"] & " " & modMedConstant.GetMedicineDoseUnit($rData2["flditem"]) & " X " & $rData2["fldfreq"] & " X " & $rData2["flddays"] & " day(s)")
  Next

  If xList.Count Then
    xans = modCloudAI.GetComboCloudAIResponse(xList.Join(gb.NewLine), modBasic.$CloudAIDrugQuery)
    If xans Then
      xans = MessageHtml("Cloud AI Response", modString.TextToHTML(xans), [("Useless"), ("Neutral"), ("Useful")])
    Endif
  Endif

End

''================================Dosing History ===============================
Public Sub btndoserefresh_Click()

  If chkalldate.Value = True Then
    ListBox1.List = modPharmacy.GetMedicinesUsed($encid)
  Else
    ListBox1.List = modPharmacy.GetMedicinesUsed($encid, dtdose.Value)
  Endif

End

Public Sub ListBox1_Click()

  If ListBox1.Text Then
    If chkalldate.Value = True Then
      $rData1 = modDatabase.$myConn.Exec("select tblnurdosing.fldtime,tblpatdosing.fldid,tblnurdosing.fldvalue,tblnurdosing.fldunit,tblnurdosing.flduserid from tblnurdosing inner join tblpatdosing on tblnurdosing.flddoseno=tblpatdosing.fldid where tblnurdosing.fldencounterval=&1 and tblpatdosing.fldencounterval=&1 and tblpatdosing.flditem=&2", $encid, ListBox1.Text)
    Else
      $rData1 = modDatabase.$myConn.Exec("select tblnurdosing.fldtime,tblpatdosing.fldid,tblnurdosing.fldvalue,tblnurdosing.fldunit,tblnurdosing.flduserid from tblnurdosing inner join tblpatdosing on tblnurdosing.flddoseno=tblpatdosing.fldid where tblnurdosing.fldencounterval=&1 and tblpatdosing.fldencounterval=&1 and tblpatdosing.flditem=&2 and tblnurdosing.fldtime>=&3 and tblnurdosing.fldtime<=&4", $encid, ListBox1.Text, modDate.StartSqlDate(dtdose.Value), modDate.EndSqlDate(dtdose.Value))                    ''
    Endif
    $aMyFields1 = New String[]
    modGridView.ReadSmallData(GridView2, $rData1, $aMyFields1)

    With GridView2
      .Columns[0].Width = 150 * modBasic.$AppWidthRatio
      .Columns[1].Width = 175 * modBasic.$AppWidthRatio
      .Columns[2].Width = 50 * modBasic.$AppWidthRatio
      .Columns[3].Width = 75 * modBasic.$AppWidthRatio
      .Columns[4].Width = 75 * modBasic.$AppWidthRatio

      .Columns[0].Text = "DateTime"
      .Columns[1].Text = "Regimen"
      .Columns[2].Text = "Dose"
      .Columns[3].Text = "Unit"
      .Columns[4].Text = "User"
    End With
  Endif

End

Public Sub GridView2_Data(Row As Integer, Column As Integer)

  $rData1.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView2, Row)
  If Column = 0 Then
    GridView2.Data.Text = modReportVar.GetDateTimeReport($rData1[$aMyFields1[Column]], gb.GeneralDate)
  Else If Column = 1 Then
    GridView2.Data.Text = modPharmacy.GetDoseRegimenString($rData1[$aMyFields1[Column]], True)
    GridView2.Rows[Row].Height = Max(GridView2.Rows[Row].Height, GridView2.Data.Font.RichTextHeight(GridView2.Data.Text, GridView2.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (GridView2.Rows.Height - GridView2.Font.Height))
    GridView2.Data.WordWrap = True
  Else
    GridView2.Data.Text = $rData1[$aMyFields1[Column]]
  Endif

End

''============================ saved entry ============================
Private Sub ExecuteOldQuery()

  Dim sql As String

  sql = "select fldid,fldtime,flditemtype,flditemno,flditemname,flditemrate,flditemqty,flddiscper,fldtaxper,fldditemamt,fldpayto,fldrefer,fldtaxamt,flddiscamt,fldbillingmode,fldsample,fldbilltype,flddisctype,fldacledger from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldprint=&3 and (flditemtype=&4 or flditemtype=&5 or flditemtype=&6) and flditemqty>&7 and fldretqty=&7"                         ''
  $rData5 = modDatabase.$myConn.Exec(sql, $encid, True, False, modBasic.$compID, "Medicines", "Surgicals", "Extra Items", 0)

End

Private Sub ShowOldEntry()

  Dim Column As Integer
  Dim fld As ResultField

  ExecuteOldQuery()
  GridView5.Clear
  GridView5.Columns.Count = $rData5.Fields.Count
  GridView5.Rows.Count = $rData5.Count

  For Each $rData5
    Column = 0
    For Each fld In $rData5.Fields
      modGeneralMain.GridExplicitDecoration(GridView5, $rData5.Index, Column)
      If Column = 1 Then
        GridView5[$rData5.Index, Column].Text = modReportVar.GetDateTimeReport($rData5["fldtime"], gb.GeneralDate)
      Else If Column = 10 Then
        GridView5[$rData5.Index, Column].Text = modGeneral.GetUserFullName($rData5[fld.Name])
      Else If Column = 11 Then
        GridView5[$rData5.Index, Column].Text = modGeneral.GetUserFullName($rData5[fld.Name])
      Else
        GridView5[$rData5.Index, Column].Text = $rData5[fld.Name]
      Endif
      Column = Column + 1
    Next
  Next
  GridView5.Row = 0

  With GridView5
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[1].Text = "DateTime"
    .Columns[4].Text = "Particulars"
    .Columns[5].Text = "Rate"
    .Columns[6].Text = "QTY"
    .Columns[7].Text = "Disc %"
    .Columns[8].Text = "Tax %"
    .Columns[9].Text = "Total"
    .Columns[16].Text = "Mode"
    .Columns[17].Text = "Package"
    .Columns[18].Text = "Account"

    .Columns[0].Width = 1
    .Columns[1].Width = 150 * modBasic.$AppWidthRatio
    .Columns[2].Width = 1
    .Columns[3].Width = 1
    .Columns[4].Width = 300 * modBasic.$AppWidthRatio
    .Columns[5].Width = 75 * modBasic.$AppWidthRatio
    .Columns[6].Width = 50 * modBasic.$AppWidthRatio
    .Columns[7].Width = 50 * modBasic.$AppWidthRatio
    .Columns[8].Width = 50 * modBasic.$AppWidthRatio
    .Columns[9].Width = 75 * modBasic.$AppWidthRatio
    .Columns[10].Width = 1
    .Columns[11].Width = 1
    .Columns[12].Width = 1
    .Columns[13].Width = 1
    .Columns[14].Width = 1
    .Columns[15].Width = 1
    .Columns[16].Width = 75 * modBasic.$AppWidthRatio
    .Columns[17].Width = 100 * modBasic.$AppWidthRatio
    .Columns[18].Width = 100 * modBasic.$AppWidthRatio
  End With

End

''------------- New format -------------
' Public Sub btnmedicine_Click()
'
'   Dim hForm As FmMedPrescribe
'
'   If cmbdisctype.Text Then
'     hForm = New FmMedPrescribe($encid, cmbdisctype.Text, $status, $ClinicianLst)
'     hForm.ShowModal
'     FillDosingGrid()
'   Endif
'
' End
