' Gambas class file

Private $encid As String
Private $BillMode As String
Private $sPackage As String
Private $bedLocation As String
Private $xFinClear As Boolean
Private $PatientNum As String
Private $xNHISCode As String

Private $rData As Result
Private $aMyFields As String[]
Private $rData1 As MyResult
Private $aMyFields1 As String[]
Private $rData2 As MyResult
Private $aMyFields2 As String[]
Private $TestList As String[]
Private $TestListFile As Variant[]
Private $LabDepartList As String[]

Private $tblpatlabtest As String
Private $tblpatlabsubtest As String

Public Sub _new(encid As String, DiscType As String)

  $encid = encid
  $sPackage = DiscType

End

Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me, "False")

  cmbdisctype.List = modBasic.$BillDiscountCash
  If cmbdisctype.List.Count = 0 Then
    cmbdisctype.Add($sPackage)
  Endif
  cmbdisctype.Text = $sPackage
  txtpatientname.Text = modPatient.GetPatientNameByEnc($encid)
  txtgender.Text = modPatient.GetPatientSex($encid)
  $PatientNum = modPatient.GetPatientNoByEnc($encid)
  $xNHISCode = modPatient.GetPatientExtCOdebyEnc($encid)
  $BillMode = modNonMedical.GetDiscBindBillMode($sPackage)
  If Not $BillMode Then
    $BillMode = modpatient.GetPatBillingMode($encid)
  Endif

  $bedLocation = modPatient.GetPatientLocation($encid)
  $xFinClear = modNonMedical.GetFinanceClearance($encid)
  $LabDepartList = modMedicine.GetPathoCategoryList("Test")
  modLabSub.DisplayDefaultTestUnit(rbsi, rbmetric)
  btnrefer.Tag = modBillings.GetReferralUserSetting("Test", $encid)
  If btnrefer.Tag Then
    btnrefer.Text = modGeneral.GetUserFullName(btnrefer.Tag)
  Endif
  If modBasic.$ReferralLockEntry = "Yes" Then
    btnrefer.Enabled = False
  Endif
  cmbtarget.List = modBasic.$AllCompList
  cmbtarget.Text = modSettings.ShowSettingFromFIle("Laboratory/DefaultTarget")
  $TestList = New String[]
  modAccount.PasInvoiceSetting(cmbfiscal, False)
  LoadTableNames()

  SHowSavedGrid()
  ShowSampled()
  If $xFinClear = True Then
    btnselect.Enabled = False
    btnselecttree.Enabled = False
  Endif
  txtsearch.SetFocus

End

Public Sub Form_KeyRelease()

  If Key.Code = Key.Insert Then
    btnselect_Click()
  Else If Key.Code = Key.Esc Then
    Me.Close
  Else If Key.Code = Key.F1 Then
    TabPanel1.Index = 0
  Else If Key.Code = Key.F2 Then
    TabPanel1.Index = 1
  Else If Key.Code = Key.F3 Then
    TabPanel1.Index = 2
  Else If Key.Code = Key.F4 Then
    TabPanel1.Index = 3
  Else
    ' modGeneralmain.GoToNextControlTab()
  Endif

End

Private Sub LoadTableNames()

  Dim res As Result

  If cmbfiscal.Text = "Current" Then
    $tblpatlabtest = "tblpatlabtest"
    $tblpatlabsubtest = "tblpatlabsubtest"
  Else
    res = modDatabase.$syConn.Exec("select fldpatlabtest,fldpatlabsubtest from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", cmbfiscal.Text, "Active")
    If res.Available Then
      If res["fldpatlabtest"] Then
        $tblpatlabtest = res["fldpatlabtest"]
      Else
        $tblpatlabtest = "tblpatlabtest"
      Endif
      If res["fldpatlabsubtest"] Then
        $tblpatlabsubtest = res["fldpatlabsubtest"]
      Else
        $tblpatlabsubtest = "tblpatlabsubtest"
      Endif
    Else
      $tblpatlabtest = "tblpatlabtest"
      $tblpatlabsubtest = "tblpatlabsubtest"
    Endif
  Endif

End

Public Sub cmbfiscal_Click()

  LoadTableNames()
  lsttestname.List = modLabTest.PaientAllTestNameArray($encid, $tblpatlabtest)

End

Public Sub btnrefer_Click()

  Dim xMedUser As String[]

  xMedUser = MedicalSelectedValue(("Select Referral User"), modBasic.$ReferUserList)
  If xMedUser And If xMedUser.Count Then
    btnrefer.Tag = xMedUser[0]
    btnrefer.Text = xMedUser[1]
  Else
    btnrefer.Tag = ""
    btnrefer.Text = ""
  Endif

End

Public Sub btnrefer_Change()

  If btnrefer.Text = "" Then
    btnrefer.Tag = ""
  Endif

End

Public Sub cmbdisctype_Click()

  If cmbdisctype.Text Then
    $BillMode = modNonMedical.GetDiscBindBillMode(cmbdisctype.Text)
    If Not $BillMode Then
      $BillMode = modpatient.GetPatBillingMode($encid)
    Endif
    If $TestList And If $TestList.Count Then
      $TestList.Clear()
    Endif
    TabPanel1.Index = 0
  Endif

End

Public Sub cmbdisctype_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbdisctype)
  modFillContainer.RestrictComboToContent(cmbdisctype)

End

Public Sub TabPanel1_Click()

  If TabPanel1.Index = 0 Then
    SHowSavedGrid()
    ShowSampled()
  Else If TabPanel1.Index = 1 Then
    rblabs.Value = True
    ShowGrid()
  Else If TabPanel1.Index = 2 Then
    cmbcategory.List = $LabDepartList
    ShowGridTree()
  Else If TabPanel1.Index = 3 Then
    lsttestname.List = modLabTest.PaientAllTestNameArray($encid, $tblpatlabtest)  ''modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldtestid) as col from tblpatlabtest where fldencounterval=&1", $encid))
  Endif

End

''------------------------------------- Listview -----------------------------------
Public Sub rblabs_Click()

  cmbtestgroup.Clear()
  cmbtestgroup.List = $LabDepartList
  cmbtestgroup.Add("Mixed Category")

End

Public Sub rbcash_Click()

  cmbtestgroup.Clear()
  If modBasic.$ClinTestGrouping = "Section" Then
    cmbtestgroup.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldreport) as col from tblservicecost where flditemtype=&1 and fldreport like &2", "Diagnostic Tests", "%"))
  Else
    cmbtestgroup.List = modNonMedical.NonSTockCostingGroupList("Test")
  Endif

End

Public Sub chkdefault_Click()

  If rbcash.Value = True Then
    If chkdefault.Value = True Then
      cmbtestgroup.Clear()
      cmbtestgroup.Add(modBasic.$DefaultTestList)
      FillSelLabCOlumnView(modBasic.$DefaultTestList)
    Else If chkdefault.Value = False Then
      rbcash_Click()
    Endif
  Endif

End

Public Sub cmbtestgroup_Click()

  If cmbtestgroup.Text Then
    ListView1.Clear()
    If $TestList And If $TestList.Count Then
      $TestList.Clear()
    Endif
    If rblabs.Value = True Then
      FillLabCOlumnView(cmbtestgroup.Text)
    Else If rbcash.Value = True Then
      FillSelLabCOlumnView(cmbtestgroup.Text)
    Endif
    modFillContainer.FillListViewFromArray(ListView1, $TestList)
    txtsearch.SetFocus
  Endif

End

Private Sub FillLabCOlumnView(sDepart As String)

  Dim sstr1 As String
  Dim res As Result
  Dim xxx As String[]

  If Not $TestList.Count Then
    sstr1 = "select distinct(fldgroupname) as col from tblgrouptest where fldgroupname in(select flditemname from tblservicecost where (fldgroup=&1 or fldgroup=&2) and fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory=&4)"                                                ''
    res = modDatabase.$myConn.Exec(sstr1, $BillMode, "%", "Active", sDepart)
    xxx = modControlSub.GetDirectFillresult(res)
    $TestList = xxx
  Endif

End

Private Sub FillSelLabCOlumnView(sItem As String)

  Dim sstr1 As String
  Dim res As Result
  Dim xxx As String[]

  If Not $TestList.Count Then
    If modBasic.$ClinTestGrouping = "Section" Then
      sstr1 = "select flditemname from tblservicecost where (fldgroup=&1 or fldgroup=&2) and fldstatus=&3 and fldreport=&4 and flditemtype=&5"
      res = modDatabase.$myConn.Exec(sstr1, $BillMode, "%", "Active", sItem, "Diagnostic Tests")
    Else
      sstr1 = "select distinct(fldgroupname) as col from tblgrouptest where fldgroupname in(select flditemname from tblservicecost where (fldgroup=&1 or fldgroup=&2) and fldstatus=&3) and fldgroupname in(select flditemname from tblcostgroup where fldgroup=&4)"                                                ''
      res = modDatabase.$myConn.Exec(sstr1, $BillMode, "%", "Active", sItem)
    Endif
    xxx = modControlSub.GetDirectFillresult(res)
    $TestList = xxx
  Endif

End

Public Sub txtsearch_KeyRelease()

  If Key.Code = Key.Down Then
    ListView1.SetFocus
  Endif

End

Public Sub txtsearch_Change()

  modFillContainer.FillListViewFromArray(ListView1, modString.SelectStringArrayToText(txtsearch.Text, $TestList, chkleftmain.Value))

End

Public Sub txtsearch_Click()

  txtsearch.Text = ""

End

Public Sub chkall_Click()

  Dim xpict As Picture
  Dim i As Integer

  If chkall.Value = True Then
    xpict = Picture["icons/checked.png"]
  Else If chkall.Value = False Then
    xpict = Picture["icons/unchecked.png"]
  Endif

  For i = 1 To ListView1.Count
    ListView1[CStr(i)].Picture = xpict
  Next

End

Public Sub ListView1_Click()

  Dim xdate As Date

  xdate = modBillings.CheckLastSalesItemDate(ListView1.Current.Text, $PatientNum, $xNHISCode, cmbdisctype.Text)
  If xdate Then
    txtlastsaledate.Text = modReportVar.GetDateTimeReport(xdate, gb.MediumDate)
    If DateDiff(xdate, Now(), gb.Month) <= 3 Then
      txtlastsaledate.Foreground = Color.Red
    Else
      txtlastsaledate.Foreground = Color.Default
    Endif
  Else
    txtlastsaledate.Text = ""
    txtlastsaledate.Foreground = Color.Default
  Endif

  modFillContainer.ShowCheckedListView(ListView1)

End

Public Sub ListView1_KeyRelease()

  If Key.Code = Key.Space Then
    ListView1_Click()
  Endif

End

Public Sub ListView1_Menu()

  mnufile.Popup

End

Public Sub mnuinfo_Click()

  Dim xList As String[]

  xList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldtestid from tblgrouptest where fldgroupname=&1", ListView1.Current.Text))
  Balloon.Info(xList.Join(gb.NewLine), ListView1, ListView1.Current.X, ListView1.Current.Y - 15)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnselect_KeyRelease()

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    btnselect_Click()
  Endif

End

Public Sub btnselect_Click()

  Dim i As Integer
  Dim xauto As String

  Dim xrefer As String
  Dim xpayble As String

  Dim xList As String[]
  Dim j As Integer
  Dim acount As Integer

  acount = 0
  If btnrefer.Tag Then
    xrefer = btnrefer.Tag
  Else
    xrefer = modBillings.GetReferralUserSetting("Test", $encid)
  Endif
  xpayble = ""

  xauto = modBasic.$AutoBillTest
  Select xauto
    Case "Partial"
      xList = New String[]
      For j = 0 To GridView1.Rows.Count - 1
        xList.Add(GridView1[j, 1].Text)
      Next
    Case "Yes", "Full"
      xList = New String[]
      For j = 0 To GridView1.Rows.Count - 1
        xList.Add(GridView1[j, 1].Text)
      Next
      xList.Insert($rData1.All("flditemname"))
  End Select

  If modMisc.AllowDiagnoBilling($encid) = True Then

    Inc Application.Busy
    For i = 1 To ListView1.Count
      If ListView1[CStr(i)].Picture = Picture["icons/checked.png"] Then     '

        If xauto = "Yes" Or If xauto = "Full" Or If xauto = "Partial" Then
          If modMisc.GetDuplicationAllow(xList, ListView1[CStr(i)].Text, btnselect) = True Then
            modBillings.GetAutoBillingClinic($encid, cmbdisctype.Text, "Test", ListView1[CStr(i)].Text, 1, "Punched", 0, False, False, xpayble, xrefer, cmbtarget.Text)
            acount = acount + 1
          Endif
          ListView1[CStr(i)].Picture = Picture["icons/unchecked.png"]
        Endif

      Endif
    Next
    Dec Application.Busy
    ShowGrid()

  Else
    Message.Warning("Diagnosis not provided", ("OK"))
  Endif

  If acount Then
    txtsearch.Text = ""
    Balloon.Info(("Request added"), btnselect)
    Balloon.Delay = modBasic.$BalloonDelay
    txtsearch.SetFocus
  Endif

End

''--------------------------------------------------- Gridview -------------------------------------------
Private Sub ShowGrid()

  Dim sql As String
  Dim res As Result

  sql = "select fldid,flditemname,fldstatus,fldreason,fldordtime,fldtarget from tblpatbilling where fldencounterval=&1 and flditemtype=&2 and fldsave=&3"
  res = modDatabase.$myConn.Exec(sql, $encid, "Diagnostic Tests", False)
  ShowInitialGridView(res)

End

Private Sub ShowInitialGridView(res As Result)

  Dim Column As Integer
  Dim fld As ResultField

  GridView1.Clear
  GridView1.Columns.Count = res.Fields.Count
  GridView1.Rows.Count = res.Count

  For Each res
    Column = 0
    For Each fld In res.Fields
      modGeneralMain.GridExplicitDecoration(GridView1, res.Index, Column)
      If Column = 4 Then
        GridView1[res.Index, Column].Text = modReportVar.GetDateTimeReport(res[fld.Name], gb.GeneralDate)
      Else
        GridView1[res.Index, Column].Text = res[fld.Name]
      Endif
      Column = Column + 1
    Next
  Next
  GridView1.Row = 0

  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 1
    .Columns[1].Width = 275 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio
    .Columns[3].Width = 1
    .Columns[4].Width = 150 * modBasic.$AppWidthRatio
    .Columns[5].Width = 75 * modBasic.$AppWidthRatio

    .Columns[1].Text = "Test Name"
    .Columns[2].Text = "Status"
    .Columns[4].Text = "Date Time"
    .Columns[5].Text = "Target"
  End With

End

Private Sub SavePartialEntry(res As Result)

  res["fldstatus"] = "Done"
  res["fldsave"] = True
  res["flduserid"] = modBasic.$lbluser
  res["fldtime"] = Now()
  res["fldcomp"] = modBasic.$compID
  res["xyz"] = False
  res.Update()

End

Public Sub btnsave_Click()

  Dim res As Result
  Dim xauto As String

  xauto = modBasic.$AutoBillTest
  Inc Application.Busy
  res = modDatabase.$myConn.Edit("tblpatbilling", "fldencounterval= &1 and flditemtype=&2 and fldsave=&3 and fldstatus=&4", $encid, "Diagnostic Tests", False, "Punched")                 ''
  For Each res

    If xauto = "Yes" Or If xauto = "Full" Then
      If modNonMedical.AllowPreEntryWithDeposit($encid, "Test", res["fldditemamt"], btnsave) = True Then
        SavePartialEntry(res)
      Endif
    Else
      If modBasic.$AutoBillSaveZero = "Yes" And If res["flditemrate"] = 0 Then
        SavePartialEntry(res)
      Else If modBasic.$AutoBillSaveZero = "Yes" And If res["flddiscper"] = 100 Then
        SavePartialEntry(res)
      Else If modBasic.$AutoBillSaveFullCredit = "Yes" And If res["fldbilltype"] = "Credit" And If res["fldcashincredit"] = 0 Then
        SavePartialEntry(res)
      Endif
    Endif

  Next
  Dec Application.Busy
  ShowGrid()

End

Public Sub btndefault_Click()

  Dim xx As String

  xx = InputCombo("Default Target", "Laboratory", modBasic.$AllCompList, cmbtarget.Text, True)
  If xx Then
    cmbtarget.Text = xx
    modSettings.SaveSettingsToFile("Laboratory/DefaultTarget", xx)
    Balloon.Info(("Information saved"), btndefault)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub GridView1_Menu()

  mnuhide.Popup

End

Public Sub mnutarget_Click()

  Dim xx As String
  Dim res As Result

  If GridView1.Rows.Selection.Count > 0 Then
    xx = InputCombo("Change Target", GridView1[GridView1.Row, 1].Text, modBasic.$AllCompList, GridView1[GridView1.Row, 5].Text, True)
    If xx Then
      res = modDatabase.$myConn.Edit("tblpatbilling", "fldid=&1", GridView1[GridView1.Row, 0].Text)
      res["fldtarget"] = xx
      res["xyz"] = False
      res.Update
      ShowGrid()
    Endif
  Endif

End

Public Sub mnucomment_Click()

  Dim xx As String
  Dim res As Result

  If GridView1.Rows.Selection.Count > 0 Then
    xx = GetTextArea(GridView1[GridView1.Row, 1].Text, GridView1[GridView1.Row, 3].Text)
    If xx Then
      res = modDatabase.$myConn.Edit("tblpatbilling", "fldid=&1", GridView1[GridView1.Row, 0].Text)
      res["fldreason"] = xx
      res["xyz"] = False
      res.Update
      ShowGrid()
    Endif
  Endif

End

Public Sub mnudel_Click()

  If GridView1.Rows.Selection.Count Then
    If Message.Question("Are you sure ?", ("No"), ("Yes")) = 2 Then
      modDatabase.$myConn.Delete("tblpatbilling", "fldid=&1 and fldsave=&2", GridView1[GridView1.Row, 0].Text, False)
      ShowGrid()
    Endif
  Endif

End

''-------------------- Tree View Request -----------------------
Public Sub cmbcategory_Click()

  If cmbcategory.Text Then
    LoadActiveTestsList(cmbcategory.Text)
    GetLabTreeView()
    txtsearchtree.SetFocus
  Endif

End

Private Sub LoadActiveTestsList(sDepart As String)

  Dim res As Result
  Dim sColl As Collection

  $TestListFile = New Variant[]
  res = modDatabase.$myConn.Exec("select fldgroupname,fldtestid from tblgrouptest where fldgroupname in(select flditemname from tblservicecost where (fldgroup=&1 or fldgroup=&2) and fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory=&4)", $BillMode, "%", "Active", sDepart)
  If res.Available Then
    For Each res
      sColl = New Collection
      sColl.Add(res["fldgroupname"], "fldgroupname")
      sColl.Add(res["fldtestid"], "fldtestid")
      $TestListFile.Add(sColl)
    Next
  Endif

End

Private Function GetUniqListFromVariant(sVar As Variant[], sKey As String) As String[]

  Dim sColl As Collection
  Dim xxx As String[]
  Dim xList As String[]

  xxx = New String[]
  For Each sColl In sVar
    xxx.Add(sColl[sKey])
  Next
  If xxx.Count Then
    xList = modString.GetDistinctStringArray(xxx)
  Else
    xList = New String[]
  Endif
  Return xList

End

Private Function GetMatchingItemList(sWord As String, sVar As Variant[], sGiven As String, sTarget As String) As String[]

  Dim sColl As Collection
  Dim xxx As String[]
  Dim xList As String[]

  xxx = New String[]
  For Each sColl In sVar
    If sColl[sGiven] = sWord Then
      xxx.Add(sColl[sTarget])
    Endif
  Next
  If xxx.Count Then
    xList = modString.GetDistinctStringArray(xxx)
  Else
    xList = New String[]
  Endif
  Return xList

End

Private Sub GetLabTreeView()

  Dim pic1 As Picture
  Dim pic2 As Picture

  Dim aList As String[]
  Dim bList As String[]
  Dim bstr As String
  Dim i As Integer

  Dim yList As String[]
  Dim ystr As String
  Dim j As Integer

  pic1 = Picture["icons/coll1.png"]
  pic2 = Picture["icons/coll3.png"]

  TreeView1.Clear()
  aList = GetUniqListFromVariant($TestListFile, "fldtestid")
  If chkleftTree.Value = True Then
    bList = modString.SelectStringArrayToText(txtsearchtree.Text, modString.GetDistinctStringArray(aList), True)
  Else
    bList = modString.SelectStringArrayToText(txtsearchtree.Text, modString.GetDistinctStringArray(aList), False)
  Endif
  If bList.Count Then
    i = 1
    For Each bstr In bList
      TreeView1.Add(CStr(i) & "@" & bstr, bstr, pic1)

      yList = GetMatchingItemList(bstr, $TestListFile, "fldtestid", "fldgroupname")
      If yList.Count Then
        j = 1
        For Each ystr In yList
          TreeView1.Add(CStr(i) & "@" & CStr(j) & "@" & ystr, ystr, pic2, CStr(i) & "@" & bstr)
          j = j + 1
        Next
      Endif

      i = i + 1
    Next
  Endif

End

Public Sub txtsearchtree_Change()

  GetLabTreeView()

End

Public Sub txtsearchtree_Click()

  txtsearchtree.Text = ""

End

Public Sub txtsearchtree_KeyPress()

  modGeneralMain.InputTextSearchKeyOnly()

End

Public Sub txtsearchtree_KeyRelease()

  If Key.Code = Key.Down Then
    TreeView1.SetFocus
  Endif

End

Public Sub TreeView1_Click()

  Dim xdate As Date

  If TreeView1.Current.Picture = Picture["icons/coll1.png"] Then
    modFillContainer.ExpandClickTreeView(TreeView1)

  Else If TreeView1.Current.Picture = Picture["icons/coll3.png"] Then
    xdate = modBillings.CheckLastSalesItemDate(TreeView1.Current.Text, $PatientNum, $xNHISCode, cmbdisctype.Text)
    If xdate Then
      txtlastsaledate2.Text = modReportVar.GetDateTimeReport(xdate, gb.MediumDate)
      If DateDiff(xdate, Now(), gb.Month) <= 3 Then
        txtlastsaledate2.Foreground = Color.Red
      Else
        txtlastsaledate2.Foreground = Color.Default
      Endif
    Else
      txtlastsaledate2.Text = ""
      txtlastsaledate2.Foreground = Color.Default
    Endif

  Endif

End

Public Sub TreeView1_KeyRelease()

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    TreeView1_Click()
  Endif

End

Private Sub ShowGridTree()

  Dim sql As String
  Dim res As Result
  Dim Column As Integer
  Dim fld As ResultField

  sql = "select tblpatbilling.fldid,tblgrouptest.fldtestid,tblpatbilling.fldstatus,tblpatbilling.fldreason,tblpatbilling.fldordtime,tblpatbilling.fldtarget,tblpatbilling.flditemname from tblpatbilling inner join tblgrouptest on tblpatbilling.flditemname=tblgrouptest.fldgroupname where tblpatbilling.fldencounterval=&1 and tblpatbilling.flditemtype=&2 and tblpatbilling.fldsave=&3"
  res = modDatabase.$myConn.Exec(sql, $encid, "Diagnostic Tests", False)
  GridView4.Clear
  GridView4.Columns.Count = res.Fields.Count
  GridView4.Rows.Count = res.Count

  For Each res
    Column = 0
    For Each fld In res.Fields
      modGeneralMain.GridExplicitDecoration(GridView4, res.Index, Column)
      If Column = 4 Then
        GridView4[res.Index, Column].Text = modReportVar.GetDateTimeReport(res[fld.Name], gb.GeneralDate)
      Else
        GridView4[res.Index, Column].Text = res[fld.Name]
      Endif
      Column = Column + 1
    Next
  Next
  GridView4.Row = 0

  With GridView4
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 1
    .Columns[1].Width = 275 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio
    .Columns[3].Width = 1
    .Columns[4].Width = 150 * modBasic.$AppWidthRatio
    .Columns[5].Width = 75 * modBasic.$AppWidthRatio
    .Columns[6].Width = 1

    .Columns[1].Text = "Test Name"
    .Columns[2].Text = "Status"
    .Columns[4].Text = "Date Time"
    .Columns[5].Text = "Target"
  End With

End

Public Sub btnselecttree_Click()

  Dim xauto As String

  Dim xrefer As String
  Dim xpayble As String

  Dim xList As String[]
  Dim j As Integer
  Dim acount As Integer

  acount = 0
  If btnrefer.Tag Then
    xrefer = btnrefer.Tag
  Else
    xrefer = modBillings.GetReferralUserSetting("Test", $encid)
  Endif
  xpayble = ""

  xauto = modBasic.$AutoBillTest
  Select xauto
    Case "Partial"
      xList = New String[]
      For j = 0 To GridView4.Rows.Count - 1
        xList.Add(GridView4[j, 6].Text)
      Next
    Case "Yes", "Full"
      xList = New String[]
      For j = 0 To GridView4.Rows.Count - 1
        xList.Add(GridView4[j, 6].Text)
      Next
      xList.Insert($rData1.All("flditemname"))
  End Select

  If modMisc.AllowDiagnoBilling($encid) = True Then

    Inc Application.Busy
    If TreeView1.Current.Picture = Picture["icons/coll3.png"] Then   '

      If xauto = "Yes" Or If xauto = "Full" Or If xauto = "Partial" Then
        If modMisc.GetDuplicationAllow(xList, TreeView1.Current.Text, btnselecttree) = True Then
          modBillings.GetAutoBillingClinic($encid, cmbdisctype.Text, "Test", TreeView1.Current.Text, 1, "Punched", 0, False, False, xpayble, xrefer, cmbtarget.Text)
          acount = acount + 1
        Endif
        TreeView1.Current.Picture = Picture["icons/coll2.png"]
      Endif

    Endif
    Dec Application.Busy
    ShowGridTree()

  Else
    Message.Warning("Diagnosis not provided", ("OK"))
  Endif

  If acount Then
    txtsearchtree.Text = ""
    Balloon.Info(("Request added"), btnselecttree)
    Balloon.Delay = modBasic.$BalloonDelay
    txtsearchtree.SetFocus
  Endif

End

Public Sub btnsavetree_Click()

  Dim res As Result
  Dim xauto As String

  xauto = modBasic.$AutoBillTest
  Inc Application.Busy
  res = modDatabase.$myConn.Edit("tblpatbilling", "fldencounterval= &1 and flditemtype=&2 and fldsave=&3 and fldstatus=&4", $encid, "Diagnostic Tests", False, "Punched")                 ''
  For Each res

    If xauto = "Yes" Or If xauto = "Full" Then
      If modNonMedical.AllowPreEntryWithDeposit($encid, "Test", res["fldditemamt"], btnsave) = True Then
        SavePartialEntry(res)
      Endif
    Else
      If modBasic.$AutoBillSaveZero = "Yes" And If res["flditemrate"] = 0 Then
        SavePartialEntry(res)
      Else If modBasic.$AutoBillSaveZero = "Yes" And If res["flddiscper"] = 100 Then
        SavePartialEntry(res)
      Else If modBasic.$AutoBillSaveFullCredit = "Yes" And If res["fldbilltype"] = "Credit" And If res["fldcashincredit"] = 0 Then
        SavePartialEntry(res)
      Endif
    Endif

  Next
  Dec Application.Busy
  ShowGridTree()

End

Public Sub GridView4_Menu()

  mnuhidetree.Popup

End

Public Sub mnutargetree_Click()

  Dim xx As String
  Dim res As Result

  If GridView4.Rows.Selection.Count > 0 Then
    xx = InputCombo("Change Target", GridView4[GridView4.Row, 1].Text, modBasic.$AllCompList, GridView4[GridView4.Row, 5].Text, True)
    If xx Then
      res = modDatabase.$myConn.Edit("tblpatbilling", "fldid=&1", GridView4[GridView4.Row, 0].Text)
      res["fldtarget"] = xx
      res["xyz"] = False
      res.Update
      ShowGridTree()
    Endif
  Endif

End

Public Sub mnucommentree_Click()

  Dim xx As String
  Dim res As Result

  If GridView4.Rows.Selection.Count > 0 Then
    xx = GetTextArea(GridView4[GridView4.Row, 1].Text, GridView4[GridView4.Row, 3].Text)
    If xx Then
      res = modDatabase.$myConn.Edit("tblpatbilling", "fldid=&1", GridView4[GridView4.Row, 0].Text)
      res["fldreason"] = xx
      res["xyz"] = False
      res.Update
      ShowGridTree()
    Endif
  Endif

End

Public Sub mnudeltree_Click()

  If GridView4.Rows.Selection.Count Then
    If Message.Question("Are you sure ?", ("No"), ("Yes")) = 2 Then
      modDatabase.$myConn.Delete("tblpatbilling", "fldid=&1 and fldsave=&2", GridView4[GridView4.Row, 0].Text, False)
      ShowGridTree()
    Endif
  Endif

End

''----------------------------------- Billed but not sampled ------------------------------------
Private Sub SHowSavedGrid()

  Dim sql As String
  Dim res As Result
  Dim rex As Result
  Dim xList As String[]
  Dim i As Integer
  Dim FldLst As String[]

  $rData1 = New MyResult
  xList = ["fldid", "fldtime", "flditemname", "fldrefer", "fldordcomp"]
  rex = modDatabase.$myConn.Exec("select fldpatbilling from tblfisclosing where (fldstate=&1 or fldstate IS NULL)", "Active")
  If rex.Available Then
    For Each rex
      If rex["fldpatbilling"] = "tblpatbilling" Then
      Else
        FldLst = xList.Copy()
        For i = 0 To xList.Count - 1
          FldLst[i] = "t1." & FldLst[i]
        Next
        sql = "select " & FldLst.Join(",") & " from " & rex["fldpatbilling"] & " as t1 where t1.fldencounterval=&1 and t1.flditemtype=&2 and t1.fldsave=&3 and (t1.fldstatus=&4 or t1.fldstatus=&5) and t1.fldsample=&6 and (t1.flditemqty-t1.fldretqty)>&7"
        res = modDatabase.$myConn.Exec(sql, $encid, "Diagnostic Tests", True, "Done", "Cleared", "Waiting", 0)
        $rData1.AddResult(res)
      Endif
    Next
  Endif

  FldLst = xList.Copy()
  For i = 0 To xList.Count - 1
    FldLst[i] = "t1." & FldLst[i]
  Next
  sql = "select " & FldLst.Join(",") & " from tblpatbilling as t1 where t1.fldencounterval=&1 and t1.flditemtype=&2 and t1.fldsave=&3 and (t1.fldstatus=&4 or t1.fldstatus=&5) and t1.fldsample=&6 and (t1.flditemqty-t1.fldretqty)>&7"
  res = modDatabase.$myConn.Exec(sql, $encid, "Diagnostic Tests", True, "Done", "Cleared", "Waiting", 0)
  $rData1.AddResult(res)

  $aMyFields1 = New String[]
  modGridView.ReadSmallMyData(GridView2, $rData1, $aMyFields1)

  With GridView2
    .Columns[0].Width = 1
    .Columns[1].Width = 150 * modBasic.$AppWidthRatio
    .Columns[2].Width = 300 * modBasic.$AppWidthRatio
    .Columns[3].Width = 150 * modBasic.$AppWidthRatio
    .Columns[4].Width = 100 * modBasic.$AppWidthRatio
    .Columns[1].Text = "DateTime"
    .Columns[2].Text = "Test Name"
    .Columns[3].Text = "ReferBy"
    .Columns[4].Text = "From"
  End With

End

Public Sub GridView2_Data(Row As Integer, Column As Integer)

  $rData1.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView2, Row)
  If Column = 1 Then
    GridView2.Data.Text = modReportVar.GetDateTimeReport($rData1[$aMyFields1[Column]], gb.GeneralDate)
  Else If Column = 3 Then
    GridView2.Data.Text = modGeneral.GetUserFullName($rData1[$aMyFields1[Column]])
  Else
    GridView2.Data.Text = $rData1[$aMyFields1[Column]]
  Endif

End

''----------------------------- Accepted but not Reported -----------------------------
Private Sub ShowSampled()

  Dim sql As String
  Dim res As Result
  Dim rex As Result
  Dim xList As String[]
  Dim i As Integer
  Dim FldLst As String[]

  $rData2 = New MyResult
  xList = ["fldid", "fldsampletype", "fldtestid", "fldabnormal", "fldsampleid", "fldstatus", "fldtime_sample"]
  rex = modDatabase.$myConn.Exec("select fldpatlabtest from tblfisclosing where (fldstate=&1 or fldstate IS NULL)", "Active")
  If rex.Available Then
    For Each rex
      If rex["fldpatlabtest"] = "tblpatlabtest" Then
      Else
        FldLst = xList.Copy()
        For i = 0 To xList.Count - 1
          FldLst[i] = "t1." & FldLst[i]
        Next
        sql = "select " & FldLst.Join(",") & " from " & rex["fldpatlabtest"] & " as t1 where t1.fldencounterval=&1 and (t1.fldstatus=&2 or t1.fldstatus=&3)"
        res = modDatabase.$myConn.Exec(sql, $encid, "Ordered", "Sampled")
        $rData2.AddResult(res)
      Endif
    Next
  Endif

  FldLst = xList.Copy()
  For i = 0 To xList.Count - 1
    FldLst[i] = "t1." & FldLst[i]
  Next
  sql = "select " & FldLst.Join(",") & " from tblpatlabtest as t1 where t1.fldencounterval=&1 and (t1.fldstatus=&2 or t1.fldstatus=&3)"
  res = modDatabase.$myConn.Exec(sql, $encid, "Ordered", "Sampled")
  $rData2.AddResult(res)

  $aMyFields2 = New String[]
  modGridView.ReadSmallMyData(GridView3, $rData2, $aMyFields2)
  With GridView3
    .Columns[0].Width = 1
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 250 * modBasic.$AppWidthRatio
    .Columns[3].Width = 25 * modBasic.$AppWidthRatio
    .Columns[4].Width = 100 * modBasic.$AppWidthRatio
    .Columns[5].Width = 100 * modBasic.$AppWidthRatio
    .Columns[6].Width = 150 * modBasic.$AppWidthRatio

    .Columns[1].Text = "Specimen"
    .Columns[2].Text = "Test Name"
    .Columns[4].Text = "Sample"
    .Columns[5].Text = "Status"
    .Columns[6].Text = "SampleDate"
  End With

End

Public Sub GridView3_Data(Row As Integer, Column As Integer)

  $rData2.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView3, Row)
  If Column = 3 Then
    GridView3.Data.Picture = Picture["icons/null.svg"]
    GridView3.Data.Text = ""
  Else If Column = 6 Then
    GridView3.Data.Text = modReportVar.GetDateTimeReport($rData2["fldtime_sample"], gb.GeneralDate)
  Else
    GridView3.Data.Text = $rData2[$aMyFields2[Column]]
  Endif

End

Public Sub txtsearch_KeyPress()

  modGeneralMain.InputTextSearchKeyOnly()

End

''------------------------------------------- Reported -----------------------------------
Public Sub FillLabtable()

  Dim sql As String

  sql = "select fldid,fldsampletype,fldmethod,fldabnormal,fldid,fldstatus,fldtime_sample,fldtime_report,fldtest_type,fldcomp_sample,fldcomp_report from " & $tblpatlabtest & " where fldencounterval=&1 and fldtestid=&2 and (fldstatus=&3 or fldstatus=&4) and flvisible=&5"
  $rData = modDatabase.$myConn.Exec(sql, $encid, lsttestname.Text, "Reported", "Verified", "Visible")
  $aMyFields = New String[]
  modGridView.ReadSmallData(TableView1, $rData, $aMyFields)
  With TableView1
    .Columns[0].Width = 1
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 125 * modBasic.$AppWidthRatio
    .Columns[3].Width = 25 * modBasic.$AppWidthRatio
    .Columns[4].Width = 225 * modBasic.$AppWidthRatio
    .Columns[5].Width = 75 * modBasic.$AppWidthRatio
    .Columns[6].Width = 150 * modBasic.$AppWidthRatio
    .Columns[7].Width = 150 * modBasic.$AppWidthRatio
    .Columns[8].Width = 1
    .Columns[9].Width = 75 * modBasic.$AppWidthRatio
    .Columns[10].Width = 75 * modBasic.$AppWidthRatio

    .Columns[1].Text = "Specimen"
    .Columns[2].Text = "Method"
    .Columns[4].Text = "Observation"
    .Columns[5].Text = "Status"
    .Columns[6].Text = "SampleDate"
    .Columns[7].Text = "ReportDate"
    .Columns[9].Text = "SampleComp"
    .Columns[10].Text = "ReportComp"
  End With

End

Public Sub TableView1_Data(Row As Integer, Column As Integer)

  $rData.MoveTo(Row)
  modGeneralMain.GridViewDecoration(TableView1, Row)
  If Column = 3 Then
    TableView1.Data.Picture = Picture[modMisc.GetGridIcon($rData[$aMyFields[Column]])]
    TableView1.Data.Text = ""
  Else If Column = 4 Then
    TableView1.Data.RichText = modLabTest.GetLabTestValueSubString($rData["fldid"], modLabSub.GetTestUnitFromButton(rbsi, rbmetric), True, $tblpatlabtest, $tblpatlabsubtest)
    If modBasic.$RichtextResizeRow = "Yes" Then
      TableView1.Rows[Row].Height = Max(TableView1.Rows[Row].Height, TableView1.Data.Font.RichTextHeight(TableView1.Data.RichText, TableView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (TableView1.Rows.Height - TableView1.Font.Height))
    Endif
  Else If Column = 6 Then
    TableView1.Data.Text = modReportVar.GetDateTimeReport($rData["fldtime_sample"], gb.GeneralDate)
  Else If Column = 7 Then
    TableView1.Data.Text = modReportVar.GetDateTimeReport($rData["fldtime_report"], gb.GeneralDate)
  Else
    TableView1.Data.Text = $rData[$aMyFields[Column]]
  Endif
  TableView1.Data.WordWrap = True

End

Public Sub lsttestname_Click()

  If lsttestname.Text Then
    FillLabtable()
  Endif

End

Public Sub lsttestname_KeyRelease()

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    lsttestname_Click()
  Endif

End
