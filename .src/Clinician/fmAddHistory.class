' Gambas class file

Private $sValue As String
Private $sType As String
Private $sVariable As String
Private $sTable As String

Private AppFactor As Float
Private $SelAll As Variant[]
Private $SelVar As Variant[]

Private aHorzPanel As New Object[50]
Private aNameLabel As New Object[50]
Private aOptionBox As New Object[50]
Private aComboBox As New Object[50]
Private aButonBox As New Object[50]
Private aSpaceBox As New Object[50]

Public Sub Run(sType As String, sVariable As String) As String

  $sType = sType
  $sVariable = sVariable

  If Me.ShowModal() Then Return $sValue

End

Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me, "False")
  If $sType = "History" Then
    $sTable = "tblhistory"
  Else If $sType = "Discharge" Then
    $sTable = "tbldischarge"
  Endif
  cmbformat.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec(Subst("select distinct(fldformat) as col from &1", $sTable) & " where flditem=&1", $sVariable))
  cmbformat.Text = "Common"

End

Public Sub btnfill_Click()

  If cmbformat.Text Then
    $SelAll = New Variant[]
    ShowControls()
  Endif

End

Private Sub ShowControls()

  Dim res As Result
  Dim xVar As Variant[]
  Dim aColl As Collection
  Dim aList As String[]

  res = modDatabase.$myConn.Exec(Subst("select fldid,flddetail,fldoptions from &1", $sTable) & " where flditem=&1 and fldformat like &2", $sVariable, cmbformat.Text)     ''
  If res.Available Then
    res.MoveFirst
    txthistory.RichText = res["flddetail"]
    If res["fldoptions"] Then
      Try xVar = JSON.Decode(res["fldoptions"])
      If xVar Then
        $SelAll = xVar

        aList = New String[]
        For Each aColl In $SelAll
          aList.Add(aColl["Variable"])
        Next
        If aList.Count Then
          lstvariable.List = modString.GetDistinctStringArray(aList)
        Else
          lstvariable.Clear()
        Endif

      Endif
    Endif
  Endif

End

Public Sub lstvariable_Click()

  Dim aColl As Collection
  Dim xht As Integer

  If Frame1.Children.Count Then
    Frame1.Children.Clear()
  Endif

  $SelVar = New Variant[]
  For Each aColl In $SelAll
    If aColl["Variable"] = lstvariable.Text Then
      $SelVar.Add(aColl)
    Endif
  Next

  xht = ($SelVar.Count * 35 + 30) * AppFactor
  If Frame1.Height < xht Then
    Frame1.Height = xht
  Endif

  LoadControls()

End

Private Sub LoadControls()

  Dim i As Integer

  AppFactor = modBasic.$AppScaleFactor
  For i = 0 To $SelVar.Count - 1
    If i < 49 Then
      aHorzPanel[i] = New Panel(Frame1)
      aNameLabel[i] = New TextLabel(aHorzPanel[i])
      aOptionBox[i] = New ComboBox(aHorzPanel[i])
      aComboBox[i] = New ComboBox(aHorzPanel[i])
      aButonBox[i] = New Button(aHorzPanel[i]) As "ButtonGroup"
      aSpaceBox[i] = New Label(aHorzPanel[i])

      With aHorzPanel[i]
        .Arrangement = Arrange.Horizontal
        .Height = 30 * AppFactor
        .Border = Border.Plain
      End With

      With aNameLabel[i]
        .Expand = True
        .Text = $SelVar[i]["Value"]
        .Tag = i
        .Wrap = True
      End With

      With aOptionBox[i]
        .Width = 50 * AppFactor
        .List = ["=", ":", "is"]
        .ReadOnly = False
        .Tag = i
      End With

      With aComboBox[i]
        .Width = 150 * AppFactor
        .List = Split($SelVar[i]["Option"], ";")
        .Tag = i
      End With

      With aButonBox[i]
        .Width = 24 * AppFactor
        .Picture = Picture["icon:/small/apply"]
        .Tag = i
      End With

      With aSpaceBox[i]
        .Width = 25 * AppFactor
        .Tag = $SelVar[i]["Select"]
      End With

    Endif
  Next

End

Public Sub ButtonGroup_Click()

  Dim i As Integer
  Dim xstr As String

  i = Last.Tag
  If aOptionBox[i].Text Then
    xstr = aNameLabel[i].Text & Space(1) & aOptionBox[i].Text & Space(1) & aComboBox[i].Text
  Else
    xstr = aNameLabel[i].Text & Space(1) & aComboBox[i].Text
  Endif

  If txthistory.Text Then
    If aSpaceBox[i].Tag Then
      txthistory.RichText = Replace(txthistory.RichText, aSpaceBox[i].Tag, xstr)
    Else
      txthistory.RichText = Replace(txthistory.Text, "<" & lstvariable.Text & ">", xstr)
    Endif
  Else
    txthistory.RichText = xstr
  Endif

End

Public Sub btnsave_Click()

  $sValue = txthistory.RichText
  Me.Close(True)

End
