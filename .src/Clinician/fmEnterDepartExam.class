' Gambas class file

''controls
Private aIndexLabel As New Object[50]    ''aLab
Private aNameLabel As New Object[50]       ''aObj
Private aAbnormCheck As New Object[50]       ''aObj2
Private aHTMLText As New Object[50]          ''aObj11
Private aLineText As New Object[50]
Private aUnitText As New Object[50]
Private aValueBox As New Object[50]
Private aQuantiBox As New Object[50]
Private aQuantiMax As New Object[50]
Private aQuantiMin As New Object[50]
Private aClinBox As New Object[50]
Private aDateBox As New Object[50]
Private aBSDate As New Object[50]
Private aComboBox As New Object[50]
Private aChkLock As New Object[50]
Private aTextArea As New Object[50]
Private aDichoValue As New Object[50]
Private aLeftRight As New Object[50]
Private aGridView As New Object[50]         ''aObg11
Private aListBox As New Object[50]
Private aGenTextArea As New Object[50]
Private aButtonBox As New Object[50]
Private aHelpButton As New Object[50]          ''aObj3

''other variables
Private $encid As String
Private $sTable As String
Private $sCategory As String
''Arrays
Private $xType As String[]
Private $xOption As String[]
Private $xitem As String[]
Private $xExam As String[]
Private $xOpList As String[]
Private $xSysCons As String[]
Private $xSource As String[]

Private AppFactor As Float

''----------------------------------------- create controls -----------------------------------------
Public Sub _new(sChapter As String, encid As String, sFormat As String, sCategory As String)

  Dim i As Integer
  Dim ht As String

  Dim rsn As Result
  Dim res As Result

  Dim xType As String
  Dim xOption As String
  Dim xitem As String
  Dim xexam As String
  Dim xopList As String[]
  Dim xSysCons As String
  Dim xsource As String

  lblitem.Text = sChapter
  $encid = encid
  $sTable = sFormat
  $sCategory = sCategory

  AppFactor = modBasic.$AppScaleFactor
  ht = modSettings.ShowSettingFromFIle("MultipleTextBox/Height")
  If ht Then
    Slider1.Value = CInt(ht)
  Else
    Slider1.Value = 3
  Endif

  $xType = New String[]
  $xOption = New String[]
  $xitem = New String[]
  $xExam = New String[]
  $xOpList = New String[]
  $xSysCons = New String[]
  $xSource = New String[]

  rsn = modDatabase.$myConn.Exec("select fldexamid,fldtype,fldsysconst,fldtanswertype from tbldeptexam where flddept=&1", $sTable)
  If rsn.Available Then
    For Each rsn
      xitem = rsn["fldexamid"]
      xType = rsn["fldtype"]
      xOption = rsn["fldtanswertype"]
      xSysCons = rsn["fldsysconst"]
      xsource = "Free"

      ''get parameters
      If rsn["fldtanswertype"] = "Sys Constant" And If rsn["fldsysconst"] Then
        If modBasic.$sysExamDualList.Exist(rsn["fldsysconst"]) = True Then
          res = modDatabase.$myConn.Exec("select fldexamid,fldtype,fldoption from tblexam where fldsysconst=&1", rsn["fldsysconst"])
          If res.Available Then
            xType = res["fldtype"]
            xOption = res["fldoption"]
            xexam = res["fldexamid"]
            If res["fldoption"] = "Clinical Scale" Then
              xopList = modAllExam.GetCLinicalScaleOptions("Exam", xexam)
            Else
              xopList = modAllExam.SelectExamOptionList("Exam", xexam)
            Endif
            xsource = "Exam"
          Endif
        Else If modBasic.$sysTestDualList.Exist(rsn["fldsysconst"]) = True Then
          res = modDatabase.$myConn.Exec("select fldtestid,fldtype,fldoption from tbltest where fldsysconst=&1", rsn["fldsysconst"])
          If res.Available Then
            xType = res["fldtype"]
            xOption = res["fldoption"]
            xexam = res["fldtestid"]
            If res["fldoption"] = "Clinical Scale" Then
              xopList = modAllExam.GetCLinicalScaleOptions("Test", xexam)
            Else
              xopList = modAllExam.SelectExamOptionList("Test", xexam)
            Endif
            xsource = "Test"
          Endif
        Else If modBasic.$sysRadioList.Exist(rsn["fldsysconst"]) = True Then
          res = modDatabase.$myConn.Exec("select fldexamid,fldtype,fldoption from tblradio where fldsysconst=&1", rsn["fldsysconst"])
          If res.Available Then
            xType = res["fldtype"]
            xOption = res["fldoption"]
            xexam = res["fldexamid"]
            If res["fldoption"] = "Clinical Scale" Then
              xopList = modAllExam.GetCLinicalScaleOptions("Radio", xexam)
            Else
              xopList = modAllExam.SelectExamOptionList("Radio", xexam)
            Endif
            xsource = "Radio"
          Endif
        Else If modBasic.$DemogList.Exist(rsn["fldsysconst"]) = True Then
          res = modDatabase.$myConn.Exec("select flddemoid,fldoption from tbldemographic where flddemoid=&1", rsn["fldsysconst"])
          If res.Available Then
            xType = res["fldoption"]
            xOption = res["fldoption"]
            xexam = res["flddemoid"]
            xopList = modAllExam.SelectExamOptionList("Demog", xexam)
            xsource = "Demog"
          Endif
        Endif

      Else If rsn["fldtanswertype"] = "CopyValue" And If rsn["fldsysconst"] Then
        If modBasic.$sysExamDualList.Exist(rsn["fldsysconst"]) = True Then
          xexam = modFixClinic.GetExamIDFromSysConst(rsn["fldsysconst"])
          xsource = "Exam"
        Else If modBasic.$sysTestDualList.Exist(rsn["fldsysconst"]) = True Then
          xexam = modFixLab.GetLabTestIDFromSysConst(rsn["fldsysconst"])
          xsource = "Test"
        Else If modBasic.$sysRadioList.Exist(rsn["fldsysconst"]) = True Then
          xexam = modFixRadio.GetRadioTestIDFromSysConst(rsn["fldsysconst"])
          xsource = "Radio"
        Endif

      Else If rsn["fldtanswertype"] = "Calculated" And If rsn["fldsysconst"] Then
        xexam = "Expression"

      Else
        xopList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldanswer from tbldeptexamoption where fldexamid=&1 and flddept=&2 and fldtanswertype=&3 ORDER BY fldindex", rsn["fldexamid"], $sTable, xOption))                         ''
        xexam = ""
      Endif

      $xitem.Add(xitem)
      If xexam Then
        $xExam.Add(xexam)
      Else
        $xExam.Add("__")
      Endif
      If xType Then
        $xType.Add(xType)
      Else
        $xType.Add("__")
      Endif
      If xOption Then
        $xOption.Add(xOption)
      Else
        $xOption.Add("__")
      Endif
      If xopList And If xopList.Count Then
        $xOpList.Add(xopList.Join(";"))
      Else
        $xOpList.Add("__")
      Endif
      If xSysCons Then
        $xSysCons.Add(xSysCons)
      Else
        $xSysCons.Add("__")
      Endif
      If xsource Then
        $xSource.Add(xsource)
      Else
        $xSource.Add("__")
      Endif

    Next
  Endif

  For i = 0 To $xitem.Count - 1
    If i < 49 Then
      ''Create controls
      aIndexLabel[i] = New Label(Frame1) As "IndexLabel"
      aNameLabel[i] = New TextLabel(Frame1) As "NameLabel"
      aAbnormCheck[i] = New CheckBox(Frame1) As "CheckBoxgroup"
      If $xType[i] = "Quantitative" Then
        aQuantiBox[i] = New ValueBox(Frame1) As "QuantiGroup"
        aQuantiMax[i] = New ValueBox(Frame1) As "QuantiGroupMax"
        aQuantiMin[i] = New ValueBox(Frame1) As "QuantiGroupMin"
      Else
        Select $xOption[i]
          Case "Sys Constant"
            aGenTextArea[i] = New TextPlain(Frame1) As "GenAreaGroup"
          Case "Multiple Selection"
            aListBox[i] = New ListBox(Frame1) As "ListBoxgroup"
          Case "Text Table"
            aGridView[i] = New GridView(Frame1) As "GridViewgroup"
          Case "Left and Right"
            aLeftRight[i] = New LeftRightTextArea(Frame1) As "LeftRightGroup"
          Case "Date Time", "BS Date"
            aDateBox[i] = New DateBox(Frame1) As "DateGroup"
            aBSDate[i] = New ToolButton(Frame1) As "BSButton"
          Case "Single Selection"
            aComboBox[i] = New ComboBox(Frame1) As "ComboGroup"
            aChkLock[i] = New CheckBox(Frame1) As "CheckLock"
          Case "Dichotomous"
            aDichoValue[i] = New DichotomousValue(Frame1) As "DichoText"
          Case "Quantitative"
            aValueBox[i] = New ValueBox(Frame1) As "ValueGroup"
            aUnitText[i] = New TextBox(Frame1) As "UnitGroup"
          Case "User Profile"
          Case "ImageValue"
            aButtonBox[i] = New ButtonBox(Frame1) As "ImageBoxGroup"
          Case "Qualitative"
            aLineText[i] = New TextBox(Frame1) As "TextLineGroup"
          Case "Clinical Scale"
            aTextArea[i] = New TextArea(Frame1) As "TextAreaGroup"
            aClinBox[i] = New ValueBox(Frame1) As "ClinGroup"
          Case "RichText Area"
            aHTMLText[i] = New TextHTML(Frame1) As "TextHTMLgroup"
          Case Else
            aGenTextArea[i] = New TextPlain(Frame1) As "GenAreaGroup"
        End Select
      Endif
      aHelpButton[i] = New ToolButton(Frame1) As "ButtonBoxgroup"
    Endif
  Next
  DIsplayTextForm()

End

''------------------------ General form
Public Sub Form_Open()

  Dim xoption As String

  modGeneralMain.ArrangeFormCentre(Me, "False")
  xoption = modSettings.ShowSettingFromFIle("EntrySetting/AutoDisplayOptions")
  If xoption = "Yes" Then
    chkautoption.Value = True
  Else If xoption = "No" Then
    chkautoption.Value = False
  Endif

End

Public Sub Form_Close()

  modGeneralMain.DisableJavaScript()

End

Public Sub Form_Resize()

  Dim xht As Integer

  xht = ($xitem.Count * 25 * Slider1.Value + 30) * AppFactor
  If Frame1.Height < xht Then
    Frame1.Height = xht
  Endif

End

Private Sub DIsplayTextForm()

  Dim i As Integer
  Dim xlimit As Float[]

  Frame1.Height = ($xitem.Count * 25 * Slider1.Value + 30) * AppFactor
  Frame1.Width = 875 * AppFactor

  For i = 0 To $xitem.Count - 1
    If i < 49 Then

      ''create index label
      With aIndexLabel[i]
        .X = 5 * AppFactor
        .Y = (i * 25 * Slider1.Value + 15) * AppFactor
        .Width = 25 * AppFactor
        .Height = 25 * AppFactor
        .Text = i + 1
        .Tag = i
      End With

      ''create Name Label
      With aNameLabel[i]
        .X = (5 + 25) * AppFactor
        .Y = (i * 25 * Slider1.Value + 15) * AppFactor
        .Width = 250 * AppFactor
        .Height = 25 * Slider1.Value * AppFactor
        .Text = $xitem[i]
        .Tag = i
        .Wrap = True
      End With

      ''create abnormal checkbox
      With aAbnormCheck[i]
        .X = (260 + 25) * AppFactor
        .Y = (i * 25 * Slider1.Value + 15) * AppFactor
        .Width = 100 * AppFactor
        .Height = 25 * AppFactor
        .Text = "Flag"
        .Tag = i

        If modBasic.$ClinFlagAbnormExam = "Disable" Then
          .Visible = False
        Else
          .Visible = True
        Endif
      End With

      ''create observation entry
      If $xType[i] = "Quantitative" Then
        xlimit = modClinic.GetBothQuantiExamVal($xExam[i], $encid)
        With aQuantiBox[i]
          .X = (365 + 25) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 100 * AppFactor
          .Height = 25 * AppFactor
          .Tag = i
        End With
        'min value
        With aQuantiMin[i]
          .X = (470 + 25) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 50 * AppFactor
          .Height = 25 * AppFactor
          .Enabled = False
          .Value = xlimit[0]
          .Tag = i
        End With
        ''max value
        With aQuantiMax[i]
          .X = (525 + 25) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 50 * AppFactor
          .Height = 25 * AppFactor
          .Enabled = False
          .Value = xlimit[1]
          .Tag = i
        End With

      Else
        If $xOption[i] = "Multiple Selection" Then
          With aListBox[i]
            .X = (365 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 250 * AppFactor
            .Height = (25 * Slider1.Value - 5) * AppFactor
            .ScrollBar = Scroll.Both
            .Tag = i
          End With

        Else If $xOption[i] = "Text Table" Then
          DisplayAgegrid(Split($xOpList[i], ";"), "", aGridView[i])
          With aGridView[i]
            .X = (365 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 400 * AppFactor
            .Height = (25 * Slider1.Value - 5) * AppFactor
            .ScrollBar = Scroll.Both
            .AutoResize = True
            .Tag = i
          End With

        Else If $xOption[i] = "Single Selection" Then
          With aComboBox[i]
            .X = (365 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 250 * AppFactor
            .Height = 25 * AppFactor
            .List = Split($xOpList[i], ";")
            .Tag = i
          End With
          With aChkLock[i]
            .X = (650 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 25 * AppFactor
            .Height = 25 * AppFactor
            .Value = False
            .Tag = i
          End With

        Else If $xOption[i] = "Dichotomous" Then
          With aDichoValue[i]
            .X = (365 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 250 * AppFactor
            .Height = 25 * AppFactor
            .List = Split($xOpList[i], ";")
            .Tag = i
          End With

        Else If $xOption[i] = "Left and Right" Then
          With aLeftRight[i]
            .X = (365 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 400 * AppFactor
            .Height = (25 * Slider1.Value - 5) * AppFactor
            .Tag = i
          End With

        Else If $xOption[i] = "Date Time" Then
          With aDateBox[i]
            .X = (365 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 200 * AppFactor
            .Height = 25 * AppFactor
            .Mode = DateChooser.DateTime
            .Tag = i
          End With
          With aBSDate[i]
            .X = (575 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 30 * AppFactor
            .Height = 25 * AppFactor
            .Picture = Picture["icon:/small/calendar"]
            .Tag = i
          End With

        Else If $xOption[i] = "BS Date" Then
          With aDateBox[i]
            .X = (365 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 200 * AppFactor
            .Height = 25 * AppFactor
            .Mode = DateChooser.DateTime
            .Tag = i
          End With
          With aBSDate[i]
            .X = (575 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 30 * AppFactor
            .Height = 25 * AppFactor
            .Picture = Picture["icon:/small/calendar"]
            .Tag = i
          End With

        Else If $xOption[i] = "Clinical Scale" Then
          With aTextArea[i]
            .X = (365 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 300 * AppFactor
            .Height = (25 * Slider1.Value - 5) * AppFactor
            .Wrap = True
            .Tag = i
          End With
          With aClinBox[i]
            .X = (675 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 50 * AppFactor
            .Height = 25 * AppFactor
            .Tag = i
          End With

        Else If $xOption[i] = "Quantitative" Then
          With aValueBox[i]
            .X = (365 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 150 * AppFactor
            .Height = 25 * AppFactor
            .Tag = i
          End With
          With aUnitText[i]
            .X = (525 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 100 * AppFactor
            .Height = 25 * AppFactor
            .Tag = i
          End With

        Else If $xOption[i] = "User Profile" Then
        Else If $xOption[i] = "ImageValue" Then
          With aButtonBox[i]
            .X = (365 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 250 * AppFactor
            .Height = 25 * AppFactor
            .Text = ""
            .Tag = i
          End With

        Else If $xOption[i] = "Qualitative" Then
          With aLineText[i]
            .X = (365 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 250 * AppFactor
            .Height = 25 * AppFactor
            .Tag = i
          End With

        Else If $xOption[i] = "RichText Area" Then
          With aHTMLText[i]
            .X = (365 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 400 * AppFactor
            .Height = (25 * Slider1.Value - 5) * AppFactor
            .DictionaryPath = modBasic.$dictPathList
            .Tag = i
          End With

        Else
          With aGenTextArea[i]
            .X = (365 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 400 * AppFactor
            .Height = (25 * Slider1.Value - 5) * AppFactor
            .DictionaryPath = modBasic.$dictPathList
            .Tag = i
          End With

        Endif
      Endif

      ''create help button
      With aHelpButton[i]
        .X = (792 + 25) * AppFactor
        .Y = (i * 25 * Slider1.Value + 15) * AppFactor
        .Width = 25 * AppFactor
        .Height = 25 * AppFactor
        .Text = ""
        .Picture = Picture["icon:/small/info"]
        .Tag = i
        .Tooltip = "[Ctrl+O] to display Options"
      End With

    Endif
  Next

  If aHTMLText[0] Then
    aHTMLText[0].SetFocus
  Else If aLineText[0] Then
    aLineText[0].SetFocus
  Else If aValueBox[0] Then
    aValueBox[0].SetFocus
  Else If aDateBox[0] Then
    aDateBox[0].SetFocus
  Else If aQuantiBox[0] Then
    aQuantiBox[0].SetFocus
  Else If aGenTextArea[0] Then
    aGenTextArea[0].SetFocus
  Endif

End

Public Sub BSButton_Click()

  Dim j As Integer
  Dim xx As String

  j = Last.Tag
  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(aDateBox[j].Value))
  If xx Then
    aDateBox[j].Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub btnexectext_Click()

  Dim j As Integer

  Try j = Application.ActiveControl.Tag
  If aHTMLText[j] Then
    aHTMLText[j].RichText = aHTMLText[j].RichText & modCloudAI.GetPatCloudAIResponse($encid)
  Else If aGenTextArea[j] Then
    aGenTextArea[j].Text = aGenTextArea[j].Text & modCloudAI.GetPatCloudAIResponse($encid)
  Endif

End

Public Sub dctexectext_Click()

  Dim xx As String
  Dim j As Integer

  Try j = Application.ActiveControl.Tag
  If aHTMLText[j] Then
    xx = GetRichTextArea(aNameLabel[j].Text, aHTMLText[j].RichText)
    If xx Then
      aHTMLText[j].RichText = xx
    Endif
  Else If aGenTextArea[j] Then
    xx = GetTextArea(aNameLabel[j].Text, aGenTextArea[j].Text)
    If xx Then
      aGenTextArea[j].Text = xx
    Endif
  Endif

End

Public Sub btntemplsumm_Click()

  Dim j As Integer

  Try j = Application.ActiveControl.Tag
  If aHTMLText[j] Then
    aHTMLText[j].RichText = aHTMLText[j].RichText & DictionaryVIew(modBasic.$dictadvPath)
  Else If aGenTextArea[j] Then
    aGenTextArea[j].Text = aGenTextArea[j].Text & DictionaryVIew(modBasic.$dictadvPath)
  Endif

End

Public Sub chkautoption_Click()

  modSettings.EnterCheckSetting(chkautoption, "EntrySetting/AutoDisplayOptions")

End

Public Sub btnrefresh_Click()

  modSettings.SaveSettingsToFile("MultipleTextBox/Height", Slider1.Value)
  DIsplayTextForm()

End

Public Sub btnBrChange_Click()

  modGeneralMain.SaveFormArrangement(Me)
  Me.Close()

End

Public Sub btnBrOK_Click()

  FillExamSubExam()
  btnBrOK.Enabled = False
  Balloon.Info(("Information saved"), btnBrOK)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub QuantiGroup_Change()

  Dim j As Integer

  j = Last.Tag
  If aQuantiBox[j].Value Then
    If aQuantiMin[j].Value <> aQuantiMax[j].Value Then
      If aQuantiBox[j].Value < aQuantiMin[j].Value Or If aQuantiBox[j].Value > aQuantiMax[j].Value Then
        aAbnormCheck[j].Value = True
      Else
        aAbnormCheck[j].Value = False
      Endif
    Else
      aAbnormCheck[j].Value = False
    Endif
  Else
    aAbnormCheck[j].Value = False
  Endif

  If aAbnormCheck[j].Value = True Then
    aAbnormCheck[j].Foreground = Color.Red
  Else
    aAbnormCheck[j].Foreground = Color.Default
  Endif

End

Private Sub FillExamSubExam()

  Dim i As Integer
  Dim xval As String

  For i = 0 To $xitem.Count - 1
    If i < 49 Then
      If $xType[i] = "Quantitative" Then
        If aQuantiBox[i].Value Then
          modClinSub.AddQuantiData($encid, "", $xitem[i], $xOption[i], aQuantiBox[i].Value, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
        Endif
      Else
        If $xOption[i] = "Multiple Selection" Then
          If aListBox[i].Count Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aListBox[i].List.Join(gb.NewLine), aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "Text Table" Then
          xval = GetTableData(Split($xOpList[i]), aGridView[i])
          If xval Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], modString.GetTableFormatFromText(xval), aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "Single Selection" Then
          If aComboBox[i].Text Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aComboBox[i].Text, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "Dichotomous" Then
          If aDichoValue[i].Value Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aDichoValue[i].Value, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "Left and Right" Then
          If aLeftRight[i].DataText Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aLeftRight[i].DataText, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "Date Time" Then
          If aDateBox[i].Value Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], modDate.DateStringForExam(aDateBox[i].Value), aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "BS Date" Then
          If aDateBox[i].Value Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], modDate.ConvertToLocaldate(aDateBox[i].Value), aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "ImageValue" Then
          If aButtonBox[i].Text Then
            modClinSub.AddQualiImageData($encid, "", $xitem[i], $xOption[i], $sTable, $xSysCons[i], aButtonBox[i].Text, $sCategory)
          Endif
        Else If $xOption[i] = "Quantitative" Then
          If aValueBox[i].Value Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], CStr(aValueBox[i].Value) & Space(1) & aUnitText[i].Text, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "Qualitative" Then
          If aLineText[i].Text Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aLineText[i].Text, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "Clinical Scale" Then
          If aTextArea[i].Text Then
            modClinSub.AddClinicExam($encid, "", $xitem[i], $xOption[i], aTextArea[i].Text, aClinBox[i].Value, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "RichText Area" Then
          If aHTMLText[i].Text Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aHTMLText[i].RichText, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else
          If aGenTextArea[i].Text Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aGenTextArea[i].Text, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Endif
      Endif
    Endif
  Next

End

Private Sub SetQualitativeAbnormal(i As Integer)

  If $xOption[i] = "Single Selection" Then
    If aComboBox[i].Text Then
      aAbnormCheck[i].Value = modFixClinic.SelectDeptExamAbnormal(lblitem.Text, $xitem[i], aComboBox[i].Text, $xOption[i])
    Endif
  Else If $xOption[i] = "Dichotomous" Then
    If aDichoValue[i].Value Then
      aAbnormCheck[i].Value = modFixClinic.SelectDeptExamAbnormal(lblitem.Text, $xitem[i], aDichoValue[i].Value, $xOption[i])
    Endif
  Else If $xOption[i] = "Left and Right" Then
    If aLeftRight[i].DataText Then
      aAbnormCheck[i].Value = modFixClinic.SelectDeptExamAbnormal(lblitem.Text, $xitem[i], aLeftRight[i].DataText, $xOption[i])
    Endif
  Else If $xOption[i] = "Qualitative" Then
    If aLineText[i].Text Then
      aAbnormCheck[i].Value = modFixClinic.SelectDeptExamAbnormal(lblitem.Text, $xitem[i], aLineText[i].Text, $xOption[i])
    Endif
  Else If $xOption[i] = "No Selection" Then
    If aGenTextArea[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal(lblitem.Text, $xitem[i], aGenTextArea[i].Text, $xOption[i])
    Endif
  Endif

End

''------------------------------------- short cut keys ------------------------------
Public Sub Form_KeyRelease()

  Dim i As Integer
  Dim j As Integer

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    '     modGeneralmain.GoToNextControlTab()
  Else If Key.Code = Key.Esc Then
    Me.Close
  Else

    If Application.ActiveControl Then
      If Not Application.ActiveControl.Tag Then
        j = 0
      Else
        j = Application.ActiveControl.Tag
      Endif
      If Key.Code = Key["O"] And If Key.Control Then
        OpenOption(j)
      Else If Key.Code = Key["S"] And If Key.Control Then
        btnBrOK_Click()
      Else If Key.Code = Key["A"] And If Key.Control Then
        If aAbnormCheck[j].Value = False Then
          aAbnormCheck[j].Value = True
        Else If aAbnormCheck[j].Value = True Then
          aAbnormCheck[j].Value = False
        Endif
      Endif
    Endif

    If Key.Code = Key.F1 Then
      i = 1
      If aGenTextArea[i - 1] Then
        ScrollView1.EnsureVisible(aGenTextArea[i - 1].x, aGenTextArea[i - 1].y, aGenTextArea[i - 1].Width, aGenTextArea[i - 1].Height)
        OpenAutoOptions(i)
        aGenTextArea[i - 1].SetFocus
      Endif
    Else If Key.Code = Key.F2 Then
      i = 2
      If aGenTextArea[i - 1] Then
        ScrollView1.EnsureVisible(aGenTextArea[i - 1].x, aGenTextArea[i - 1].y, aGenTextArea[i - 1].Width, aGenTextArea[i - 1].Height)
        OpenAutoOptions(i)
        aGenTextArea[i - 1].SetFocus
      Endif
    Else If Key.Code = Key.F3 Then
      i = 3
      If aGenTextArea[i - 1] Then
        ScrollView1.EnsureVisible(aGenTextArea[i - 1].x, aGenTextArea[i - 1].y, aGenTextArea[i - 1].Width, aGenTextArea[i - 1].Height)
        OpenAutoOptions(i)
        aGenTextArea[i - 1].SetFocus
      Endif
    Else If Key.Code = Key.F4 Then
      i = 4
      If aGenTextArea[i - 1] Then
        ScrollView1.EnsureVisible(aGenTextArea[i - 1].x, aGenTextArea[i - 1].y, aGenTextArea[i - 1].Width, aGenTextArea[i - 1].Height)
        OpenAutoOptions(i)
        aGenTextArea[i - 1].SetFocus
      Endif
    Else If Key.Code = Key.F5 Then
      i = 5
      If aGenTextArea[i - 1] Then
        ScrollView1.EnsureVisible(aGenTextArea[i - 1].x, aGenTextArea[i - 1].y, aGenTextArea[i - 1].Width, aGenTextArea[i - 1].Height)
        OpenAutoOptions(i)
        aGenTextArea[i - 1].SetFocus
      Endif
    Else If Key.Code = Key.F6 Then
      i = 6
      If aGenTextArea[i - 1] Then
        ScrollView1.EnsureVisible(aGenTextArea[i - 1].x, aGenTextArea[i - 1].y, aGenTextArea[i - 1].Width, aGenTextArea[i - 1].Height)
        OpenAutoOptions(i)
        aGenTextArea[i - 1].SetFocus
      Endif
    Else If Key.Code = Key.F7 Then
      i = 7
      If aGenTextArea[i - 1] Then
        ScrollView1.EnsureVisible(aGenTextArea[i - 1].x, aGenTextArea[i - 1].y, aGenTextArea[i - 1].Width, aGenTextArea[i - 1].Height)
        OpenAutoOptions(i)
        aGenTextArea[i - 1].SetFocus
      Endif
    Else If Key.Code = Key.F8 Then
      i = 8
      If aGenTextArea[i - 1] Then
        ScrollView1.EnsureVisible(aGenTextArea[i - 1].x, aGenTextArea[i - 1].y, aGenTextArea[i - 1].Width, aGenTextArea[i - 1].Height)
        OpenAutoOptions(i)
        aGenTextArea[i - 1].SetFocus
      Endif
    Else If Key.Code = Key.F9 Then
      i = 9
      If aGenTextArea[i - 1] Then
        ScrollView1.EnsureVisible(aGenTextArea[i - 1].x, aGenTextArea[i - 1].y, aGenTextArea[i - 1].Width, aGenTextArea[i - 1].Height)
        OpenAutoOptions(i)
        aGenTextArea[i - 1].SetFocus
      Endif
    Else If Key.Code = Key.F10 Then
      i = 10
      If aGenTextArea[i - 1] Then
        ScrollView1.EnsureVisible(aGenTextArea[i - 1].x, aGenTextArea[i - 1].y, aGenTextArea[i - 1].Width, aGenTextArea[i - 1].Height)
        OpenAutoOptions(i)
        aGenTextArea[i - 1].SetFocus
      Endif
    Else If Key.Code = Key.F11 Then
      i = 11
      If aGenTextArea[i - 1] Then
        ScrollView1.EnsureVisible(aGenTextArea[i - 1].x, aGenTextArea[i - 1].y, aGenTextArea[i - 1].Width, aGenTextArea[i - 1].Height)
        OpenAutoOptions(i)
        aGenTextArea[i - 1].SetFocus
      Endif
    Else If Key.Code = Key.F12 Then
      i = 12
      If aGenTextArea[i - 1] Then
        ScrollView1.EnsureVisible(aGenTextArea[i - 1].x, aGenTextArea[i - 1].y, aGenTextArea[i - 1].Width, aGenTextArea[i - 1].Height)
        OpenAutoOptions(i)
        aGenTextArea[i - 1].SetFocus
      Endif
    Endif

  Endif

End

''-----------------------------help options  --------------------------------------
Public Sub ButtonBoxgroup_Click()

  Dim j As Integer

  j = Last.Tag
  OpenOption(j)
  SetQualitativeAbnormal(j)

End

Public Sub ComboGroup_GotFocus()

  Dim j As Integer

  j = Last.Tag
  If modBasic.$TabletModeEnable = "Yes" Then
    If Not aComboBox[j].Text Then
      aComboBox[j].Popup
    Endif
  Endif

End

Public Sub ComboGroup_MouseWheel()

  Stop Event

End

Public Sub ComboGroup_KeyRelease()

  Dim j As Integer

  j = Last.Tag
  ''enable on chnaging ComboBoxNew to ComboBox
  modFillContainer.AutoFillComboBox(aComboBox[j])
  ' modFillContainer.RestrictComboToContent(aComboBox[j])

End

Public Sub CheckLock_Click()

  Dim i As Integer

  i = Last.Tag
  If aChkLock[i].Value = True Then
    aComboBox[i].Enabled = False
  Else If aChkLock[i].Value = False Then
    aComboBox[i].Enabled = True
  Endif

End

Public Sub ComboGroup_Click()

  Dim j As Integer

  j = Last.Tag
  SetQualitativeAbnormal(j)

End

Public Sub DichoText_Click()

  Dim j As Integer

  j = Last.Tag
  SetQualitativeAbnormal(j)

End

Private Sub OpenAutoOptions(j As Integer)

  If chkautoption.Value = True Then
    OpenOption(j - 1)
  Endif

End

Private Sub OpenOption(j As Integer)

  Dim sVal As String[]
  Dim sPath As String
  Dim xval As String
  Dim xopt As String[]
  Dim xflot As Variant[]
  Dim acalc As Variant

  If $xType[j] = "Quantitative" Then
    If $xOption[j] = "Calculated" Then
      If $xExam[j] = "Expression" Then
        acalc = modReportVar.GetCalcValueFloat($xSysCons[j], $encid)
      Else
        xval = modAllExam.GetExamDefaultValue("Exam", $xExam[j])
        If xval Then
          acalc = modReportVar.GetCalcValueFloat(xval, $encid)
        Endif
      Endif
      If acalc Then
        aQuantiBox[j].Value = acalc
      Else
        aQuantiBox[j].Value = 0
      Endif

    Else If $xOption[j] = "CopyValue" Then
      acalc = modReportVar.GetLastQuantiParamValue($xSource[j], $xExam[j], $encid)
      If acalc Then
        aQuantiBox[j].Value = acalc
      Else
        aQuantiBox[j].Value = 0
      Endif

    Else
      xflot = GetQuantiValues("Exam", $encid, $xitem[j], 0, 0, aQuantiBox[j].Value)
      If xflot Then
        acalc = xflot[0]
        If acalc Then
          aQuantiBox[j].Value = acalc
        Else
          aQuantiBox[j].Value = 0
        Endif
      Endif

    Endif

  Else
    If $xOpList[j] Then
      xopt = Split($xOpList[j], "|")
    Endif

    If $xOption[j] = "Single Selection" Then
      If xopt.Count Then
        sVal = SubChoose(xopt, "Single Selection", $xitem[j])
        If sVal Then
          aComboBox[j].Text = sVal.Join(";")
        Endif
      Endif

    Else If $xOption[j] = "Dichotomous" Then

    Else If $xOption[j] = "Multiple Selection" Then
      If xopt.Count Then
        sVal = SubChoose(xopt, "Multiple Selection", $xitem[j])
        If sVal Then
          aListBox[j].List = sVal
        Endif
      Endif

    Else If $xOption[j] = "Text Table" Then
      If xopt.Count Then
        xval = TableEntry(xopt, $xitem[j], "")
        If xval Then
          DisplayAgegrid(Split($xOpList[j], "|"), xval, aGridView[j])
        Endif
      Endif

    Else If $xOption[j] = "Clinical Scale" Then
      If xopt.Count Then
        sVal = SubChoose(xopt, "Clinical Scale", $xExam[j])
        If sVal Then
          aClinBox[j].Value = sVal[0]
          aTextArea[j].Text = sVal[1]
        Endif
      Endif

    Else If $xOption[j] = "Date Time" Then
      aDateBox[j].Value = Now()

    Else If $xOption[j] = "BS Date" Then
      aDateBox[j].Value = Now()
    Else If $xOption[j] = "User Profile" Then
    Else If $xOption[j] = "ImageValue" Then
      sPath = modImage.DisplayVisualData(lblitem.Text, $xitem[j], "", $xOption[j])
      sVal = CustomDraw(sPath)
      If sVal Then
        aButtonBox[j].Text = sVal[0]
      Endif

    Else If $xOption[j] = "Visual Input" Then
      sPath = modImage.DisplayVisualData(lblitem.Text, $xitem[j], "", $xOption[j])
      If sPath Then
        xval = CVisualValue(lblitem.Text, sPath, aGenTextArea[j].Text)
        If xval Then
          aGenTextArea[j].Text = xval
        Endif
      Endif

    Else If $xOption[j] = "CopyValue" Then
      aGenTextArea[j].Text = modReportVar.GetLastQualiParamValue($xSource[j], $xExam[j], $encid)

    Else If $xOption[j] = "Calculated" Then
      If $xExam[j] = "Expression" Then
        aGenTextArea[j].Text = modReportVar.GetCalcValueVariant($xSysCons[j], $encid)
      Else
        xval = modAllExam.GetExamDefaultValue("Exam", $xExam[j])
        If xval Then
          aGenTextArea[j].Text = modReportVar.GetCalcValueVariant(xval, $encid)
        Else
          aGenTextArea[j].Text = ""
        Endif
      Endif

    Endif

  Endif

End

''======================= For GridView (copied from TextTable)=================
Private Sub DisplayAgegrid(sColumns As String[], sTable As String, GridView1 As GridView)

  Dim $ageFile As String[]
  Dim sline As String
  Dim sCol As String[]
  Dim Row As Integer
  Dim Column As Integer

  GridView1.Clear
  GridView1.Columns.Count = sColumns.Count
  GridView1.Rows.Count = Split(sTable, gb.NewLine).Count - 1

  Row = 0
  $ageFile = Split(sTable, gb.NewLine)
  For Each sline In $ageFile
    sCol = Split(sline, ";")
    If sline = $ageFile[0] Then
    Else
      For Column = 0 To sCol.Count - 1
        GridView1[Row - 1, Column].Text = sCol[Column]
      Next
    Endif
    Row = Row + 1
  Next

  For Column = 0 To sColumns.Count - 1
    GridView1.Columns[Column].Text = sColumns[Column]
    Try GridView1.Columns.Width = CInt(Floor(Frame1.Width / sCol.Count))
  Next

End

Private Function GetTableData(sColumns As String[], GridView1 As GridView) As String

  Dim Row As Integer
  Dim Column As Integer
  Dim sCol As String[]
  Dim sRow As String[]
  Dim xval As String

  sRow = New String[]
  sRow.Add(sColumns.Join(";"))
  For Row = 0 To GridView1.Rows.Count - 1
    sCol = New String[]
    For Column = 0 To GridView1.Columns.Count - 1
      sCol.Add(GridView1[Row, Column].Text)
    Next
    sRow.Add(sCol.Join(";"))
  Next
  xval = sRow.Join(gb.NewLine)
  Return xval

End

Public Sub ImageBoxGroup_Click()

  Dim j As Integer

  j = Last.Tag
  Dialog.Filter = ["*.jpg;*.jpeg;*.png;*.bmp", "Picture files"]
  If Dialog.OpenFile() Then Return
  aButtonBox[j].Text = Dialog.Path

End
