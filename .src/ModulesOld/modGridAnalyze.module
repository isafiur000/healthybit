' Gambas module file

Private $ProgressBar1 As ProgressBar

''======================== Grid Summary =================================
Public Sub CreateOldGridViewSummary(GridView1 As GridView, Param1 As String, Param2 As String)

  Dim partx As String
  Dim valx As String
  Dim partcol As Integer
  Dim valcol As Integer
  Dim xshell As String
  Dim xscript As String

  Dim chapx As String
  Dim chpcol As Integer
  Dim chpshell As String
  Dim chpscript As String

  partx = modSettings.ShowSettingFromFIle("GridViewSummary/GroupColumn")
  If partx Then
    partcol = CInt(partx)
  Endif
  valx = modSettings.ShowSettingFromFIle("GridViewSummary/ValueColumn")
  If valx Then
    valcol = CInt(valx)
  Endif
  xscript = modSettings.ShowSettingFromFIle("GridViewSummary/GroupScript")
  xshell = modSettings.ShowSettingFromFIle("GridViewSummary/GroupShell")

  If partcol And If valcol Then
    chapx = modSettings.ShowSettingFromFIle("GridViewSummary/ChapterColumn")
    If chapx Then
      chpcol = CInt(chapx)

      If chpcol Then
        chpscript = modSettings.ShowSettingFromFIle("GridViewSummary/ChapterScript")
        chpshell = modSettings.ShowSettingFromFIle("GridViewSummary/ChapterShell")
        SummaryGridChapterReport(GridView1, chpcol - 1, partcol - 1, valcol - 1, Param1, Param2, xscript, xshell, chpscript, chpshell)
      Else
        SummaryGridReport(GridView1, partcol - 1, valcol - 1, Param1, Param2, xscript, xshell)
      Endif

    Else
      SummaryGridReport(GridView1, partcol - 1, valcol - 1, Param1, Param2, xscript, xshell)
    Endif
  Endif

End

Private Sub SummaryGridReport(GridView1 As GridView, TextCol As Integer, qtyCol As Integer, param1 As String, param2 As String, xScript As String, xShell As String)

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim Row As Integer
  Dim textlist As String[]
  Dim xname As String
  Dim xval As Float
  Dim i As Integer
  Dim xtot As Float
  Dim pgroup As String

  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Tag = "Const"
  Endif

  Inc Application.Busy
  $BillingReport = New CReportHTML([GridView1.Columns[TextCol].Text, GridView1.Columns[qtyCol].Text], "", "")
  $BillingReport.UserData.Add(param1, "PARAM1")
  $BillingReport.UserData.Add(param2, "PARAM2")

  textlist = New String[]
  For Row = 0 To GridView1.Rows.Count - 1
    If textlist.Count = 0 Then
      textlist.Add(modExternal.GerScriptValue(xScript, xShell, GridView1[Row, TextCol].Text))
    Else
      pgroup = modExternal.GerScriptValue(xScript, xShell, GridView1[Row, TextCol].Text)
      If textlist.Exist(pgroup) = False Then
        textlist.Add(pgroup)
      Endif
    Endif
    If MMain.$IsGUIApp = True Then
      $ProgressBar1.Value = (Row + 1) / GridView1.Rows.Count
      Wait
    Endif
  Next
  If textlist Then
    textlist.Sort()
  Endif

  i = 0
  xtot = 0
  For Each xname In textlist
    xval = 0
    For Row = 0 To GridView1.Rows.Count - 1
      If xname = modExternal.GerScriptValue(xScript, xShell, GridView1[Row, TextCol].Text) Then

        If IsNumber(GridView1[Row, qtyCol].Text) Then
          xval = xval + GridView1[Row, qtyCol].Text
        Else
          If InStr(GridView1[Row, qtyCol].Text, modBasic.$currency) > 0 Then
            xval = xval + CFloat(Trim(Replace(GridView1[Row, qtyCol].Text, modBasic.$currency, "")))
          Endif
        Endif

      Endif
    Next

    xtot = xtot + xval
    If xval Then
      With asx
        .Add(xname)
        .Add(modReportVar.GetLocaleNumberFormat(xval, 0))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif
    If MMain.$IsGUIApp = True Then
      $ProgressBar1.Value = (i + 1) / textlist.Count
      Wait
    Endif
    i = i + 1
  Next
  With asx
    .Add("TOTAL")
    .Add(modReportVar.GetLocaleNumberFormat(xtot, 0))
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  Dec Application.Busy
  modExternal.$ExecValueColl.Clear()
  modControlSub.OpenBrowser($BillingReport.NewHTMLPath())

End

Private Sub SummaryGridChapterReport(GridView1 As GridView, ChapCol As Integer, TextCol As Integer, qtyCol As Integer, param1 As String, param2 As String, xScript As String, xShell As String, chpscript As String, chpshell As String)                                   ''

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim Row As Integer
  Dim textlist As String[]
  Dim xname As String
  Dim xval As Float
  Dim i As Integer
  Dim xtot As Float
  Dim atot As Float

  Dim xchap As String
  Dim chapList As String[]

  Dim pchapt As String
  Dim pgroup As String

  If MMain.$IsGUIApp = True Then
    $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
    $ProgressBar1.Tag = "Const"
  Endif

  Inc Application.Busy
  $BillingReport = New CReportHTML([GridView1.Columns[TextCol].Text, GridView1.Columns[qtyCol].Text], "", "")
  $BillingReport.UserData.Add(param1, "PARAM1")
  $BillingReport.UserData.Add(param2, "PARAM2")

  chapList = New String[]
  For Row = 0 To GridView1.Rows.Count - 1
    If chapList.Count = 0 Then
      chapList.Add(modExternal.GerScriptValue(chpscript, chpshell, GridView1[Row, ChapCol].Text))
    Else
      pchapt = modExternal.GerScriptValue(chpscript, chpshell, GridView1[Row, ChapCol].Text)
      If chapList.Exist(pchapt) = False Then
        chapList.Add(pchapt)
      Endif
    Endif
  Next

  textlist = New String[]
  For Row = 0 To GridView1.Rows.Count - 1
    If textlist.Count = 0 Then
      textlist.Add(modExternal.GerScriptValue(xScript, xShell, GridView1[Row, TextCol].Text))
    Else
      pgroup = modExternal.GerScriptValue(xScript, xShell, GridView1[Row, TextCol].Text)
      If textlist.Exist(pgroup) = False Then
        textlist.Add(pgroup)
      Endif
    Endif
  Next
  If textlist Then
    textlist.Sort()
  Endif

  i = 0
  atot = 0
  For Each xchap In chapList
    $BillingReport.AddChapter(xchap)

    xtot = 0
    For Each xname In textlist
      xval = 0
      For Row = 0 To GridView1.Rows.Count - 1
        If xchap = modExternal.GerScriptValue(chpscript, chpshell, GridView1[Row, ChapCol].Text) Then
          If xname = modExternal.GerScriptValue(xScript, xShell, GridView1[Row, TextCol].Text) Then

            If IsNumber(GridView1[Row, qtyCol].Text) Then
              xval = xval + GridView1[Row, qtyCol].Text
            Else
              If InStr(GridView1[Row, qtyCol].Text, modBasic.$currency) > 0 Then
                xval = xval + CFloat(Trim(Replace(GridView1[Row, qtyCol].Text, modBasic.$currency, "")))
              Endif
            Endif

          Endif
        Endif
      Next

      xtot = xtot + xval
      If xval Then
        With asx
          .Add(xname)
          .Add(modReportVar.GetLocaleNumberFormat(xval, 0))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

    Next

    atot = atot + xtot
    With asx
      .Add("TOTAL : " & xchap)
      .Add(modReportVar.GetLocaleNumberFormat(xtot, 0))
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("****")
      .Add("****")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    If MMain.$IsGUIApp = True Then
      $ProgressBar1.Value = (i + 1) / chapList.Count
      Wait
    Endif
    i = i + 1
  Next

  With asx
    .Add("TOTAL")
    .Add(modReportVar.GetLocaleNumberFormat(atot, 0))
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  Dec Application.Busy
  modExternal.$ExecValueColl.Clear()
  modControlSub.OpenBrowser($BillingReport.NewHTMLPath())

End
