' Gambas class file

Private $sFollow As Boolean
Private $rData As Result
Private $aMyFields As String[]
Private $selDate As Boolean

Private $sValue As String
Private $ImgPath As String
Private $lstencDate As Date
Private $SearchBox As String
Private $imgList As String[]

Private $ValidExpiry As Date
Private $CredAmount As Float
Private $DiscAmount As Float

Public Sub Run(sFollow As Boolean) As String

  $sFollow = sFollow
  If Me.ShowModal() Then Return $sValue

End

Public Sub Form_Open()

  Dim xcursor As String
  Dim xcont As Control
  Dim OBSwatchall As Observer
  Dim xrank As String
  Dim xunit As String

  modGeneralMain.ArrangeFormCentre(Me, "False", True)
  DisplayTextBoxEnableSetting()
  If modBasic.$FocusBackColor Then
    For Each xcont In Me.Controls
      OBSwatchall = New Observer(xcont) As "WatchAll"
    Next
  Endif

  ShowConsulDoc()
  ShowConsDate()
  If $sFollow = True Then
    chkfollow.Value = True
    chkfollow.Enabled = False
  Endif
  ''--------- for police -------------
  If MMain.$IsPolice = True Then
    cmbcategory.Visible = True
    pnlpolice.Visible = True
    cmbcategory.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldcategory as col from tblcategorylist"))
    xrank = modSettings.ShowSettingFromFIle("RegistrationForm/RankList")
    If Exist(xrank) Then
      cmbrank.List = modString.GetStringArrayFromFile(xrank)
    Endif
    xunit = modSettings.ShowSettingFromFIle("RegistrationForm/UnitList")
    If Exist(xunit) Then
      cmbunit.List = modString.GetStringArrayFromFile(xunit)
    Endif
  Endif
  ''---------end ------------------------

  cmbsex.List = ["Male", "Female", "Other"]
  chknull.Value = False

  cmbdistrict.List = modBasic.$DistrictList
  cmbrelation.List = modBasic.$RelationList

  cmbconsult.List = modGeneral.RegistrationDeptList()
  cmbdisctype.List = modBasic.$BillDiscountRegd
  cmbbillmode.List = modBasic.$BillBillingMode

  lblstatus.Text = "NEW PATIENT"
  dtconsultdate.Value = Now()
  dtconsultime.Value = ""
  btnyear.Text = "Year"
  btnmon.Text = "Mon"
  If cmbdisctype.Count = 1 Then
    cmbdisctype.Text = cmbdisctype[0].Text
  Endif

  If modBasic.$AutoConsultation = "Yes" Then
    chkconsult.Value = True
  Else If modBasic.$AutoConsultation = "No" Then
    chkconsult.Value = False
  Else
    modSettings.ShowCheckBox(chkconsult, "Registration/AutoConsultation")
  Endif
  If modBasic.$AutoConsultLock = "Yes" Then
    chkconsult.Enabled = False
  Else
    chkconsult.Enabled = True
  Endif

  cmbsex.Text = modBasic.$RegGender
  cmbdistrict.Text = modBasic.$RegDistrict
  cmbrelation.Text = modBasic.$RegRelation
  cmbconsult.Text = modBasic.$RegDepart
  If modBasic.$RegConsultant Then
    If modBasic.$RegConsultant = "CurrentUser" Then
      btnconsult.Tag = modBasic.$lbluser
    Else
      btnconsult.Tag = modBasic.$RegConsultant
    Endif
    btnconsult.Text = modGeneral.GetUserFullName(btnconsult.Tag)
    btnconsult.Enabled = False
  Endif

  FillRegistrationGrid(dtconsultdate.Value)
  SetRequiredVariables()
  $SearchBox = modSettings.ShowSettingFromFIle("RegistrationForm/DefaultSearchBox")
  If $SearchBox = "Booking ID" Then
    rbbook.Value = True
  Else If $SearchBox = "Staff ID" Then
    rbstaff.Value = True
  Else If $SearchBox = "NHIS No" Then
    rbnhis.Value = True
  Else If $SearchBox = "SS Unit" Then
    rbsocial.Value = True
  Else If $SearchBox = "SS Fund" Then
    rbssf.Value = True
  Else
    rbfile.Value = True
  Endif

  If modBasic.$WebZoomValue Then
    Slider1.Value = modBasic.$WebZoomValue * 100
    WebView1.Zoom = Slider1.Value / 100
  Endif

  xcursor = modSettings.ShowSettingFromFIle("RegistrationForm/DefaultCursor")
  If xcursor = "Search Box" Then
    txtbookingid.SetFocus
  Else
    txtpatno.SetFocus
  Endif

End

Public Sub WatchAll_GotFocus()

  Last.Background = modBasic.$FocusBackColor

End

Public Sub WatchAll_LostFocus()

  Last.Background = Color.Default

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub Form_KeyRelease()

  If Key.Code = Key["A"] And If Key.Control Then
    If chkconsult.Value = False Then
      chkconsult.Value = True
    Else If chkconsult.Value = True Then
      chkconsult.Value = False
    Endif
  Else If Key.Code = Key["F"] And If Key.Control Then
    If chkfollow.Value = False Then
      chkfollow.Value = True
    Else If chkfollow.Value = True Then
      chkfollow.Value = False
    Endif
  Else If Key.Code = Key["Y"] And If Key.Alt Then
    btnyear.Text = "Year"
    btnmon.Text = "Mon"
  Else If Key.Code = Key["M"] And If Key.Alt Then
    btnyear.Text = "Mon"
    btnmon.Text = "Day"
  Else If Key.Code = Key["D"] And If Key.Alt Then
    btnyear.Text = "Day"
    btnmon.Text = "Hour"
  Else If Key.Code = Key.Insert Then
    btnshowrefr_Click()
    btnshowrefr.SetFocus
  Else If Key.Code = Key.F2 Then
    If Panel3.Enabled = True Then
      rbfile.Value = True
    Endif
  Else If Key.Code = Key.F3 Then
    If Panel3.Enabled = True Then
      rbnhis.Value = True
    Endif
  Else If Key.Code = Key.F4 Then
    If Panel3.Enabled = True Then
      rbbook.Value = True
    Endif
  Else If Key.Code = Key.F5 Then
    If Panel3.Enabled = True Then
      rbsocial.Value = True
    Endif
  Else If Key.Code = Key.F6 Then
    If Panel3.Enabled = True Then
      rbstaff.Value = True
    Endif
  Else If Key.Code = Key.F7 Then
    If Panel3.Enabled = True Then
      rbssf.Value = True
    Endif
  Else If Key.Code = Key.Esc Then
    If txtencounter.Text Then
      $sValue = txtencounter.Text
      Me.Close(True)
    Else
      Me.Close()
    Endif
  Else
    modGeneralmain.GoToNextControlTab()
  Endif

End

''---------------------------- Button Procedures -----------------------------------------
Private Function AllowDataSave() As Boolean

  Dim xx As Boolean

  xx = True
  If modBasic.$RegistEssAddress = "Yes" Then
    If Not txtaddfir.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssDistrict = "Yes" Then
    If Not cmbdistrict.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssAge = "Yes" Then
    If Not dtdobmain.Value And If Not txtyears.Value And If Not txtmonths.Value Then
      xx = False
    Else If chknull.Value = True
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssGuardian = "Yes" Then
    If Not txtguardian.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssRelation = "Yes" Then
    If Not cmbrelation.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssContact = "Yes" Then
    If Not txtcontact.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssEMail = "Yes" Then
    If Not txtemail.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssCode = "Yes" Then
    If Not txtpatcode.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssWardNo = "Yes" Then
    If Not txtward.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssEthnic = "Yes" Then
    If Not txtethcode.Text Then
      xx = False
    Endif
  Endif

  Return xx

End

Public Sub btnOK_GotFocus()

  btnOK.Font.Bold = True

End

Public Sub btnOK_LostFocus()

  btnOK.Font.Bold = False
  btnCancel.SetFocus

End

Public Sub btnCancel_KeyPress()

  btnCancel_Click()

End

Private Sub OpenDemographics()

  Dim hForm1 As FmPatdemograph
  Dim hForm As FmPatAccEdit

  If modBasic.$RegistAutoDemograph Then
    Select modBasic.$RegistAutoDemograph
      Case "Acount", "Clinical"
        hForm1 = New FmPatdemograph(txtencounter.Text, modBasic.$RegistAutoDemograph)
        hForm1.ShowModal
      Case "Essential"
        hForm = New FmPatAccEdit(txtencounter.Text)
        hForm.ShowModal
    End Select
  Endif

End

Public Sub btnCancel_Click()

  If txtencounter.Text Then
    $sValue = txtencounter.Text
    Me.Close(True)
  Endif

End

Public Sub btnOK_KeyRelease()

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    btnOK_Click()
  Endif

End

Private Sub UpdatePatientBasic(sPatNo As String, sName As String, sSurName As String)

  Dim res As Result

  If sName And If sSurName Then
    res = modDatabase.$myConn.Edit("tblpatientinfo", "fldpatientval=&1", sPatNo)
    If res.Available Then
      res["fldptnamefir"] = modPassword.EncryptPatData(String.UCaseFirst(sName))
      res["fldptnamelast"] = modPassword.EncryptPatData(String.UCaseFirst(sSurName))
      res["fldencrypt"] = modBasic.$PatInfoEncrypt
      res.Update
    Endif
  Endif

End

Private Sub RegisterFirstTime()

  Dim res As Result
  Dim $DOBirth As Date

  If $selDate = True Then
    $DOBirth = dtdobmain.Value
  Else
    If txtmonths.Value = 0 Then
      If btnyear.Text = "Year" Then
        $DOBirth = DateAdd(Now(), gb.Year, 0 - CInt(txtyears.Value))
      Else If btnyear.Text = "Mon" Then
        $DOBirth = DateAdd(Now(), gb.Month, 0 - CInt(txtyears.Value))
      Else If btnyear.Text = "Day" Then
        $DOBirth = DateAdd(Now(), gb.Day, 0 - CInt(txtyears.Value))
      Endif

    Else
      If btnyear.Text = "Year" And If btnmon.Text = "Mon" Then
        $DOBirth = DateAdd(Now(), gb.Month, 0 - CInt(12 * txtyears.Value + txtmonths.Value))
      Else If btnyear.Text = "Mon" And If btnmon.Text = "Day" Then
        $DOBirth = DateAdd(Now(), gb.Day, 0 - CInt(30 * txtyears.Value + txtmonths.Value))
      Else If btnyear.Text = "Day" And If btnmon.Text = "Hour" Then
        $DOBirth = DateAdd(Now(), gb.Day, 0 - CInt(24 * txtyears.Value + txtmonths.Value))
      Endif

    Endif
  Endif

  If chknull.Value = True Or If DateDiff($DOBirth, Now(), gb.Day) < 73000 Then

    If txtpatno.Text Then
      If modPatient.SearchPatNo(Trim(txtpatno.Text)) = False Then
        txtpatno.Text = ""
      Endif
    Endif

    If txtpatno.Text Then
    Else
      txtpatno.Text = modBillLock.PatientNoValue()
      txtpatno.ReadOnly = True
    Endif

    If txtpatno.Text Then
      txtvisit.Text = modPatient.GetPatientHMISStattus(Trim(txtpatno.Text))
      lblstatus.Text = "REGISTERED PATIENT"
      res = modDatabase.$myConn.Create("tblpatientinfo")
      res["fldpatientval"] = Trim(txtpatno.Text)
      res["fldptnamefir"] = modPassword.EncryptPatData(String.UCaseFirst(Trim(txtnamefir.text)))
      res["fldptnamelast"] = modPassword.EncryptPatData(String.UCaseFirst(Trim(txtnamelast.text)))
      res["fldethniccode"] = txtethcode.Text
      res["fldptcontact"] = modPassword.EncryptPatData(Trim(txtcontact.Text))
      res["fldemail"] = modPassword.EncryptPatData(Trim(txtemail.Text))
      res["fldptaddvill"] = String.UCaseFirst(Trim(txtaddfir.Text))
      res["fldptaddward"] = Trim(txtward.Text)
      res["fldptadddist"] = String.UCaseFirst(Trim(cmbdistrict.Text))
      res["fldptsex"] = String.UCaseFirst(cmbsex.text)
      res["fldptguardian"] = String.UCaseFirst(Trim(txtguardian.Text))
      res["fldrelation"] = String.UCaseFirst(Trim(cmbrelation.Text))
      If chknull.Value = False Then
        res["fldptbirday"] = $DOBirth
      Endif
      res["fldptadmindate"] = Now()
      res["flddiscount"] = ""
      res["fldptcode"] = Trim(txtpatcode.Text)
      res["fldadmitfile"] = ""
      res["fldcomment"] = ""
      res["fldencrypt"] = modBasic.$PatInfoEncrypt
      res["fldpassword"] = ""

      ''--------- for police -------------
      If MMain.$IsPolice = True Then
        res["fldcategory"] = cmbcategory.Text
        res["fldrank"] = cmbrank.Text
        res["fldunit"] = cmbunit.Text
      Endif
      ''----------end -------------------

      res["flduserid"] = modBasic.$lbluser
      res["fldtime"] = Now()
      res["fldupuser"] = ""
      res["flduptime"] = ""
      res["xyz"] = False
      res.Update()
    Endif

  Endif

End

Private Sub SaveRegistrationData()

  Dim res As Result
  Dim xdate As Date
  Dim autobil As Boolean
  Dim idLock As Boolean
  Dim xcomm As String
  Dim xformat As String

  If txtnamefir.Text And If txtnamelast.Text And If cmbsex.Text And If cmbconsult.Text And If cmbdisctype.Text And If cmbbillmode.Text Then
    If AllowDataSave() = True Then

      Inc Application.Busy
      idLock = modBillLock.LockTableForID("Registration")
      If idLock = True Then

        modDatabase.$myConn.Begin
        If lblstatus.Text = "NEW PATIENT" Or If lblstatus.Text = "RECORDED PATIENT" Then
          RegisterFirstTime()
        Endif

        If txtpatno.Text Then
          txtencounter.Text = modBillLock.EncounterIDValue()

          If txtencounter.Text Then
            res = modDatabase.$myConn.Create("tblencounter")
            res["fldencounterval"] = txtencounter.Text
            res["fldpatientval"] = Trim(txtpatno.Text)
            res["fldadmitlocat"] = cmbconsult.Text
            res["flddisctype"] = cmbdisctype.Text
            res["fldbillingmode"] = cmbbillmode.Text
            res["fldadmission"] = "Registered"
            res["fldregdate"] = Now()
            res["fldcomp"] = modBasic.$compID
            res["fldvisit"] = txtvisit.Text
            If chkfollow.Value = True Then
              res["fldfollow"] = "Follow-up"
            Else
              res["fldfollow"] = "New"
            Endif

            res["fldcurrlocat"] = ""
            res["flddoa"] = ""
            res["flddod"] = ""
            res["fldheight"] = ""
            res["flduserid"] = btnconsult.Tag
            res["fldcashdeposit"] = 0
            If $CredAmount Then
              res["fldcashcredit"] = $CredAmount
            Else
              res["fldcashcredit"] = txtcredit.Value
            Endif
            If $DiscAmount Then
              res["fldcharity"] = $DiscAmount
            Else
              res["fldcharity"] = txtdiscnt.Value
            Endif
            If $ValidExpiry Then
              res["fldvalidity"] = $ValidExpiry
            Else
              res["fldvalidity"] = DateAdd(Now(), gb.Year, 1)
            Endif
            res["fldfollowdate"] = ""
            res["fldreferto"] = ""

            res["fldregistid"] = modPatient.GetPatientHMISRegVal(Trim(txtpatno.Text))
            res["fldadmitid"] = ""
            res["xyz"] = False
            res.Update()
          Endif
          If chkconsult.Value = True Then
            If chkfollow.Value = False Then
              autobil = modBillings.InsertRegistrationBilling(modBasic.$AutoRegistBilling, txtencounter.Text, cmbconsult.Text, cmbdisctype.Text, cmbbillmode.Text, "New", btnconsult.Tag)
              xcomm = "Paid Consultation"
            Else
              autobil = modBillings.InsertRegistrationBilling(modBasic.$AutoRegistBilling, txtencounter.Text, cmbconsult.Text, cmbdisctype.Text, cmbbillmode.Text, "Follow-up", btnconsult.Tag)
              xcomm = "Follow-up Consultation"
            Endif

            xformat = modGeneral.GetCategoryFromDept(cmbconsult.Text)
            If chkdate.Value = True Then
              If dtconsultime.Value Then
                xdate = Date(Year(dtconsultdate.Value), Month(dtconsultdate.Value), Day(dtconsultdate.Value), Hour(dtconsultime.Value), Minute(dtconsultime.Value), Second(dtconsultime.Value))
              Else
                xdate = modGeneral.GetDepartConsultTime(xformat, cmbconsult.Text, dtconsultdate.Value)
              Endif
            Else
              xdate = Now()
            Endif
            If xformat = "Consultation" Then
              modPatientSub.AddConsultData(txtencounter.Text, cmbconsult.Text, xdate, cmbbillmode.Text, xcomm, btnconsult.Tag)
            Else
              modPatientSub.AddOPVisitData(txtencounter.Text, cmbconsult.Text, xdate, cmbbillmode.Text, xcomm)
            Endif
          Endif

          If txtbookingid.Text Then
            If rbbook.Value = True Then
              modPatientSub.UpdateBookingTable(Trim(txtbookingid.Text), txtpatno.Text, txtencounter.Text)
              modPatientSub.UpdateRemoteUserNo(modPatient.GetPatRemoteMailBooking(Trim(txtbookingid.Text)), txtpatno.Text)
            Else If rbstaff.Value = True Then
              modPatientSub.UpdateStaffIDTable(Trim(txtbookingid.Text), txtpatno.Text)
            Else If rbsocial.Value = True Then
              modPatientSub.UpdateSocialUnitIDTable(Trim(txtbookingid.Text), txtpatno.Text)
            Endif
          Endif
          modDatabase.$myConn.Commit
          btnOK.Enabled = False
          btnshowrefr.Enabled = False

        Else
          modDatabase.$myConn.Rollback
          txtencounter.Text = ""
          txtpatno.Text = ""
        Endif 'check if patientno is present

        modBillLock.ReleaseLockTable("Registration")
      Endif
      btnOK.Tag = ""
      Dec Application.Busy

    Else
      Balloon.Warning(("Incomplete data"), btnOK)
      Balloon.Delay = modBasic.$BalloonDelay
      txtpatno.SetFocus
    Endif
  Endif  ''check if name, gender, dept are listed

Catch
  modDatabase.$myConn.Rollback
  If idLock = True Then
    modBillLock.ReleaseLockTable("Registration")
  Endif
  Dec Application.Busy
  txtencounter.Text = ""
  txtpatno.Text = ""
  modHelpVariable.CreateErrorReport()

End

Private Sub GetFollowStatus()

  Dim xday As Integer

  If $lstencDate Then
    If modBasic.$AutoRegistNoBillHour Then
      xday = CInt(modBasic.$AutoRegistNoBillHour)
    Else
      xday = 0
    Endif
    If xday Then
      If DateDiff($lstencDate, Now(), gb.Hour) < xday Then
        chkfollow.Value = True
        chkfollow.Enabled = False
      Else
        chkfollow.Value = False
        chkfollow.Enabled = False
      Endif
    Else
      chkfollow.Value = False
      chkfollow.Enabled = True
    Endif
  Else
    chkfollow.Value = False
    chkfollow.Enabled = True
  Endif

End

Public Sub btnOK_Click()

  Dim $hReport As CRegistLabel
  Dim xval As String
  Dim xpass As String
  Dim res As Result
  Dim sLongID As Long
  Dim ximgpath As String

  If txtpatno.Text Then
    If Not txtencounter.Text Then
      If modBasic.$RegistClearPast = "Yes" Then
        res = modDatabase.$myConn.Exec("select fldencounterval from tblencounter where fldpatientval=&1 and fldadmission=&2", Trim(txtpatno.Text), "Registered")
        For Each res
          If modNonMedical.GetFinanceClearance(res["fldencounterval"]) = True Then
          Else
            modPatientSub.EnterPatientImpDate(res["fldencounterval"], "Clearance", "")
          Endif
        Next
      Endif
    Endif
  Endif

  SaveRegistrationData()
  If $ImgPath Then
    modImage.InsertPatientImage("Patient", Trim(txtpatno.Text), $ImgPath)
  Endif
  Wait
  If txtencounter.Text Then
    If txtreference.Text = "Claim Code" Then
      xval = modClaim.GetClaimCidePatient(Trim(txtencounter.Text))
    Else If txtreference.Text = "Accident SSF" Then
      xval = modSSF.GetSSFClaimCodePatient(Trim(txtencounter.Text), "Accident SSF")
    Else If txtreference.Text = "Critical SSF" Then
      xval = modSSF.GetSSFClaimCodePatient(Trim(txtencounter.Text), "Critical SSF")
    Else If txtreference.Text = "Medical SSF" Then
      xval = modSSF.GetSSFClaimCodePatient(Trim(txtencounter.Text), "Medical SSF")
    Endif
    If xval Then
      Balloon.Info("Claim Code: " & xval, btnOK)
    Endif
    xpass = modGeneral.SendPatientPasswordForRemote(Trim(txtencounter.Text))
    OpenDemographics()
    AutoRegistrationSMS(txtencounter.Text, cmbconsult.Tag)
    If $imgList And If $imgList.Count Then
      For Each ximgpath In $imgList
        sLongID = modImage.SavePatientFileGeneral(Trim(txtencounter.Text), "Scanned Images", "Scanned Images:" & modString.GetDateString(Now()), ximgpath)
      Next
    Endif

    If modBasic.$RegistAutoBarcode = "Yes" Then
      modDevice.PrintBarCodeEnc(txtencounter.Text)
    Endif

    If modBasic.$RegistAutoSticker = "Yes" Then
      If modNonMedical.AllowRegistSlipWithInvoice(txtencounter.Text, cmbconsult.Text, cmbbillmode.Text) = True Then
        $hReport = New CRegistLabel(txtencounter.Text)
        modControlSub.OpenHTMLPreview(txtencounter.Text, $hReport.RegistLabelPath(), "LabelSize")
      Endif
    Endif

    If modBasic.$RegistAutoPrescription = "Yes" Then
      modPatientSub.PrintRegistExtraReport(txtencounter.Text)
    Endif

  Endif  'if encounter is present

End

Public Sub btnChange_Click()

  Dim res As Result
  Dim $DOBirth As Date

  If $selDate = True Then
    $DOBirth = dtdobmain.Value
  Else
    If txtmonths.Value = 0 Then
      If btnyear.Text = "Year" Then
        $DOBirth = DateAdd(Now(), gb.Year, 0 - CInt(txtyears.Value))
      Else If btnyear.Text = "Mon" Then
        $DOBirth = DateAdd(Now(), gb.Month, 0 - CInt(txtyears.Value))
      Else If btnyear.Text = "Day" Then
        $DOBirth = DateAdd(Now(), gb.Day, 0 - CInt(txtyears.Value))
      Endif

    Else
      If btnyear.Text = "Year" And If btnmon.Text = "Mon" Then
        $DOBirth = DateAdd(Now(), gb.Month, 0 - CInt(12 * txtyears.Value + txtmonths.Value))
      Else If btnyear.Text = "Mon" And If btnmon.Text = "Day" Then
        $DOBirth = DateAdd(Now(), gb.Day, 0 - CInt(30 * txtyears.Value + txtmonths.Value))
      Else If btnyear.Text = "Day" And If btnmon.Text = "Hour" Then
        $DOBirth = DateAdd(Now(), gb.Day, 0 - CInt(24 * txtyears.Value + txtmonths.Value))
      Endif

    Endif
  Endif

  If txtpatno.Text Then
    If txtnamefir.Text And If txtnamelast.Text And If cmbsex.Text Then
      res = modDatabase.$myConn.Edit("tblpatientinfo", "fldpatientval=&1 and fldadmitfile IS &2", Trim(txtpatno.Text), Null)
      If res.Available Then
        If res["fldencrypt"] = True Then
          res["fldptnamefir"] = modPassword.EncryptPatSimple(String.UCaseFirst(Trim(txtnamefir.text)))
          res["fldptnamelast"] = modPassword.EncryptPatSimple(String.UCaseFirst(Trim(txtnamelast.text)))
          res["fldptcontact"] = modPassword.EncryptPatSimple(Trim(txtcontact.text))
          res["fldemail"] = modPassword.EncryptPatSimple(Trim(txtemail.Text))
        Else
          res["fldptnamefir"] = String.UCaseFirst(Trim(txtnamefir.text))
          res["fldptnamelast"] = String.UCaseFirst(Trim(txtnamelast.text))
          res["fldptcontact"] = Trim(txtcontact.text)
          res["fldemail"] = Trim(txtemail.Text)
        Endif
        res["fldethniccode"] = txtethcode.Text
        res["fldptaddvill"] = String.UCaseFirst(Trim(txtaddfir.text))
        res["fldptaddward"] = Trim(txtward.Text)
        res["fldptadddist"] = String.UCaseFirst(Trim(cmbdistrict.text))
        res["fldptsex"] = String.UCaseFirst(cmbsex.text)
        res["fldptguardian"] = String.UCaseFirst(Trim(txtguardian.text))
        res["fldrelation"] = String.UCaseFirst(Trim(cmbrelation.Text))
        If chknull.Value = False Then
          res["fldptbirday"] = $DOBirth
        Endif

        ''--------- for police -------------
        If MMain.$IsPolice = True Then
          res["fldcategory"] = cmbcategory.Text
          res["fldrank"] = cmbrank.Text
          res["fldunit"] = cmbunit.Text
        Endif
        ''----------end -------------------

        res["fldptcode"] = txtpatcode.Text
        res["fldupuser"] = modBasic.$lbluser
        res["flduptime"] = Now()
        res["xyz"] = False
        res.Update()
        modPatientSub.RemovePatientCache(Trim(txtpatno.Text))
        FillRegistrationGrid(dtconsultdate.Value)
        Balloon.Info(("Information updated"), btnChange)
        Balloon.Delay = modBasic.$BalloonDelay
      Endif
    Endif
  Else
    Message.Warning(("Patient No is NULL"), ("OK"))
  Endif

End

''------------------------------------- form procedures ------------------------------------
Public Sub btngetpatno_Click()

  If chkinfant.Value = True Then
    txtnamefir.Text = "I/O " & txtnamefir.Text
  Endif
  GetPatientInfoAll()
  ''----------- for police ------------
  If MMain.$IsPolice = True Then
    btnrank.Visible = False
    btnunit.Visible = False
  Endif
  ''----------- end ---------------

End

Public Sub btngetpatno_GotFocus()

  If chkinfant.Value = True Then
    txtnamefir.Text = "I/O " & txtnamefir.Text
  Endif
  GetPatientInfoAll()
  ''----------- for police ------------
  If MMain.$IsPolice = True Then
    btnrank.Visible = False
    btnunit.Visible = False
  Endif
  ''----------- end ---------------

End

Private Sub GetPatientInfoAll()

  Dim res As Result
  Dim sql As String
  Dim lstdat As Date
  Dim xaddr As String[]
  Dim xscheme As String
  Dim xallow As Boolean

  $selDate = False
  dtdobmain.Value = ""
  $ImgPath = ""
  txtnamefir.Enabled = True
  txtnamelast.Enabled = True
  Panel3.Enabled = False
  If txtpatno.Text Then
    If cmbconsult.Text Then
      xallow = modPatient.GetRegistrationAllow(Trim(txtpatno.Text), cmbconsult.Text)
    Else
      xallow = modPatient.GetRegistrationAllow(Trim(txtpatno.Text))
    Endif
    If xallow = True Then
      If MMain.$IsPolice = True Then
        sql = "select fldptnamefir,fldptnamelast,fldethniccode,fldptaddvill,fldptaddward,fldptadddist,fldptsex,fldptcontact,fldptguardian,fldptbirday,fldptadmindate,fldemail,fldptcode,fldrelation,fldencrypt,fldcategory,fldrank,fldunit from tblpatientinfo where fldpatientval=&1"
      Else
        sql = "select fldptnamefir,fldptnamelast,fldethniccode,fldptaddvill,fldptaddward,fldptadddist,fldptsex,fldptcontact,fldptguardian,fldptbirday,fldptadmindate,fldemail,fldptcode,fldrelation,fldencrypt from tblpatientinfo where fldpatientval=&1"
      Endif
      res = modDatabase.$myConn.Exec(sql, Trim(txtpatno.Text))
      If res.Available = False Then
        modLinkDB.CheckPatientDataRemote(Trim(txtpatno.Text))
        txtpatno.SetFocus
      Else
        txtvisit.Text = modPatient.GetPatientHMISStattus(Trim(txtpatno.Text))
        cmbdistrict.Text = res["fldptadddist"]  ''district always before address
        cmbsex.Text = res["fldptsex"]
        If res["fldptaddward"] Then
          txtward.Text = res["fldptaddward"]
          txtaddfir.Text = res["fldptaddvill"]
        Else
          If res["fldptaddvill"] Then
            xaddr = Split(res["fldptaddvill"], "-")
            If xaddr.Count > 1 Then
              If IsInteger(xaddr[xaddr.Count - 1]) Then
                txtward.Text = xaddr[xaddr.Count - 1]
                txtaddfir.Text = xaddr.Copy(0, xaddr.Count - 1).Join("-")
              Else
                txtward.Text = ""
                txtaddfir.Text = xaddr.Join("-")
              Endif
            Else
              txtward.Text = ""
              txtaddfir.Text = xaddr.Join("-")
            Endif
          Endif
        Endif
        txtguardian.Text = res["fldptguardian"]
        cmbrelation.Text = res["fldrelation"]
        If modBasic.$SuperUser = True Then
          txtnamefir.Text = modPassword.DecryptPatData(res["fldptnamefir"], res["fldencrypt"])
          txtnamelast.Text = modPassword.DecryptPatData(res["fldptnamelast"], res["fldencrypt"])
          txtemail.Text = modPassword.DecryptPatData(res["fldemail"], res["fldencrypt"])
          txtcontact.Text = modPassword.DecryptPatData(res["fldptcontact"], res["fldencrypt"])
        Else
          txtnamefir.Text = res["fldptnamefir"]
          txtnamelast.Text = res["fldptnamelast"]
          txtemail.Text = res["fldemail"]
          txtcontact.Text = res["fldptcontact"]
        Endif
        txtethcode.Text = res["fldethniccode"]
        txtpatcode.Text = res["fldptcode"]
        If res["fldptbirday"] Then
          chknull.Value = False
          dtdobmain.Value = res["fldptbirday"]
          $selDate = True
          modDateSub.DateToYearandMonth(res["fldptbirday"], txtyears, txtmonths, btnyear, btnmon)
        Else
          chknull.Value = True
        Endif

        ''--------- for police -------------
        If MMain.$IsPolice = True Then
          cmbcategory.Text = res["fldcategory"]
          cmbrank.Text = res["fldrank"]
          cmbunit.Text = res["fldunit"]
        Endif
        ''----------end -------------------

        lblstatus.Text = "REGISTERED PATIENT"
        lstdat = modPatient.GetRecordDate(modPatient.GetLastEncoutnerFromPatNo(Trim(txtpatno.Text)))
        $lstencDate = modPatient.GetLastPaidConsultDate(Trim(txtpatno.Text))
        If chkfollow.Enabled = True Then
          GetFollowStatus()
        Endif
        If lstdat Then
          If lstdat >= modDate.StartSqlDate(Date()) And If lstdat <= modDate.EndSqlDate(Date()) Then
            lbllast.Text = "TODAY"
            lbllast.Font.Bold = True
          Else
            lbllast.Text = Left(modDate.GetWeekDay(lstdat), 3) & Space(1) & modReportVar.GetDateTimeReport(lstdat, gb.MediumDate)
            lbllast.Font.Bold = False
          Endif
        Else
          lbllast.Text = ""
        Endif
        If Not cmbdisctype.Text Then
          xscheme = modBillings.GetDefaultDiscountOnRegistration(Trim(txtpatno.Text), modBasic.$compID)
          modFillContainer.ComboInsertNotItem(cmbdisctype, xscheme)
        Endif
        If Not cmbdisctype.Text Then
          modFillContainer.ComboInsertNotItem(cmbdisctype, modBasic.$RegistDefaultDisc)
        Endif
        LoadDiscCreditVal()
        If modBasic.$RegistLockProfile Then
          If DateDiff(res["fldptadmindate"], Now(), gb.Hour) > modBasic.$RegistLockProfile Then
            btnChange.Enabled = False
          Endif
        Endif
        cmbconsult.SetFocus
      Endif

      If Not txtnamefir.Text Then
        If modBasic.$AllowPatNoEntry = "Yes" Then
          txtnamefir.SetFocus
        Else
          txtpatno.SetFocus
        Endif
      Endif

    Else
      txtpatno.Text = ""
      Message.Warning("Multiple Registration is disabled", ("OK"))
      txtnamefir.Text = ""
      txtnamelast.Text = ""
      txtpatcode.Text = ""
      cmbdisctype.Text = ""
      txtpatno.SetFocus
    Endif
  Else
    If rbbook.Value = True Or If rbfile.Value = True Then
      xscheme = modBillings.GetDefaultDiscountFreeRegistration(modBasic.$compID)
      modFillContainer.ComboInsertNotItem(cmbdisctype, xscheme)
    Else
      If Not cmbdisctype.Text Then
        xscheme = modBillings.GetDefaultDiscountFreeRegistration(modBasic.$compID)
        modFillContainer.ComboInsertNotItem(cmbdisctype, xscheme)
      Endif
    Endif
    LoadDiscCreditVal()
    txtnamefir.SetFocus
  Endif

End

Private Sub LoadDiscCreditVal()

  Dim resx As Result

  txtreference.Text = ""
  txtdiscnt.Value = 0
  txtcredit.Value = 0
  If cmbdisctype.Text Then
    resx = modDatabase.$myConn.Exec("select fldbillingmode,fldamount,fldcredit,fldreference,fldlimit,fldyear from tbldiscount where fldtype=&1", cmbdisctype.Text)
    If resx.Available Then
      ''billingmode
      If resx["fldbillingmode"] Then
        cmbbillmode.Text = resx["fldbillingmode"]
        cmbbillmode.Enabled = False
      Else
        cmbbillmode.Text = modBasic.$RegistDefaultMode
      Endif
      ''claim code
      If resx["fldreference"] Then
        If resx["fldreference"] = "Claim Code" Then
          txtreference.Text = "Claim Code"
        Else If resx["fldreference"] = "Accident SSF" Then
          txtreference.Text = "Accident SSF"
        Else If resx["fldreference"] = "Critical SSF" Then
          txtreference.Text = "Critical SSF"
        Else If resx["fldreference"] = "Medical SSF" Then
          txtreference.Text = "Medical SSF"
        Endif
      Endif
      ''credit/discount limit
      If resx["fldlimit"] Then
        If resx["fldlimit"] = "YearlyDiscount" Then
          If resx["fldamount"] Then
            $DiscAmount = resx["fldamount"]
            If resx["fldyear"] Then
              $ValidExpiry = DateAdd(resx["fldyear"], gb.Year, 1)
            Endif
          Endif
        Else If resx["fldlimit"] = "YearlyCreditAMT" Then
          If resx["fldcredit"] Then
            $CredAmount = resx["fldcredit"]
            If resx["fldyear"] Then
              $ValidExpiry = DateAdd(resx["fldyear"], gb.Year, 1)
            Endif
          Endif
        Endif
      Endif

    Endif
    If rbfile.Value = True Or If rbbook.Value = True Then
      modBillings.GetDefDiscFixOnRegistration(cmbdisctype)
    Endif
  Endif
  If cmbbillmode.Text Then
    If modBasic.$RegistFixMode = "Yes" Then
      cmbbillmode.Enabled = False
    Else If modBasic.$RegistFixMode = "No" Then
      cmbbillmode.Enabled = True
    Endif
  Endif

End

Public Sub chkconsult_Click()

  modSettings.EnterCheckSetting(chkconsult, "Registration/AutoConsultation")

End

Public Sub txtethcode_KeyRelease()

  If Key.Code = Key.Down Then
    GetEthncicityRegd()
  Endif

End

Public Sub txtethcode_GotFocus()

  If modBasic.$RegistEthnicityPopUp = "Yes" Then
    GetEthncicityRegd()
  Endif

End

Private Sub GetEthncicityRegd()

  Dim xval As String
  Dim sList As String[] = ["Dalit", "Janajati", "Madhesi", "Muslim", "Brahmin/Chettri", "Other"]

  If Not txtethcode.Text
    xval = GridViewNew("Select Ethnicity", sList, False, txtnamelast, Panel1.Height - Panel2.Height - txtnamelast.Top)
    If xval Then
      txtethcode.Text = modMisc.GetEthnicStringCode(xval)
    Endif
  Endif

End

Public Sub txtaddfir_KeyRelease()

  modFillContainer.AutoFillComboBox(txtaddfir)
  If modBasic.$UnLockAddress = "Yes" Then
  Else
    modFillContainer.RestrictComboToContent(txtaddfir)
  Endif

End

Public Sub cmbdistrict_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbdistrict)
  If modBasic.$UnLockDistrict = "Yes" Then
  Else
    modFillContainer.RestrictComboToContent(cmbdistrict)
  Endif

End

Public Sub cmbsex_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbsex)
  modFillContainer.RestrictComboToContent(cmbsex)

End

Public Sub cmbsex_LostFocus()

  modFillContainer.RestrictCombo(cmbsex)

End

Public Sub cmbcategory_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbcategory)
  modFillContainer.RestrictComboToContent(cmbcategory)

End

Public Sub cmbrelation_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbrelation)
  If modBasic.$UnLockRelation = "Yes" Then
  Else
    modFillContainer.RestrictComboToContent(cmbrelation)
  Endif

End

Public Sub cmbconsult_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbconsult)
  modFillContainer.RestrictComboToContent(cmbconsult)

End

Public Sub cmbconsult_LostFocus()

  modFillContainer.RestrictCombo(cmbconsult)

End

Public Sub cmbdisctype_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbdisctype)
  modFillContainer.RestrictComboToContent(cmbdisctype)

End

Public Sub cmbdisctype_LostFocus()

  modFillContainer.RestrictCombo(cmbdisctype)

End

Public Sub cmbbillmode_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbbillmode)
  modFillContainer.RestrictComboToContent(cmbbillmode)

End

Public Sub cmbbillmode_LostFocus()

  modFillContainer.RestrictCombo(cmbbillmode)

End

Public Sub dtdobmain_Click()

  If dtdobmain.Value Then
    If dtdobmain.Value > modDate.EndSqlDate(Now()) Then
      dtdobmain.Value = ""
      Message.Warning("Incorrect Date and Time", ("OK"))
    Else
      $selDate = True
      modDateSub.DateToYearandMonth(dtdobmain.Value, txtyears, txtmonths, btnyear, btnmon)
    Endif
  Endif

End

Public Sub btnnepdate_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtdobmain.Value))
  If xx Then
    dtdobmain.Value = modDate.ConvertToEnglishdate(xx)
  Endif
  If dtdobmain.Value Then
    If dtdobmain.Value > modDate.EndSqlDate(Now()) Then
      dtdobmain.Value = ""
      Message.Warning("Incorrect Date and Time", ("OK"))
    Else
      $selDate = True
      modDateSub.DateToYearandMonth(dtdobmain.Value, txtyears, txtmonths, btnyear, btnmon)
    Endif
  Endif

End

Public Sub cmbdisctype_Click()

  LoadDiscCreditVal()

End

Public Sub btnconsult_Click()

  Dim xList As Variant[]
  Dim xMedUser As String[]

  If modBasic.$LockConsultant = "LockByQuota" Then
    xList = modConsult.GetUserPostingList(cmbconsult.Text, dtconsultdate.Value, cmbbillmode.Text)
  Else
    xList = modBasic.$OPConsulUserList
  Endif
  xMedUser = MedicalSelectedValue(("Select Consultant"), xList)
  If xMedUser And If xMedUser.Count Then
    btnconsult.Tag = xMedUser[0]
    btnconsult.Text = xMedUser[1]
  Else
    btnconsult.Tag = ""
    btnconsult.Text = ""
  Endif

End

Public Sub btnyear_Click()

  If btnyear.Text = "Year" Then
    btnyear.Text = "Mon"
    btnmon.Text = "Day"
  Else If btnyear.Text = "Mon" Then
    btnyear.Text = "Day"
    btnmon.Text = "Hour"
  Else If btnyear.Text = "Day" Then
    btnyear.Text = "Year"
    btnmon.Text = "Mon"
  Endif

End

Private Sub DateBoxEntry()

  If txtyears.Value = 0 And If txtmonths.Value = 0 Then
    chknull.Value = True
  Else
    chknull.Value = False
  Endif

  If txtmonths.Value > 12 And If btnmon.Text = "Mon" Then
    txtmonths.Value = 0
    Message.Warning(("Wrong Age value"), ("OK"))
  Else If txtmonths.Value > 31 And If btnmon.Text = "Day" Then
    txtmonths.Value = 0
    Message.Warning(("Wrong Age value"), ("OK"))
  Else If txtmonths.Value > 24 And If btnmon.Text = "Hour" Then
    txtmonths.Value = 0
    Message.Warning(("Wrong Age value"), ("OK"))
  Else
    $selDate = False
  Endif

End

Public Sub txtyears_LostFocus()

  DateBoxEntry()

End

Public Sub txtmonths_LostFocus()

  DateBoxEntry()

End

Public Sub btnconsult_KeyRelease()

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    If btnconsult.Tag Then
      '       cmbdisctype.SetFocus
    Else
      btnconsult_Click()
    Endif
  Endif

End

Public Sub txtpatcode_LostFocus()

  Dim xpatno As String

  If txtpatcode.Text Then
    xpatno = modPatient.GetPatientNoByHospCode(Trim(txtpatcode.Text))
    If xpatno Then
      If Message.Question("Code already used with " & xpatno & " . Do you want to continue?", ("NO"), ("YES")) = 1 Then
        txtpatno.Text = xpatno
        txtpatno.SetFocus
      Endif
    Endif
  Endif

End

Public Sub btnhospcode_Click()

  Dim xval As String

  xval = InputBox(("Enter Patient's Code/PAN"), "Code/PAN", "")
  If xval Then
    txtpatno.Text = modPatient.GetPatientNoByHospCode(xval)
  Endif

End

Public Sub btnfindpatno_Click()

  Dim xval As String

  xval = InputBox(("Enter Patient's Encounter ID"), "Encounter ID", "")
  If xval Then
    txtpatno.Text = modPatient.GetPatientNoByEnc(xval)
  Endif

End

''------------------------------------------- Reports------------------------------------
Public Sub dtnepcal_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtconsultdate.Value))
  If xx Then
    dtconsultdate.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub btnfullrep_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, "REGISTRATION REPORT", modReportVar.GetDateTimeReport(btnreport.Tag, gb.MediumDate))

End

Public Sub btnreport_Click()

  Dim sDate As Date

  sDate = GetDateValue("Select Date", "Registration", Date())
  If sDate Then
    FillRegistrationGrid(sDate)
  Endif

End

''-----------------------------------Grid View and menu items ----------------------------------------
Private Sub FillRegistrationGrid(sDate As Date)

  Dim sql As String

  btnreport.Tag = sDate
  sql = "select fldencounterval,fldencounterval,fldencounterval,fldencounterval,fldadmitlocat,fldregdate,fldpatientval,fldencounterval,fldencounterval from tblencounter where fldregdate>=&1 and fldregdate<=&2 and fldcomp=&3"                                      ''
  $rData = modDatabase.$myConn.Exec(sql, modDate.StartSqlDate(sDate), modDate.EndSqlDate(sDate), modBasic.$compID)
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
  With GridView1
    .Columns[0].Width = 100 * modBasic.$AppWidthRatio
    .Columns[1].Width = 200 * modBasic.$AppWidthRatio
    .Columns[2].Width = 75 * modBasic.$AppWidthRatio
    .Columns[3].Width = 200 * modBasic.$AppWidthRatio
    .Columns[4].Width = 100 * modBasic.$AppWidthRatio
    .Columns[5].Width = 1
    .Columns[6].Width = 1
    .Columns[7].Width = 25 * modBasic.$AppWidthRatio
    .Columns[8].Width = 25 * modBasic.$AppWidthRatio

    .Columns[0].Text = "Encounter"
    .Columns[1].Text = "Name"
    .Columns[2].Text = "Gender"
    .Columns[3].Text = "Address"
    .Columns[4].Text = "Department"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer)

  $rData.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView1, Row)
  If Column = 1 Then
    GridView1.Data.Text = modPatient.GetPatientNameByEnc($rData[$aMyFields[Column]])
  Else If Column = 2 Then
    GridView1.Data.Text = modPatient.GetPatientSex($rData[$aMyFields[Column]])
  Else If Column = 3 Then
    GridView1.Data.Text = modPatient.GetPatientAddressByEnc($rData[$aMyFields[Column]])
  Else If Column = 7 Then
    GridView1.Data.Picture = Picture["icon:/small/attach"]
    GridView1.Data.Text = ""
  Else If Column = 8 Then
    GridView1.Data.Picture = Picture["icon:/small/edit"]
    GridView1.Data.Text = ""
  Else
    GridView1.Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Public Sub GridView1_Click()

  Dim hForm As FmIndexForm

  If GridView1.Rows.Selection.Count Then
    If GridView1.Column = 7 Then
      $sValue = GridView1[GridView1.Row, 0].Text
      Me.Close(True)
    Else If GridView1.Column = 8 Then
      hForm = New FmIndexForm(GridView1[GridView1.Row, 0].Text, True, True)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub GridView1_Menu()

  mnuhide.Popup

End

Public Sub mnusearch_Click()

  txtpatno.Text = PatSearch("PatientNo")

End

Public Sub mnugeneral_Click()

  modPatientSub.RegistBlankPatient()
  modPatientSub.RegistBlankEncounter()
  FillRegistrationGrid(dtconsultdate.Value)

End

Public Sub mnulabel_Click()

  Dim $hReport As CRegistLabel

  If GridView1.Rows.Selection.Count > 0 Then
    If modNonMedical.AllowRegistSlipWithInvoiceEncid(GridView1[GridView1.Row, 0].Text) = True Then
      $hReport = New CRegistLabel(GridView1[GridView1.Row, 0].Text)
      modControlSub.OpenHTMLPreview(GridView1[GridView1.Row, 0].Text, $hReport.RegistLabelPath(), "LabelSize")
    Endif
  Endif

End

Public Sub mnubarcode_Click()

  If GridView1.Rows.Selection.Count > 0 Then
    modDevice.PrintBarCodeEnc(GridView1[GridView1.Row, 0].Text)
  Endif

End

Public Sub mnuscanfile_Click()

  $imgList = GetImageMulti()

End

Public Sub mnupic_Click()

  Dim hForm As FmPersonImage

  If GridView1.Rows.Selection.Count > 0 Then
    hForm = New FmPersonImage("Patient", GridView1[GridView1.Row, 6].Text, False)
    hForm.ShowModal
  Endif

End

Public Sub mnupatdemog_Click()

  Dim hForm1 As FmPatdemograph
  Dim hForm As FmPatAccEdit

  If GridView1.Rows.Selection.Count > 0 Then
    If modBasic.$RegistAutoDemograph Then
      Select modBasic.$RegistAutoDemograph
        Case "Acount", "Clinical"
          hForm1 = New FmPatdemograph(GridView1[GridView1.Row, 0].Text, modBasic.$RegistAutoDemograph)
          hForm1.ShowModal
        Case "Essential"
          hForm = New FmPatAccEdit(GridView1[GridView1.Row, 0].Text)
          hForm.ShowModal
      End Select
    Endif
  Endif

End

Public Sub mnuptno_Click()

  If GridView1.Rows.Selection.Count > 0 Then
    Message.Info("Patient No: " & modPatient.GetPatientNoByEnc(GridView1[GridView1.Row, 0].Text), ("OK"))
  Endif

End

'
''
'''
''--------------------------------------enable/disable textbox ------------------------------
Private Sub TextBoxEnableSetting(chk As CheckBox, TxtBox As TextBox)

  If chk.Value = True Then
    TxtBox.Enabled = True
  Else If chk.Value = False Then
    TxtBox.Enabled = False
  Endif

End

Private Sub ComboBoxEnableSetting(chk As CheckBox, CmboBox As ComboBox)

  If chk.Value = True Then
    CmboBox.Enabled = True
  Else If chk.Value = False Then
    CmboBox.Enabled = False
  Endif

End

Public Sub chkaddfir_Click()

  modSettings.EnterCheckSetting(chkaddfir, "RegistrationForm/Enable_Address")
  ComboBoxEnableSetting(chkaddfir, txtaddfir)
  TextBoxEnableSetting(chkaddfir, txtward)

End

Public Sub chkdistrict_Click()

  modSettings.EnterCheckSetting(chkdistrict, "RegistrationForm/Enable_District")
  ComboBoxEnableSetting(chkdistrict, cmbdistrict)

End

Public Sub chkcontact_Click()

  modSettings.EnterCheckSetting(chkcontact, "RegistrationForm/Enable_Contact")
  TextBoxEnableSetting(chkcontact, txtcontact)

End

Public Sub chkemail_Click()

  modSettings.EnterCheckSetting(chkemail, "RegistrationForm/Enable_EMail")
  TextBoxEnableSetting(chkemail, txtemail)

End

Public Sub chkguardian_Click()

  modSettings.EnterCheckSetting(chkguardian, "RegistrationForm/Enable_Guardian")
  TextBoxEnableSetting(chkguardian, txtguardian)

End

Public Sub chkrelation_Click()

  modSettings.EnterCheckSetting(chkrelation, "RegistrationForm/Enable_Relation")
  ComboBoxEnableSetting(chkrelation, cmbrelation)

End

Public Sub chkptcode_Click()

  modSettings.EnterCheckSetting(chkptcode, "RegistrationForm/Enable_ExtCode")
  TextBoxEnableSetting(chkptcode, txtpatcode)

End

Public Sub chkdate_Click()

  modSettings.EnterCheckSetting(chkdate, "RegistrationForm/Enable_ConsultDate")
  If chkdate.Value = True Then
    dtconsultdate.Enabled = True
    dtconsultime.Enabled = True
  Else If chkdate.Value = False Then
    dtconsultdate.Enabled = False
    dtconsultime.Enabled = False
  Endif

End

Private Sub ShowConsDate()

  modSettings.ShowCheckBox(chkdate, "RegistrationForm/Enable_ConsultDate")
  If chkdate.Value = True Then
    dtconsultdate.Enabled = True
    dtconsultime.Enabled = True
  Else If chkdate.Value = False Then
    dtconsultdate.Enabled = False
    dtconsultime.Enabled = False
  Endif

End

Public Sub chkphysician_Click()

  modSettings.EnterCheckSetting(chkphysician, "RegistrationForm/Enable_Consultant")
  If chkphysician.Value = True Then
    btnconsult.Enabled = True
  Else If chkphysician.Value = False Then
    btnconsult.Enabled = False
  Endif

End

Private Sub ShowConsulDoc()

  modSettings.ShowCheckBox(chkphysician, "RegistrationForm/Enable_Consultant")
  If chkphysician.Value = True Then
    btnconsult.Enabled = True
  Else If chkphysician.Value = False Then
    btnconsult.Enabled = False
  Endif

End

Private Sub DisplayTextBoxEnableSetting()

  modSettings.ShowCheckBox(chkaddfir, "RegistrationForm/Enable_Address")
  ComboBoxEnableSetting(chkaddfir, txtaddfir)
  TextBoxEnableSetting(chkaddfir, txtward)

  modSettings.ShowCheckBox(chkdistrict, "RegistrationForm/Enable_District")
  ComboBoxEnableSetting(chkdistrict, cmbdistrict)

  modSettings.ShowCheckBox(chkcontact, "RegistrationForm/Enable_Contact")
  TextBoxEnableSetting(chkcontact, txtcontact)

  modSettings.ShowCheckBox(chkemail, "RegistrationForm/Enable_EMail")
  TextBoxEnableSetting(chkemail, txtemail)

  modSettings.ShowCheckBox(chkguardian, "RegistrationForm/Enable_Guardian")
  TextBoxEnableSetting(chkguardian, txtguardian)

  modSettings.ShowCheckBox(chkrelation, "RegistrationForm/Enable_Relation")
  ComboBoxEnableSetting(chkrelation, cmbrelation)

  modSettings.ShowCheckBox(chkptcode, "RegistrationForm/Enable_ExtCode")
  TextBoxEnableSetting(chkptcode, txtpatcode)

End

Private Function GetConsultLockValue() As Boolean

  Dim xLock As Boolean
  Dim regd As Integer
  Dim quota As Integer
  Dim bokplan As Integer

  If modBasic.$RegistLockToQuota = "Yes" Then
    bokplan = modConsult.GetPatientBooked("Planned", cmbconsult.Text, dtconsultdate.Value, cmbbillmode.Text, btnconsult.Tag)
    txtwait.Value = bokplan
    regd = modConsult.GetPatientRegisteredValid(cmbconsult.Text, dtconsultdate.Value, cmbbillmode.Text, btnconsult.Tag)
    txtregd.Value = regd
    quota = modConsult.GetPatientQuota(cmbconsult.Text, dtconsultdate.Value, cmbbillmode.Text, btnconsult.Tag)
    txtmaxquota.Value = quota

    If quota Then
      If (bokplan + regd + 1) > quota
        xLock = True
        Message.Warning(("Patient Allocation Quota reached"), ("OK"))
      Else
        xLock = False
      Endif
    Else
      xLock = False
    Endif
  Else
    xLock = False
  Endif

  Return xLock

End

Private Function GetConsultLock() As Boolean

  Dim xLock As Boolean
  Dim res As Result

  If txtbookingid.Text Then
    If rbbook.Value = True Then
      If modBasic.$RegistQuotaQueMode = "ConsultOnly" Then
        res = modDatabase.$myConn.Exec("select fldbookingval from tblpatientbook where fldconsultdate>=&1 and fldconsultdate<=&2 and flduserid=&3 and fldstate like &4 and fldbookingval=&5 and fldcomp=&6", modDate.StartSqlDate(dtconsultdate.Value), modDate.EndSqlDate(dtconsultdate.Value), btnconsult.Tag, "Planned", Trim(txtbookingid.Text), modBasic.$compID)

      Else If modBasic.$RegistQuotaQueMode = "DepartOnly" Then
        res = modDatabase.$myConn.Exec("select fldbookingval from tblpatientbook where fldconsultdate>=&1 and fldconsultdate<=&2 and fldadmitlocat=&3 and fldstate like &4 and fldbookingval=&5 and fldcomp=&6", modDate.StartSqlDate(dtconsultdate.Value), modDate.EndSqlDate(dtconsultdate.Value), cmbconsult.Text, "Planned", Trim(txtbookingid.Text), modBasic.$compID)

      Else If modBasic.$RegistQuotaQueMode = "Consult+Mode" Then
        res = modDatabase.$myConn.Exec("select fldbookingval from tblpatientbook where fldconsultdate>=&1 and fldconsultdate<=&2 and fldbillingmode like &3 and flduserid=&4 and fldstate like &5 and fldbookingval=&6 and fldcomp=&7", modDate.StartSqlDate(dtconsultdate.Value), modDate.EndSqlDate(dtconsultdate.Value), cmbbillmode.Text, btnconsult.Tag, "Planned", Trim(txtbookingid.Text), modBasic.$compID)

      Else
        If btnconsult.Tag Then
          res = modDatabase.$myConn.Exec("select fldbookingval from tblpatientbook where fldconsultdate>=&1 and fldconsultdate<=&2 and fldadmitlocat=&3 and fldbillingmode like &4 and flduserid=&5 and fldstate like &6 and fldbookingval=&7 and fldcomp=&8", modDate.StartSqlDate(dtconsultdate.Value), modDate.EndSqlDate(dtconsultdate.Value), cmbconsult.Text, cmbbillmode.Text, btnconsult.Tag, "Planned", Trim(txtbookingid.Text), modBasic.$compID)                                                  ''
        Else
          res = modDatabase.$myConn.Exec("select fldbookingval from tblpatientbook where fldconsultdate>=&1 and fldconsultdate<=&2 and fldadmitlocat=&3 and fldbillingmode like &4 and fldstate like &5 and fldbookingval=&6 and fldcomp=&7", modDate.StartSqlDate(dtconsultdate.Value), modDate.EndSqlDate(dtconsultdate.Value), cmbconsult.Text, cmbbillmode.Text, "Planned", Trim(txtbookingid.Text), modBasic.$compID)                                                  ''
        Endif

      Endif

      If res.Available Then
        xLock = False
      Else
        xLock = GetConsultLockValue()
      Endif
    Else
      xLock = GetConsultLockValue()
    Endif
  Else
    xLock = GetConsultLockValue()
  Endif
  Return xLock

End

Public Sub btnconsult_Change()

  If btnconsult.Text = "" Then
    btnconsult.Tag = ""
  Endif

End

Public Sub btnwebcam_Click()

  Dim hForm As FmPersonImage

  If txtpatno.Text Then
    hForm = New FmPersonImage("Patient", Trim(txtpatno.Text), False)
    hForm.ShowModal
  Else
    If Not $ImgPath Then
      $ImgPath = modImage.GetWebCamValue(modDevice.WebCamDevice())
    Endif
  Endif

End

Public Sub btnshowrefr_Click()

  If cmbconsult.Text And If cmbbillmode.Text Then
    btnwebcam.Enabled = False
    If modBasic.$RegistAutoWebcam = "Yes" Then
      If Not $ImgPath Then
        $ImgPath = modImage.GetWebCamValue(modDevice.WebCamDevice())
      Endif
    Endif

    If dtconsultdate.Value Then
      If GetConsultLock() = True Then
        btnOK.Enabled = False
        txtpatno.SetFocus
      Else
        btnshowrefr.Tag = ""
        btnOK.Enabled = True
      Endif
    Endif
    btnshowrefr.Picture = Picture["icon:/small/down"]
  Endif

End

Public Sub btnshowrefr_KeyRelease()

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    btnshowrefr_Click()
  Endif

End

''-------------------------------- extra ---------------------------------------
Private Sub AutoRegistrationSMS(encid As String, sUser As String)

  Dim smsfir As Boolean
  Dim smssec As Boolean

  If modBasic.$RegistAutoPatientSMS = "Yes" Then
    smsfir = True
  Endif
  If modBasic.$RegistAutoPhysicianSMS = "Yes" Then
    smssec = True
  Endif

  If smsfir = True Or If smssec = True Then

    If smsfir = True Then
      modDevice.SendMessageToRegistPatient(encid)
    Endif

    If smssec = True Then
      If sUser Then
        modDevice.SendMessageToRegistPhysician(encid, sUser)
      Endif
    Endif

  Endif

End

Public Sub btnsms_Click()

  If btnconsult.Tag Then
    modDevice.SendMessageToRegistPhysician(txtencounter.Text, btnconsult.Tag)
  Endif

End

Public Sub mnusms_Click()

  If GridView1.Rows.Selection.Count > 0 Then
    modDevice.SendMessageToRegistPatient(GridView1[GridView1.Row, 0].Text)
  Endif

End

Public Sub btnfindfile_Click()

  Dim xval As String

  xval = InputBox(("Enter Patient's File Number"), "File Number", "")
  If xval Then
    txtpatno.Text = modPatient.GetPatientNoByFileNo(xval)
  Endif

End

Public Sub mnuprescnote_Click()

  If GridView1.Rows.Selection.Count > 0 Then
    modPatientSub.PrintRegistExtraReport(GridView1[GridView1.Row, 0].Text)
  Endif

End

Public Sub chknull_Click()

  If chknull.Value = True Then
    txtyears.Value = 0
    txtmonths.Value = 0
  Endif

End

Public Sub btnsurname_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("flditem", "tblsurname")
  hForm.ShowModal
  modBasic.FillSurnameList()

End

Public Sub btnadddist_Click()

  ' Dim hForm As FmAddVarThree
  '
  ' hForm = New FmAddVarThree("fldpality", "fldprovince", "tblmunicipals", "flddistrict", "")
  ' hForm.ShowModal
  ' cmbdistrict.List = modMedicine.GetDistrictListFromMap()

End

Public Sub btnrelation_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("flditem", "tblrelations")
  hForm.ShowModal
  modBasic.FillRelationList()
  cmbrelation.List = modBasic.$RelationList

End

Public Sub txtpatno_KeyPress()

  ' If Key.Code = Key.Down Then
  '   If modBasic.$AutoEncSuffix = "Yes" Then
  '     txtpatno.Text = txtpatno.Text & modBasic.$HospCode
  '   Endif
  ' Else
  modGeneralMain.InputUpCaseOnly()
  ' Endif

End

Public Sub txtpatno_KeyRelease()

  If Not txtpatno.Text Then
    If Key.Code = Key.Down Then
      txtpatno.Text = PatSearch("PatientNo")
      txtpatno.SetFocus
    Endif
  Endif

End

Public Sub txtbookingid_KeyPress()

  modGeneralMain.InputTextKeyOnly()

End

Public Sub mnuscan_Click()

  Dim encid As String

  encid = InputBox(("Put Encounter ID"), "Search", "")
  If encid Then
    txtpatno.Text = modPatient.GetPatientNoByEnc(encid)
  Endif
  ' ScanCompleteProfile()

End

' Private Sub ScanCompleteProfile()
'
'   Dim xVal As String
'   Dim xdate As Date
'   Dim xaddr As String[]
'   Dim xxx As Variant
'   Dim xcoll As JSONCollection
'
'   xVal = modDevice.ChooseBarCodeSource()
'   '   Exec ["zbarimg", "-q", "--raw", "/home/sish/Desktop/regist.png"] To xVal
'   If xVal Then
'     If IsNumber(xVal) Then
'     Else
'
'       Try xxx = JSON.Decode(xVal, True)
'       If xxx Is JSONCollection Then
'         xcoll = xxx
'         txtpatno.Text = xcoll["PATIENTNO"]
'         txtnamefir.Text = xcoll["NAME"]
'         txtnamelast.Text = xcoll["SURNAME"]
'         cmbdistrict.Text = xcoll["DISTRICT"]
'         If xcoll["ADDRESS"] Then
'           xaddr = Split(xcoll["ADDRESS"], "-")
'           txtaddfir.Text = xaddr[0]
'           If xaddr.Count = 2 Then
'             txtward.Text = xaddr[1]
'           Endif
'         Endif
'         cmbsex.Text = xcoll["GENDER"]
'         xdate = Val(xcoll["DOB"])
'         If xdate Then
'           dtdobmain.Value = xdate
'           modDateSub.DateToYearandMonth(xdate, txtyears, txtmonths, btnyear, btnmon)
'         Endif
'         txtcontact.Text = xcoll["CONTACT"]
'         txtemail.Text = xcoll["EMAIL"]
'         txtguardian.Text = xcoll["GUARDIAN"]
'         cmbrelation.Text = xcoll["RELATION"]
'         txtpatcode.Text = xcoll["CODE"]
'         If txtpatno.Text Then
'           GetPatientInfoAll()
'         Endif
'         cmbconsult.SetFocus
'       Endif
'
'     Endif
'   Endif
'
' End

''================= Grid view ===============
Public Sub txtnamelast_KeyRelease()

  If Key.Code = Key.Down Then
    GetSurnameRegd()
  Endif

End

Public Sub txtnamelast_GotFocus()

  If modBasic.$RegistSurnamePopUp = "Yes" Then
    GetSurnameRegd()
    txtethcode.SetFocus
  Endif

End

Private Sub GetSurnameRegd()

  If Not txtnamelast.Text Then
    If modBasic.$SurNameList Then
      txtnamelast.Text = GridViewNew("Select SurName", modBasic.$SurNameList, False, txtnamelast, Panel1.Height - Panel2.Height - txtnamelast.Top)
    Endif
  Endif

End

Public Sub txtaddfir_GotFocus()

  Dim xbool As Boolean

  If modBasic.$UnLockAddress = "Yes" Then
    xbool = True
  Else
    xbool = False
  Endif

  If Not txtaddfir.Text Then
    If modBasic.$RegistGridFormat = "Yes" Then
      txtaddfir.Text = GridViewNew("Select Address", txtaddfir.List, xbool, txtaddfir, Panel1.Height - Panel2.Height - txtaddfir.Top)
    Endif
  Endif

End

Public Sub cmbdistrict_Click()

  txtaddfir.Clear()
  If cmbdistrict.Text Then
    txtaddfir.List = modDataRepo.GetMunicipalsByDistrict(cmbdistrict.Text)
  Endif

End

Public Sub cmbsex_GotFocus()

  If txtnamelast.Text Then
    If Not txtethcode.Text Then
      txtethcode.Text = modGeneral.GetEthnicCode(Trim(txtnamelast.Text))
    Endif
  Endif

End

''for police
Public Sub cmbcategory_Click()

  Dim res As Result

  If cmbcategory.Text Then
    cmbdisctype.List = modControlSub.GetDirectFillresultNoNull(modDatabase.$myConn.Exec("select fldpackage as col from tblschemecategory where fldcategory=&1", cmbcategory.Text))

    res = modDatabase.$myConn.Exec("select fldpackage,fldhiderank,fldhideunit from tblcategorylist where fldcategory=&1", cmbcategory.Text)
    If res.Available Then
      cmbdisctype.Text = res["fldpackage"]
      If res["fldhiderank"] = True Then
        cmbrank.Text = ""
        cmbrank.Enabled = False
      Else
        cmbrank.Enabled = True
      Endif
      If res["fldhideunit"] = True Then
        cmbunit.Text = ""
        cmbunit.Enabled = False
      Else
        cmbunit.Enabled = True
      Endif
    Endif
  Endif

End

Public Sub cmbdistrict_GotFocus()

  Dim xbool As Boolean

  If modBasic.$UnLockDistrict = "Yes" Then
    xbool = True
  Else
    xbool = False
  Endif

  If Not cmbdistrict.Text Then
    If modBasic.$DistrictList Then

      If modBasic.$RegistGridFormat = "Yes" Then
        cmbdistrict.Text = GridViewNew("Select District", modBasic.$DistrictList, xbool, cmbdistrict, Panel1.Height - Panel2.Height - cmbdistrict.Top)
      Endif

    Endif
  Endif

End

Public Sub cmbrelation_GotFocus()

  Dim xbool As Boolean

  If modBasic.$UnLockRelation = "Yes" Then
    xbool = True
  Else
    xbool = False
  Endif

  If Not cmbrelation.Text Then
    If modBasic.$RelationList Then

      If modBasic.$RegistGridFormat = "Yes" Then
        cmbrelation.Text = GridViewNew("Select Relation", modBasic.$RelationList, xbool, cmbrelation, Panel1.Height - Panel2.Height - cmbrelation.Top)
      Endif

    Endif
  Endif

End

Private Sub SetRequiredVariables()

  If modBasic.$RegistEssAddress = "Yes" Then
    chkaddfir.Text = "*"
    chkaddfir.Value = True
  Endif

  If modBasic.$RegistEssDistrict = "Yes" Then
    chkdistrict.Text = "*"
    chkdistrict.Value = True
  Endif

  If modBasic.$RegistEssAge = "Yes" Then
    chknull.Value = False
  Endif

  If modBasic.$RegistEssGuardian = "Yes" Then
    chkguardian.Text = "*"
    chkguardian.Value = True
  Endif

  If modBasic.$RegistEssRelation = "Yes" Then
    chkrelation.Text = "*"
    chkrelation.Value = True
  Endif

  If modBasic.$RegistEssContact = "Yes" Then
    chkcontact.Text = "*"
    chkcontact.Value = True
  Endif

  If modBasic.$RegistEssEMail = "Yes" Then
    chkemail.Text = "*"
    chkemail.Value = True
  Endif

  If modBasic.$RegistEssCode = "Yes" Then
    chkptcode.Text = "*"
    chkptcode.Value = True
  Endif

End

Public Sub btncopycode_Click()

  Clipboard.Copy(txtpatcode.Text)

End

Public Sub txtyears_GotFocus()

  txtyears.SelectAll

End

Public Sub txtmonths_GotFocus()

  txtmonths.SelectAll

End

''================ Search Box ============
Public Sub btngetfileno_Click()

  If txtbookingid.Text Then
    If rbstaff.Value = True Then
      If modBasic.$RegistStaffFormat = "PAHS" Then
        GetPatientPAHSStaff(Trim(txtbookingid.Text))
      Else If modBasic.$RegistStaffFormat = "NPH" Then
        UpdateHRISapi(Trim(txtbookingid.Text))
        txtpatno.Text = txtbookingid.Text
      Endif
      If Not txtpatno.Text Then
        GetPatientFromStaff(Trim(txtbookingid.Text))
      Endif
      If cmbdisctype.Text Then
        cmbdisctype.Enabled = False
      Endif
      If txtpatno.Text Then
        GetPatientInfoAll()
        txtpatno.ReadOnly = True
      Else
        txtpatno.SetFocus
      Endif

    Else If rbsocial.Value = True Then
      GetPatientFromSocial(Trim(txtbookingid.Text))
      If cmbdisctype.Text Then
        cmbdisctype.Enabled = False
      Endif
      If txtpatno.Text Then
        GetPatientInfoAll()
        txtpatno.ReadOnly = True
      Else
        txtpatno.SetFocus
      Endif

    Else If rbnhis.Value = True Then
      If chkinfant.Value = True Then
        txtpatno.Text = modPatient.GetInfantPatNoByHospCode(Trim(txtbookingid.Text))
      Else
        txtpatno.Text = modPatient.GetPatientNoByHospCode(Trim(txtbookingid.Text))
      Endif
      If Not txtpatno.Text Then
        If modBasic.$RegistDataRepo = "Yes" Then
          modRepository.CopyPatCodeFromRepository(Trim(txtbookingid.Text))
          Wait
          txtpatno.Text = modPatient.GetPatientNoByHospCode(Trim(txtbookingid.Text))
        Endif
      Endif
      OpenRightWeb()
      If modBasic.$IMISPatientURL Then
        GetIMISDataAPI(Trim(txtbookingid.Text))
      Else
        txtpatcode.Text = Trim(txtbookingid.Text)
      Endif
      If cmbdisctype.Text Then
        cmbdisctype.Enabled = False
      Endif
      If txtpatno.Text Then
        UpdatePatientBasic(txtpatno.Text, Trim(txtnamefir.text), Trim(txtnamelast.text))
        GetPatientInfoAll()
        txtpatno.ReadOnly = True
      Else
        txtpatno.SetFocus
      Endif

    Else If rbssf.Value = True Then
      txtpatno.Text = modPatient.GetPatientNoByHospCode(Trim(txtbookingid.Text))
      If Not txtpatno.Text Then
        If modBasic.$RegistDataRepo = "Yes" Then
          modRepository.CopyPatCodeFromRepository(Trim(txtbookingid.Text))
          Wait
          txtpatno.Text = modPatient.GetPatientNoByHospCode(Trim(txtbookingid.Text))
        Endif
      Endif
      OpenRightWeb()
      If modBasic.$SSFPatientURL Then
        GetSSFDataAPI(Trim(txtbookingid.Text))
      Else
        txtpatcode.Text = Trim(txtbookingid.Text)
      Endif
      If cmbdisctype.Text Then
        cmbdisctype.Enabled = False
      Endif
      If txtpatno.Text Then
        UpdatePatientBasic(txtpatno.Text, Trim(txtnamefir.text), Trim(txtnamelast.text))
        GetPatientInfoAll()
        txtpatno.ReadOnly = True
      Else
        txtpatno.SetFocus
      Endif

    Else If rbbook.Value = True Then
      GetPatientFromBookID(Trim(txtbookingid.Text))

    Else
      If MMain.$CustomFormat = "Patan" Then
        txtpatno.Text = modPatient.GetPatientNoByFileNo(Trim(txtbookingid.Text))
      Else
        txtpatno.Text = modPatient.GetPatientNoByEnc(Trim(txtbookingid.Text))
      Endif
      If txtpatno.Text Then
        GetPatientInfoAll()
      Else
        txtpatno.SetFocus
      Endif

    Endif
  Endif

End

Public Sub btngetfileno_GotFocus()

  btngetfileno_Click()

End

Public Sub rbfile_Click()

  txtbookingid.SetFocus

End

Public Sub rbnhis_Click()

  txtbookingid.SetFocus

End

Public Sub rbbook_Click()

  txtbookingid.SetFocus

End

Public Sub rbsocial_Click()

  txtbookingid.SetFocus

End

Public Sub rbstaff_Click()

  txtbookingid.SetFocus

End

Public Sub rbssf_Click()

  txtbookingid.SetFocus

End

''================== Booking =======================
Private Sub GetPatientFromBookID(xBookID As String)

  Dim res As Result
  Dim sql As String
  Dim lstdat As Date
  Dim xaddr As String[]
  Dim xscheme As String

  If xBookID Then
    $selDate = False
    dtdobmain.Value = ""
    Panel3.Enabled = False
    ''show booking table
    sql = "select fldpatientval,fldptnamefir,fldptnamelast,fldptaddvill,fldptaddward,fldptadddist,fldptsex,fldptcontact,fldptguardian,fldptbirday,fldptadmindate,fldemail,fldptcode,fldrelation,fldconsultdate,fldadmitlocat,flduserid,flddisctype from tblpatientbook where fldbookingval=&1 and fldstate=&2"
    res = modDatabase.$myConn.Exec(sql, xBookID, "Planned")
    If res.Available = False Then
      If modBasic.$RegistDataRepo = "Yes" Then
        modRepository.CopyBookingFromRepository(xBookID)
        txtbookingid.SetFocus
      Endif
    Else
      txtpatno.Text = res["fldpatientval"]
      If txtpatno.Text Then
        txtvisit.Text = modPatient.GetPatientHMISStattus(Trim(txtpatno.Text))
      Else
        txtvisit.Text = "NEW"
      Endif
      txtnamefir.Text = res["fldptnamefir"]
      txtnamelast.Text = res["fldptnamelast"]
      txtnamefir.ReadOnly = True
      txtnamelast.ReadOnly = True
      cmbdistrict.Text = res["fldptadddist"]  ''district always before address
      cmbsex.Text = res["fldptsex"]
      If res["fldptaddward"] Then
        txtward.Text = res["fldptaddward"]
        txtaddfir.Text = res["fldptaddvill"]
      Else
        If res["fldptaddvill"] Then
          xaddr = Split(res["fldptaddvill"], "-")
          If xaddr.Count > 1 Then
            If IsInteger(xaddr[xaddr.Count - 1]) Then
              txtward.Text = xaddr[xaddr.Count - 1]
              txtaddfir.Text = xaddr.Copy(0, xaddr.Count - 1).Join("-")
            Else
              txtward.Text = ""
              txtaddfir.Text = xaddr.Join("-")
            Endif
          Else
            txtward.Text = ""
            txtaddfir.Text = xaddr.Join("-")
          Endif
        Endif
      Endif
      txtcontact.Text = res["fldptcontact"]
      txtguardian.Text = res["fldptguardian"]
      cmbrelation.Text = res["fldrelation"]
      txtemail.Text = res["fldemail"]
      txtpatcode.Text = res["fldptcode"]
      cmbconsult.Text = res["fldadmitlocat"]
      btnconsult.Tag = res["flduserid"]
      btnconsult.Text = modGeneral.GetUserFullName(btnconsult.Tag)
      If res!fldptbirday Then
        chknull.Value = False
        dtdobmain.Value = res["fldptbirday"]
        $selDate = True
        modDateSub.DateToYearandMonth(res["fldptbirday"], txtyears, txtmonths, btnyear, btnmon)
      Else
        chknull.Value = True
      Endif
      If txtpatno.Text Then
        lblstatus.Text = "REGISTERED PATIENT"
      Else
        lblstatus.Text = "RECORDED PATIENT"
      Endif
      lstdat = modPatient.GetRecordDate(modPatient.GetLastEncoutnerFromPatNo(Trim(txtpatno.Text)))
      If lstdat Then
        If lstdat >= modDate.StartSqlDate(Date()) And If lstdat <= modDate.EndSqlDate(Date()) Then
          lbllast.Text = "TODAY"
          lbllast.Font.Bold = True
        Else
          lbllast.Text = Left(modDate.GetWeekDay(lstdat), 3) & Space(1) & modReportVar.GetDateTimeReport(lstdat, gb.MediumDate)
          lbllast.Font.Bold = False
        Endif
      Else
        lbllast.Text = ""
      Endif
      xscheme = modBillings.GetDefaultDiscountOnRegistration(Trim(txtpatno.Text), modBasic.$compID)
      modFillContainer.ComboInsertNotItem(cmbdisctype, xscheme)
      If Not cmbdisctype.Text Then
        modFillContainer.ComboInsertNotItem(cmbdisctype, res["flddisctype"])
      Else
        If cmbdisctype.Text <> res["flddisctype"] Then
          Message.Warning("Current Package different from booking", "OK")
        Endif
      Endif
      If Not cmbdisctype.Text Then
        modFillContainer.ComboInsertNotItem(cmbdisctype, modBasic.$RegistDefaultDisc)
      Endif
      LoadDiscCreditVal()

      If res["fldconsultdate"] >= modDate.StartSqlDate(Now()) And If res["fldconsultdate"] <= modDate.EndSqlDate(Now()) Then
        cmbconsult.SetFocus
      Else
        Message.Warning(("NOT TODAY"), ("OK"))
        txtpatno.SetFocus
      Endif
    Endif

  Endif

End

''================= Health Insurance ==============
Private Sub GetIMISDataAPI(xfile As String)

  Dim hCform As CimisAPIPatient
  Dim hCElig As CimisAPIEligible
  Dim xmessage As String
  Dim xresp As String

  Dim xname As String
  Dim xsurname As String
  Dim xgender As String
  Dim xdob As Date
  Dim xcontact As String
  Dim xemail As String
  Dim xdistrict As String
  Dim xfirserv As String
  Dim ximage As String

  Dim xPolicy As String
  Dim xexpdate As Date
  Dim xcredamt As Float
  Dim xallow As Boolean
  Dim xpayval As Float
  Dim xpayType As String

  If xfile Then
    Inc Application.Busy

    hCform = New CimisAPIPatient(xfile)
    xname = hCform.GetPatientName()
    xsurname = hCform.GetPatientSurName()
    xgender = hCform.GetPatientGender()
    xcontact = hCform.GetPatientContact()
    xemail = hCform.GetPatientEmail()
    xdob = hCform.GetPatientDateBirth()
    xdistrict = hCform.GetPatientDistrict()
    xfirserv = hCform.GetPatientFirstService()
    ximage = hCform.GetPatientImage()

    If xname Then
      hCElig = New CimisAPIEligible(xfile)
      xPolicy = hCElig.GetPolicyNo()
      xexpdate = hCElig.GetexpiryDaye()
      xcredamt = hCElig.GetAllowedAmt()
      xpayval = hCElig.GetCopayValue()
      xpayType = hCElig.PatientPayType()
    Endif
    Dec Application.Busy

    If xname Then
      xallow = True
      xmessage = "<h1>" & xname & modString.HTMLBlankSpace(1) & xsurname & "</h1><br>" & "<b>Policy No:</b> " & xPolicy & "<br>" & "<b>Expiry:</b> " & modReportVar.GetDateTimeReport(xexpdate, gb.MediumDate) & "<br>" & "<b>Credit Amt:</b> " & modReportVar.GetLocaleNumberFormat(xcredamt, gb.Currency)
      If xfirserv Then
        xmessage = xmessage & "<br><b>First Service : </b>" & xfirserv
      Endif
      If xexpdate < modDate.StartSqlDate(Now()) Then
        xallow = False
        xmessage = xmessage & "<h3> Account Expired </h3>"
      Endif
      If xcredamt < 200 Then
        xallow = False
        xmessage = xmessage & "<h4> No Balance</h4>"
      Else If xcredamt < 1000 Then
        xmessage = xmessage & "<h4> Low Balance</h4>"
      Endif
      If xpayval = 0.1 Then
        xmessage = xmessage & "<h3> Co-Payment</h3>"
      Else
        xmessage = xmessage & "<h3> Full Credit</h3>"
      Endif
      xmessage = xmessage & "<b>Patient Type : </b>" & xpayType
      If xallow = True Then
        xresp = MessageValue(xmessage, ["Cancel", "Outpatient", "Emergency"], ximage)
        ' xresp = Message.Question(xmessage, ("Cancel"), ("Outpatient"), ("Emergency"))
      Else If xallow = False Then
        xresp = MessageValue(xmessage, ["Cancel"], ximage)
        ' xresp = Message.Question(xmessage, ("Cancel"))
      Endif

      If xresp = "Outpatient" Then
        If modBasic.$HIPackage And If modBasic.$HIPackageER Then
          txtnamefir.Text = xname
          txtnamelast.Text = xsurname
          txtnamefir.ReadOnly = True
          ' txtnamelast.ReadOnly = True
          cmbsex.Text = xgender
          txtcontact.Text = xcontact
          txtemail.Text = xemail
          dtdobmain.Value = xdob
          modDateSub.DateToYearandMonth(dtdobmain.Value, txtyears, txtmonths, btnyear, btnmon)
          If xdistrict Then
            cmbdistrict.Text = xdistrict
          Endif

          $ValidExpiry = xexpdate
          $CredAmount = xcredamt
          If $CredAmount Then
            txtpatcode.Text = xfile
            txtpatcode.Enabled = False
            If xpayval = 0.1 Then
              modFillContainer.ComboInsertNotItem(cmbdisctype, modBasic.$HIPackage)
            Else
              modFillContainer.ComboInsertNotItem(cmbdisctype, modBasic.$HIPackageER)
            Endif
            LoadDiscCreditVal()
            If modNonMedical.GetReservePackageParam(cmbdisctype.Text) = "Scheme" Then
              txtpatno.ReadOnly = True
            Endif
          Endif
        Endif

      Else If xresp = "Emergency" Then
        If modBasic.$HIPackageER Then
          txtnamefir.Text = xname
          txtnamelast.Text = xsurname
          txtnamefir.ReadOnly = True
          ' txtnamelast.ReadOnly = True
          cmbsex.Text = xgender
          txtcontact.Text = xcontact
          txtemail.Text = xemail
          dtdobmain.Value = xdob
          modDateSub.DateToYearandMonth(dtdobmain.Value, txtyears, txtmonths, btnyear, btnmon)
          If xdistrict Then
            cmbdistrict.Text = xdistrict
          Endif

          $ValidExpiry = xexpdate
          $CredAmount = xcredamt
          If $CredAmount Then
            txtpatcode.Text = xfile
            txtpatcode.Enabled = False
            modFillContainer.ComboInsertNotItem(cmbdisctype, modBasic.$HIPackageER)
            LoadDiscCreditVal()
            If modNonMedical.GetReservePackageParam(cmbdisctype.Text) = "Scheme" Then
              txtpatno.ReadOnly = True
            Endif
          Endif
          cmbconsult.List = modBasic.$RegERDeparts
          If cmbconsult.List.Count = 1 Then
            cmbconsult.Text = modBasic.$RegERDeparts[0]
          Endif
        Endif

      Else If xresp = "Cancel" Then
        txtpatno.Text = ""
        txtnamefir.Text = ""
        txtnamelast.Text = ""
        txtbookingid.SetFocus

      Endif

    Endif

  Endif

  ' Catch
  '   Dec Application.Busy

End

Private Sub OpenRightWeb()

  Select modBasic.$RightPanelURL
    Case "https://imis.hib.gov.np/", "{HI_IMIS_Page}"
      Try modGeneralMain.$RightAdView.ExecJavascript("document.getElementById('Header_txtSearch').value='" & Trim(txtbookingid.Text) & "';")
      Try modGeneralMain.$RightAdView.ExecJavascript("document.getElementById('Header_btnSearch').click();")
    Case "https://openimis.ssf.gov.np/", "{SSF_IMIS_Page}"
      Try modGeneralMain.$RightAdView.ExecJavascript("var els=document.getElementsByClassName('jss46')[0];")
      Try modGeneralMain.$RightAdView.ExecJavascript("els.value='" & Trim(txtbookingid.Text) & "';")
      ' Try modGeneralMain.$RightAdView.ExecJavascript("var ars=document.getElementsByClassName('jss48')[0];")
      ' Try modGeneralMain.$RightAdView.ExecJavascript("ars.click();")
  End Select

End

Public Sub TabPanel1_Click()

  Dim astr As String
  Dim adata As String

  If rbnhis.Value = True Then
    astr = Temp() & ".html"
    If Exist(modHelpVariable.$scriptDirectory &/ "Imis.css") = True Then
      adata = modRepoTemplete.TitleHTMLScript() & "<style>" & File.Load(modHelpVariable.$scriptDirectory &/ "Imis.css") & "</style>" & modString.GetSelectedToLastText(modGeneralMain.$RightAdView.GetHtml(), "<table class=\"InsureeByCHFID\">", "</table>") & modRepoTemplete.EndTemplete()
    Else
      adata = modRepoTemplete.TitleHTMLScript() & modString.GetSelectedToLastText(modGeneralMain.$RightAdView.GetHtml(), "<table class=\"InsureeByCHFID\">", "</table>") & modRepoTemplete.EndTemplete()
    Endif
    File.Save(astr, adata)
    WebView1.Url = "file://" & astr
  Endif

End

Public Sub Slider1_Change()

  Inc Application.Busy
  WebView1.Zoom = Slider1.Value / 100
  Dec Application.Busy

End

''============= Social ============================
Private Sub GetPatientFromSocial(xStafID As String)

  Dim res As Result
  Dim sql As String
  Dim lstdat As Date
  Dim xaddr As String[]

  If xStafID Then
    $selDate = False
    dtdobmain.Value = ""
    Panel3.Enabled = False
    ''show booking table
    sql = "select fldcategory,fldserviceid,fldptnamefir,fldptnamelast,fldptsex,fldptaddvill,fldptaddward,fldptadddist,fldptcontact,fldptbirday,fldemail,fldptguardian,fldrelation,fldjoindate,fldenddate,fldactivity,fldpatientval,flddisctype,fldstatus,fldcitizen,fldidentify,fldscheme,fldservice,fldreferhosp,fldreferdist,fldreferdate,fldsocialmode,fldcreditlim,flddisclimit,fldcreditdate,flddiscdate,fldremark from tblsociallist where fldptcode=&1 and fldstatus=&2 and fldjoindate<=&3 and fldenddate>&3"
    res = modDatabase.$myConn.Exec(sql, xStafID, "Active", Now())
    If res.Available Then
      txtpatno.Text = res["fldpatientval"]
      If txtpatno.Text Then
        txtvisit.Text = modPatient.GetPatientHMISStattus(Trim(txtpatno.Text))
      Else
        txtvisit.Text = "NEW"
      Endif
      txtnamefir.Text = res["fldptnamefir"]
      txtnamelast.Text = res["fldptnamelast"]
      txtnamefir.ReadOnly = True
      txtnamelast.ReadOnly = True
      cmbdistrict.Text = res["fldptadddist"]  ''district always before address
      cmbsex.Text = res["fldptsex"]
      If res["fldptaddward"] Then
        txtward.Text = res["fldptaddward"]
        txtaddfir.Text = res["fldptaddvill"]
      Else
        If res["fldptaddvill"] Then
          xaddr = Split(res["fldptaddvill"], "-")
          If xaddr.Count > 1 Then
            If IsInteger(xaddr[xaddr.Count - 1]) Then
              txtward.Text = xaddr[xaddr.Count - 1]
              txtaddfir.Text = xaddr.Copy(0, xaddr.Count - 1).Join("-")
            Else
              txtward.Text = ""
              txtaddfir.Text = xaddr.Join("-")
            Endif
          Else
            txtward.Text = ""
            txtaddfir.Text = xaddr.Join("-")
          Endif
        Endif
      Endif
      txtcontact.Text = res["fldptcontact"]
      txtemail.Text = res["fldemail"]
      txtguardian.Text = res["fldptguardian"]
      cmbrelation.Text = res["fldrelation"]
      If res["fldptbirday"] Then
        chknull.Value = False
        dtdobmain.Value = res["fldptbirday"]
        $selDate = True
        modDateSub.DateToYearandMonth(res["fldptbirday"], txtyears, txtmonths, btnyear, btnmon)
      Else
        chknull.Value = True
      Endif

      If txtpatno.Text Then
        lblstatus.Text = "REGISTERED PATIENT"
      Else
        lblstatus.Text = "RECORDED PATIENT"
      Endif
      lstdat = modPatient.GetRecordDate(modPatient.GetLastEncoutnerFromPatNo(Trim(txtpatno.Text)))
      If lstdat Then
        If lstdat >= modDate.StartSqlDate(Date()) And If lstdat <= modDate.EndSqlDate(Date()) Then
          lbllast.Text = "TODAY"
          lbllast.Font.Bold = True
        Else
          lbllast.Text = Left(modDate.GetWeekDay(lstdat), 3) & Space(1) & modReportVar.GetDateTimeReport(lstdat, gb.MediumDate)
          lbllast.Font.Bold = False
        Endif
      Else
        lbllast.Text = ""
      Endif
      modFillContainer.ComboInsertNotItem(cmbdisctype, res["flddisctype"])
      $ValidExpiry = res["fldenddate"]
      If cmbdisctype.Text Then
        LoadDiscCreditVal()
        cmbdisctype.Enabled = False
      Endif

      If res["fldsocialmode"] And If res["fldenddate"] Then
        If res["fldsocialmode"] = "Add Credit" Then
          If res["fldcreditdate"] Then
            $CredAmount = res["fldcreditlim"] - modNonMedical.GeCreditUsedCurYear(res["fldpatientval"], res["flddisctype"], res["fldcreditdate"], res["fldenddate"])
          Endif
          $DiscAmount = 0
        Else If res["fldsocialmode"] = "Add Discount" Then
          $CredAmount = 0
          If res["flddiscdate"] Then
            $DiscAmount = res["flddisclimit"] - modNonMedical.GetDiscUsedCurYear(res["fldpatientval"], res["flddisctype"], res["flddiscdate"], res["fldenddate"])
          Endif
        Else If res["fldsocialmode"] = "Add Credit+Discount" Then
          If res["fldcreditdate"] Then
            $CredAmount = res["fldcreditlim"] - modNonMedical.GeCreditUsedCurYear(res["fldpatientval"], res["flddisctype"], res["fldcreditdate"], res["fldenddate"])
          Endif
          If res["flddiscdate"] Then
            $DiscAmount = res["flddisclimit"] - modNonMedical.GetDiscUsedCurYear(res["fldpatientval"], res["flddisctype"], res["flddiscdate"], res["fldenddate"])
          Endif
        Endif
      Endif

    Else
      Message.Warning("Account expired or inactive", ("OK"))
    Endif
  Endif

End

'''==================== SSF ==============================
Private Sub GetSSFDataAPI(xfile As String)

  Dim hCform As CssfAPIPatient
  Dim hCElig As CssfAPIEligible
  Dim hCImage As CssfAPIPicture
  Dim xmessage As String
  Dim xresp As String
  Dim aButton As String[]

  Dim xname As String
  Dim xsurname As String
  Dim xgender As String
  Dim xdob As Date
  Dim xcontact As String
  Dim xemail As String
  Dim xdist As String
  Dim xward As String
  Dim xmunic As String
  Dim ximage As String
  Dim xpath As String

  Dim xallow As Boolean
  Dim xaccdt As Float
  Dim xmedopd As Float
  Dim xmedipd As Float
  Dim xcritPre As Float
  Dim xcritPost As Float
  Dim xcritDisc As Float

  Dim boolMed As Boolean
  Dim boolAcc As Boolean
  Dim boolCrit As Boolean
  Dim xcashper As Float

  If xfile Then
    Inc Application.Busy

    hCElig = New CssfAPIEligible(xfile)
    xaccdt = hCElig.GetAccidentAmt()
    xmedopd = hCElig.GetMedicalOPDAmt()
    xmedipd = hCElig.GetMedicalIPDAmt()
    xcritPre = hCElig.GetPreDiagnoAmt()
    xcritPost = hCElig.GetPostDiagnoAmt()
    xcritDisc = hCElig.GetDischargeAmt()
    boolMed = hCElig.GetMedicalEnable()
    boolAcc = hCElig.GetAccidentEnable()
    boolCrit = hCElig.GetCriticalEnable()
    ximage = hCElig.GetPatientImage()
    If ximage Then
      xpath = modImageSub.GetHtmlImagePath(ximage)
    Endif

    hCform = New CssfAPIPatient(xfile)
    xname = hCform.GetPatientName()
    xsurname = hCform.GetPatientSurName()
    xgender = hCform.GetPatientGender()
    xcontact = hCform.GetPatientContact()
    xemail = hCform.GetPatientEmail()
    xdob = hCform.GetPatientDateBirth()
    xdist = hCform.GetPatientDistrict()
    xward = hCform.GetPatientWardNo()
    xmunic = hCform.GetPatientMunicipality()

    If Not xpath Then
      ximage = hCform.GetPatientImagePath()
      If ximage Then
        hCImage = New CssfAPIPicture(ximage)
        xpath = hCImage.GetPatientImage()
      Endif
    Endif

    Dec Application.Busy

    If xname Then
      xallow = True
      aButton = New String[]
      aButton.Add("Close")
      xmessage = "<h2>" & xname & modString.HTMLBlankSpace(1) & xsurname & "</h2>"
      xmessage = xmessage & "<b>Sex/DOB :</b> " & xgender & modString.HTMLBlankSpace(1)
      If xdob Then
        xmessage = xmessage & " [" & modReportVar.GetDateTimeReport(xdob, gb.MediumDate) & "]"
      Endif
      xmessage = xmessage & "<br>" & "<b>Address :</b> " & xmunic & " -" & xward & ", " & xdist & "<br>"
      If boolAcc = True Then
        aButton.Add("Accident")
        xmessage = xmessage & "<br>" & "<b>Accident Credit:</b> " & modReportVar.GetLocaleNumberFormat(xaccdt, gb.Currency) & "<br>"
      Else
        xmessage = xmessage & "<br>" & "<b> Accident Credit suspended </b>" & "<br>"
      Endif
      If boolMed = True Then
        aButton.Add("Out Patient")
        xmessage = xmessage & "<br>" & "<b>Medical OPD Credit:</b> " & modReportVar.GetLocaleNumberFormat(xmedopd, gb.Currency) & "<br>"
        xmessage = xmessage & "<br>" & "<b>Medical IPD Credit:</b> " & modReportVar.GetLocaleNumberFormat(xmedipd, gb.Currency) & "<br>"
      Else
        xmessage = xmessage & "<br>" & "<b> Medical Credit suspended </b>" & "<br>"
      Endif
      If boolCrit = True Then
        aButton.Add("Critical")
        xmessage = xmessage & "<br>" & "<b>Pre Diagnosis Credit:</b> " & modReportVar.GetLocaleNumberFormat(xcritPre, gb.Currency)
        xmessage = xmessage & "<br>" & "<b>Post Diagnosis Credit:</b> " & modReportVar.GetLocaleNumberFormat(xcritPost, gb.Currency)
        xmessage = xmessage & "<br>" & "<b>Post Discharge Credit:</b> " & modReportVar.GetLocaleNumberFormat(xcritDisc, gb.Currency)
      Else
        xmessage = xmessage & "<br>" & "<b> Critical Credit suspended </b>"
      Endif

      If xaccdt + xmedopd + xmedipd + xcritPre + xcritPost + xcritDisc = 0 Then
        xallow = False
        xmessage = xmessage & "<h3> No Credit in any Category </h3>"
        Message.Warning(xmessage, "OK")
      Else
        txtnamefir.ReadOnly = True
        ' txtnamelast.ReadOnly = True
        txtpatcode.Text = xfile
        txtpatcode.Enabled = False

        xmessage = xmessage & "<h4> Select Service Format</h4>"
        xresp = MessageValue(xmessage, aButton, xpath, xfile)
        ' If boolAcc = True And If boolMed = True Then
        '   xresp = MessageValue(xmessage, ["Close", "Accident", "Out Patient"], xpath, xfile)
        ' Else If boolAcc = True And If boolMed = False Then
        '   xresp = MessageValue(xmessage, ["Close", "Accident"], xpath, xfile)
        ' Else If boolAcc = False And If boolMed = True Then
        '   xresp = MessageValue(xmessage, ["Close", "Out Patient"], xpath, xfile)
        ' Else
        '   xresp = MessageValue(xmessage, ["Close"], xpath, xfile)
        ' Endif

        If xresp = "Accident" Then
          txtnamefir.Text = xname
          txtnamelast.Text = xsurname
          cmbsex.Text = xgender
          txtcontact.Text = xcontact
          txtemail.Text = xemail
          dtdobmain.Value = xdob
          If modBasic.$DistrictList.Exist(xdist) Then
            cmbdistrict.Text = xdist
          Endif
          txtaddfir.Text = xmunic
          txtward.Text = xward
          modDateSub.DateToYearandMonth(dtdobmain.Value, txtyears, txtmonths, btnyear, btnmon)

          If modBasic.$SSFAccident Then
            $ValidExpiry = DateAdd(Now(), gb.Year, 1)
            If boolAcc = True And If xaccdt Then
              $CredAmount = xaccdt
              modFillContainer.ComboInsertNotItem(cmbdisctype, modBasic.$SSFAccident)
              LoadDiscCreditVal()
              If modNonMedical.GetReservePackageParam(cmbdisctype.Text) = "Scheme" Then
                txtpatno.ReadOnly = True
              Endif
            Else
              $CredAmount = 0
            Endif
            cmbconsult.List = modBasic.$RegERDeparts
            If cmbconsult.List.Count = 1 Then
              cmbconsult.Text = modBasic.$RegERDeparts[0]
            Endif
          Endif

        Else If xresp = "Out Patient" Then
          txtnamefir.Text = xname
          txtnamelast.Text = xsurname
          cmbsex.Text = xgender
          txtcontact.Text = xcontact
          txtemail.Text = xemail
          dtdobmain.Value = xdob
          If modBasic.$DistrictList.Exist(xdist) Then
            cmbdistrict.Text = xdist
          Endif
          txtaddfir.Text = xmunic
          txtward.Text = xward
          modDateSub.DateToYearandMonth(dtdobmain.Value, txtyears, txtmonths, btnyear, btnmon)

          If modBasic.$SSFMedical Then
            $ValidExpiry = DateAdd(Now(), gb.Year, 1)
            If boolMed = True And If xmedopd Then
              xcashper = modNonMedical.GetCashinCreditFixPercent(modBasic.$SSFMedical)
              $CredAmount = xmedopd * (100 - xcashper) / 100
              modFillContainer.ComboInsertNotItem(cmbdisctype, modBasic.$SSFMedical)
              LoadDiscCreditVal()
              If modNonMedical.GetReservePackageParam(cmbdisctype.Text) = "Scheme" Then
                txtpatno.ReadOnly = True
              Endif
            Else
              $CredAmount = 0
            Endif
          Endif

        Else If xresp = "Critical" Then
          txtnamefir.Text = xname
          txtnamelast.Text = xsurname
          cmbsex.Text = xgender
          txtcontact.Text = xcontact
          txtemail.Text = xemail
          dtdobmain.Value = xdob
          If modBasic.$DistrictList.Exist(xdist) Then
            cmbdistrict.Text = xdist
          Endif
          txtaddfir.Text = xmunic
          txtward.Text = xward
          modDateSub.DateToYearandMonth(dtdobmain.Value, txtyears, txtmonths, btnyear, btnmon)

          If modBasic.$SSFCritical Then
            $ValidExpiry = DateAdd(Now(), gb.Year, 1)
            If boolCrit = True And If xcritPre Then
              xcashper = modNonMedical.GetCashinCreditFixPercent(modBasic.$SSFCritical)
              $CredAmount = xcritPre * (100 - xcashper) / 100
              modFillContainer.ComboInsertNotItem(cmbdisctype, modBasic.$SSFCritical)
              LoadDiscCreditVal()
              If modNonMedical.GetReservePackageParam(cmbdisctype.Text) = "Scheme" Then
                txtpatno.ReadOnly = True
              Endif
            Else
              $CredAmount = 0
            Endif
          Endif

        Else
          txtpatno.Text = ""
          txtnamefir.Text = ""
          txtnamelast.Text = ""
          txtbookingid.SetFocus
          $CredAmount = 0

        Endif

      Endif
    Endif

  Endif

  ' Catch
  '   Dec Application.Busy

End

''================ Staff ================
Private Sub GetPatientFromStaff(xStafID As String)

  Dim res As Result
  Dim sql As String
  Dim lstdat As Date
  Dim xaddr As String[]

  If xStafID Then
    $selDate = False
    dtdobmain.Value = ""
    Panel3.Enabled = False
    ''show booking table
    sql = "select fldcategory,fldserviceid,fldptnamefir,fldptnamelast,fldptsex,fldptaddvill,fldptaddward,fldptadddist,fldptcontact,fldptbirday,fldemail,fldptguardian,fldrelation,fldjoindate,fldenddate,flduserid,fldpatientval,flddisctype,fldstatus from tblstafflist where fldptcode=&1 and fldstatus=&2 and fldjoindate<=&3 and fldenddate>&3"
    res = modDatabase.$myConn.Exec(sql, xStafID, "Active", Now())
    If res.Available Then
      txtpatno.Text = res["fldpatientval"]
      If txtpatno.Text Then
        txtvisit.Text = modPatient.GetPatientHMISStattus(Trim(txtpatno.Text))
      Else
        txtvisit.Text = "NEW"
      Endif
      txtnamefir.Text = res["fldptnamefir"]
      txtnamelast.Text = res["fldptnamelast"]
      txtnamefir.ReadOnly = True
      txtnamelast.ReadOnly = True
      cmbdistrict.Text = res["fldptadddist"]  ''district always before address
      cmbsex.Text = res["fldptsex"]
      If res["fldptaddward"] Then
        txtward.Text = res["fldptaddward"]
        txtaddfir.Text = res["fldptaddvill"]
      Else
        If res["fldptaddvill"] Then
          xaddr = Split(res["fldptaddvill"], "-")
          If xaddr.Count > 1 Then
            If IsInteger(xaddr[xaddr.Count - 1]) Then
              txtward.Text = xaddr[xaddr.Count - 1]
              txtaddfir.Text = xaddr.Copy(0, xaddr.Count - 1).Join("-")
            Else
              txtward.Text = ""
              txtaddfir.Text = xaddr.Join("-")
            Endif
          Else
            txtward.Text = ""
            txtaddfir.Text = xaddr.Join("-")
          Endif
        Endif
      Endif
      txtcontact.Text = res["fldptcontact"]
      txtemail.Text = res["fldemail"]
      txtguardian.Text = res["fldptguardian"]
      cmbrelation.Text = res["fldrelation"]
      If res["fldptbirday"] Then
        chknull.Value = False
        dtdobmain.Value = res["fldptbirday"]
        $selDate = True
        modDateSub.DateToYearandMonth(res["fldptbirday"], txtyears, txtmonths, btnyear, btnmon)
      Else
        chknull.Value = True
      Endif

      If txtpatno.Text Then
        lblstatus.Text = "REGISTERED PATIENT"
      Else
        lblstatus.Text = "RECORDED PATIENT"
      Endif
      lstdat = modPatient.GetRecordDate(modPatient.GetLastEncoutnerFromPatNo(Trim(txtpatno.Text)))
      If lstdat Then
        If lstdat >= modDate.StartSqlDate(Date()) And If lstdat <= modDate.EndSqlDate(Date()) Then
          lbllast.Text = "TODAY"
          lbllast.Font.Bold = True
        Else
          lbllast.Text = Left(modDate.GetWeekDay(lstdat), 3) & Space(1) & modReportVar.GetDateTimeReport(lstdat, gb.MediumDate)
          lbllast.Font.Bold = False
        Endif
      Else
        lbllast.Text = ""
      Endif
      modFillContainer.ComboInsertNotItem(cmbdisctype, res["flddisctype"])
      $ValidExpiry = res["fldenddate"]
      If cmbdisctype.Text Then
        LoadDiscCreditVal()
        cmbdisctype.Enabled = False
      Endif

    Else
      Message.Warning("Account expired or inactive", ("OK"))
    Endif
  Endif

End

Private Sub GetPatientPAHSStaff(xStafID As String)

  Dim lstdat As Date
  Dim hCForm As CPAHSapi

  If xStafID Then
    $selDate = False
    dtdobmain.Value = ""
    Panel3.Enabled = False

    Inc Application.Busy
    hCForm = New CPAHSapi(xStafID)
    If hCForm.GetEmployeeStatus() Then
      If hCForm.GetEmployeeStatus() = "Working" Then
        txtpatno.Text = modPatient.GetPatientNoByHospCode(Trim(txtbookingid.Text))
        If Not txtpatno.Text Then
          If hCForm.GetEmployeeHospNo() Then
            txtpatno.Text = modPatient.GetPatientNoByFileNo(hCForm.GetEmployeeHospNo())
          Endif
        Endif
        If txtpatno.Text Then
          txtvisit.Text = modPatient.GetPatientHMISStattus(Trim(txtpatno.Text))
        Else
          txtvisit.Text = "NEW"
        Endif

        txtpatcode.Text = xStafID
        txtpatcode.Enabled = False

        txtnamefir.Text = hCForm.GetEmployeeName()
        txtnamelast.Text = hCForm.GetEmployeeSurName()
        txtnamefir.ReadOnly = True
        txtnamelast.ReadOnly = True
        If modBasic.$DistrictList.Exist(hCForm.GetEmployeeDistrict()) Then
          cmbdistrict.Text = hCForm.GetEmployeeDistrict()  ''district always before address
        Endif
        cmbsex.Text = hCForm.GetEmployeeGender()
        txtward.Text = hCForm.GetEmployeeWard()
        txtaddfir.Text = hCForm.GetEmployeeAddress()
        txtcontact.Text = hCForm.GetEmployeeContact()
        txtemail.Text = hCForm.GetEmployeeEmail()
        txtguardian.Text = hCForm.GetEmployeeGuardian()
        cmbrelation.Text = hCForm.GetEmployeeRelation()
        If hCForm.GetEmployeeDOB() Then
          chknull.Value = False
          dtdobmain.Value = hCForm.GetEmployeeDOB()
          $selDate = True
          modDateSub.DateToYearandMonth(hCForm.GetEmployeeDOB(), txtyears, txtmonths, btnyear, btnmon)
        Else
          chknull.Value = True
        Endif

        If txtpatno.Text Then
          lblstatus.Text = "REGISTERED PATIENT"
        Else
          lblstatus.Text = "RECORDED PATIENT"
        Endif
        lstdat = modPatient.GetRecordDate(modPatient.GetLastEncoutnerFromPatNo(Trim(txtpatno.Text)))
        If lstdat Then
          If lstdat >= modDate.StartSqlDate(Date()) And If lstdat <= modDate.EndSqlDate(Date()) Then
            lbllast.Text = "TODAY"
            lbllast.Font.Bold = True
          Else
            lbllast.Text = Left(modDate.GetWeekDay(lstdat), 3) & Space(1) & modReportVar.GetDateTimeReport(lstdat, gb.MediumDate)
            lbllast.Font.Bold = False
          Endif
        Else
          lbllast.Text = ""
        Endif
        modFillContainer.ComboInsertNotItem(cmbdisctype, hCForm.GetEmployeePackage())
        If hCForm.GetEmployeeEndDate() Then
          $ValidExpiry = hCForm.GetEmployeeEndDate()
        Else
          $ValidExpiry = DateAdd(Now(), gb.Year, 1)
        Endif
        If cmbdisctype.Text Then
          LoadDiscCreditVal()
          cmbdisctype.Enabled = False
        Endif

      Else
        Message.Warning("Account expired or inactive", ("OK"))
      Endif

    Else
      Message.Warning("No Response from Server", ("OK"))
    Endif
    Dec Application.Busy

  Endif

End

''--------- for police -------------
Public Sub cmbrank_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbrank)
  modFillContainer.RestrictComboToContent(cmbrank)

End

Public Sub cmbunit_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbunit)
  modFillContainer.RestrictComboToContent(cmbunit)

End

Public Sub btnrank_Click()

  Dim xpath As String

  If Dialog.OpenFile() Then Return
  xpath = Dialog.Path
  If Exist(xpath) Then
    modSettings.SaveSettingsToFile("RegistrationForm/RankList", xpath)
    cmbrank.List = modString.GetStringArrayFromFile(xpath)
  Endif

End

Public Sub btnunit_Click()

  Dim xpath As String

  If Dialog.OpenFile() Then Return
  xpath = Dialog.Path
  If Exist(xpath) Then
    modSettings.SaveSettingsToFile("RegistrationForm/UnitList", xpath)
    cmbunit.List = modString.GetStringArrayFromFile(xpath)
  Endif

End

Private Sub UpdateHRISapi(sCompCode As String)

  Dim res1 As Result
  Dim res As Result
  Dim hCls As CNPHapi

  Dim xfirname As String
  Dim xsurname As String
  Dim xgender As String
  Dim xcontact As String
  Dim xdobdate As Date
  Dim xemail As String
  Dim xrank As String
  Dim xunit As String

  Inc Application.Busy
  hCls = New CNPHapi(sCompCode)
  xfirname = hCls.GetFirName()
  xsurname = hCls.GetSurName()
  xgender = hCls.GetGender()
  xcontact = hCls.GetContact()
  xdobdate = hCls.GetDOB()
  xemail = hCls.GetEmail()
  xrank = hCls.GetRank()
  xunit = hCls.GetUnit()
  Dec Application.Busy

  res1 = modDatabase.$myConn.Exec("select fldpatientval from tblpatientinfo where fldpatientval=&1", sCompCode)
  If res1.Available = False Then
    res = modDatabase.$myConn.Create("tblpatientinfo")
    res["fldpatientval"] = sCompCode
  Else If res1.Available = True Then
    res = modDatabase.$myConn.Edit("tblpatientinfo", "fldpatientval=&1", sCompCode)
  Endif
  If xfirname Then
    res["fldptnamefir"] = xfirname

    If xsurname Then
      res["fldptnamelast"] = xsurname
    Endif
    If xgender Then
      res["fldptsex"] = xgender
    Endif
    If xcontact Then
      res["fldptcontact"] = xcontact
    Endif
    If xdobdate Then
      res["fldptbirday"] = xdobdate
    Endif
    If xemail Then
      res["fldemail"] = xemail
    Endif
    If xrank Then
      res["fldrank"] = xrank
    Endif
    If xunit Then
      res["fldunit"] = xunit
      res["fldcategory"] = "InService"
    Else
      res["fldunit"] = ""
      res["fldcategory"] = "ExService"
    Endif
    res["fldptadmindate"] = Now()
    res["flduserid"] = modBasic.$lbluser
    res["fldtime"] = Now()
    res["fldupuser"] = ""
    res["flduptime"] = ""
    res["xyz"] = False
    res.Update
  Endif

Catch
  Dec Application.Busy
  Message.Warning("Unable to get data from Remote Server", "OK")

End

''---------end ------------------------
