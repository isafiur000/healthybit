' Gambas class file

Private $dictpath As String[]
Private $KeyList As String[]
Private $UserList As Variant[]
Private $aNoDict As String[]

Public Sub Form_Open()
  
  $aNoDict = New String[]
  cmbfont.List = modApplSub.GetFontsAllList()
  cmbfont.Text = Application.Font.Name
  If $dictpath Then
    If $dictpath.Count Then
      ListBox1.List = modString.GetFirstLetterArray($dictpath)
    Endif
  Else
    $dictpath = New String[]
  Endif
  btnmenu.Menu = "mnufile"
  $KeyList = New String[]
  
  If modBasic.$WebZoomValue Then
    TextEdit1.Zoom = modBasic.$WebZoomValue
  Endif
  
End

Public Sub form_Activate()
  
  TextEdit1.SetFocus
  
End

Public Sub Form_Resize()
  
  TextEdit1.Width = Me.Width - ListBox1.Width
  
End

Private Sub GetWebViewJavaSetting()
  
  ''webview
  If WebSettings[WebSettings.Javascript] = False Then
    WebSettings[WebSettings.Javascript] = True
    modBasic.DebugString("JavaScript Enabled")
  Endif
  
  ''webkit
  ' If WebSettings[WebSettings.JavascriptEnabled] = False Then
  '   WebSettings[WebSettings.JavascriptEnabled] = True
  '   modBasic.DebugString("JavaScript Enabled")
  ' Endif
  
End

Public Sub btnAction_Click()
  
  GetWebViewJavaSetting()
  TextEdit1.Eval(Subst("document.execCommand('&1', false, false)", Last.Tag))
  
End

Public Sub btnNoAction_Click()
  
  GetWebViewJavaSetting()
  TextEdit1.Eval(Subst("document.execCommand('&1', false, false)", Last.Tag))
  
End

Public Sub colorforeground_Change()
  
  GetWebViewJavaSetting()
  TextEdit1.Eval(Subst("document.execCommand('forecolor', false, '&1')", "#" & Hex$(colorforeground.Color, 6)))
  
End

Public Sub colorbackground_Change()
  
  GetWebViewJavaSetting()
  TextEdit1.Eval(Subst("document.execCommand('backcolor', false, '&1')", "#" & Hex$(colorbackground.Color, 6)))
  
End

Public Sub txtfontsize_Change()
  
  Dim sSize As Integer = Last.Value
  
  GetWebViewJavaSetting()
  TextEdit1.Eval(Subst("document.execCommand('fontsize', false, '&1')", sSize))
  
End

Public Sub cmbfont_Click()
  
  Dim sFont As String = Last.Text
  
  GetWebViewJavaSetting()
  TextEdit1.Eval(Subst("document.execCommand('fontname', false, '&1')", sFont))
  
End

Public Sub btnimageinsert_Click()
  
  Dialog.Title = "Select an image"
  Dialog.Filter = ["*.jpg;*.jpeg;*.png;*.gif;*.xpm;*.bmp", "Image files"]
  If Dialog.OpenFile() Then Return
  GetWebViewJavaSetting()
  TextEdit1.Eval(Subst("document.execCommand('insertImage', false, '&1')", "file://" & Replace(Dialog.Path, "'", "\\'")))
  
End

Public Sub btnzoomin_Click()
  
  TextEdit1.Zoom = Round(TextEdit1.Zoom * 1.25, -2)
  
End

Public Sub btnzoomout_Click()
  
  TextEdit1.Zoom = Round(TextEdit1.Zoom / 1.25, -2)
  
End

Public Sub btnupper_Click()
  
  Clipboard.Clear()
  Clipboard.Copy(UCase(TextEdit1.SelectedText))
  GetWebViewJavaSetting()
  TextEdit1.Eval(Subst("document.execCommand('&1', false, false)", "paste"))
  
End

Public Sub btnlower_Click()
  
  Clipboard.Clear()
  Clipboard.Copy(LCase(TextEdit1.SelectedText))
  GetWebViewJavaSetting()
  TextEdit1.Eval(Subst("document.execCommand('&1', false, false)", "paste"))
  
End

Public Sub btnhtml_Click()
  
  If btnhtml.Value = True Then
    Panel6.Enabled = True
    Panel3.Enabled = True
    Panel7.Enabled = True
    Panel8.Enabled = True
    Panel4.Enabled = True
    Panel5.Enabled = True
    Panel9.Enabled = True
    btnimageinsert.Enabled = True
    btninsertpara.Enabled = True
    btndict.Enabled = True
    btntable.Enabled = True
  Else If btnhtml.Value = False Then
    Panel6.Enabled = False
    Panel3.Enabled = False
    Panel7.Enabled = False
    Panel8.Enabled = False
    Panel4.Enabled = False
    Panel5.Enabled = False
    Panel9.Enabled = False
    btnimageinsert.Enabled = False
    btninsertpara.Enabled = False
    btndict.Enabled = False
    btntable.Enabled = False
  Endif
  
End

Public Sub TextEdit1_Load()
  
  TextEdit1.Background = Color.White
  
End

Public Sub TextEdit1_GotFocus()
  
  ''get condition (like bold, italic etc)
  
End

''=============================== MENU ===============================
Public Sub mnusentcase_Click()
  
  Clipboard.Clear()
  Clipboard.Copy(String.UCaseFirst(TextEdit1.SelectedText))
  GetWebViewJavaSetting()
  TextEdit1.Eval(Subst("document.execCommand('&1', false, false)", "paste"))
  
End

Public Sub mnuclear_Click()
  
  Clipboard.Clear()
  Clipboard.Copy(Space(1))
  GetWebViewJavaSetting()
  TextEdit1.Eval(Subst("document.execCommand('&1', false, false)", "paste"))
  
End

Public Sub ListBox1_Click()
  
  Dim xList As String[]
  Dim xx As String
  
  xList = modString.SelectStringArrayToText(ListBox1.Text, $dictpath)
  If xList.Count Then
    xx = DIctionaryList(xList)
    If xx Then
      GetWebViewJavaSetting()
      If btnhtml.Value = True Then
        TextEdit1.Eval(Subst("document.execCommand('insertHTML', false, '&1')", xx))
      Else
        TextEdit1.Eval(Subst("document.execCommand('insertText', false, '&1')", xx))
      Endif
    Endif
  Endif
  
End

Public Sub TextEdit1_KeyPress()
  
  Dim xrepl As String
  Dim xval As String
  Dim xsel As String
  Dim asx As String[]
  
  If Key.Code = Key.Up Then Return
  If TextEdit1.SelectedText Then
    xsel = TextEdit1.SelectedText
    If Key.Code = Key.Down Then
      xrepl = modSettings.ShowSettingFromFIle("AdvancedDictionary/" & xsel)
      If xrepl Then
        asx = Split(xrepl, ";")
        If asx And If asx.Count Then
          xval = DIctionaryList(asx)
          If xval Then
            Clipboard.Clear()
            Clipboard.Copy(xval)
            GetWebViewJavaSetting()
            TextEdit1.Eval(Subst("document.execCommand('&1', false, false)", "paste"))
          Endif
        Endif
      Endif
    Else If Key.Code = Key.Right Then
      ' xval = Trim(Mid(TextEdit1.Text, TextEdit1.Pos, 4))
      ' If modBasic.$RepoOptionList.Exist(xval) Then
      '   TextEdit1.Select(TextEdit1.Pos, Len(Trim(xval)))
      ' Endif
    Endif
    
  Else
    If Key.Code = Key.Down Then
      asx = modString.SelectStringArrayToText(Trim(Right(TextEdit1.Text, 2)), modBasic.$dictPathList)
      If asx And If asx.Count Then
        xval = DIctionaryList(asx)
        If xval Then
          TextEdit1.HTML = Left(TextEdit1.Text, -1) & xval
        Endif
      Endif
    Endif
  Endif
  
End

Public Sub btnkey_Click()
  
  Dim xval As String
  
  If $UserList And If $UserList.Count Then
    xval = MedicalSelectedUser("Select User", $UserList)
    If xval Then
      If $KeyList.Exist(xval) = False Then
        $KeyList.Add(xval)
      Endif
    Endif
  Endif
  
End

Public Sub mnudictword_Click()
  
  If Len(Trim(TextEdit1.SelectedText)) Then
    $dictpath.Add(TextEdit1.SelectedText)
    ListBox1.List = modString.GetFirstLetterArray($dictpath)
  Endif
  
End

Public Sub mnureplace_Click()
  
  Dim sItem As String
  
  sItem = InputBox("Select Search String", "Search", "")
  If sItem Then
    TextEdit1.FindText(sItem, True, False, True)
  Endif
  
End

Public Sub mnuclearall_Click()
  
  If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
    TextEdit1.Text = ""
    TextEdit1.HTML = ""
  Endif
  
End

''=================== Procedures ===========================
Public Function GetHTMLText() As String
  
  Return TextEdit1.Text
  
End

Public Sub SetHTMLText(sText As String)
  
  TextEdit1.HTML = sText
  
End

Public Function GetHTMLRichText() As String
  
  Dim xxx As String
  
  If Not Trim(TextEdit1.Text) Then
    xxx = ""
  Else
    If btnhtml.Value = True Then
      xxx = modStringSort.GetWebBodyRichText(TextEdit1.HTML)
    Else If btnhtml.Value = False Then
      xxx = TextEdit1.Text
    Endif
  Endif
  Return xxx
  
End

Public Sub SetHTMLRichText(sText As String)
  
  If modString.GetRichTextMode(sText) = True Then
    TextEdit1.HTML = sText
    btnhtml.Value = True
  Else
    TextEdit1.HTML = Replace(sText, gb.NewLine, "<br>")
    ' TextEdit1.HTML = sText
    btnhtml.Value = False
  Endif
  
End

Public Sub SetRichMode(sMode As Boolean)
  
  btnhtml.Value = sMode
  
End

Public Function GetRichMode() As Boolean
  
  Return btnhtml.Value
  
End

Public Sub SetDictionPath(sPath As String[])
  
  $dictpath = sPath
  
End

Public Function GetKeyList() As String[]
  
  Return $KeyList
  
End

Public Sub SetKeyList(sKey As String[])
  
  $KeyList = sKey
  
End

Public Sub SetUserList(sKey As Variant[])
  
  $UserList = sKey
  
End

''======================== DICTIONARY =========================
Public Sub btndict_Click()
  
  Dim fich As String
  Dim sTxt As String
  Dim htm As String
  Dim ar As New String[]
  Dim sHtml As String
  
  htm = TextEdit1.HTML
  If btndict.Value Then
    Inc Application.Busy
    fich = Temp()
    File.Save(fich, TextEdit1.Text)
    If System.Exist("aspell") Then
      Shell "cat " & fich & "|aspell list " To sTxt
    Else
      modApplSub.InstallSelectedApplication(["aspell"])
    Endif
    ar = Split(sTxt, "/\n", "\\", True)
    For Each sTxt In ar
      If sTxt Then
        If $aNoDict.Find(sTxt) = -1 Then
          $aNoDict.Add(sTxt)
          htm = Replace(htm, sTxt, "<span class=\"orto\">" & sTxt & "</span>")
        Endif
      Endif
    Next
    If $aNoDict.Count Then
      sHtml = File.Load("spellcheck.html")
      sHtml = Replace(sHtml, "[Language]", Split(System.Language, "_")[0]) ' Replace(sHtml, "[Language]", Left(System.Language, InStr(System.Language, "_") - 1))
      sHtml = Replace(sHtml, "[Value]", htm)
      TextEdit1.HTML = sHtml
    Else
      TextEdit1.HTML = htm
    Endif
    Dec Application.Busy
  Else
    If InStr(htm, "<span class=\"orto\">") > 0 Then
      htm = Replace(htm, "<span class=\"orto\">", "")
      htm = Replace(htm, "</span>", "")
    Endif
    $aNoDict.Clear()
    mnusuggesy.Children.Clear()
    TextEdit1.HTML = htm
  Endif
  Wait
  
End

Public Sub TextEdit1_DblClick()
  
  If Not btndict.value Then
    Return
  Endif
  Timer1.Start()
  
End

Public Sub Timer1_Timer()
  
  SearchWrongSpell()
  
End

Private Sub SearchWrongSpell()
  
  Dim s As String
  Dim n As Integer
  Dim ar, linea As String[]
  Dim m As Menu
  
  Timer1.Stop()
  s = TextEdit1.SelectedText
  If s And If $aNoDict.Find(s) > -1 Then
    If System.Exist("aspell") Then
      Shell "echo " & s & "|aspell -a" To s
    Else
      modApplSub.InstallSelectedApplication(["aspell"])
    Endif
    ar = Split(s, "\n", "\\", True)
    For Each s In ar
      If Left(s, 1) <> "&" Then Continue
      linea = Split(Right(s, -InStr(s, ": ")), ", ", "\\", True)
      For n = 0 To linea.Max
        m = New Menu(mnusuggesy) As "suggestionList"
        m.Text = linea[n]
        m.Name = linea[n]
        m.Action = linea[n]
      Next
    Next
    mnuspell.Popup
  Endif
  
End

Public Sub mnusuggesy_Hide()
  
  mnusuggesy.Children.Clear()
  
End

Public Sub mnuadddict_Click()
  
  If System.Exist("aspell") Then
    Shell "echo \"*" & TextEdit1.SelectedText & "\n#\"|aspell -a "
  Else
    modApplSub.InstallSelectedApplication(["aspell"])
  Endif
  
End

Public Sub Action_Activate(opcion As String) As String
  
  ' TextEdit1.HTML = Replace(TextEdit1.HTML, TextEdit1.SelectedText, opcion)
  TextEdit1.HTML = Replace(TextEdit1.HTML, "<span class=\"orto\">" & TextEdit1.SelectedText & "</span>", opcion)
  
End

''===================== Insert table ======================
Private Function HTMLTableString(Row As Integer, Column As Integer) As String
  
  Dim Repo As String[]
  Dim xx As String
  Dim i As Integer
  Dim j As Integer
  
  Repo = New String[]
  Repo.Add("<style>")
  Repo.Add(".reportmid_table {border: 0px; border-collapse: collapse; padding: 7px;}")
  Repo.Add(".reportmid_table td {border: 1px solid black; padding: 7px;}")
  Repo.Add("</style>")
  
  If Row And If Column Then
    xx = modRepoTemplete.HTMLTableSyntax()
    For i = 1 To Row
      xx = xx & "<tr>" & gb.NewLine
      For j = 1 To Column
        xx = xx & "<td width=" & Quote(CStr(Floor(100 / Column)) & "%") & ">" & Space(1) & "</td>" & gb.NewLine
      Next
      xx = xx & "</tr>" & gb.NewLine
    Next
    xx = xx & "</table>"
    Repo.Add(xx)
  Endif
  
  Return Repo.Join(gb.NewLine)
  
End

Public Sub btntable_Click()
  
  Dim xParam As Integer[]
  Dim xStr As String
  
  xStr = TextEdit1.HTML
  xParam = TabelParam()
  If xParam And If xParam.Count = 2 Then
    TextEdit1.HTML = xStr & gb.NewLine & HTMLTableString(xParam[0], xParam[1])
  Endif
  
End
