' Gambas class file

Private myPlayer As New MediaPlayer As "Player"

Private $sDevice As String
Private $sUniq As Boolean

Private $sValue As String[]
Private $TempDir As String
Private $TempList As String[]
Private $X As Integer
Private $Y As Integer
Private $Width As Integer
Private $Height As Integer

Public Sub Run(sDevice As String, Optional sUniq As Boolean) As String[]

  If sDevice Then
    $sDevice = sDevice
  Else
    $sDevice = "/dev/v4l/by-id/" & Dir("/dev/v4l/by-id", "*")[0]
  Endif

  If sUniq = True Then
    $sUniq = True
  Else
    If modBasic.$CamOutputMode = "Multiple" Then
      $sUniq = False
    Else
      $sUniq = True
    Endif
  Endif

  If Me.ShowModal() Then Return $sValue

End

Public Sub Form_Open()

  Dim xdate As Date

  Me.Center
  $TempList = New String[]
  xdate = Now()
  $TempDir = File.Dir(Temp()) &/ modString.GetDateString(xdate)
  If Exist($TempDir) Then
    modExternal.DeleteFolderRecursive($TempDir)
  Endif
  Mkdir $TempDir

  If $sUniq = False Then
    FileView1.Visible = True
    FileView1.Dir = $TempDir
    FileView1.Filter = ["*.jpg", "*.jpeg", "*.png", "*.bmp"]
    FileView1.ShowPreview = False
    btnclose.Visible = True
    btnview.Visible = True
  Else
    FileView1.Visible = False
    btnclose.Visible = False
    btnview.Visible = False
  Endif
  ReadyForImage()

End

Public Sub btnview_Click()

  Try FileView1.ShowPreview = btnview.Value

End

Public Sub Form_KeyRelease()

  If Key.Code = Key.Left Then
    btnleft_Click()
  Else If Key.Code = Key.Right Then
    btnright_Click()
  Else If Key.Code = Key.Esc Then
    If $sUniq = False Then
      btnclose_Click()
    Else
      BtnTakeShot_Click()
    Endif
  Else If Key.Code = Key.Insert Then
    If $sUniq = False Then
      BtnTakeShot_Click()
    Endif
  Endif

End

Public Sub btnclose_Click()

  If $sUniq = False Then
    $sValue = $TempList
    Me.Close(True)
  Endif

End

Private Sub ReadyForImage()

  With myPlayer
    If .State = Media.Playing Then
      .Stop
    Endif
    .URL = "v4l2://" & $sDevice
    .SetWindow(dwgVideo)
    .Play()
  End With
  Try dwgVideo.Resize(myPlayer.Video.Image.Width, myPlayer.Video.Image.Height)

End

Public Sub ZoomSlider1_Change()

  ImageView1.Zoom = ZoomSlider1.Value / 100

End

Public Sub Form_Close()

  If myPlayer.State = Media.Playing Then myPlayer.Stop

End

Public Sub btncaptue_Click()

  Dim ximage As Image
  Dim sTemp As String

  If myPlayer.State <> Media.Playing Then Return

  If modBasic.$CamGrayScale = "Black/White" Then
    ximage = myPlayer.Video.Image
    sTemp = Temp() & ".png"
    ximage.Save(sTemp)
    ximage = Image.Load(modDevAll.ConvertToBlackInWhite(sTemp))
  Else If modBasic.$CamGrayScale = "GrayColor" Then
    ximage = myPlayer.Video.Image.Desaturate()
  Else If modBasic.$CamGrayScale = "Composite Color" Then
    ximage = myPlayer.Video.Image.Picture.Image
    If modBasic.$CamOpacity Then
      ximage = ximage.Opacity(modBasic.$CamOpacity / 100)
    Endif
    If modBasic.$CamThreshold Then
      ximage.Threshold(modBasic.$CamThreshold / 100)
    Endif
  Else
    ximage = myPlayer.Video.Image
  Endif

  If $Width And If $Height Then
    ximage = ximage.Copy($X, $Y, $Width, $Height)
  Endif

  ImageView1.Image = ximage
  ImageView1.Zoom = ZoomSlider1.Value / 100

End

Public Sub BtnTakeShot_Click()

  Dim sPath As String

  If IsNull(ImageView1.Image) Then Return

  If modBasic.$CamImageFormat Then
    sPath = $TempDir &/ modString.GetNowString() & "." & modBasic.$CamImageFormat
  Else
    sPath = $TempDir &/ modString.GetNowString() & ".png"
  Endif
  If modBasic.$CamImageQuality Then
    ImageView1.Image.Save(sPath, modBasic.$CamImageQuality)
  Else
    ImageView1.Image.Save(sPath)
  Endif
  Wait

  $TempList.Add(sPath)
  If $sUniq = False Then
    FileView1.Reload()
  Else If $sUniq = True Then
    $sValue = $TempList
    Me.Close(True)
  Endif

End

Public Sub btnleft_Click()

  Dim aVal As Integer

  aVal = ZoomSlider1.Value
  With ImageView1
    .Image = ImageView1.Image.RotateLeft()
    .Zoom = aVal / 100
  End With

End

Public Sub btnright_Click()

  Dim aVal As Integer

  aVal = ZoomSlider1.Value
  With ImageView1
    .Image = ImageView1.Image.RotateRight()
    .Zoom = aVal / 100
  End With

End

Public Sub btncrop_Click()

  Dim sColl As Collection
  Dim X As Integer
  Dim Y As Integer

  X = Me.X + ScrollView1.X
  Y = Me.Y + ScrollView1.Y
  sColl = CCrop(X, Y, ScrollView1.Width, ScrollView1.Width)
  If sColl Then
    $X = sColl["X"] - Me.X
    $Y = sColl["Y"] - Me.Y
    $Width = sColl["Width"]
    $Height = sColl["Height"]
  Endif

End
