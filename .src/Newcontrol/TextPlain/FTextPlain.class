' Gambas class file

Private $dictpath As String[]
Private $KeyList As String[]

Public Sub Form_Open()

  If $dictpath Then
    If $dictpath.Count Then
      ListBox1.List = modString.GetFirstLetterArray($dictpath)
    Endif
  Else
    $dictpath = New String[]
  Endif
  btnmenu.Menu = "mnufile"
  $KeyList = New String[]
  TextEdit1.SetFocus

End

Public Sub Form_Resize()

  TextEdit1.Width = Me.Width - Panel2.Width

End

Public Sub TextEdit1_KeyRelease()

  Dim xrepl As String
  Dim xval As String
  Dim curpos As Integer

  Dim curText As String
  Dim newWord As String
  Dim iPos As Integer
  Dim xList As String[]

  Dim sLine As String[]
  Dim prvlin As String
  Dim lstlin As String

  If TextEdit1.Selected Then
    If Key.Code = Key.Down Then
      xrepl = modSettings.ShowSettingFromFIle("AdvancedDictionary/" & TextEdit1.Selection.Text)
      If xrepl Then
        curpos = TextEdit1.Pos - Len(TextEdit1.Selection.Text)
        xList = Split(xrepl, ";")
        If xList And If xList.Count Then
          xval = DIctionaryList(xList)
          TextEdit1.Text = Replace(TextEdit1.Text, TextEdit1.Selection.Text, xval)         ''
          TextEdit1.Pos = curpos + Len(xval)
        Endif
      Endif
    Endif

  Else
    If Key.Code = Key.Down Then
      If modBasic.$dictPathList Then
        If Not TextEdit1.Text Then Return
        sLine = Split(TextEdit1.Text, gb.NewLine)
        prvlin = sLine.Copy(0, sLine.Count - 1).Join(gb.NewLine)
        lstlin = sLine[sLine.Count - 1]
        curText = modString.GetLastWordText(lstlin)
        iPos = modString.GetLastWordPosition(lstlin)
        If curText Then
          xList = modString.SelectStringArrayToText(modString.GetLastWordText(curText), $dictpath)
          If xList And If xList.Count Then
            newWord = DIctionaryList(xList)
            If prvlin Then
              TextEdit1.Text = prvlin & gb.NewLine & Left(lstlin, iPos - 1) & newWord
            Else
              TextEdit1.Text = Left(lstlin, iPos - 1) & newWord
            Endif
          Endif
        Endif
      Endif
    Else If Key.Code = Key.Right Then
      curpos = TextEdit1.Pos
      xval = Trim(Mid(TextEdit1.Text, curpos, 4))
      If modBasic.$RepoOptionList.Exist(xval) Then
        TextEdit1.Select(TextEdit1.Pos, Len(Trim(xval)))
      Endif
    Endif

  Endif

End

Public Sub ListBox1_Click()

  Dim xList As String[]
  Dim xx As String

  xList = modString.SelectStringArrayToText(ListBox1.Text, $dictpath)
  If xList.Count Then
    xx = DIctionaryList(xList)
    If xx Then
      TextEdit1.Insert(xx)
    Endif
  Endif
  TextEdit1.SetFocus

End

Public Sub btnkey_Click()

  Dim xval As String

  xval = Trim(TextEdit1.Selection.Text)
  If xval Then
    If Message.Question("Mark <b>" & xval & "</b> as Key Word", ("No"), ("Yes")) = 2 Then
      If $KeyList.Exist(xval) = False Then
        $KeyList.Add(xval)
      Endif
    Endif
  Endif

End

Public Sub mnudictword_Click()

  If Len(Trim(TextEdit1.Selection.Text)) Then
    $dictpath.Add(TextEdit1.Selection.Text)
    ListBox1.List = modString.GetFirstLetterArray($dictpath)
  Endif

End

Public Sub mnulowtext_Click()

  Dim xStart As Integer
  Dim xfir As String
  Dim xsec As String
  Dim xthird As String

  If Len(Trim(TextEdit1.Selection.Text)) Then
    xStart = TextEdit1.Selection.Start
    xfir = Left(TextEdit1.Text, xStart - 1)
    xsec = Mid(TextEdit1.Text, xStart, Len(TextEdit1.Selection.Text) + 1)
    xthird = Mid(TextEdit1.Text, xStart + Len(TextEdit1.Selection.Text) + 1, Len(TextEdit1.Text) - (xStart + Len(TextEdit1.Selection.Text)) + 1)

    TextEdit1.Text = xfir & Replace(xsec, TextEdit1.Selection.Text, LCase(TextEdit1.Selection.Text)) & xthird
  Endif

End

Public Sub mnuuptext_Click()

  Dim xStart As Integer
  Dim xfir As String
  Dim xsec As String
  Dim xthird As String

  If Len(Trim(TextEdit1.Selection.Text)) Then
    xStart = TextEdit1.Selection.Start
    xfir = Left(TextEdit1.Text, xStart - 1)
    xsec = Mid(TextEdit1.Text, xStart, Len(TextEdit1.Selection.Text) + 1)
    xthird = Mid(TextEdit1.Text, xStart + Len(TextEdit1.Selection.Text) + 1, Len(TextEdit1.Text) - (xStart + Len(TextEdit1.Selection.Text)) + 1)

    TextEdit1.Text = xfir & Replace(xsec, TextEdit1.Selection.Text, UCase(TextEdit1.Selection.Text)) & xthird
  Endif

End

Public Sub mnusentcase_Click()

  Dim xStart As Integer
  Dim xfir As String
  Dim xsec As String
  Dim xthird As String

  If Len(Trim(TextEdit1.Selection.Text)) Then
    xStart = TextEdit1.Selection.Start
    xfir = Left(TextEdit1.Text, xStart - 1)
    xsec = Mid(TextEdit1.Text, xStart, Len(TextEdit1.Selection.Text) + 1)
    xthird = Mid(TextEdit1.Text, xStart + Len(TextEdit1.Selection.Text) + 1, Len(TextEdit1.Text) - (xStart + Len(TextEdit1.Selection.Text)) + 1)

    TextEdit1.Text = xfir & Replace(xsec, TextEdit1.Selection.Text, String.UCaseFirst(TextEdit1.Selection.Text)) & xthird
  Endif

End

Public Sub mnusimilar_Click()
  ''suggestions

End

Public Sub mnukeywords_Click()

  Message.Info("[Key Words]" & gb.NewLine & $KeyList.Join(gb.NewLine), ("OK"))

End

Public Sub mnuclear_Click()

  Dim xStart As Integer
  Dim xfir As String
  Dim xsec As String
  Dim xthird As String

  If Len(Trim(TextEdit1.Selection.Text)) Then
    xStart = TextEdit1.Selection.Start
    xfir = Left(TextEdit1.Text, xStart - 1)
    xsec = Mid(TextEdit1.Text, xStart, Len(TextEdit1.Selection.Text) + 1)
    xthird = Mid(TextEdit1.Text, xStart + Len(TextEdit1.Selection.Text) + 1, Len(TextEdit1.Text) - (xStart + Len(TextEdit1.Selection.Text)) + 1)

    TextEdit1.Text = xfir & Replace(xsec, TextEdit1.Selection.Text, "") & xthird
  Endif

End

Public Sub mnureplace_Click()

  ''find and replace text

End

Public Sub mnuclearall_Click()

  If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
    TextEdit1.Text = ""
  Endif

End

''=================== Procedures ===========================
Public Function GetText() As String

  Return TextEdit1.Text

End

Public Sub SetText(sText As String)

  TextEdit1.Text = sText

End

Public Sub SetDictionPath(sPath As String[])

  $dictpath = sPath

End

Public Function GetKeyList() As String[]

  Return $KeyList

End

Public Sub SetKeyList(sKey As String[])

  $KeyList = sKey

End
