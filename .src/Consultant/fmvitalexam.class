' Gambas class file

Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me)
  If modHelpVariable.$LogInCategory = "Clinician" Then
    cmbtarget.Text = modBasic.$compID
    cmbtarget.Enabled = False
  Else
    cmbtarget.List = modBasic.$AllCompPerList
    cmbtarget.Enabled = True
  Endif
  cmbcategory.List = ["Triage Examinations", "Essential Examinations", "Physician Examinations", "Nursing Examinations", "Discharge Examinations"]                         ''

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub cmbtarget_Click()

  lblcomp.Text = modGeneral.GetCompNameFromCompID(cmbtarget.Text)

End

Public Sub cmbtarget_KeyRelease()

  modFillContainer.RestrictComboToContent(cmbtarget)

End

Public Sub btnexport_Click()

  If cmbcategory.Text Then
    If TabPanel1.Index = 0 Then
      modCHTMLReport.ExportGridToHTML(grdsymp, UCase("Presenting Complaints"), lblcomp.Text & "[" & cmbtarget.Text & "]")
    Else If TabPanel1.Index = 1 Then
      modCHTMLReport.ExportGridToHTML(GridView1, UCase(cmbcategory.Text), lblcomp.Text & "[" & cmbtarget.Text & "]")
    Endif
  Endif

End

Private Function GetFlagValue(sBool As Boolean) As String

  Dim sVal As String

  If sBool = True Then
    sVal = "Flagged"
  Else If sBool = False Then
    sVal = "Unflagged"
  Endif
  Return sVal

End

''======================= Examination ==============================
Public Sub btnaddall_Click()

  Dim hForm As FmSelectList

  If cmbcategory.Text And If cmbtarget.Text Then
    hForm = New FmSelectList(("Select Examinations for the selected department"), cmbcategory.Text, cmbtarget.Text)
    hForm.ShowModal
    FillFindingGrid(cmbcategory.Text)
  Endif

End

Public Sub btnrefresh_Click()

  If cmbcategory.Text And If cmbtarget.Text Then
    FillFindingGrid(cmbcategory.Text)
  Endif

End

Private Sub FillFindingGrid(sType As String)

  Dim sql As String
  Dim Column As Integer
  Dim fld As ResultField
  Dim $rData As Result

  If cmbtarget.Text Then
    sql = "select fldid,fldtype,fldflag,fldexamid,fldflag from tblcompexam where fldcomp=&1 and fldcategory=&2"
    $rData = modDatabase.$myConn.Exec(sql, cmbtarget.Text, sType)

    GridView1.Clear
    GridView1.Columns.Count = $rData.Fields.Count
    GridView1.Rows.Count = $rData.Count

    For Each $rData
      Column = 0
      For Each fld In $rData.Fields
        modGeneralMain.GridExplicitDecoration(GridView1, $rData.Index, Column)
        If Column = 2 Then
          GridView1[$rData.Index, Column].Picture = Picture[modMisc.SetGridCheckIcon($rData[fld.Name])]
          GridView1[$rData.Index, Column].Text = ""
        Else
          GridView1[$rData.Index, Column].Text = $rData[fld.Name]
        Endif
        Column = Column + 1
      Next
    Next
    GridView1.Row = 0

    With GridView1
      .Rows.Height = modBasic.$AppGridRowHeight
      .Columns[0].Width = 1
      .Columns[1].Width = 125 * modBasic.$AppWidthRatio
      .Columns[2].Width = 25 * modBasic.$AppWidthRatio
      .Columns[3].Width = 325 * modBasic.$AppWidthRatio
      .Columns[4].Width = 1

      .Columns[1].Text = "Type"
      .Columns[3].Text = "Exam Name"
    End With
  Endif

End

Public Sub GridView1_Click()

  Dim Row As Integer
  Dim xval As String
  Dim res As Result

  If GridView1.Column = 2 Then
    Row = GridView1.Row
    xval = InputCombo("Alter Flag", GridView1[GridView1.Row, 1].Text, ["Flagged", "Unflagged"], GetFlagValue(GridView1[GridView1.Row, 4].Text), True)
    If xval Then
      res = modDatabase.$myConn.Edit("tblcompexam", "fldid=&1", GridView1[GridView1.Row, 0].Text)
      If xval = "Flagged" Then
        res["fldflag"] = True
      Else If xval = "Unflagged" Then
        res["fldflag"] = False
      Endif
      res.Update
      FillFindingGrid(cmbcategory.Text)
    Endif
    GridView1.Row = Row
  Endif

End

Public Sub GridView1_Menu()

  mnuhide.Popup

End

Public Sub mnudel_Click()

  If GridView1.Rows.Selection.Count > 0 Then
    If cmbcategory.Text Then
      modDatabase.$myConn.Delete("tblcompexam", "fldid=&1", GridView1[GridView1.Row, 0].Text)
      FillFindingGrid(cmbcategory.Text)
      Balloon.Delete(("Information deleted"), GridView1)
      Balloon.Delay = modBasic.$BalloonDelay
    Endif
  Endif

End

Public Sub btnupload_Click()

  Dim xdelim As String

  If Trim(txtdelim.Text) Then
    xdelim = Trim(txtdelim.Text)
  Else
    xdelim = ";"
  Endif

  If Message.Question(("Are you sure ?"), ("No"), ("Yes")) = 2 Then
    If cmbtarget.Text Then
      modTextDB.ImportCSVToCurrentDB(modDatabase.$myConn, "tblcompexam", txtcsv.Text, xdelim, "fldcomp", cmbtarget.Text)
    Else
      modTextDB.ImportCSVToCurrentDB(modDatabase.$myConn, "tblcompexam", txtcsv.Text, xdelim)
    Endif
    Balloon.Info(("Data Import completed"), btnupload)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub txtcsv_Click()

  If Dialog.OpenFile() Then Return
  txtcsv.Text = Dialog.Path

End

''================================ Symptom ========================
Public Sub btnrefreshsymp_Click()

  FillComplaintGrid()

End

Public Sub btnaddsymp_Click()

  Dim hForm As FmSelectList

  If cmbtarget.Text Then
    hForm = New FmSelectList(("Select Complaints for the selected department"), "Complaints List", cmbtarget.Text)
    hForm.ShowModal
    FillComplaintGrid()
  Endif

End

Private Sub FillComplaintGrid()

  Dim sql As String
  Dim Column As Integer
  Dim fld As ResultField
  Dim $rData As Result

  If cmbtarget.Text Then
    sql = "select fldid,fldtype,fldflag,fldsymptom,fldflag from tblcomplaints where fldcomp=&1 ORDER BY fldsymptom"
    $rData = modDatabase.$myConn.Exec(sql, cmbtarget.Text)

    grdsymp.Clear
    grdsymp.Columns.Count = $rData.Fields.Count
    grdsymp.Rows.Count = $rData.Count

    For Each $rData
      Column = 0
      For Each fld In $rData.Fields
        modGeneralMain.GridExplicitDecoration(grdsymp, $rData.Index, Column)
        If Column = 2 Then
          grdsymp[$rData.Index, Column].Picture = Picture[modMisc.SetGridCheckIcon($rData[fld.Name])]
          grdsymp[$rData.Index, Column].Text = ""
        Else
          grdsymp[$rData.Index, Column].Text = $rData[fld.Name]
        Endif
        Column = Column + 1
      Next
    Next
    grdsymp.Row = 0

    With grdsymp
      .Rows.Height = modBasic.$AppGridRowHeight
      .Columns[0].Width = 1
      .Columns[1].Width = 125 * modBasic.$AppWidthRatio
      .Columns[2].Width = 25 * modBasic.$AppWidthRatio
      .Columns[3].Width = 325 * modBasic.$AppWidthRatio
      .Columns[4].Width = 1

      .Columns[1].Text = "Type"
      .Columns[3].Text = "Symptom"
    End With
  Endif

End

Public Sub grdsymp_Click()

  Dim Row As Integer
  Dim xval As String
  Dim res As Result

  If grdsymp.Column = 2 Then
    Row = grdsymp.Row
    xval = InputCombo("Alter Flag", grdsymp[grdsymp.Row, 1].Text, ["Flagged", "Unflagged"], GetFlagValue(grdsymp[grdsymp.Row, 4].Text), True)
    If xval Then
      res = modDatabase.$myConn.Edit("tblcomplaints", "fldid=&1", grdsymp[grdsymp.Row, 0].Text)
      If xval = "Flagged" Then
        res["fldflag"] = True
      Else If xval = "Unflagged" Then
        res["fldflag"] = False
      Endif
      res.Update
      FillComplaintGrid()
    Endif
    grdsymp.Row = Row
  Endif

End

Public Sub grdsymp_Menu()

  mnucomplaint.Popup

End

Public Sub mnudelcomplain_Click()

  If grdsymp.Rows.Selection.Count > 0 Then
    modDatabase.$myConn.Delete("tblcomplaints", "fldid=&1", grdsymp[grdsymp.Row, 0].Text)
    FillComplaintGrid()
    Balloon.Delete(("Information deleted"), grdsymp)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnuploadsymp_Click()

  Dim xdelim As String

  If Trim(txtdelimsymp.Text) Then
    xdelim = Trim(txtdelimsymp.Text)
  Else
    xdelim = ";"
  Endif

  If Message.Question(("Are you sure ?"), ("No"), ("Yes")) = 2 Then
    If cmbtarget.Text Then
      modTextDB.ImportCSVToCurrentDB(modDatabase.$myConn, "tblcomplaints", txtcsvsymp.Text, xdelim, "fldcomp", cmbtarget.Text)
    Else
      modTextDB.ImportCSVToCurrentDB(modDatabase.$myConn, "tblcomplaints", txtcsvsymp.Text, xdelim)
    Endif
    Balloon.Info(("Data Import completed"), btnuploadsymp)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub txtcsvsymp_Click()

  If Dialog.OpenFile() Then Return
  txtcsvsymp.Text = Dialog.Path

End
