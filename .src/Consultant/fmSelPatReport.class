' Gambas class file

Private $Blank As String[]
Private $rData As Result
Private $aMyFields As String[]

Private $tblpatlabtest As String
Private $tblpatlabsubtest As String

''for IMU
Private $xLocation As Variant[]
Private $OccupList As String[]

Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me, True)
  cmbtest.List = modMedicine.FillLabTestCombo("%")
  dtfir.Value = Now()
  dtlast.Value = Now()
  $Blank = New String[]
  modAccount.PasInvoiceSetting(cmbfiscal, False)
  LoadTableNames()

  ''for IMU
  $xLocation = GetLocationIMU()
  $OccupList = ["Front Line Health Worker", "Doctor", "Nurse", "Police/Army", "Business/Industry", "Teacher/Student/Education", "Journalist", "Agriculture", "Transport/Delivery", "Other"]

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Private Sub LoadTableNames()

  Dim res As Result

  If cmbfiscal.Text = "Current" Then
    $tblpatlabtest = "tblpatlabtest"
    $tblpatlabsubtest = "tblpatlabsubtest"
  Else
    res = modDatabase.$syConn.Exec("select fldpatlabtest,fldpatlabsubtest from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", cmbfiscal.Text, "Active")
    If res.Available Then
      If res["fldpatlabtest"] Then
        $tblpatlabtest = res["fldpatlabtest"]
      Else
        $tblpatlabtest = "tblpatlabtest"
      Endif
      If res["fldpatlabsubtest"] Then
        $tblpatlabsubtest = res["fldpatlabsubtest"]
      Else
        $tblpatlabsubtest = "tblpatlabsubtest"
      Endif
    Else
      $tblpatlabtest = "tblpatlabtest"
      $tblpatlabsubtest = "tblpatlabsubtest"
    Endif
  Endif

End

Public Sub cmbfiscal_Click()

  LoadTableNames()

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub cmbtest_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbtest)
  modFillContainer.RestrictComboToContent(cmbtest)

End

Public Sub btnshow_Click()

  FillGridView()

End

Private Sub FillGridView()

  Dim xFldList As String[]

  xFldList = ["fldid", "fldencounterval", "fldencounterval", modDataRepo.SerialField(), "fldencounterval", "fldtestid", "fldsampleid", "fldsampletype", "fldtime_sample", "fldstatus", modDataRepo.SerialField(), "fldtest_type", "fldid", "fldabnormal", "fldgroupid"]
  $rData = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval in(select fldencounterval from tblencounter where flddoa>=&1 and flddoa<=&2) and fldtestid like &3 and (fldstatus=&4 or fldstatus=&5) and flvisible=&6 and fldabnormal=&7", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbtest.Text, "Reported", "Verified", "Visible", True)                       ''
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Columns[0].Width = 1
    .Columns[1].Width = 125 * modBasic.$AppWidthRatio
    .Columns[2].Width = 175 * modBasic.$AppWidthRatio
    .Columns[3].Width = 75 * modBasic.$AppWidthRatio
    .Columns[4].Width = 75 * modBasic.$AppWidthRatio
    .Columns[5].Width = 250 * modBasic.$AppWidthRatio
    .Columns[6].Width = 100 * modBasic.$AppWidthRatio
    .Columns[7].Width = 100 * modBasic.$AppWidthRatio
    .Columns[8].Width = 150 * modBasic.$AppWidthRatio
    .Columns[9].Width = 75 * modBasic.$AppWidthRatio
    .Columns[10].Width = 275 * modBasic.$AppWidthRatio
    .Columns[11].Width = 1
    .Columns[12].Width = 1
    .Columns[13].Width = 25 * modBasic.$AppWidthRatio
    .Columns[14].Width = 1

    .Columns[1].Text = "EncID"
    .Columns[2].Text = "Name"
    .Columns[3].Text = "Age"
    .Columns[4].Text = "Gender"
    .Columns[5].Text = "TestName"
    .Columns[6].Text = "SampID"
    .Columns[7].Text = "Specimen"
    .Columns[8].Text = "Date"
    .Columns[9].Text = "Status"
    .Columns[10].Text = "Observation"
    .Columns[13].Text = "Flag"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer)

  $rData.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView1, Row)
  If Column = 10 Then
    GridView1.Data.RichText = GetGridViewValue(Column, $rData[$aMyFields[Column]])
    If modBasic.$RichtextResizeRow = "Yes" Then
      GridView1.Rows[Row].Height = Max(GridView1.Rows[Row].Height, GridView1.Data.Font.RichTextHeight(GridView1.Data.RichText, GridView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (GridView1.Rows.Height - GridView1.Font.Height))
    Endif
  Else If Column = 13 Then
    GridView1.Data.Picture = Picture[GetGridViewValue(Column, $rData[$aMyFields[Column]])]
    GridView1.Data.Text = ""
  Else
    GridView1.Data.Text = GetGridViewValue(Column, $rData[$aMyFields[Column]])
  Endif
  GridView1.Rows[Row].Height = Max(GridView1.Rows[Row].Height, GridView1.Data.Font.RichTextHeight(GridView1.Data.Text, GridView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (GridView1.Rows.Height - GridView1.Font.Height))
  GridView1.Data.WordWrap = True

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant

  If Column = 2 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 3 Then
    xxx = modMedReports.GetPatientPastAgeString($tblpatlabtest, xVariable)
  Else If Column = 4 Then
    xxx = modPatient.GetPatientSex(xVariable, modDatabase.$syConn)
  Else If Column = 8 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.GeneralDate)
  Else If Column = 10 Then
    xxx = modLabTest.GetLabTestValueSubString(xVariable, MMain.$defUnit, False, $tblpatlabtest, $tblpatlabsubtest)
  Else If Column = 13 Then
    xxx = modMisc.GetGridIcon(xVariable)
  Else If Column = 14 Then
    xxx = modDataRepo.GetHospitalTextLabel(xVariable)
  Else
    xxx = xVariable
  Endif

  Return xxx

End

Public Sub mnudemog_Click()

  Dim hForm As FmPatdemograph

  If GridView1.Rows.Selection.Count
    hForm = New FmPatdemograph(GridView1[GridView1.Row, 1].Text, "Clinical")
    hForm.ShowModal
  Endif

End

Public Sub mnupatprofile_Click()

  Dim hForm As FmIndexForm

  If GridView1.Rows.Selection.Count
    hForm = New FmIndexForm(GridView1[GridView1.Row, 1].Text, True, True)
    hForm.Show()
  Endif

End

''========================== IMU API ==========================
Private Function GetLocationIMU() As Variant[]

  Dim sPath As String
  Dim xVar As Variant[]

  sPath = modHelpVariable.$docsDirectory &/ "IMULocations.txt"
  If Exist(sPath) Then
    xVar = JSON.Decode(File.Load(sPath))
  Endif
  Return xVar

End

Public Sub mnuapi_Click()

  Dim hForm As FmAPISetting

  hForm = New FmAPISetting("IMUPatient")
  hForm.ShowModal

End

Public Sub mnutravel_Click()

  Dim hForm As FmSelectionList
  Dim aList As String[]

  aList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flddemoid as col from tbldemographic where (fldcomp=&1 or fldcomp=&2) ORDER BY fldindex", modBasic.$compID, "%"))
  hForm = New FmSelectionList("CovidDemography", ["Occupation", "Symptom", "Past Covid Infection", "Covid Vaccination", "District", "Municipality"], aList)
  hForm.ShowModal()

End

Public Sub mnutestname_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("CovidTestName", ["PCR Swab Collection", "Anitgen Test"], modMedicine.FillLabTestCombo("%"))
  hForm.ShowModal()

End

Public Sub mnuspecimen_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("CovidSpecimen", ["Nasopharyngeal", "Oropharyngeal", "Both Types"], modBasic.$LabSpecimenList)
  hForm.ShowModal()

End

Public Sub mnuresult_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("CovidResult", ["Positive", "Negative"], $Blank)
  hForm.ShowModal()

End

Public Sub mnupload_Click()

  Dim hForm As CIMUPatient
  Dim xmsg As String

  If $xLocation.Count Then
    If GridView1.Rows.Selection.Count Then
      Inc Application.Busy
      hForm = New CIMUPatient(GridView1[GridView1.Row, 0].Text, $xLocation, cmbfiscal.Text)
      xmsg = hForm.IMUOutput()
      Dec Application.Busy
      If xmsg Then
        Message.Info(xmsg)
      Endif
    Endif
  Endif

  ' Catch
  '   Dec Application.Busy
  '   Message.Warning(Error.Text, ("OK"))

End

Public Sub mnubulk_Click()

  Dim Row As Integer
  Dim hForm As CIMUPatient
  Dim xmsg As String
  Dim sColl As Collection

  If $xLocation.Count Then
    If Message.Question("Are you sure ?", ("No"), ("Yes")) = 2 Then
      For Row = 0 To GridView1.Rows.Count - 1

        Inc Application.Busy
        xmsg = ""
        hForm = New CIMUPatient(GridView1[Row, 0].Text, $xLocation, cmbfiscal.Text)
        xmsg = hForm.IMUOutput()
        Dec Application.Busy
        If xmsg Then
          Try sColl = JSON.Decode(xmsg)
          If sColl And If sColl["message"] = "Data Successfully Sync" Then
          Else
            Message.Warning(xmsg, ("OK"))
          Endif
        Endif

      Next
      FillGridView()
    Endif
  Endif

Catch
  Dec Application.Busy
  Message.Warning(Error.Text, ("OK"))

End

Public Sub btnexport_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, cmbtest.Text, modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End
