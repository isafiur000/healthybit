' Gambas class file

Private $xStatus As String
Private $rData1 As Result
Private $aMyFields1 As String[]

Private $rData2 As Result
Private $aMyFields2 As String[]
Private $encid As String

Public Sub _new(xStatus As String)
  
  $xStatus = xStatus
  
End

Public Sub Form_Open()
  
  Dim xoption As String
  Dim xregimen As String
  
  modGeneralMain.ArrangeEmbedForms(Me, Panel1, "Column")
  Me.Icon = Picture[modGeneralMain.$strLogo]
  Me.Title = $xStatus & " List"
  ShowInputForm()
  modSettings.ShowCheckBox(chkprintlabel, "DispensingList/PrintLabel")
  ShowDepartList()
  cmbdepart.Text = ""
  dtselected.Value = Now()
  
  xregimen = modSettings.ShowSettingFromFIle("ShowRegimen/DispensingList")
  If xregimen = "Yes" Then
    chkregimen.Value = True
  Else If xregimen = "No" Then
    chkregimen.Value = False
  Endif
  xoption = modSettings.ShowSettingFromFIle("EntrySetting/Pharmacy_DateSelect")
  If xoption = "Yes" Then
    chkdate.Value = True
  Else If xoption = "No" Then
    chkdate.Value = False
  Endif
  rbencid.Value = True
  chkselall.Value = True
  
  DateSelectionSett()
  If $xStatus = "Requested" Then
    rbencid.Value = True
    Panel6.Enabled = False
    mnulabel.Visible = False
  Else If $xStatus = "Dispensed" Then
    mnuremove.Visible = False
  Endif
  cmbdepart.SetFocus
  
End

Public Sub Form_Resize()
  
  modGeneralMain.ShowSelectedFormMenu(Me)
  
End

Public Sub Form_Close()
  
  modGeneralMain.RecordFormExit(Me)
  
End

Public Sub chkdate_Click()
  
  modSettings.EnterCheckSetting(chkdate, "EntrySetting/Pharmacy_DateSelect")
  DateSelectionSett()
  
End

Private Sub DateSelectionSett()
  
  If chkdate.Value = True Then
    Panel11.Enabled = True
  Else
    Panel11.Enabled = False
  Endif
  
End

Private Sub ShowInputForm()
  
  Dim xx As String
  
  xx = modSettings.ShowSettingFromFIle("DispensingList/Department")
  If xx = "InPatient" Then
    rbinpat.Value = True
  Else
    rboutpat.Value = True
  Endif
  
End

Private Sub ShowDepartList()
  
  If rboutpat.Value = True Then
    cmbdepart.List = modGeneral.GetDepartmentsForOPDBoth()
    cmbdepart.Text = ""
  Else If rbinpat.Value = True Then
    cmbdepart.List = modGeneral.GetDepartmentAllList("Patient Ward")
  Endif
  
End

Public Sub rboutpat_Click()
  
  modSettings.SaveSettingsToFile("DispensingList/Department", "OutPatient")
  ShowDepartList()
  
End

Public Sub rbinpat_Click()
  
  modSettings.SaveSettingsToFile("DispensingList/Department", "InPatient")
  ShowDepartList()
  
End

Public Sub form_KeyRelease()
  
  If Key.Code = Key["R"] And If Key.Control Then
    btnrefresh_Click()
  Else If Key.Code = Key.F1 Then
    btnseartext_Click()
  Else If Key.Code = Key.F12 Then
    btnclaerall_Click()
  Endif
  
End

Public Sub btnrefresh_Click()
  
  GridView2.Clear()
  GridView1.Clear()
  If rbencid.Value = True Then
    FillEncList("")
  Else If rbinvoice.Value = True Then
    FillInvoiceList("")
  Endif
  
End

Public Sub btnseartext_Click()
  
  Dim enc As String
  Dim xinv As String
  
  txtindex.Text = ""
  If rbencid.Value = True Then
    If modBasic.$AutoEncPrefix Then
      enc = InputBox(("Encounter ID of Patient"), ("Search Patient"), modBasic.$EncIdPrefix)
    Else
      enc = InputBox(("Encounter ID of Patient"), ("Search Patient"), "")
    Endif
    If enc Then
      FillEncList(Trim(enc))
      txtindex.Text = Trim(enc)
      $encid = Trim(enc)
      GetPatientProfile($encid)
      FillDispenstable(txtindex.Text)
    Endif
  Else If rbinvoice.Value = True Then
    xinv = InputBox(("Provide Invoice Number"), ("Search Patient"), "")
    If xinv Then
      FillInvoiceList(Trim(xinv))
      txtindex.Text = Trim(xinv)
      $encid = modNonMedical.GetEncounterFromBillNo(Trim(xinv))
      GetPatientProfile($encid)
      FillDispenstable(txtindex.Text)
    Endif
  Endif
  
End

Private Sub FillEncList(xencid As String)
  
  Dim xstate As Boolean
  
  If $xStatus = "Dispensed" Then
    xstate = True
  Else If $xStatus = "Requested" Then
    xstate = False
  Endif
  If Not cmbdepart.Text Then
    cmbdepart.Text = "%"
  Endif
  
  If chkdate.Value = True Then
    If Not xencid Then
      If rboutpat.Value = True Then
        $rData1 = modDatabase.$myConn.Exec("select fldencounterval,fldencounterval,fldencounterval,fldencounterval from tblpatdosing where flditemtype like &1 and fldlevel=&2 and fldcurval=&4 and fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat like &5) and fldqtydisp>&6 and fldtime_order>=&7 and fldtime_order<=&8 and fldsave_order=&9 GROUP BY fldencounterval", "%", "Requested", xencid, "Continue", cmbdepart.Text, 0, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), xstate)                                          ''
      Else If rbinpat.Value = True Then
        $rData1 = modDatabase.$myConn.Exec("select fldencounterval,fldencounterval,fldencounterval,fldencounterval from tblpatdosing where flditemtype like &1 and fldlevel=&2 and fldcurval=&4 and fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat in(select fldbed from tbldepartmentbed where flddept like &5)) and fldqtydisp>&6 and fldtime_order>=&7 and fldtime_order<=&8 and fldsave_order=&9 GROUP BY fldencounterval", "%", "Requested", xencid, "Continue", cmbdepart.Text, 0, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), xstate)                                          ''
      Endif
    Else
      $rData1 = modDatabase.$myConn.Exec("select fldencounterval,fldencounterval,fldencounterval,fldencounterval from tblpatdosing where flditemtype like &1 and fldlevel=&2 and fldencounterval like &3 and fldcurval=&4 and fldqtydisp>&5 and fldtime_order>=&6 and fldtime_order<=&7 and fldsave_order=&8 GROUP BY fldencounterval", "%", "Requested", xencid, "Continue", 0, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), xstate)                                          ''
    Endif
  Else
    If Not xencid Then
      If rboutpat.Value = True Then
        $rData1 = modDatabase.$myConn.Exec("select fldencounterval,fldencounterval,fldencounterval,fldencounterval from tblpatdosing where flditemtype like &1 and fldlevel=&2 and fldcurval=&4 and fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat like &5) and fldqtydisp>&6 and fldsave_order=&7 GROUP BY fldencounterval", "%", "Requested", xencid, "Continue", cmbdepart.Text, 0, xstate)                                          ''
      Else If rbinpat.Value = True Then
        $rData1 = modDatabase.$myConn.Exec("select fldencounterval,fldencounterval,fldencounterval,fldencounterval from tblpatdosing where flditemtype like &1 and fldlevel=&2 and fldcurval=&4 and fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat in(select fldbed from tbldepartmentbed where flddept like &5)) and fldqtydisp>&6 and fldsave_order=&7 GROUP BY fldencounterval", "%", "Requested", xencid, "Continue", cmbdepart.Text, 0, xstate)                                          ''
      Endif
    Else
      $rData1 = modDatabase.$myConn.Exec("select fldencounterval,fldencounterval,fldencounterval,fldencounterval from tblpatdosing where flditemtype like &1 and fldlevel=&2 and fldencounterval like &3 and fldcurval=&4 and fldqtydisp>&5 and fldsave_order=&6 GROUP BY fldencounterval", "%", "Requested", xencid, "Continue", 0, xstate)                                          ''
    Endif
  Endif
  
  $aMyFields1 = New String[]
  modGridView.ReadSmallData(GridView1, $rData1, $aMyFields1)
  
  With GridView1
    .Columns[0].Width = 100 * modBasic.$AppWidthRatio
    .Columns[1].Width = 125 * modBasic.$AppWidthRatio
    .Columns[2].Width = 175 * modBasic.$AppWidthRatio
    .Columns[3].Width = 1
    
    .Columns[0].Text = "Location"
    .Columns[1].Text = "Encounter"
    .Columns[2].Text = "Patient Name"
  End With
  
End

Private Sub FillInvoiceList(invno As String)
  
  Dim xstate As Boolean
  
  If $xStatus = "Dispensed" Then
    xstate = True
  Else If $xStatus = "Requested" Then
    xstate = False
  Endif
  
  If chkdate.Value = True Then
    If Not invno Then
      If rboutpat.Value = True Then
        $rData1 = modDatabase.$myConn.Exec("select tblpatdosing.fldencounterval,tblpatbilling.fldbillno,tblpatdosing.fldencounterval,tblpatdosing.fldencounterval from tblpatdosing inner join tblpatbilling on tblpatdosing.fldid=tblpatbilling.fldparent where tblpatdosing.flditemtype like &1 and tblpatdosing.fldlevel=&2 and tblpatdosing.fldcurval=&4 and tblpatdosing.fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat like &5) and tblpatdosing.fldqtydisp>&6 and tblpatdosing.fldtime_order>=&7 and tblpatdosing.fldtime_order<=&8 and tblpatdosing.fldsave_order=&9 GROUP BY tblpatbilling.fldbillno", "%", "Requested", invno, "Continue", cmbdepart.Text, 0, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), xstate)                                          ''
      Else If rbinpat.Value = True Then
        $rData1 = modDatabase.$myConn.Exec("select tblpatdosing.fldencounterval,tblpatbilling.fldbillno,tblpatdosing.fldencounterval,tblpatdosing.fldencounterval from tblpatdosing inner join tblpatbilling on tblpatdosing.fldid=tblpatbilling.fldparent where tblpatdosing.flditemtype like &1 and tblpatdosing.fldlevel=&2 and tblpatdosing.fldcurval=&4 and tblpatdosing.fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat in(select fldbed from tbldepartmentbed where flddept like &5)) and tblpatdosing.fldqtydisp>&6 and tblpatdosing.fldtime_order>=&7 and tblpatdosing.fldtime_order<=&8 and tblpatdosing.fldsave_order=&9 GROUP BY tblpatbilling.fldbillno", "%", "Requested", invno, "Continue", cmbdepart.Text, 0, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), xstate)                                          ''
      Endif
    Else
      $rData1 = modDatabase.$myConn.Exec("select tblpatdosing.fldencounterval,tblpatbilling.fldbillno,tblpatdosing.fldencounterval,tblpatdosing.fldencounterval from tblpatdosing inner join tblpatbilling on tblpatdosing.fldid=tblpatbilling.fldparent where tblpatdosing.flditemtype like &1 and tblpatdosing.fldlevel=&2 and tblpatbilling.fldbillno like &3 and tblpatdosing.fldcurval=&4 and tblpatdosing.fldqtydisp>&5 and tblpatdosing.fldtime_order>=&6 and tblpatdosing.fldtime_order<=&7 and tblpatdosing.fldsave_order=&8 GROUP BY tblpatbilling.fldbillno", "%", "Requested", invno, "Continue", 0, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), xstate)                                          ''
    Endif
  Else
    If Not invno Then
      If rboutpat.Value = True Then
        $rData1 = modDatabase.$myConn.Exec("select tblpatdosing.fldencounterval,tblpatbilling.fldbillno,tblpatdosing.fldencounterval,tblpatdosing.fldencounterval from tblpatdosing inner join tblpatbilling on tblpatdosing.fldid=tblpatbilling.fldparent where tblpatdosing.flditemtype like &1 and tblpatdosing.fldlevel=&2 and tblpatdosing.fldcurval=&4 and tblpatdosing.fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat like &5) and tblpatdosing.fldqtydisp>&6 and tblpatdosing.fldsave_order=&7 GROUP BY tblpatbilling.fldbillno", "%", "Requested", invno, "Continue", cmbdepart.Text, 0, xstate)                                          ''
      Else If rbinpat.Value = True Then
        $rData1 = modDatabase.$myConn.Exec("select tblpatdosing.fldencounterval,tblpatbilling.fldbillno,tblpatdosing.fldencounterval,tblpatdosing.fldencounterval from tblpatdosing inner join tblpatbilling on tblpatdosing.fldid=tblpatbilling.fldparent where tblpatdosing.flditemtype like &1 and tblpatdosing.fldlevel=&2 and tblpatdosing.fldcurval=&4 and tblpatdosing.fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat in(select fldbed from tbldepartmentbed where flddept like &5)) and tblpatdosing.fldqtydisp>&6 and tblpatdosing.fldsave_order=&7 GROUP BY tblpatbilling.fldbillno", "%", "Requested", invno, "Continue", cmbdepart.Text, 0, xstate)                                          ''
      Endif
    Else
      $rData1 = modDatabase.$myConn.Exec("select tblpatdosing.fldencounterval,tblpatbilling.fldbillno,tblpatdosing.fldencounterval,tblpatdosing.fldencounterval from tblpatdosing inner join tblpatbilling on tblpatdosing.fldid=tblpatbilling.fldparent where tblpatdosing.flditemtype like &1 and tblpatdosing.fldlevel=&2 and tblpatbilling.fldbillno like &3 and tblpatdosing.fldcurval=&4 and tblpatdosing.fldqtydisp>&5 and tblpatdosing.fldsave_order=&6 GROUP BY tblpatbilling.fldbillno", "%", "Requested", invno, "Continue", 0, xstate)                                          ''
    Endif
  Endif
  $aMyFields1 = New String[]
  modGridView.ReadSmallData(GridView1, $rData1, $aMyFields1)
  
  With GridView1
    .Columns[0].Width = 100 * modBasic.$AppWidthRatio
    .Columns[1].Width = 125 * modBasic.$AppWidthRatio
    .Columns[2].Width = 175 * modBasic.$AppWidthRatio
    .Columns[3].Width = 1
    
    .Columns[0].Text = "Location"
    .Columns[1].Text = "Invoice"
    .Columns[2].Text = "Patient Name"
  End With
  
End

Public Sub GridView1_Data(Row As Integer, Column As Integer)
  
  $rData1.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView1, Row)
  If Column = 0 Then
    GridView1.Data.Text = modPatient.GetPatientLocation($rData1[$aMyFields1[Column]])
  Else If Column = 2 Then
    GridView1.Data.Text = modPatient.GetPatientNameByEnc($rData1[$aMyFields1[Column]])
  Else
    GridView1.Data.Text = $rData1[$aMyFields1[Column]]
  Endif
  GridView1.Rows[Row].Height = Max(GridView1.Rows[Row].Height, GridView1.Data.Font.RichTextHeight(GridView1.Data.Text, GridView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (GridView1.Rows.Height - GridView1.Font.Height))
  GridView1.Data.WordWrap = True
  
End

Public Sub GridView1_Select()
  
  GridView1_Click()
  
End

Public Sub GridView1_Click()
  
  txtindex.Text = ""
  If GridView1.Rows.Selection.Count > 0 Then
    GridView2.Clear()
    txtindex.Text = GridView1[GridView1.Row, 1].Text
    $encid = GridView1[GridView1.Row, 3].Text
    GetPatientProfile($encid)
    FillDispenstable(txtindex.Text)
    GridView2.SetFocus
  Endif
  
End

Private Sub GetPatientProfile(encid As String)
  
  txtpatientname.Text = modPatient.GetPatientNameByEnc(encid)
  txtgender.Text = modPatient.GetPatientSex(encid)
  txtpatientaddress.Text = modPatient.GetPatientAddressByEnc(encid)
  txtpatientcontact.Text = modPatient.GetPatientLocation(encid)
  
End

Private Function ExecuteQuery(encid As String) As Result
  
  Dim xstate As Boolean
  Dim res As Result
  
  If $xStatus = "Dispensed" Then
    xstate = True
  Else If $xStatus = "Requested" Then
    xstate = False
  Endif
  
  If rbencid.Value = True Then
    If cmbdepart.Text Then
      If chkdate.Value = True Then
        If Not cmbdepart.Text Then
          res = modDatabase.$myConn.Exec("select fldid,fldtime_order,fldroute,flditem,fldqtydisp,flddose,fldfreq,flddays,fldlabel,flddirection,fldcomp_order,fldencounterval,flditemtype,fldfixname,fldfixrate,fldtaxper,flddiscper,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from tblpatdosing where fldencounterval=&1 and fldlevel=&2 and flditemtype like &3 and fldcurval=&4 and fldqtydisp>&5 and fldtime_order>=&6 and fldtime_order<=&7 and fldsave_order=&8", encid, "Requested", "%", "Continue", 0, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), xstate)
        Else
          If rboutpat.Value = True Then
            res = modDatabase.$myConn.Exec("select fldid,fldtime_order,fldroute,flditem,fldqtydisp,flddose,fldfreq,flddays,fldlabel,flddirection,fldcomp_order,fldencounterval,flditemtype,fldfixname,fldfixrate,fldtaxper,flddiscper,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from tblpatdosing where fldencounterval=&1 and fldlevel=&2 and flditemtype like &3 and fldcurval=&4 and fldqtydisp>&5 and fldtime_order>=&6 and fldtime_order<=&7 and fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat like &8) and fldsave_order=&9", encid, "Requested", "%", "Continue", 0, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbdepart.Text, xstate)
          Else If rbinpat.Value = True Then
            res = modDatabase.$myConn.Exec("select fldid,fldtime_order,fldroute,flditem,fldqtydisp,flddose,fldfreq,flddays,fldlabel,flddirection,fldcomp_order,fldencounterval,flditemtype,fldfixname,fldfixrate,fldtaxper,flddiscper,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from tblpatdosing where fldencounterval=&1 and fldlevel=&2 and flditemtype like &3 and fldcurval=&4 and fldqtydisp>&5 and fldtime_order>=&6 and fldtime_order<=&7 and fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat in(select fldbed from tbldepartmentbed where flddept like &8)) and fldsave_order=&9", encid, "Requested", "%", "Continue", 0, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbdepart.Text, xstate)
          Endif
        Endif
      Else
        If Not cmbdepart.Text Then
          res = modDatabase.$myConn.Exec("select fldid,fldtime_order,fldroute,flditem,fldqtydisp,flddose,fldfreq,flddays,fldlabel,flddirection,fldcomp_order,fldencounterval,flditemtype,fldfixname,fldfixrate,fldtaxper,flddiscper,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from tblpatdosing where fldencounterval=&1 and fldlevel=&2 and flditemtype like &3 and fldcurval=&4 and fldqtydisp>&5 and fldsave_order=&6", encid, "Requested", "%", "Continue", 0, xstate)                                         ''
        Else
          If rboutpat.Value = True Then
            res = modDatabase.$myConn.Exec("select fldid,fldtime_order,fldroute,flditem,fldqtydisp,flddose,fldfreq,flddays,fldlabel,flddirection,fldcomp_order,fldencounterval,flditemtype,fldfixname,fldfixrate,fldtaxper,flddiscper,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from tblpatdosing where fldencounterval=&1 and fldlevel=&2 and flditemtype like &3 and fldcurval=&4 and fldqtydisp>&5 and fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat like &6) and fldsave_order=&7", encid, "Requested", "%", "Continue", 0, cmbdepart.Text, xstate)
          Else If rbinpat.Value = True Then
            res = modDatabase.$myConn.Exec("select fldid,fldtime_order,fldroute,flditem,fldqtydisp,flddose,fldfreq,flddays,fldlabel,flddirection,fldcomp_order,fldencounterval,flditemtype,fldfixname,fldfixrate,fldtaxper,flddiscper,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from tblpatdosing where fldencounterval=&1 and fldlevel=&2 and flditemtype like &3 and fldcurval=&4 and fldqtydisp>&5 and fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat in(select fldbed from tbldepartmentbed where flddept like &6)) and fldsave_order=&7", encid, "Requested", "%", "Continue", 0, cmbdepart.Text, xstate)
          Endif
        Endif
        
      Endif
    Endif
    
  Else If rbinvoice.Value = True Then
    If cmbdepart.Text Then
      If chkdate.Value = True Then
        If Not cmbdepart.Text Then
          res = modDatabase.$myConn.Exec("select fldid,fldtime_order,fldroute,flditem,fldqtydisp,flddose,fldfreq,flddays,fldlabel,flddirection,fldcomp_order,fldencounterval,flditemtype,fldfixname,fldfixrate,fldtaxper,flddiscper,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from tblpatdosing where fldid in(select fldparent from tblpatbilling where fldbillno=&1) and fldlevel=&2 and flditemtype like &3 and fldcurval=&4 and fldqtydisp>&5 and fldtime_order>=&6 and fldtime_order<=&7 and fldsave_order=&8", encid, "Requested", "%", "Continue", 0, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), xstate)
        Else
          If rboutpat.Value = True Then
            res = modDatabase.$myConn.Exec("select fldid,fldtime_order,fldroute,flditem,fldqtydisp,flddose,fldfreq,flddays,fldlabel,flddirection,fldcomp_order,fldencounterval,flditemtype,fldfixname,fldfixrate,fldtaxper,flddiscper,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from tblpatdosing where fldid in(select fldparent from tblpatbilling where fldbillno=&1) and fldlevel=&2 and flditemtype like &3 and fldcurval=&4 and fldqtydisp>&5 and fldtime_order>=&6 and fldtime_order<=&7 and fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat like &8) and fldsave_order=&9", encid, "Requested", "%", "Continue", 0, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbdepart.Text, xstate)
          Else If rbinpat.Value = True Then
            res = modDatabase.$myConn.Exec("select fldid,fldtime_order,fldroute,flditem,fldqtydisp,flddose,fldfreq,flddays,fldlabel,flddirection,fldcomp_order,fldencounterval,flditemtype,fldfixname,fldfixrate,fldtaxper,flddiscper,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from tblpatdosing where fldid in(select fldparent from tblpatbilling where fldbillno=&1) and fldlevel=&2 and flditemtype like &3 and fldcurval=&4 and fldqtydisp>&5 and fldtime_order>=&6 and fldtime_order<=&7 and fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat in(select fldbed from tbldepartmentbed where flddept like &8)) and fldsave_order=&9", encid, "Requested", "%", "Continue", 0, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbdepart.Text, xstate)
          Endif
        Endif
      Else
        If Not cmbdepart.Text Then
          res = modDatabase.$myConn.Exec("select fldid,fldtime_order,fldroute,flditem,fldqtydisp,flddose,fldfreq,flddays,fldlabel,flddirection,fldcomp_order,fldencounterval,flditemtype,fldfixname,fldfixrate,fldtaxper,flddiscper,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from tblpatdosing where fldid in(select fldparent from tblpatbilling where fldbillno=&1) and fldlevel=&2 and flditemtype like &3 and fldcurval=&4 and fldqtydisp>&5 and fldsave_order=&6", encid, "Requested", "%", "Continue", 0, xstate)                                         ''
        Else
          If rboutpat.Value = True Then
            res = modDatabase.$myConn.Exec("select fldid,fldtime_order,fldroute,flditem,fldqtydisp,flddose,fldfreq,flddays,fldlabel,flddirection,fldcomp_order,fldencounterval,flditemtype,fldfixname,fldfixrate,fldtaxper,flddiscper,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from tblpatdosing where fldid in(select fldparent from tblpatbilling where fldbillno=&1) and fldlevel=&2 and flditemtype like &3 and fldcurval=&4 and fldqtydisp>&5 and fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat like &6) and fldsave_order=&7", encid, "Requested", "%", "Continue", 0, cmbdepart.Text, xstate)
          Else If rbinpat.Value = True Then
            res = modDatabase.$myConn.Exec("select fldid,fldtime_order,fldroute,flditem,fldqtydisp,flddose,fldfreq,flddays,fldlabel,flddirection,fldcomp_order,fldencounterval,flditemtype,fldfixname,fldfixrate,fldtaxper,flddiscper,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from tblpatdosing where fldid in(select fldparent from tblpatbilling where fldbillno=&1) and fldlevel=&2 and flditemtype like &3 and fldcurval=&4 and fldqtydisp>&5 and fldencounterval in(select fldencounterval from tblencounter where fldcurrlocat in(select fldbed from tbldepartmentbed where flddept like &6)) and fldsave_order=&7", encid, "Requested", "%", "Continue", 0, cmbdepart.Text, xstate)
          Endif
        Endif
        
      Endif
    Endif
  Endif
  
  Return res
  
End

Private Sub FillDispenstable(encid As String)
  
  $rData2 = ExecuteQuery(encid)
  $aMyFields2 = New String[]
  modGridView.ReadSmallData(GridView2, $rData2, $aMyFields2)
  
  With GridView2
    .Columns[0].Width = 1
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 75 * modBasic.$AppWidthRatio
    .Columns[3].Width = 250 * modBasic.$AppWidthRatio
    .Columns[4].Width = 75 * modBasic.$AppWidthRatio
    If chkregimen.Value = True Then
      .Columns[5].Width = 75 * modBasic.$AppWidthRatio
      .Columns[6].Width = 50 * modBasic.$AppWidthRatio
      .Columns[7].Width = 50 * modBasic.$AppWidthRatio
      .Columns[8].Width = 25 * modBasic.$AppWidthRatio
    Else
      .Columns[5].Width = 1
      .Columns[6].Width = 1
      .Columns[7].Width = 1
      .Columns[8].Width = 1
    Endif
    
    .Columns[9].Width = 200 * modBasic.$AppWidthRatio
    .Columns[10].Width = 100 * modBasic.$AppWidthRatio
    .Columns[11].Width = 1
    .Columns[12].Width = 1
    
    .Columns[13].Width = 1
    .Columns[14].Width = 1
    .Columns[15].Width = 1
    .Columns[16].Width = 1
    .Columns[17].Width = 1
    .Columns[18].Width = 1
    .Columns[19].Width = 1
    .Columns[20].Width = 1
    .Columns[21].Width = 1
    
    .Columns[1].Text = "DateTime"
    .Columns[2].Text = "Route"
    .Columns[3].Text = "Particulars"
    .Columns[4].Text = "QTY"
    If chkregimen.Value = True Then
      .Columns[5].Text = "Dose"
      .Columns[6].Text = "Freq"
      .Columns[7].Text = "Day"
    Endif
    .Columns[9].Text = "Direction"
    .Columns[10].Text = "Sender"
  End With
  
End

Public Sub GridView2_Data(Row As Integer, Column As Integer)
  
  $rData2.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView2, Row)
  If Column = 1 Then
    GridView2.Data.Text = modReportVar.GetDateTimeReport($rData2[$aMyFields2[Column]], gb.GeneralDate)
  Else If Column = 8 Then
    GridView2.Data.Picture = Picture[modMisc.SetGridCheckIcon($rData2["fldlabel"])]
    GridView2.Data.Text = ""
  Else If Column = 10 Then
    GridView2.Data.Text = modGeneral.GetCompNameFromCompID($rData2[$aMyFields2[Column]])
  Else
    GridView2.Data.Text = $rData2[$aMyFields2[Column]]
  Endif
  GridView2.Rows[Row].Height = Max(GridView2.Rows[Row].Height, GridView2.Data.Font.RichTextHeight(GridView2.Data.Text, GridView2.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (GridView2.Rows.Height - GridView2.Font.Height))
  GridView2.Data.WordWrap = True
  
End

Public Sub GridView2_Click()
  
  Dim xval As Float
  Dim yval As String
  Dim col As Integer
  Dim row As Integer
  Dim anum As Float
  
  col = GridView2.Column
  row = GridView2.Row
  If GridView2.Column = 8 Then
    If GridView2[GridView2.Row, 12].Text = "Medicines" Then
      If GridView2[GridView2.Row, 4].Text And If GridView2[GridView2.Row, 5].Text And If GridView2[GridView2.Row, 6].Text Then
        modGridView.CheckUncheckGridWithDB(modDatabase.$myConn, GridView2, 8, "fldlabel", "fldid", "tblpatdosing", GridView2[GridView2.Row, 0].Text)
      Endif
    Endif
    
  Else If GridView2.Column = 4 Then
    If $xStatus = "Requested" Then
      xval = InputValue(GridView2[GridView2.Row, 3].Text, ("Alter Quantity"), GridView2[GridView2.Row, 4].Text)
      If xval > 0 Then
        modPharmSub.UpdateQTYBefDispensing(GridView2[GridView2.Row, 0].Text, xval)
        FillDispenstable(txtindex.Text)
      Endif
    Endif
    
  Else If GridView2.Column = 5 Then
    If GridView2[GridView2.Row, 12].Text = "Medicines" Then
      If GridView2[GridView2.Row, 5].Text Then
        anum = GridView2[GridView2.Row, 5].Text
      Else
        anum = 0
      Endif
      xval = InputValue(GridView2[GridView2.Row, 3].Text, ("Alter Unit Dose"), anum)
      modPharmSub.UpdateDoseBefDispensing(GridView2[GridView2.Row, 0].Text, xval)
      FillDispenstable(txtindex.Text)
    Endif
    
  Else If GridView2.Column = 6 Then
    If GridView2[GridView2.Row, 12].Text = "Medicines" Then
      yval = InputCombo(GridView2[GridView2.Row, 3].Text, ("Alter Frequency"), modMedicine.FrequencyCombo(), GridView2[GridView2.Row, 6].Text, True)
      modPharmSub.UpdateFreqBefDispensing(GridView2[GridView2.Row, 0].Text, yval)
      FillDispenstable(txtindex.Text)
    Endif
    
  Else If GridView2.Column = 7 Then
    If GridView2[GridView2.Row, 12].Text = "Medicines" Then
      If GridView2[GridView2.Row, 7].Text Then
        anum = GridView2[GridView2.Row, 7].Text
      Else
        anum = 0
      Endif
      xval = InputValue(GridView2[GridView2.Row, 3].Text, ("Alter Duration"), anum)
      modPharmSub.UpdateDaysBefDispensing(GridView2[GridView2.Row, 0].Text, xval)
      FillDispenstable(txtindex.Text)
    Endif
    
  Else If GridView2.Column = 9 Then
    yval = InputBox(GridView2[GridView2.Row, 3].Text, ("Alter Direction"), GridView2[GridView2.Row, 9].Text)
    If yval Then
      modPharmSub.UpdateAdviceBefDispensing(GridView2[GridView2.Row, 0].Text, yval)
      FillDispenstable(txtindex.Text)
    Endif
    
  Endif
  GridView2.Column = col
  GridView2.Row = row
  
End

Public Sub GridView2_Menu()
  
  mnuhide.Popup
  
End

Public Sub chkprintlabel_Click()
  
  modSettings.EnterCheckSetting(chkprintlabel, "DispensingList/PrintLabel")
  
End

Public Sub mnuremove_Click()
  
  If GridView2.Rows.Selection.Count > 0 Then
    modDatabase.$myConn.Delete("tblpatdosing", "fldid=&1 and fldsave_order=&2", GridView2[GridView2.Row, 0].Text, False)
    FillDispenstable(txtindex.Text)
  Endif
  
End

Public Sub mnulabel_Click()
  
  Dim res As Result
  Dim hClabel As CLabelSize
  
  If GridView2.Rows.Selection.Count > 0 Then
    If GridView2[GridView2.Row, 12].Text = "Medicines" Then
      res = modDatabase.$myConn.Edit("tblpatdosing", "fldid=&1", GridView2[GridView2.Row, 0].Text)
      res["fldlevel"] = "Dispensed"
      res["xyz"] = False
      res.Update()
      
      If chkprintlabel.Value = True Then
        hClabel = New CLabelSize(GridView2[GridView2.Row, 0].Text, "Outpatient")
        modPrint.PrintPopUp(CStr(GridView2[GridView2.Row, 0].Text), hClabel.LabelPath(), "LabelSize")
      Endif
      FillDispenstable(txtindex.Text)
    Endif
  Endif
  
End

Public Sub btnclaerall_Click()
  
  If $xStatus = "Dispensed" Then
    COnfirmDispensing()
  Else If $xStatus = "Requested" Then
    PharmacySave()
    FillDispenstable(txtindex.Text)
  Endif
  
End

Private Sub COnfirmDispensing()
  
  Dim res As Result
  Dim Row As Integer
  Dim xgo As Boolean
  
  If GridView2.Rows.Count Then
    For Row = 0 To GridView2.Rows.Count - 1
      xgo = False
      If chkselall.Value = True Then
        xgo = True
      Else If chkselall.Value = False Then
        If GridView2.Rows[Row].Selected = True Then
          xgo = True
        Endif
      Endif
      If xgo = True Then
        res = modDatabase.$myConn.Edit("tblpatdosing", "fldid=&1", GridView2[Row, 0].Text)
        res["fldlevel"] = "Dispensed"
        res["flduserid_disp"] = modBasic.$lbluser
        res["fldtime_disp"] = Now()
        res["fldcomp_disp"] = modBasic.$compID
        res["xyz"] = False
        res.Update()
      Endif
    Next
    FillDispenstable(txtindex.Text)
    Balloon.Info(("Information saved"), btnclaerall)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif
  
End

Public Sub btnlabelall_Click()
  
  Dim Row As Integer
  Dim hClabel As CLabelSize
  
  If GridView2.Rows.Count Then
    For Row = 0 To GridView2.Rows.Count - 1
      If GridView2[Row, 12].Text = "Medicines" Then
        hClabel = New CLabelSize(GridView2[Row, 0].Text, "Outpatient")
        modPrint.PrintPopUp(CStr(GridView2[Row, 0].Text), hClabel.LabelPath(), "LabelSize")
      Endif
    Next
  Endif
  
End

Public Sub btncounsel_Click()
  
  Dim Row As Integer
  Dim doslst As Long[]
  Dim xPath As String
  
  If GridView2.Rows.Count Then
    doslst = New Long[]
    For Row = 0 To GridView2.Rows.Count - 1
      If GridView2[Row, 12].Text = "Medicines" Then
        doslst.Add(GridView2[Row, 0].Text)
      Endif
    Next
    Inc Application.Busy
    xPath = modCHTMLPatient.ShowCounselingReport($encid, doslst)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
  Endif
  
End

Public Sub btnreview_Click()
  
  Dim Row As Integer
  Dim opt As Long[]
  
  If GridView2.Rows.Count Then
    opt = New Long[]
    For Row = 0 To GridView2.Rows.Count - 1
      If GridView2[Row, 12].Text = "Medicines" Then
        opt.Add(GridView2[Row, 0].Text)
      Endif
    Next
    modMedError.ShowMedicationReviewMultipleDosID($encid, opt, "Report")
  Endif
  
End

Public Sub btnpatinfo_Click()
  
  Dim hCls As CReportCustom
  
  If $encid Then
    If modSettings.ShowSettingFromFIle("Diagnostic Help/Name") Then
      hCls = New CReportCustom($encid, "Diagnostic Help", "ReportSize", MMain.$defUnit)
      hCls.Preview()
    Endif
  Endif
  
End

''-------- Save Request --------------------
Private Sub PharmacySave()
  
  Dim res1 As Result
  Dim xgo As Boolean
  Dim tax As Float
  Dim disc As Float
  Dim xrate As Float
  Dim xitem As String
  
  Dim res2 As Result
  Dim sql2 As String
  
  Dim qtynew As Float
  Dim sList As Long[]
  Dim xerr As String
  Dim xallow As Boolean
  Dim xCshCrd As Float
  
  If modBasic.$HideStorage = "OnSave" Then
    modDevice.SendDataToSerialPort(modBasic.$SerialClear)
  Endif
  xerr = ""
  
  If $encid Then
    sList = New Long[]
    
    res1 = $rData2
    If res1.Available = True Then
      
      Inc Application.Busy
      For Each res1
        xgo = False
        If chkselall.Value = True Then
          xgo = True
        Else If chkselall.Value = False Then
          If GridView2.Rows[res1.Index].Selected = True Then
            xgo = True
          Endif
        Endif
        If xgo = True Then
          'get tax and discount percentages
          If res1["fldtaxper"] Then
            tax = res1["fldtaxper"]
          Else
            tax = 0
          Endif
          If res1["flddiscper"] Then
            disc = res1["flddiscper"]
          Else
            disc = 0
          Endif
          If res1["fldcashincredit"] Then
            xCshCrd = res1["fldcashincredit"]
          Else
            xCshCrd = 0
          Endif
          
          If res1["fldfixrate"] Then
            xrate = res1["fldfixrate"]
          Else
            xrate = modStock.GetCurrentSellingPrice(res1["flditem"], modBasic.$compID)
          Endif
          xallow = modNonMedical.AllowPharmProceedPreBill($encid, res1["flddisctype"], res1["fldqtydisp"], xrate, res1["flddiscper"], res1["fldbilltype"], xCshCrd, res1["fldroute"], res1["flditem"])
          If xallow = True Then
            
            qtynew = res1["fldqtydisp"]
            modDatabase.$myConn.Begin
            While qtynew > 0
              'get stockno, rate and quantity based on expiry check
              If modBasic.$SkipExpiry = "ExpireOnUse" Then
                sql2 = "select fldstockno,fldqty from tblentry where fldstockid=&1 and fldcomp=&2 and fldstatus=&3 and fldexpiry>&4 and fldqty>&5"
                res2 = modDatabase.$myConn.Exec(sql2, res1["flditem"], modBasic.$compID, 1, DateAdd(modDate.StartSqlDate(Now()), gb.Day, CInt(res1["flddays"])), 0)
              Else If modBasic.$SkipExpiry = "Expired" Then
                sql2 = "select fldstockno,fldqty from tblentry where fldstockid=&1 and fldcomp=&2 and fldstatus=&3 and fldexpiry>&4 and fldqty>&5"
                res2 = modDatabase.$myConn.Exec(sql2, res1["flditem"], modBasic.$compID, 1, modDate.StartSqlDate(Now()), 0)
              Else
                sql2 = "select fldstockno,fldqty from tblentry where fldstockid=&1 and fldcomp=&2 and fldstatus=&3 and fldqty>&4"
                res2 = modDatabase.$myConn.Exec(sql2, res1["flditem"], modBasic.$compID, 1, 0)
              Endif
              If res2.Available Then
                res2.MoveFirst
                
                xitem = res1["flditem"]
                If res1["fldfixname"] Then
                  xitem = res1["fldfixname"]
                  If res1["fldfixrate"] Then
                    xrate = res1["fldfixrate"]
                  Else
                    xrate = 0
                  Endif
                Else
                  xrate = modStock.GetSellingPriceByStockNo(res2["fldstockno"], res1["fldbillingmode"])
                Endif
                
                If qtynew <= res2["fldqty"] Then
                  modBillings.InsertBlankBillItemNewApp($encid, res1["fldbilltype"], res1["fldbillingmode"], res1["flddisctype"], res1["fldacledger"], res1["flditemtype"], res2["fldstockno"], xitem, xrate, qtynew, tax, disc, xCshCrd, "Done", res1["fldid"], True, False, modBasic.$compID)
                  modStockSub.AddToExistEntry(res2["fldstockno"], (0 - qtynew), modBasic.$compID)
                  qtynew = 0
                Else If qtynew > res2["fldqty"] Then
                  modBillings.InsertBlankBillItemNewApp($encid, res1["fldbilltype"], res1["fldbillingmode"], res1["flddisctype"], res1["fldacledger"], res1["flditemtype"], res2["fldstockno"], xitem, xrate, res2["fldqty"], tax, disc, xCshCrd, "Done", res1["fldid"], True, False, modBasic.$compID)
                  modStockSub.AddToExistEntry(res2["fldstockno"], (0 - res2["fldqty"]), modBasic.$compID)
                  qtynew = qtynew - res2["fldqty"]
                Endif
                Wait
                If res1["flddose"] And If res1["fldfreq"] And If res1["flddays"] And If res1["fldqtydisp"] Then
                  If res1["fldlabel"] = True Then
                    sList.Add(res1["fldid"])
                  Endif
                Endif
              Else
                Break
              Endif
              BlinkOnSave(res2["fldstockno"])
            Wend
            If res1["fldqtydisp"] > qtynew Then
              If qtynew > 0 Then
                modPharmSub.DuplicateRecordWithQTY(res1["fldid"], qtynew)
                modPharmSub.UpdateQTYBefDispensing(res1["fldid"], res1["fldqtydisp"] - qtynew)
              Endif
              modPharmSub.UpdateDispensing(res1["fldid"], True)
            Endif
            modDatabase.$myConn.Commit
            
          Else
            xerr = xerr & res1["fldfixname"] & gb.NewLine
          Endif
        Endif
      Next
      Dec Application.Busy
      If xerr Then
        Balloon.Warning("<b>Over Set Discount/Credit Limit:</b>" & gb.NewLine & xerr, GridView1)
      Endif
      
    Endif
    
    modPharmSub.PrintLabelSelList(sList, "Inpatient")
  Endif
  
Catch
  modDatabase.$myConn.Rollback
  Dec Application.Busy
  modHelpVariable.CreateErrorReport()
  
End

Private Sub BlinkOnSave(stockno As Integer)
  
  If modBasic.$ShowStorage = "OnSave" Then
    modDevice.SendDataToSerialPort(modStock.GetStorageCodeFromStockNo(stockno))
  Endif
  
End

Public Sub btnlist_Click()
  
  GenerateList()
  
End

Private Sub GenerateList()
  
  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim xtitle As String
  Dim Row As Integer
  
  If rbencid.Value = True Then
    xtitle = "Encounter"
  Else If rbinvoice.Value = True Then
    xtitle = "Invoice"
  Endif
  $BillingReport = New CReportHTML([("SNo"), ("Location"), xtitle, ("Patient Name"), ("Medicines")], "", "")
  $BillingReport.UserData.Add("Location: " & cmbdepart.Text, "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")
  
  For Row = 0 To GridView1.Rows.Count - 1
    With asx
      .Add(CStr(Row + 1))
      .Add(GridView1[Row, 0].Text)
      .Add(GridView1[Row, 1].Text)
      .Add(GridView1[Row, 2].Text)
      .Add(modString.TextToHTML(GetMedicineListEncid(GridView1[Row, 3].Text).Join(gb.NewLine)))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next
  
  modControlSub.OpenHTMLPreview("", $BillingReport.NewHTMLPath(), "ReportSize")
  
End

Private Function GetMedicineListEncid(encid As String) As String[]
  
  Dim res As Result
  Dim xxx As String[]
  
  xxx = New String[]
  res = ExecuteQuery(encid)
  If res.Available Then
    For Each res
      If chkregimen.Value = True Then
        xxx.Add(res["fldroute"] & " " & res["flditem"] & " " & res["flddose"] & "X" & res["fldfreq"] & "X" & res["flddays"] & " QTY: " & res["fldqtydisp"])
      Else
        xxx.Add(res["fldroute"] & " " & res["flditem"] & " QTY: " & res["fldqtydisp"])
      Endif
    Next
  Endif
  
  Return xxx
  
End

Public Sub btnsumall_Click()
  
  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim Row As Integer
  Dim sColl As Collection
  Dim xkey As String
  Dim i As Integer
  
  $BillingReport = New CReportHTML([("SNo"), ("PARTICULARS"), ("QUANTITY")], "", "")
  $BillingReport.UserData.Add("Location: " & cmbdepart.Text, "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")
  
  sColl = New Collection
  For Row = 0 To GridView1.Rows.Count - 1
    GetMedicineSummaryEncid(GridView1[Row, 3].Text, sColl)
  Next
  
  i = 1
  For Each xkey In sColl.Keys.Sort()
    With asx
      .Add(CStr(i))
      .Add(xkey)
      .Add(sColl[xkey])
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    i = i + 1
  Next
  
  modControlSub.OpenHTMLPreview("", $BillingReport.NewHTMLPath(), "ReportSize")
  
End

Private Function GetMedicineSummaryEncid(encid As String, sColl As Collection) As Collection
  
  Dim res As Result
  
  res = ExecuteQuery(encid)
  If res.Available Then
    For Each res
      If res["fldqtydisp"] Then
        If sColl.Exist(res["fldroute"] & Space(1) & res["flditem"]) Then
          sColl[res["fldroute"] & Space(1) & res["flditem"]] = sColl[res["fldroute"] & Space(1) & res["flditem"]] + res["fldqtydisp"]
        Else
          sColl.Add(res["fldqtydisp"], res["fldroute"] & Space(1) & res["flditem"])
        Endif
      Endif
    Next
  Endif
  
  Return sColl
  
End

Public Sub btnexpogrid_Click()
  
  Dim xPath As String
  
  If $encid Then
    Inc Application.Busy
    xPath = modCHTMLPatient.ShowMedicationOrder($encid)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
  Endif
  
End

Public Sub chkregimen_Click()
  
  If chkregimen.Value = True Then
    modSettings.SaveSettingsToFile("ShowRegimen/DispensingList", "Yes")
  Else If chkregimen.Value = False Then
    modSettings.SaveSettingsToFile("ShowRegimen/DispensingList", "No")
  Endif
  
End
