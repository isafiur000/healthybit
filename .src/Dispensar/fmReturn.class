' Gambas class file

Private $rData As Result
Private $rData1 As Result
Private $encid As String
Private $status As String
' Private $ItemColl As Collection
Private $xRetnIndex As Long

Private hPatient1 As FmBillingEntry
Private $BillingOption As String
Private $LedgerAC As String
Private $InvReference As String
Private $CashMode As String
Private $xFinClear As Boolean
Private $xNHISCode As String

Private $tblpatbilling As String
Private $tblpatbilldetail As String
Private $tbltempbilldetail As String

Public Sub Form_Open()
  
  modGeneralMain.ArrangeEmbedForms(Me, Panel1, "Vertical")
  Me.Icon = Picture[modGeneralMain.$strLogo]
  $BillingOption = modBasic.$BillPharmReturnOption
  hPatient1 = New FmBillingEntry(Panel4)
  If modBasic.$AppCachePatientDemographics = "Yes" Then
  Else
    modGeneralMain.RemovePatientCacheSelected("PatientData")
  Endif
  
  cmbroute.List = ["Medicines", "Surgicals", "Extra Items"]
  modStockSub.DisplayDefaultDispensingMode(rbrand, rbgeneric)
  
  If modSettings.ShowSettingFromFIle("Billing/ReturnMode") = "Encounter" Then
    rbEncid.Value = True
  Else
    rbBill.Value = True
  Endif
  rbpunch.Value = True
  modAccount.PasInvoiceSetting(cmbfiscal, False)
  LoadTableNames()
  
End

Public Sub Form_Resize()
  
  modGeneralMain.ShowSelectedFormMenu(Me)
  
End

Public Sub Form_Activate()
  
  If Not txtbill.Text Then
    BlankAllControl()
    txtbill.SetFocus
  Endif
  
End

Private Sub LoadTableNames()
  
  Dim res As Result
  
  If cmbfiscal.Text = "Current" Then
    $tblpatbilling = "tblpatbilling"
    $tblpatbilldetail = "tblpatbilldetail"
    $tbltempbilldetail = "tbltempbilldetail"
  Else
    res = modDatabase.$myConn.Exec("select fldpatbilling,fldpatbilldetail,fldtempbilldetail from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", cmbfiscal.Text, "Active")
    If res.Available Then
      If res["fldpatbilling"] Then
        $tblpatbilling = res["fldpatbilling"]
      Else
        $tblpatbilling = "tblpatbilling"
      Endif
      If res["fldpatbilldetail"] Then
        $tblpatbilldetail = res["fldpatbilldetail"]
      Else
        $tblpatbilldetail = "tblpatbilldetail"
      Endif
      If res["fldtempbilldetail"] Then
        $tbltempbilldetail = res["fldtempbilldetail"]
      Else
        $tbltempbilldetail = "tbltempbilldetail"
      Endif
    Else
      $tblpatbilling = "tblpatbilling"
      $tblpatbilldetail = "tblpatbilldetail"
      $tbltempbilldetail = "tbltempbilldetail"
    Endif
  Endif
  
End

Public Sub cmbfiscal_Click()
  
  LoadTableNames()
  
End

Public Sub Form_Close()
  
  If $encid Then
    modPatientSub.ReleaseLockEncounter($encid, modHelpVariable.$LogInCategory)
  Endif
  If hPatient1 Then
    hPatient1.Close
  Endif
  modGeneralMain.RecordFormExit(Me)
  
End

Public Sub Form_KeyRelease()
  
  Dim xinvlst As String[]
  Dim xinvno As String
  Dim xledger As String
  
  If Key.Code = Key.F12 Then
    If txtbill.Text Then
      If $encid Then
        PharmacyReturn()
        Wait
        
        If ShowBilling() = True Then
          If hPatient1.Enabled = True Then
            hPatient1.DirectCashBilling()
            Wait
            RefresgOldData()
            xinvlst = New String[]
            
            xledger = hPatient1.$ACLedger
            xinvlst = hPatient1.GetInvoiceList()
            If modBasic.$SSFAccList.Exist(xledger) Then
              If modBasic.$SSFBookLock = "Enable" Then
                For Each xinvno In xinvlst
                  GetSSFBookingLock(xinvno)
                Next
              Endif
            Endif
            
            If hPatient1.$DisplayMiniCalc = "BlankForm" Then
              hPatient1.GetBillingFormBlank()
            Endif
          Endif
        Else
          RefresgOldData()
        Endif
        
      Endif
    Endif
    
  Else
    modGeneralmain.GoToNextControlTab()
  Endif
  
End

Private Sub BlankAllControl()
  
  ' If $ItemColl Then
  '   $ItemColl.Clear()
  ' Endif
  $xRetnIndex = 0
  cmbroute.Text = ""
  cmbmedicine.Text = ""
  cmbbatch.Clear()
  cmbbatch.Text = ""
  txtmax.Value = 0
  txtqty.Value = 0
  
End

Public Sub mnublank_Click()
  
  Me.Close
  Wait
  modWorkSpace.Add(fmReturn)
  
End

Public Sub btnshow_GotFocus()
  
  btnshow_Click()
  
End

Private Function ShowBilling() As Boolean
  
  Dim xx As Boolean
  
  If $BillingOption = "All" Then
    xx = True
  Else If $BillingOption = "OPD" Then
    If $sTatus = "Admitted" Then
      xx = False
    Else
      xx = True
    Endif
  Else
    xx = False
  Endif
  Return xx
  
End

Public Sub btnshow_Click()
  
  Dim res As Result
  Dim xtype As String
  Dim xlock As Boolean
  Dim xrefmode As String
  
  If txtbill.Text Then
    
    txtbill.Text = UCase(Trim(txtbill.Text))
    xlock = False
    If rbBill.Value = True Then
      If txtbill.Text Like "TPM" & "*" Then
        xtype = "Receipt"
        res = modDatabase.$myConn.Exec("select fldencounterval,fldbilltype,fldbankname,fldchequeno from " & $tbltempbilldetail & " where fldbillno=&1", txtbill.Text)
      Else
        xtype = "Invoice"
        res = modDatabase.$myConn.Exec("select fldencounterval,fldbilltype,fldbankname,fldchequeno from " & $tblpatbilldetail & " where fldbillno=&1", txtbill.Text)
      Endif
      If res.Available Then
        $encid = res["fldencounterval"]
        $CashMode = res["fldbilltype"]
        $LedgerAC = res["fldbankname"]
        $InvReference = res["fldchequeno"]
        If $CashMode Then
          xlock = True
        Endif
      Endif
    Else If rbEncid.Value = True Then
      xtype = "Invoice"
      If txtbill.Text Like "ARC" & "*" Then
        res = modDatabase.$myConn.Exec("select fldencounterval,fldbilltype,fldacledger,flddisctype from " & $tblpatbilling & " where fldextracol=&1", Trim(txtbill.Text))
        If res.Available Then
          res.MoveFirst
          $encid = res["fldencounterval"]
          $CashMode = res["fldbilltype"]
          $LedgerAC = res["fldacledger"]
          xrefmode = modNonMedical.GetFixedReferenceScheme(res["flddisctype"])
          Select xrefmode
            Case "Claim Code"
              $InvReference = modClaim.GetCurrentClaimCodeVIew(res["fldencounterval"], "Patient Ward")
            Case "Accident SSF",
                $InvReference = modSSF.GetSSFClaimVIewMedical(res["fldencounterval"], "Accident")
            Case "Medical SSF"
              $InvReference = modSSF.GetSSFClaimVIewMedical(res["fldencounterval"], "Patient Ward")
            Case "Critical SSF"
              $InvReference = modSSF.GetSSFClaimVIewMedical(res["fldencounterval"], "Post Diagnosis")
          End Select
          If $CashMode Then
            xlock = True
          Endif
        Endif
      Else
        If modBasic.$BillReturnByEnc = "Yes" Then
          $encid = Trim(txtbill.Text)
        Endif
      Endif
    Endif
    
    If Not $encid Then Return
    
    ' If modPatientSub.LockEncounterDesk($encid) = False Then
    '   $encid = ""
    '   Balloon.Warning(("Encounter Locked"), btnshow)
    '   Balloon.Delay = modBasic.$BalloonDelay
    '   txtbill.SetFocus
    ' Endif
    
    If $encid Then
      txtpatientname.Text = modPatient.GetPatientNameByEnc($encid)
      txtgender.Text = modPatient.GetPatientAgeString($encid, Now()) & "/" & Left(modPatient.GetPatientSex($encid), 1)
      $sTatus = modPatient.CurrentAdmissionStatus($encid)
      txtpatlocation.Text = modPatient.GetLocationSetting($encid, $sTatus)
      $xFinClear = modNonMedical.GetFinanceClearance($encid)
      lblstatus.Text = ShowCurrStatus($sTatus)
      $xNHISCode = modPatient.GetPatientExtCOdebyEnc($encid)
      
      hPatient1.$encid = $encid
      If xtype = "Receipt" Then
        hPatient1.$billtype = "RecepReturn"
      Else
        hPatient1.$billtype = "PharmReturn"
      Endif
      If ShowBilling() = False Then
        hPatient1.Enabled = False
      Endif
      If modBasic.$BillInvoiceWiseReturn = "Yes" Then
        hPatient1.$RetInvoice = Trim(txtbill.Text)
      Else
        hPatient1.$RetInvoice = ""
      Endif
      
      If $CashMode Then
        hPatient1.SetDefaultModeCashCredit($CashMode, xlock)
      Else
        hPatient1.SetDefaultModeCashCredit(modBasic.$BillFixBilling, xlock)
      Endif
      If $LedgerAC Then
        hPatient1.$ACLedger = $LedgerAC
        hPatient1.$ACReference = $InvReference
      Endif
      hPatient1.$PatStatus = $sTatus
      
      If $sTatus = "Admitted" Then
        If modBasic.$BillLockAdmitted = "Yes" Then
          If hPatient1 Then
            hPatient1.Enabled = False
          Endif
        Endif
      Endif
      
      If $xFinClear = True Then
        TabPanel1.Enabled = False
        Panel4.Enabled = False
      Else
        TabPanel1.Enabled = True
        Panel4.Enabled = True
      Endif
      
      Panel2.Enabled = False
      ShowReturnGrid()
      ShowReturnDoneGrid()
      If $xFinClear = True Then
        Balloon.Info(("Account Locked"), btnshow)
        Balloon.Delay = modBasic.$BalloonDelay
      Else
        cmbreason.SetFocus
      Endif
    Endif
    
  Endif
  
End

Private Function ShowCurrStatus(xStatus As String) As String
  
  Dim xx As String
  
  Select xStatus
    Case "Discharged", "LAMA", "Death", "Refer", "Absconder"
      If $xFinClear = True Then
        xx = xStatus
      Else
        xx = "Waiting"
      Endif
    Case Else
      xx = xStatus
  End Select
  Return xx
  
End

Public Sub cmbroute_KeyRelease()
  
  modFillContainer.AutoFillComboBox(cmbroute)
  modFillContainer.RestrictComboToContent(cmbroute)
  
End

Public Sub cmbroute_Click()
  
  chksave.Value = False
  $xRetnIndex = 0
  
End

' Private Function GetReturnItemList() As String[]
'   
'   Dim sql As String
'   Dim res As Result
'   Dim xxx As String[]
'   
'   xxx = New String[]
'   If chkfixrate.Value = True Then
'     If rbBill.Value = True Then
'       sql = "select distinct(flditem) as col from tblpatdosing where fldencounterval=&1 and fldfixname in (select flditemname from " & $tblpatbilling & " where fldbillno=&2 and fldstatus=&3 and flditemtype=&4 and (flditemqty-fldretqty)>&5)"                                 ''
'       res = modDatabase.$myConn.Exec(sql, $encid, Trim(txtbill.Text), "Cleared", cmbroute.Text, 0)
'     Else If rbEncid.Value = True Then
'       If txtbill.Text Like "ARC" & "*" Then
'         sql = "select distinct(flditem) as col from tblpatdosing where fldencounterval=&1 and fldfixname in (select flditemname from " & $tblpatbilling & " where fldextracol=&2 and fldstatus=&3 and flditemtype=&4 and (flditemqty-fldretqty)>&5)"
'         res = modDatabase.$myConn.Exec(sql, $encid, Trim(txtbill.Text), "Done", cmbroute.Text, 0)
'       Else
'         If modBasic.$BillReturnByEnc = "Yes" Then
'           sql = "select distinct(flditem) as col from tblpatdosing where fldencounterval=&1 and fldfixname in (select flditemname from " & $tblpatbilling & " where fldencounterval=&2 and fldstatus=&3 and flditemtype=&4 and (flditemqty-fldretqty)>&5)"
'           res = modDatabase.$myConn.Exec(sql, $encid, Trim(txtbill.Text), "Done", cmbroute.Text, 0)
'         Endif
'       Endif
'     Endif
'   Else
'     If rbBill.Value = True Then
'       sql = "select distinct(flditemname) as col from " & $tblpatbilling & " where fldbillno=&1 and fldstatus=&2 and flditemtype=&3 and (flditemqty-fldretqty)>&4"                                 ''
'       res = modDatabase.$myConn.Exec(sql, Trim(txtbill.Text), "Cleared", cmbroute.Text, 0)
'     Else If rbEncid.Value = True Then
'       If txtbill.Text Like "ARC" & "*" Then
'         sql = "select distinct(flditemname) as col from " & $tblpatbilling & " where fldextracol=&1 and fldstatus=&2 and flditemtype=&3 and (flditemqty-fldretqty)>&4"
'         res = modDatabase.$myConn.Exec(sql, Trim(txtbill.Text), "Done", cmbroute.Text, 0)
'       Else
'         If modBasic.$BillReturnByEnc = "Yes" Then
'           sql = "select distinct(flditemname) as col from " & $tblpatbilling & " where fldencounterval=&1 and fldstatus=&2 and flditemtype=&3 and (flditemqty-fldretqty)>&4"
'           res = modDatabase.$myConn.Exec(sql, Trim(txtbill.Text), "Done", cmbroute.Text, 0)
'         Endif
'       Endif
'     Endif
'   Endif
'   
'   For Each res
'     If cmbroute.text = "Medicines" And If rbrand.Value = True Then
'       xxx.Add(modMedConstant.ConvertGenericToBrand(res["col"]))
'     Else
'       xxx.Add(res["col"])
'     Endif
'   Next
'   
'   Return xxx
'   
' End

' Private Function ConvertBrandToGenericName(txtbrand As String) As String
'   
'   Dim res As Result
'   Dim xx As String
'   
'   res = modDatabase.$medConn.Exec("select fldbrandid from tblmedbrand where fldbrand=&1 and fldactive=&2", txtbrand, "Active")
'   If res.Available Then
'     If res["fldbrandid"] Then
'       xx = res["fldbrandid"]
'     Else
'       xx = ""
'     Endif
'   Else
'     xx = ""
'   Endif
'   Return xx
'   
' End

Private Function GetReturnMedicineString(sBill As String, sRoute As String) As String[]
  
  Dim xList As String[]
  Dim sql As String
  Dim res As Result
  Dim res1 As Result
  Dim xbatch As String
  Dim xexpiry As String
  Dim xcolor As String
  Dim dtdiff As Integer
  ' Dim xbrand As String
  
  xList = New String[]
  If rbBill.Value = True Then
    sql = "select fldid,fldparent,flditemno,flditemname,flditemno,flditemno,flditemqty,fldretqty from " & $tblpatbilling & " where fldencounterval=&1 and fldbillno=&2 and fldstatus=&3 and flditemtype=&4 and (flditemqty-fldretqty)>&5"
    res = modDatabase.$myConn.Exec(sql, $encid, sBill, "Cleared", sRoute, 0)
  Else If rbEncid.Value = True Then
    If txtbill.Text Like "ARC" & "*" Then
      sql = "select fldid,fldparent,flditemno,flditemname,flditemno,flditemno,flditemqty,fldretqty from " & $tblpatbilling & " where fldencounterval=&1 and fldextracol=&2 and fldstatus=&3 and flditemtype=&4 and (flditemqty-fldretqty)>&5"
      res = modDatabase.$myConn.Exec(sql, $encid, sBill, "Done", sRoute, 0)
    Else
      If modBasic.$BillReturnByEnc = "Yes" Then
        sql = "select fldid,fldparent,flditemno,flditemname,flditemno,flditemno,flditemqty,fldretqty from " & $tblpatbilling & " where fldencounterval=&1 and fldencounterval=&2 and fldstatus=&3 and flditemtype=&4 and (flditemqty-fldretqty)>&5"
        res = modDatabase.$myConn.Exec(sql, $encid, sBill, "Done", sRoute, 0)
      Endif
    Endif
  Endif
  
  If res.Available Then 
    For Each res
      xbatch = ""
      xexpiry = ""
      xcolor = ""
      ' xbrand = modPharmacy.GetStockIDFromDosing(res["fldparent"])
      res1 = modDatabase.$myConn.Exec("select fldbatch,fldexpiry from tblentry where fldstockno=&1", res["flditemno"])
      If res1.Available Then 
        xbatch = res1["fldbatch"]
        xexpiry = res1["fldexpiry"]
        dtdiff = DateDiff(Now(), res1["fldexpiry"], gb.Day)
        If dtdiff < 1 Then
          xcolor = "icons/true.svg"
        Else
          xcolor = "icons/null.svg"
        Endif
        If res1["fldexpiry"] Then
          xexpiry = Format(res1["fldexpiry"], gb.MediumDate) 
        Else
          xexpiry = Format(Now(), gb.MediumDate)
        Endif 
      Endif
      xList.Add(res["flditemname"] & "|" & xcolor & "|" & xexpiry & "|" & xbatch & "|" & CStr(res["flditemqty"] - res["fldretqty"]) & "|" & res["fldid"]) 
    Next
  Endif
  
  Return xList
  
End

Public Sub cmbmedicine_GotFocus()
  
  Dim xList As String[]
  
  If Not cmbroute.Text Then
    cmbroute.SetFocus
  Else
    If Not cmbmedicine.Text Then 
      ' xList = GetReturnItemList()
      xList = GetReturnMedicineString(Trim(txtbill.Text), cmbroute.text)
      If xList Then
        ' cmbmedicine.Text = GridViewNew("Select Particular", xList, False, cmbmedicine, GridView1.Height)
        $xRetnIndex = PharmGridList("Select Particulars", "PharmReturn", "Generic", xList, Panel7, GridView1.Height)
        ShowItemParams($xRetnIndex)
      Endif
      txtqty.SetFocus 
    Endif
  Endif
  
End

Private Sub ShowItemParams(sIndex As Long)
  
  Dim res As Result
  Dim res1 As Result
  
  res = modDatabase.$myConn.Exec("select fldid,fldparent,flditemno,flditemname,flditemno,flditemno,flditemqty,fldretqty from " & $tblpatbilling & " where fldid=&1 and fldencounterval=&2", sIndex, $encid)
  If res.Available Then 
    cmbmedicine.Text = res["flditemname"]
    txtmax.Value = res["flditemqty"] - res["fldretqty"]
    res1 = modDatabase.$myConn.Exec("select fldbatch,fldexpiry from tblentry where fldstockno=&1", res["flditemno"])
    If res1.Available Then 
      cmbbatch.Text = res1["fldbatch"]
      lbldate.Value = res1["fldexpiry"]
    Endif 
  Endif
  
End

' Public Sub cmbmedicine_KeyRelease()
'   
'   modFillContainer.AutoFillComboBox(cmbmedicine)
'   modFillContainer.RestrictComboToContent(cmbmedicine)
'   
' End

' Public Sub cmbbatch_KeyRelease()
'   
'   modFillContainer.AutoFillComboBox(cmbbatch)
'   modFillContainer.RestrictComboToContent(cmbbatch)
'   
' End

' Public Sub cmbbatch_GotFocus()
'   
'   Dim sql As String
'   Dim res As Result
'   
'   If Not cmbbatch.Count Then
'     If cmbmedicine.Text Then
'       If cmbroute.Text = "Medicines" Then
'         If rbrand.Value = True Then
'           cmbmedicine.Text = ConvertBrandToGenericName(cmbmedicine.Text)
'         Endif
'       Endif
'       
'       $ItemColl = New Collection
'       If rbBill.Value = True Then
'         sql = "select fldstockno,fldbatch from tblentry where fldstockid=&1 and fldstockno in(select flditemno from " & $tblpatbilling & " where fldbillno=&2 and fldstatus=&3 and flditemtype=&4 and (flditemqty-fldretqty)>&5)"
'         res = modDatabase.$myConn.Exec(sql, cmbmedicine.Text, Trim(txtbill.Text), "Cleared", cmbroute.text, 0)
'       Else If rbEncid.Value = True Then
'         If txtbill.Text Like "ARC" & "*" Then
'           sql = "select fldstockno,fldbatch from tblentry where fldstockid=&1 and fldstockno in(select flditemno from " & $tblpatbilling & " where fldextracol=&2 and fldstatus=&3 and flditemtype=&4 and (flditemqty-fldretqty)>&5)"
'           res = modDatabase.$myConn.Exec(sql, cmbmedicine.Text, Trim(txtbill.Text), "Done", cmbroute.text, 0)
'         Else
'           If modBasic.$BillReturnByEnc = "Yes" Then
'             sql = "select fldstockno,fldbatch from tblentry where fldstockid=&1 and fldstockno in(select flditemno from " & $tblpatbilling & " where fldencounterval=&2 and fldstatus=&3 and flditemtype=&4 and (flditemqty-fldretqty)>&5)"
'             res = modDatabase.$myConn.Exec(sql, cmbmedicine.Text, Trim(txtbill.Text), "Done", cmbroute.text, 0)
'           Endif
'         Endif
'       Endif
'       If res.Available Then
'         For Each res
'           cmbbatch.Add(res["fldbatch"])
'           $ItemColl.Add(res["fldbatch"], CStr(res["fldstockno"]))
'         Next
'       Endif
'       
'     Endif
'   Endif
'   
' End

' Public Sub cmbbatch_Click()
'   
'   Dim sql As String
'   Dim res As Result
'   Dim xbatch As String
'   
'   If $ItemColl And If $ItemColl.Count Then
'     For Each xbatch In $ItemColl
'       If xbatch = cmbbatch.Text Then
'         
'         lbldate.Value = modStock.GetExpiryFromStockNo(CInt($ItemColl.Key))
'         If chkfixrate.Value = True Then
'           If rbBill.Value = True Then
'             sql = "select flditemqty,fldretqty from " & $tblpatbilling & " where flditemname in(select fldfixname from tblpatdosing where flditem=&1 and fldencounterval=&7) and fldbillno=&2 and fldstatus=&3 and flditemtype=&4 and flditemno=&5 and (flditemqty-fldretqty)>&6"
'             res = modDatabase.$myConn.Exec(sql, cmbmedicine.Text, Trim(txtbill.Text), "Cleared", cmbroute.text, CInt($ItemColl.Key), 0, $encid)
'           Else If rbEncid.Value = True Then
'             If txtbill.Text Like "ARC" & "*" Then
'               sql = "select flditemqty,fldretqty from " & $tblpatbilling & " where flditemname in(select fldfixname from tblpatdosing where flditem=&1 and fldencounterval=&7) and fldextracol=&2 and fldstatus=&3 and flditemtype=&4 and flditemno=&5 and (flditemqty-fldretqty)>&6"
'               res = modDatabase.$myConn.Exec(sql, cmbmedicine.Text, Trim(txtbill.Text), "Done", cmbroute.text, CInt($ItemColl.Key), 0, $encid)
'             Else
'               If modBasic.$BillReturnByEnc = "Yes" Then
'                 sql = "select flditemqty,fldretqty from " & $tblpatbilling & " where flditemname in(select fldfixname from tblpatdosing where flditem=&1 and fldencounterval=&7) and fldencounterval=&2 and fldstatus=&3 and flditemtype=&4 and flditemno=&5 and (flditemqty-fldretqty)>&6"
'                 res = modDatabase.$myConn.Exec(sql, cmbmedicine.Text, Trim(txtbill.Text), "Done", cmbroute.text, CInt($ItemColl.Key), 0, $encid)
'               Endif
'             Endif
'           Endif
'         Else
'           If rbBill.Value = True Then
'             sql = "select flditemqty,fldretqty from " & $tblpatbilling & " where flditemname=&1 and fldbillno=&2 and fldstatus=&3 and flditemtype=&4 and flditemno=&5 and (flditemqty-fldretqty)>&6"
'             res = modDatabase.$myConn.Exec(sql, cmbmedicine.Text, Trim(txtbill.Text), "Cleared", cmbroute.text, CInt($ItemColl.Key), 0)
'           Else If rbEncid.Value = True Then
'             If txtbill.Text Like "ARC" & "*" Then
'               sql = "select flditemqty,fldretqty from " & $tblpatbilling & " where flditemname=&1 and fldextracol=&2 and fldstatus=&3 and flditemtype=&4 and flditemno=&5 and (flditemqty-fldretqty)>&6"
'               res = modDatabase.$myConn.Exec(sql, cmbmedicine.Text, Trim(txtbill.Text), "Done", cmbroute.text, CInt($ItemColl.Key), 0)
'             Else
'               If modBasic.$BillReturnByEnc = "Yes" Then
'                 sql = "select flditemqty,fldretqty from " & $tblpatbilling & " where flditemname=&1 and fldencounterval=&2 and fldstatus=&3 and flditemtype=&4 and flditemno=&5 and (flditemqty-fldretqty)>&6"
'                 res = modDatabase.$myConn.Exec(sql, cmbmedicine.Text, Trim(txtbill.Text), "Done", cmbroute.text, CInt($ItemColl.Key), 0)
'               Endif
'             Endif
'           Endif
'         Endif
'         If res.Available Then
'           res.MoveFirst
'           txtmax.Value = res["flditemqty"] - res["fldretqty"]
'         Endif
'         Break
'         
'       Endif
'     Next
'   Endif
'   
' End

Public Sub chksave_Click()
  
  If cmbreason.Text Then
    If txtbill.Text And If cmbroute.Text And If cmbmedicine.Text And If txtmax.Value >= txtqty.Value Then
      If modBasic.$BillPharmReturnPunching = "Disable" Then
        Message.Warning("Return Punching Disabled", ("OK"))
      Else
        
        If chksave.Value = True Then
          EnterReturnEntry($xRetnIndex)
          BlankAllControl()
          ShowReturnGrid()
          cmbroute.SetFocus
        Endif
        
      Endif
    Endif
  Else
    Message.Warning(("Reason for Return is empty"), ("OK"))
  Endif
  
End

Public Sub chksave_KeyRelease()
  
  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    chksave.Value = True
    chksave_Click()
  Endif
  
End

Private Sub EnterReturnEntry(sIndex As Integer)
  
  Dim dy As Integer
  Dim qty As Float
  Dim res As Result
  Dim stockno As Long
  Dim msg As String
  Dim xnew As Boolean
  Dim xday As String
  Dim xcshcrd As Float
  
  xday = modSettings.ShowSettingFromFIle("InventorySetting/ReturnExpiry")
  If xday Then
    dy = CFloat(xday)
  Else
    dy = 0
  Endif
  
  Inc Application.Busy
  modDatabase.$myConn.Begin
  
  If rbBill.Value = True Then
    res = modDatabase.$myConn.Exec("select fldid,fldencounterval,flditemtype,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldparent,fldbillno,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from " & $tblpatbilling & " where fldid=&1 and fldbillno=&2 and fldstatus=&3 and flditemtype=&4 and fldencounterval=&5 and (flditemqty-fldretqty)>&6", sIndex, Trim(txtbill.Text), "Cleared", cmbroute.text, $encid, 0)
  Else If rbEncid.Value = True Then
    If txtbill.Text Like "ARC" & "*" Then
      res = modDatabase.$myConn.Exec("select fldid,fldencounterval,flditemtype,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldparent,fldextracol,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from " & $tblpatbilling & " where fldid=&1 and fldextracol=&2 and fldstatus=&3 and flditemtype=&4 and fldencounterval=&5 and (flditemqty-fldretqty)>&6", sIndex, Trim(txtbill.Text), "Done", cmbroute.text, $encid, 0)                                                    ''
    Else
      If modBasic.$BillReturnByEnc = "Yes" Then
        res = modDatabase.$myConn.Exec("select fldid,fldencounterval,flditemtype,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldparent,fldextracol,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from " & $tblpatbilling & " where fldid=&1 and fldencounterval=&2 and fldstatus=&3 and flditemtype=&4 and fldencounterval=&5 and (flditemqty-fldretqty)>&6", sIndex, Trim(txtbill.Text), "Done", cmbroute.text, $encid, 0)                                                    ''
      Endif
    Endif
  Endif
  
  If res.Available Then 
    xnew = modStock.NewStock(cmbmedicine.Text, cmbbatch.Text, modBasic.$compID)
    
    stockno = modStock.GetItemStockNo(cmbmedicine.Text, cmbbatch.Text, modBasic.$compID)
    If stockno Then
      If xnew = True Then
        AddNewEntry(stockno, res["flditemrate"])
      Endif
      If txtqty.Value <= txtmax.Value And If DateDiff(Date(), lbldate.Value, gb.Day) >= dy Then
        qty = 0 - txtqty.Value
        If res["fldcashincredit"] Then
          xcshcrd = res["fldcashincredit"]
        Else
          xcshcrd = 0
        Endif
        If rbBill.Value = True Then
          modBillings.InsertBlankBillItemNewApp(res["fldencounterval"], res["fldbilltype"], res["fldbillingmode"], res["flddisctype"], res["fldacledger"], res["flditemtype"], stockno, res["flditemname"], res["flditemrate"], qty, res["fldtaxper"], res["flddiscper"], xcshcrd, "Punched", res["fldid"], False, False, "", "", "", cmbreason.Text, res["fldbillno"])
        Else If rbEncid.Value = True Then
          modBillings.InsertBlankBillItemNewApp(res["fldencounterval"], res["fldbilltype"], res["fldbillingmode"], res["flddisctype"], res["fldacledger"], res["flditemtype"], stockno, res["flditemname"], res["flditemrate"], qty, res["fldtaxper"], res["flddiscper"], xcshcrd, "Punched", res["fldid"], False, False, "", "", "", cmbreason.Text, res["fldextracol"])
        Endif
      Else
        msg = ("Return not allowed")
      Endif
    Endif
  Endif
  modDatabase.$myConn.Commit
  Dec Application.Busy
  
  If msg Then
    Message.Warning(msg, ("OK"))
  Endif
  
Catch
  modDatabase.$myConn.Rollback
  Dec Application.Busy
  modHelpVariable.CreateErrorReport()
  
End

Private Sub AddNewEntry(StockNo As Long, txtrate As Float)
  
  Dim res As Result
  
  res = modDatabase.$myConn.Create("tblentry")
  res["fldstockno"] = StockNo
  res["fldstockid"] = cmbmedicine.Text
  res["fldbatch"] = cmbbatch.Text
  res["fldexpiry"] = lbldate.Value
  res["fldqty"] = 0
  res["fldstatus"] = modStock.ItemSaleStatus(cmbmedicine.Text, modBasic.$compID)
  res["fldsellpr"] = txtrate
  res["fldsav"] = True
  res["fldcategory"] = cmbroute.Text
  res["fldcomp"] = modBasic.$compID
  res["fldcode"] = 0
  res["xyz"] = True
  res.Update()
  
End

Private Sub ShowReturnGrid()
  
  Dim sql As String
  Dim Column As Integer
  Dim fld As ResultField
  Dim xstatus As String
  
  If rbpunch.Value = True Then
    xstatus = "Punched"
  Else If rbwait.Value = True Then
    xstatus = "Waiting"
  Endif
  
  If rbBill.Value = True Then
    sql = "select fldid,fldordtime,flditemtype,flditemno,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldditemamt as tot,fldorduserid,fldbilltype,flddisctype,fldacledger from tblpatbilling where fldencounterval=&1 and fldretbill=&2 and fldsave=&3 and fldprint=&4 and fldordcomp=&5 and fldstatus=&6 and flditemqty<&7 and (flditemtype=&8 or flditemtype=&9 or flditemtype=&{10})"
    $rData = modDatabase.$myConn.Exec(sql, $encid, Trim(txtbill.Text), False, False, modBasic.$compID, xstatus, 0, "Medicines", "Surgicals", "Extra Items")
  Else If rbEncid.Value = True Then
    If txtbill.Text Like "ARC" & "*" Then
      sql = "select fldid,fldordtime,flditemtype,flditemno,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldditemamt as tot,fldorduserid,fldbilltype,flddisctype,fldacledger from tblpatbilling where fldencounterval=&1 and fldretbill=&2 and fldsave=&3 and fldprint=&4 and fldordcomp=&5 and fldstatus=&6 and flditemqty<&7 and (flditemtype=&8 or flditemtype=&9 or flditemtype=&{10})"
      $rData = modDatabase.$myConn.Exec(sql, $encid, Trim(txtbill.Text), False, False, modBasic.$compID, xstatus, 0, "Medicines", "Surgicals", "Extra Items")
    Else
      If modBasic.$BillReturnByEnc = "Yes" Then
        sql = "select fldid,fldordtime,flditemtype,flditemno,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldditemamt as tot,fldorduserid,fldbilltype,flddisctype,fldacledger from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldprint=&3 and fldordcomp=&4 and fldstatus=&5 and flditemqty<&6 and (flditemtype=&7 or flditemtype=&8 or flditemtype=&9)"
        $rData = modDatabase.$myConn.Exec(sql, Trim(txtbill.Text), False, False, modBasic.$compID, xstatus, 0, "Medicines", "Surgicals", "Extra Items")
      Endif
    Endif
  Endif
  
  GridView1.Clear
  GridView1.Columns.Count = $rData.Fields.Count
  GridView1.Rows.Count = $rData.Count
  
  For Each $rData
    Column = 0
    For Each fld In $rData.Fields
      modGeneralMain.GridExplicitDecoration(GridView1, $rData.Index, Column)
      If Column = 1 Then
        GridView1[$rData.Index, Column].Text = modReportVar.GetDateTimeReport($rData["fldordtime"], gb.GeneralDate)
      Else
        GridView1[$rData.Index, Column].Text = $rData[fld.Name]
      Endif
      Column = Column + 1
    Next
  Next
  GridView1.Row = 0
  
  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[1].Text = "DateTime"
    .Columns[2].Text = "Category"
    .Columns[3].Text = "Code"
    .Columns[4].Text = "Particulars"
    .Columns[5].Text = "Rate"
    .Columns[6].Text = "QTY"
    .Columns[7].Text = "Tax %"
    .Columns[8].Text = "Disc %"
    .Columns[9].Text = "Total"
    .Columns[10].Text = "User"
    .Columns[11].Text = "Mode"
    .Columns[12].Text = "Package"
    .Columns[13].Text = "Account"
    
    .Columns[0].Width = 1
    .Columns[1].Width = 150 * modBasic.$AppWidthRatio
    .Columns[2].Width = 125 * modBasic.$AppWidthRatio
    .Columns[3].Width = 40 * modBasic.$AppWidthRatio
    .Columns[4].Width = 300 * modBasic.$AppWidthRatio
    .Columns[5].Width = 75 * modBasic.$AppWidthRatio
    .Columns[6].Width = 50 * modBasic.$AppWidthRatio
    .Columns[7].Width = 50 * modBasic.$AppWidthRatio
    .Columns[8].Width = 50 * modBasic.$AppWidthRatio
    .Columns[9].Width = 100 * modBasic.$AppWidthRatio
    .Columns[10].Width = 100 * modBasic.$AppWidthRatio
    .Columns[11].Width = 75 * modBasic.$AppWidthRatio
    .Columns[12].Width = 125 * modBasic.$AppWidthRatio
    .Columns[13].Width = 125 * modBasic.$AppWidthRatio
  End With
  
End

Private Sub ShowReturnDoneGrid()
  
  Dim sql As String
  Dim Column As Integer
  Dim fld As ResultField
  Dim xx As Float
  
  If rbBill.Value = True Then
    If modBasic.$BillInvoiceWiseReturn = "Yes" Then
      sql = "select fldid,fldtime,flditemtype,flditemno,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldditemamt as tot,flduserid,fldbilltype,flddisctype,fldacledger from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldprint=&3 and flditemqty<&4 and fldretbill=&5 and (flditemtype=&6 or flditemtype=&7 or flditemtype=&8)"
    Else
      sql = "select fldid,fldtime,flditemtype,flditemno,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldditemamt as tot,flduserid,fldbilltype,flddisctype,fldacledger from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldprint=&3 and flditemqty<&4 and (flditemtype=&6 or flditemtype=&7 or flditemtype=&8)"
    Endif
  Else If rbEncid.Value = True Then
    If txtbill.Text Like "ARC" & "*" Then
      If modBasic.$BillInvoiceWiseReturn = "Yes" Then
        sql = "select fldid,fldtime,flditemtype,flditemno,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldditemamt as tot,flduserid,fldbilltype,flddisctype,fldacledger from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldprint=&3 and flditemqty<&4 and fldretbill=&5 and (flditemtype=&6 or flditemtype=&7 or flditemtype=&8)"
      Else
        sql = "select fldid,fldtime,flditemtype,flditemno,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldditemamt as tot,flduserid,fldbilltype,flddisctype,fldacledger from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldprint=&3 and flditemqty<&4 and (flditemtype=&6 or flditemtype=&7 or flditemtype=&8)"
      Endif
    Else
      If modBasic.$BillReturnByEnc = "Yes" Then
        sql = "select fldid,fldtime,flditemtype,flditemno,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldditemamt as tot,flduserid,fldbilltype,flddisctype,fldacledger from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldprint=&3 and flditemqty<&4 and (flditemtype=&6 or flditemtype=&7 or flditemtype=&8)"
      Endif
    Endif
  Endif
  $rData1 = modDatabase.$myConn.Exec(sql, $encid, True, False, 0, Trim(txtbill.Text), "Medicines", "Surgicals", "Extra Items")
  
  GridView2.Clear
  GridView2.Columns.Count = $rData1.Fields.Count
  GridView2.Rows.Count = $rData1.Count
  
  xx = 0
  For Each $rData1
    xx = xx + $rData1["tot"]
    Column = 0
    For Each fld In $rData1.Fields
      modGeneralMain.GridExplicitDecoration(GridView2, $rData1.Index, Column)
      If Column = 1 Then
        GridView2[$rData1.Index, Column].Text = modReportVar.GetDateTimeReport($rData1["fldtime"], gb.GeneralDate)
      Else
        GridView2[$rData1.Index, Column].Text = $rData1[fld.Name]
      Endif
      Column = Column + 1
    Next
  Next
  GridView2.Row = 0
  
  With GridView2
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Text = "SN"
    .Columns[1].Text = "DateTime"
    .Columns[2].Text = "Category"
    .Columns[3].Text = "Code"
    .Columns[4].Text = "Particulars"
    .Columns[5].Text = "Rate"
    .Columns[6].Text = "QTY"
    .Columns[7].Text = "Tax %"
    .Columns[8].Text = "Disc %"
    .Columns[9].Text = "Total"
    .Columns[10].Text = "User"
    .Columns[11].Text = "Mode"
    .Columns[12].Text = "Package"
    .Columns[13].Text = "Account"
    
    .Columns[0].Width = 50 * modBasic.$AppWidthRatio
    .Columns[1].Width = 180 * modBasic.$AppWidthRatio
    .Columns[2].Width = 120 * modBasic.$AppWidthRatio
    .Columns[3].Width = 40 * modBasic.$AppWidthRatio
    .Columns[4].Width = 330 * modBasic.$AppWidthRatio
    .Columns[5].Width = 75 * modBasic.$AppWidthRatio
    .Columns[6].Width = 50 * modBasic.$AppWidthRatio
    .Columns[7].Width = 50 * modBasic.$AppWidthRatio
    .Columns[8].Width = 50 * modBasic.$AppWidthRatio
    .Columns[9].Width = 75 * modBasic.$AppWidthRatio
    .Columns[10].Width = 75 * modBasic.$AppWidthRatio
    .Columns[11].Width = 75 * modBasic.$AppWidthRatio
    .Columns[12].Width = 100 * modBasic.$AppWidthRatio
    .Columns[13].Width = 100 * modBasic.$AppWidthRatio
  End With
  ' txttotsaved.Value = Round(xx, -2)
  
  hPatient1.ShowBillingDatainBox()
  
End

Public Sub mnudel_Click()
  
  If GridView1.Rows.Selection.Count > 0 Then
    If txtbill.Text Then
      modDatabase.$myConn.Delete("tblpatbilling", "fldid=&1 and fldsave=&2 and fldprint=&3 and fldstatus=&4", GridView1[GridView1.Row, 0].Text, False, False, "Punched")
      BlankAllControl()
      ShowReturnGrid()
    Endif
  Endif
  
End

Public Sub mnusave_Click()
  
  If $encid Then
    PharmacyReturn()
    Wait
    
    RefresgOldData()
    
    hPatient1.txtdiscamt.SetFocus
    
  Endif
  
End

Public Sub RefresgOldData()
  
  If txtbill.Text Then
    ShowReturnGrid()
    TabPanel1.Index = 1
    ShowReturnDoneGrid()
  Endif
  
End

Public Sub mnubilling_Click()
  
  hPatient1.txtdiscamt.SetFocus
  
End

Private Sub PharmacyReturn()
  
  Dim sql As String
  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim qtynew As Float
  Dim xx As Float
  Dim xgo As Boolean
  Dim aqty As Integer
  
  If rbBill.Value = True Then
    sql = "select fldid,flditemtype,flditemno,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldparent,fldencounterval from tblpatbilling where fldencounterval=&1 and fldretbill=&2 and fldsave=&3 and fldprint=&4 and fldordcomp=&5 and fldstatus=&6 and flditemqty<&7 and (flditemtype=&8 or flditemtype=&9 or flditemtype=&{10})"
    res = modDatabase.$myConn.Exec(sql, $encid, Trim(txtbill.Text), False, False, modBasic.$compID, "Punched", 0, "Medicines", "Surgicals", "Extra Items")
  Else If rbEncid.Value = True Then
    If txtbill.Text Like "ARC" & "*" Then
      sql = "select fldid,flditemtype,flditemno,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldparent,fldencounterval from tblpatbilling where fldencounterval=&1 and fldretbill=&2 and fldsave=&3 and fldprint=&4 and fldordcomp=&5 and fldstatus=&6 and flditemqty<&7 and (flditemtype=&8 or flditemtype=&9 or flditemtype=&{10})"
      res = modDatabase.$myConn.Exec(sql, $encid, Trim(txtbill.Text), False, False, modBasic.$compID, "Punched", 0, "Medicines", "Surgicals", "Extra Items")
    Else
      If modBasic.$BillReturnByEnc = "Yes" Then
        sql = "select fldid,flditemtype,flditemno,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldparent,fldencounterval from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldprint=&3 and fldordcomp=&4 and fldstatus=&5 and flditemqty<&6 and (flditemtype=&7 or flditemtype=&8 or flditemtype=&9)"
        res = modDatabase.$myConn.Exec(sql, Trim(txtbill.Text), False, False, modBasic.$compID, "Punched", 0, "Medicines", "Surgicals", "Extra Items")
      Endif
    Endif
  Endif
  
  If res.Available = True Then
    
    Inc Application.Busy
    For Each res
      If modBasic.$BillVerifyReturn = "Enable" Then
        res3 = modDatabase.$myConn.Edit("tblpatbilling", "fldid=&1", res["fldid"])
        res3["fldstatus"] = "Waiting"
        res3.Update()
      Else
        
        ''update tblpatdosing
        qtynew = 0 - res["flditemqty"]
        xgo = False
        
        If qtynew Then
          modDatabase.$myConn.Begin
          If rbBill.Value = True Then
            res1 = modDatabase.$myConn.Exec("select fldid,fldqtydisp,fldqtyret from tblpatdosing where fldid in(select fldparent from " & $tblpatbilling & " where fldid=&1 and flditemname=&2 and fldencounterval=&3)", res["fldparent"], res["flditemname"], $encid)
            If qtynew <= (res1["fldqtydisp"] - res1["fldqtyret"]) Then
              res2 = modDatabase.$myConn.Edit("tblpatdosing", "fldid=&1", res1["fldid"])
              res2["fldqtyret"] = res2["fldqtyret"] + qtynew
              res2["flduptime"] = Now()
              res2["xyz"] = False
              res2.Update()
              xgo = True
              qtynew = 0
            Endif
            
          Else If rbEncid.Value = True Then
            If txtbill.Text Like "ARC" & "*" Then
              res1 = modDatabase.$myConn.Exec("select fldid,fldqtydisp,fldqtyret from tblpatdosing where fldid in(select fldparent from " & $tblpatbilling & " where fldid=&1 and flditemname=&2 and fldencounterval=&3)", res["fldparent"], res["flditemname"], $encid)
              If qtynew <= (res1["fldqtydisp"] - res1["fldqtyret"]) Then
                res2 = modDatabase.$myConn.Edit("tblpatdosing", "fldid=&1", res1["fldid"])
                res2["fldqtyret"] = res2["fldqtyret"] + qtynew
                res2["flduptime"] = Now()
                res2["xyz"] = False
                res2.Update()
                xgo = True
                qtynew = 0
              Endif
            Else
              If modBasic.$BillReturnByEnc = "Yes" Then
                res1.MoveFirst
                While qtynew > 0
                  If qtynew <= (res1["fldqtydisp"] - res1["fldqtyret"]) Then
                    res2 = modDatabase.$myConn.Edit("tblpatdosing", "fldid=&1", res1["fldid"])
                    res2["fldqtyret"] = res2["fldqtyret"] + qtynew
                    res2["flduptime"] = Now()
                    res2["xyz"] = False
                    res2.Update()
                    xgo = True
                    qtynew = 0
                  Else If qtynew > (res1["fldqtydisp"] - res1["fldqtyret"])
                    xx = res1["fldqtydisp"] - res1["fldqtyret"]
                    res2 = modDatabase.$myConn.Edit("tblpatdosing", "fldid=&1", res1["fldid"])
                    res2["fldqtyret"] = res2["fldqtyret"] + xx
                    res2["flduptime"] = Now()
                    res2["xyz"] = False
                    res2.Update()
                    xgo = True
                    qtynew = qtynew - xx
                  Endif
                  Wait
                  res1.MoveNext
                Wend
              Endif
            Endif
            
          Endif
          
          If xgo = True Then
            aqty = qtynew - res["flditemqty"]
            'add QTY to tblentry
            modStockSub.AddToExistEntry(res["flditemno"], aqty, modBasic.$compID)
            ''update parent record with return qty
            modBillings.UpdateReturnBillQTY(res["fldparent"], res["fldencounterval"], res["flditemname"], (0 - aqty), $tblpatbilling)
            ''update current record
            res3 = modDatabase.$myConn.Edit("tblpatbilling", "fldid=&1", res["fldid"])
            res3["fldstatus"] = "Done"
            res3["fldsave"] = True
            res3["flduserid"] = modBasic.$lbluser
            res3["fldtime"] = Now()
            res3["fldcomp"] = modBasic.$compID
            res3["xyz"] = False
            res3.Update()
          Endif
          
          modDatabase.$myConn.Commit
        Endif
        
      Endif
    Next
    Dec Application.Busy
  Endif
  
Catch
  modDatabase.$myConn.Rollback
  Dec Application.Busy
  modHelpVariable.CreateErrorReport()
  
End

Public Sub GridView1_Menu()
  
  mnuhide.Popup
  
End

Public Sub mnuhist_Click()
  
  Dim hForm As FRequest
  Dim sql As String
  Dim res As Result
  
  If txtbill.Text Then
    If rbEncid.Value = True Then
      sql = "select fldid,fldtime,flditem,fldqtydisp,fldqtyret from tblpatdosing where fldencounterval=&1 and fldsave_order=&2"
      res = modDatabase.$myConn.Exec(sql, $encid, True)
    Else If rbBill.Value = True Then
      sql = "select fldid,fldtime,flditem,fldqtydisp,fldqtyret from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldid in(select fldparent from " & $tblpatbilling & " where (flditemtype=&3 or flditemtype=&4 or flditemtype=&5) and fldbillno=&6)"
      res = modDatabase.$myConn.Exec(sql, $encid, True, "Medicines", "Surgicals", "Extra Items", txtbill.Text)
    Endif
    
    If res.Available Then
      hForm = New FRequest(res, "Dispensing History", "MedList", False)
      hForm.ShowModal
    Endif
  Endif
  
End

Public Sub rbBill_Click()
  
  modSettings.SaveSettingsToFile("Billing/ReturnMode", "Invoice")
  txtbill.SetFocus
  
End

Public Sub rbEncid_Click()
  
  modSettings.SaveSettingsToFile("Billing/ReturnMode", "Encounter")
  txtbill.SetFocus
  
End

Public Sub rbgeneric_Click()
  
  modSettings.SaveSettingsToFile("BrandOrGeneric/Dispensing", "Generic")
  
End

Public Sub rbrand_Click()
  
  modSettings.SaveSettingsToFile("BrandOrGeneric/Dispensing", "Brand")
  
End

Public Sub txtbill_KeyPress()
  
  If Key.Code = Key.Down Then
    If modBasic.$AutoEncSuffix = "Yes" Then
      txtbill.Text = txtbill.Text & modBasic.$HospCode
    Endif
  Else
    modGeneralMain.InputUpCaseOnly()
  Endif
  
End

Public Sub mnumed_Click()
  
  Dim xPath As String
  
  If $encid Then
    Inc Application.Busy
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, $encid, "Medicines")
    Dec Application.Busy
    modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
  Endif
  
End

Public Sub mnusurg_Click()
  
  Dim xPath As String
  
  If $encid Then
    Inc Application.Busy
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, $encid, "Surgicals")
    Dec Application.Busy
    modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
  Endif
  
End

Public Sub mnuextra_Click()
  
  Dim xPath As String
  
  If $encid Then
    Inc Application.Busy
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, $encid, "Extra Items")
    Dec Application.Busy
    modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
  Endif
  
End

Public Sub mnumedreturn_Click()
  
  Dim xPath As String
  
  If $encid Then
    Inc Application.Busy
    xPath = modCHTMLPatient.PatientMedicationForReturn($encid)
    Dec Application.Busy
    modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
  Endif
  
End

Public Sub mnumedbill_Click()
  
  Dim xPath As String
  
  If $encid Then
    Inc Application.Busy
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, $encid, "Medicines")
    Dec Application.Busy
    modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
  Endif
  
End

Public Sub mnusurgbill_Click()
  
  Dim xPath As String
  
  If $encid Then
    Inc Application.Busy
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, $encid, "Surgicals")
    Dec Application.Busy
    modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
  Endif
  
End

Public Sub mnuextrabill_Click()
  
  Dim xPath As String
  
  If $encid Then
    Inc Application.Busy
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, $encid, "Extra Items")
    Dec Application.Busy
    modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
  Endif
  
End

Public Sub mnuinvoice_Click()
  
  Dim res As Result
  Dim rsx As Result
  Dim qty As Float
  
  If rbBill.Value = True Then
    If cmbreason.Text Then
      If modBasic.$BillPharmReturnPunching = "Disable" Then
        Message.Warning("Return Punching Disabled", ("OK"))
      Else
        
        If txtbill.Text Like "PHM" & "*" Then
          rsx = modDatabase.$myConn.Exec("select fldid from tblpatbilling where fldretbill=&1", Trim(txtbill.Text))
          If rsx.Available = False Then
            
            Inc Application.Busy
            modDatabase.$myConn.Begin
            res = modDatabase.$myConn.Exec("select fldid,fldencounterval,flditemtype,flditemno,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldparent,fldpayto,fldrefer,fldtarget,fldbillno,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from " & $tblpatbilling & " where fldbillno=&1 and fldstatus=&2 and fldsample=&3 and fldretqty=&4", Trim(txtbill.Text), "Cleared", "Waiting", 0)
            If res.Available Then
              For Each res
                qty = 0 - res["flditemqty"]
                modBillings.InsertBlankBillItemNewApp(res["fldencounterval"], res["fldbilltype"], res["fldbillingmode"], res["flddisctype"], res["fldacledger"], res["flditemtype"], res["flditemno"], res["flditemname"], res["flditemrate"], qty, res["fldtaxper"], res["flddiscper"], res["fldcashincredit"], "Punched", res["fldid"], False, False, res["fldtarget"], res["fldpayto"], res["fldrefer"], cmbreason.Text, res["fldbillno"])
              Next
            Endif
            modDatabase.$myConn.Commit
            Dec Application.Busy
            ShowReturnGrid()
            cmbroute.SetFocus
            
          Endif
        Endif
        
      Endif
    Else
      Message.Warning(("Reason for Return is empty"), ("OK"))
    Endif
  Endif
  
Catch
  modDatabase.$myConn.Rollback
  Dec Application.Busy
  modHelpVariable.CreateErrorReport()
  
End

Public Sub mnuinpat_Click()
  
  Dim res As Result
  Dim res1 As Result
  
  Dim xretqty As Float
  Dim xdose As Float
  Dim xpck As Float
  Dim xitem As String
  
  If cmbreason.Text Then
    If rbEncid.Value = True Then
      If txtbill.Text Then
        If txtbill.Text Like "ARC" & "*" Then
          res = modDatabase.$myConn.Exec("select fldid,fldencounterval,flditemtype,flditemno,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldparent,fldpayto,fldrefer,fldtarget,fldextracol,fldbillingmode,fldretqty,flddisctype,fldacledger,fldbilltype,fldcashincredit from " & $tblpatbilling & " where fldencounterval=&1 and fldextracol=&2 and fldsave=&3 and (flditemtype=&4 or flditemtype=&5 or flditemtype=&6) and (flditemqty-fldretqty)> &7", $encid, Trim(txtbill.Text), True, "Medicines", "Surgicals", "Extra Items", 0)
        Else
          If modBasic.$BillReturnByEnc = "Yes" Then
          Endif
        Endif
        If res.Available Then
          Inc Application.Busy
          For Each res
            xdose = 0
            res1 = modDatabase.$syConn.Exec("select SUM(fldvalue) as col from tblnurdosing where fldencounterval=&1 and flddoseno=&2", Trim(txtbill.Text), res["fldparent"])
            If res1.Available Then
              xitem = modPharmacy.GetStockIDFromDosing(res["fldparent"])
              xpck = modPharmLabel.GetPackVolValue(xitem)
              If res1["col"] And If xpck Then
                xdose = Round(res1["col"] / xpck, -2)
              Endif
            Endif
            xretqty = res["flditemqty"] - res["fldretqty"] - xdose
            
            If xretqty > 0 Then
              modDatabase.$myConn.Begin
              modBillings.InsertBlankBillItemNewApp(res["fldencounterval"], res["fldbilltype"], res["fldbillingmode"], res["flddisctype"], res["fldacledger"], res["flditemtype"], res["flditemno"], res["flditemname"], res["flditemrate"], 0 - xretqty, res["fldtaxper"], res["flddiscper"], res["fldcashincredit"], "Punched", res["fldid"], False, False, res["fldtarget"], res["fldpayto"], res["fldrefer"], cmbreason.Text, res["fldextracol"])
              modDatabase.$myConn.Commit
            Endif
          Next
          Dec Application.Busy
          ShowReturnGrid()
        Endif
      Endif
    Endif
  Endif
  
Catch
  modDatabase.$myConn.Rollback
  Dec Application.Busy
  modHelpVariable.CreateErrorReport()
  
End

Public Sub rbpunch_Click()
  
  If txtbill.Text Then
    ShowReturnGrid()
  Endif
  
End

Public Sub rbwait_Click()
  
  If txtbill.Text Then
    ShowReturnGrid()
  Endif
  
End

Public Sub GridView2_Click()
  
  If GridView2.Rows.Selection.Count Then
    
    hPatient1.$ACLedger = GridView2[GridView2.Row, 13].Text
    
  Endif
  
End

Public Sub txtqty_GotFocus()
  
  txtqty.SelectAll
  
End

Public Sub mnuversion_Click()
  
  Dim res As Result
  
  If rbBill.Value = True Then
    If txtbill.Text Then
      res = modDatabase.$myConn.Exec("UPDATE tblpatbilling SET fldcashincredit=0 where fldcashincredit IS NULL and fldbillno=&1", Trim(txtbill.Text))
      Message.Info("Process completed", ("OK"))
    Endif
  Endif
  
End

Private Sub GetSSFBookingLock(sInvoice As String)
  
  Dim aForm As CssfAPIBooking
  Dim xmsg As String
  
  Dim res As Result
  Dim invType As String
  Dim sTable As String
  
  invType = modBillLock.GetInvoiceFormatNo(sInvoice)
  If invType = "Invoice" Then
    sTable = "tblpatbilldetail"
  Else If invType = "Receipt" Then
    sTable = "tbltempbilldetail"
  Endif
  
  res = modDatabase.$myConn.Exec(Subst("select fldencounterval,fldbillno,fldchequeno,flduserid,flditemamt from &1", sTable) & " where fldbillno=&1 and fldencounterval=&2 and fldbankname in(select fldacledger from tbldiscount where (fldreference=&3 or fldreference=&4 or fldreference=&5))", sInvoice, $encid, "Accident SSF", "Medical SSF", "Critical SSF")
  If res.Available And If res["flditemamt"] Then
    
    Inc Application.Busy
    aForm = New CssfAPIBooking($xNHISCode, $encid, res["fldchequeno"], sInvoice, res["flditemamt"])
    Dec Application.Busy
    xmsg = aForm.GetAPIErrorOutput()
    If xmsg Then
      Message.Warning(xmsg, "OK")
    Endif
    
  Endif
  
End

Public Sub mnussfBooking_Click()
  
  Dim res As Result
  Dim xinvlst As String[]
  Dim xinvno As String
  Dim xdata As String[]
  
  xdata = New String[]
  res = modDatabase.$myConn.Exec("select fldbillno,flduserid,flditemamt from tblpatbilldetail where fldencounterval=&1 and fldbankname in(select fldacledger from tbldiscount where (fldreference=&2 or fldreference=&3)) UNION ALL select fldbillno,flduserid,flditemamt from tbltempbilldetail where fldencounterval=&1 and fldbankname in(select fldacledger from tbldiscount where (fldreference=&2 or fldreference=&3 or fldreference=&4))", $encid, "Accident SSF", "Medical SSF", "Critical SSF")
  If res.Available Then
    For Each res
      xdata.Add(res["fldbillno"] & "@" & res["flduserid"] & "@" & CStr(res["flditemamt"]))
    Next
  Endif
  xinvlst = GridTriColumn("SSF Booking", xdata)
  If xinvlst And If xinvlst.Count Then
    For Each xinvno In xinvlst
      GetSSFBookingLock(xinvno)
    Next
  Endif
  
End
