' Gambas class file

Private $MacID As Integer
Private $RepoUpload As Boolean

Public Sub Form_Arrange()

  modAppSupport.SetWorkSpaceImage()

End

Public Sub Form_Open()

  modGeneralMain.GetFirstValues(ServerSocket1, ServerSocket2)
  modGeneralMain.LoadMainForms(Me, pnltop, pnlleft, Workspace1, pnlright, pnlbottom)
  modBasic.LoadCashierBillingSettings()
  modBasic.LoadInvoicingSetting()
  modBasic.LoadRegistrationSetting()
  modBasic.DisplayPatientSettings()
  modBasic.LoadBillingLists()
  modBasic.LoadAutoBillingOptions()
  modBasic.SetAccountRules()
  modBasic.LoadClaimParametes()
  modBasic.LoadSSFClaim()
  modBasic.RemoteLogInSetting()

  modBasic.InventorySettings()
  modBasic.InventoryUserAccessList()
  modLinkDB.LoadExtraDBSettings()
  modBasic.LoadClinicalLists()
  modBasic.MedicineDoseSetting()
  modBasic.DispLabelSettings()
  modBasic.LoadLargeLists()
  modBasic.CloudAISettings()

  If MMain.$SISHAppMode = "HIS" Then
  Else
    mnuextra.Visible = False
  Endif
  $MacID = modMisc.GetFirstLetterInteger(modHelpVariable.$MACAddress)
  $RepoUpload = True
  If Exist(modHelpVariable.$appetcFolder &/ "sishrepository.conf.7z") Then
    Timer1.Enabled = True
  Endif
  If modSettings.ShowSettingFromFIle("InventorySetting/AutoOrderOnStartup") = "Enable" Then
    Inc Application.Busy
    modStockSub.GetCompwiseOutOrderUpdate()
    Dec Application.Busy
  Endif

End

Public Sub Form_Close()

  modGeneralMain.ExitAllWindows()

End

Public Sub mnudisp_Click()

  modWorkSpace.Remove(fmPatPharmacy)
  modWorkSpace.Add(fmPatPharmacy)

End

Public Sub mnuscreen_Click()

  If Dialog.SelectDirectory() Then Return
  Wait 2
  Desktop.Screenshot().Save(Dialog.Path &/ modString.GetNowString() & ".png")
  Message.Info(("Screen Shot saved in ") & Dialog.Path, ("OK"))

End

Public Sub mnupersonal_Click()

  modWorkSpace.Remove(fmPersonal)
  modWorkSpace.Add(fmPersonal)

End

Public Sub mnumail_Click()

  fmMail.Close
  fmMail.ShowModal

End

Public Sub mnubarcode_Click()

  fmDeviceSetting.Close
  fmDeviceSetting.ShowModal

End

Public Sub mnubill_Click()

  fmReportSetting.Close
  fmReportSetting.ShowModal

End

Public Sub Menu1_Click()

  modWorkSpace.Remove(fmPatBillRecord)
  modWorkSpace.Add(fmPatBillRecord)

End

Public Sub mnuappset_Click()

  fmAppSetting.Close
  fmAppSetting.ShowModal

End

Public Sub mnuseract_Click()

  fmAppUser.Close
  fmAppUser.ShowModal

End

Public Sub mnureturn_Click()

  modWorkSpace.Remove(fmReturn)
  modWorkSpace.Add(fmReturn)

End

Public Sub mnutransfer_Click()

  modWorkSpace.Remove(fmTransfer)
  modWorkSpace.Add(fmTransfer)

End

Public Sub mnulock_Click()

  fmLock.Close
  fmLock.ShowModal

End

Public Sub mnustockDB_Click()

  fmStockDB.Close
  fmStockDB.ShowModal

End

Public Sub mnuexpiry_Click()

  Dim xdate As Date

  Dialog.Title = "Select Expiry Date"
  If Dialog.SelectDate() Then Return
  xdate = Dialog.Date
  modDashBoard.AutoDashboardExpiry(xdate)

End

Public Sub mnunonexpiry_Click()

  Dim xList As String[] = ["1 Month", "2 Month", "3 Month", "6 Month", "9 Month", "12 Month", "15 Month"]
  Dim xmonth As String

  xmonth = InputCombo("Select Near-Expiry Month", "Near Expiry", xList, "3 Month", True)
  If xmonth Then
    modDashBoard.AutoDashboardNearExpiry(xmonth)
  Endif

End

Public Sub mnunderstock_Click()

  Dim xPath As String

  Inc Application.Busy
  xPath = modHTMLStock.ShowUnderStockItemReport()
  Dec Application.Busy
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

Public Sub mnuipreturn_Click()

  Dim xPath As String
  Dim xx As Date[]

  xx = DoubleDates(("Select Patient Discharge Dates"), "Inpatient Medicine Returns", [Date(), Date()])
  If xx Then
    Inc Application.Busy
    xPath = modGENReport.PatientMedicationForReturnDisc(xx[0], xx[1])
    Dec Application.Busy
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub ServerSocket1_Connection(RemoteHostIP As String)

  Dim hForm As FmChat

  If ServerSocket1.Status <= Net.Inactive Then Return
  hForm = New FmChat(modBasic.$lbluser, RemoteHostIP, "acc")
  hForm.Show

End

'''---------------------- transfer server -------------------------------------------------------
Public Sub ServerSocket2_Connection(RemoteHostIP As String)

  Dim Myket As Socket

  Myket = ServerSocket2.Accept()
  Myket.Blocking = False
  Print RemoteHostIP

End

Public Sub Socket_Read()

  Dim sCad As String

  If Last.Status <> Net.Connected Then Return
  Read #Last, sCad, Lof(Last)
  modControl.ShowTransferFile(Last.RemoteHost, sCad)

End

Public Sub Workspace1_Menu()

  If Workspace1.Windows.Count = 0 Then
    mnufile.Popup
  Endif

End

Public Sub mnubackground_Click()

  Dialog.Filter = ["*.jpg;*.jpeg;*.png;*.bmp", "Picture files"]
  If Dialog.OpenFile() Then Return
  modSettings.SaveSettingsToVar("AppSetting_DeskPicture/" & modBasic.$lbluser, Dialog.Path)
  modAppSupport.SetWorkSpaceImage()

End

Public Sub mnuinvsett_Click()

  fmInvoiceSettings.Close
  fmInvoiceSettings.ShowModal

End

Public Sub mnunewextra_Click()

  modWeb.ExecGeneralSub()

End

Public Sub mnustockedit_Click()

  fmPharmCost.Close
  fmPharmCost.ShowModal

End

Public Sub mnuadjust_Click()

  Dim hForm As FmSuperuser

  hForm = New FmSuperuser("Stock Adjustment")
  hForm.Show

End

Public Sub mnuprinter_Click()

  fmPrinterSettings.Close
  fmPrinterSettings.ShowModal

End

Public Sub mnuinventory_Click()

  fmInventorySettings.Close
  fmInventorySettings.ShowModal

End

Public Sub mnudilution_Click()

  fmDilution.Close
  fmDilution.ShowModal

End

Public Sub mnuembedder_Click()

  modExternal.RunExternalFixScript()

End

Public Sub mnudosecalc_Click()

  fmDoseCalc.Close
  fmDoseCalc.ShowModal

End

Public Sub mnuremoaccess_Click()

  fmStreaming.Close
  fmStreaming.ShowModal

End

Public Sub mnutranslate_Click()

  Dim hForm As FmTranslate

  hForm = New FmTranslate("Translate", Clipboard.Paste())
  hForm.ShowModal

End

Public Sub mnumedset_Click()

  fmMedSetting.Close
  fmMedSetting.ShowModal

End

Public Sub mnulabelsett_Click()

  fmLabelPrint.Close
  fmLabelPrint.ShowModal

End

Public Sub mnusearrepo_Click()

  fmCheckFile.Close
  fmCheckFile.ShowModal()

End

Public Sub mnunotice_Click()

  fmCompNotice.Close
  fmCompNotice.ShowModal

End

Public Sub mnuclrlock_Click()

  modPatientSub.CLearAllEncounterLocks(modHelpVariable.$LogInCategory)

End

Public Sub mnucustom_Click()

  fmExtraReportSett.Close
  fmExtraReportSett.ShowModal

End

Public Sub mnustoconsume_Click()

  modWorkSpace.Remove(fmConsume)
  modWorkSpace.Add(fmConsume)

End

Public Sub mnuclrcache_Click()

  modGeneralMain.CLearUserCollection()

End

Public Sub mnuregistsett_Click()

  fmRegistSetting.Close
  fmRegistSetting.ShowModal

End

Public Sub mnustoragecode_Click()

  fmCurStorage.Close
  fmCurStorage.ShowModal

End

Public Sub mnudisplist_Click()

  Dim hForm As FmDispList

  hForm = New FmDispList("Dispensed")
  modWorkSpace.Add(hForm)

End

Public Sub mnurequested_Click()

  Dim hForm As FmDispList

  hForm = New FmDispList("Requested")
  modWorkSpace.Add(hForm)

End

Public Sub mnumodem_Click()

  fmodemCache.Close
  fmodemCache.ShowModal

End

Public Sub mnuplaymedia_Click()

  modAppSupport.PlayMediaFile()

End

Public Sub mnuexit_Click()

  modGeneralMain.CloseAllWindows()

End

Public Sub mnuentryrepo_Click()

  fmPunchRecord.Close
  fmPunchRecord.ShowModal

End

Public Sub mnusercoll_Click()

  fmBillCollReport.Close
  fmBillCollReport.ShowModal

End

Public Sub mnubrowser_Click()

  Dim xURL As String
  Dim hForm As FmWebView

  xURL = modSettings.ShowSettingFromFIle("GeneralSettings/Browser_URL")
  If xURL Then
    hForm = New FmWebView(xURL)
    modWorkSpace.Add(hForm)
  Endif

End

Public Sub mnuchartsett_Click()

  fmChartSetting.Close
  fmChartSetting.ShowModal

End

Public Sub mnugodebug_Click()

  If mnugodebug.Caption = "Debug On" Then
    mnugodebug.Caption = "Debug Off"
    modBasic.$DebugMode = True
    modBasic.$DebugDB = True
    db.Debug = True

  Else If mnugodebug.Caption = "Debug Off" Then
    mnugodebug.Caption = "Debug On"
    modBasic.$DebugMode = False
    modBasic.$DebugDB = False
    db.Debug = False

  Endif

End

Public Sub mnusercollect_Click()

  fmBillCollect.Close
  fmBillCollect.ShowModal

End

Public Sub mnuarchived_Click()

  Dim hForm As FmPatReports

  hForm = New FmPatReports("")
  modWorkSpace.Add(hForm)

End

Public Sub Timer1_Timer()

  Dim xmin As Integer

  xmin = Minute(Now())
  If $MacID Then
    If xmin = $MacID Then

      If $RepoUpload = True Then
        $RepoUpload = False
        If modHelpVariable.$AutoRepoUpload = "Yes" Then
          modScript.GetStoreRepositoryUploader()
        Endif
        ' If modHelpVariable.$AutoImgRepoUpload = "Yes" Then
        '   modScript.GetImgRepositoryUploader()
        ' Endif
      Endif
      modRepoSync.UpdateAdvertiseContent()

    Else If xmin = 59 Then
      $RepoUpload = True
    Endif
  Endif

End

Public Sub mnubugreport_Click()

  modGeneralMain.SendBugReport(modBasic.$lbluser)

End

Public Sub mnurightweb_Click()

  modGeneralMain.LoadRightPanelWebPage()

End

Public Sub mnuextrareceipts_Click()

  fmExtReceipt.Close
  fmExtReceipt.ShowModal

End
