' Gambas class file

Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me)
  cmbmode.List = modNonMedical.FillCashModeCombo()
  cmbtype.List = ["Qualitative", "Quantitative"]

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub Form_KeyRelease()

  modGeneralmain.GoToNextControlTab()

End

Public Sub btnBrOK_KeyRelease()

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    btnBrOK_Click()
    cmbtype.SetFocus
  Endif

End

Public Sub btnBrOK_Click()

  Dim res As Result

  If Not cmbmethod.Text Then
    cmbmethod.Text = "Regular"
  Endif

  If cmbgroup.Text And If cmbtest.Text And If cmbtype.Text Then
    res = modDatabase.$myConn.Create("tblgrouptest")
    res["fldgroupname"] = Trim(cmbgroup.Text)
    res["fldtestid"] = cmbtest.Text
    res["fldtesttype"] = cmbtype.Text
    res["fldactive"] = cmbmethod.text
    res.Update()
    BlankAlltBox()
    FillGroupGrid()
    Balloon.Info(("Information saved"), btnBrOK)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Private Sub BlankAlltBox()

  cmbtest.Text = ""
  cmbtype.Text = ""
  cmbmethod.Text = ""

End

Public Sub btnrefresh_Click()

  BlankAlltBox()
  FillGroupGrid()

End

Public Sub btnrefresh_KeyRelease()

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    btnrefresh_Click()
  Endif

End

Public Sub cmbmode_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbmode)
  modFillContainer.RestrictComboToContent(cmbmode)

End

Public Sub cmbmode_Click()

  cmbgroup.Clear()
  If cmbmode.Text Then
    cmbgroup.List = modNonMedical.NonStockBillActiveItemArray("Diagnostic Tests", cmbmode.Text)
  Endif

End

Public Sub cmbgroup_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbgroup)
  modFillContainer.RestrictComboToContent(cmbgroup)

End

Public Sub cmbgroup_GotFocus()

  Dim xLst As String[]

  If cmbmode.Text Then
    If Not cmbgroup.Text Then
      If modBasic.$ItemListFormat = "GridView" Then
        xLst = modNonMedical.NonStockBillActiveItemArray("Diagnostic Tests", cmbmode.Text)
        If xLst.Count Then
          cmbgroup.Text = GridViewNew("Select Particulars", xLst, False, cmbgroup)
        Endif
      Endif
    Endif
  Endif

End

Public Sub cmbtype_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbtype)
  modFillContainer.RestrictComboToContent(cmbtype)

End

Public Sub cmbtype_Click()

  If modBasic.$ItemListFormat = "GridView" Then
  Else
    cmbtest.List = modMedicine.FillLabTestCombo(cmbtype.Text)
  Endif

End

Public Sub cmbtest_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbtest)
  modFillContainer.RestrictComboToContent(cmbtest)

End

Public Sub cmbtest_LostFocus()

  Dim xList As String[]

  xList = modFixLab.MethodsForLabTest(cmbtest.Text)
  If xList.Count Then
    cmbmethod.List = xList
    cmbmethod.Text = xList[0]
  Endif

End

Public Sub cmbtest_GotFocus()

  Dim xLst As String[]

  If Not cmbtype.Text Then
    cmbtype.SetFocus
  Else
    If modBasic.$ItemListFormat = "GridView" Then
      xLst = modMedicine.FillLabTestCombo(cmbtype.Text)
      If xLst And If xLst.Count Then
        If Not cmbtest.Text Then
          cmbtest.Text = GridViewNew("Select Particulars", xLst, False, cmbtest)
          cmbmethod.SetFocus
        Endif
      Endif
    Endif
  Endif

End

Public Sub cmbmethod_KeyRelease()

  modFillContainer.AutoFillComboBox(cmbmethod)
  modFillContainer.RestrictComboToContent(cmbmethod)

End

Private Sub FillGroupGrid()

  Dim sql As String
  Dim Column As Integer
  Dim fld As ResultField
  Dim res As Result

  sql = "select fldid,fldtestid,fldtesttype,fldactive from tblgrouptest where fldgroupname=&1"
  res = modDatabase.$myConn.Exec(sql, cmbgroup.Text)

  GridView1.Clear
  GridView1.Columns.Count = res.Fields.Count
  GridView1.Rows.Count = res.Count

  With GridView1
    .Rows.Height = modBasic.$AppGridRowHeight
    .Columns[0].Width = 1
    .Columns[1].Width = 250 * modBasic.$AppWidthRatio
    .Columns[2].Width = 100 * modBasic.$AppWidthRatio
    .Columns[3].Width = 200 * modBasic.$AppWidthRatio

    .Columns[1].Text = "Test Name"
    .Columns[2].Text = "Type"
    .Columns[3].Text = "Method"
  End With

  For Each res
    Column = 0
    For Each fld In res.Fields
      modGeneralMain.GridExplicitDecoration(GridView1, res.Index, Column)
      GridView1[res.Index, Column].Text = res[fld.Name]
      GridView1.Rows[res.Index].Height = Max(GridView1.Rows[res.Index].Height, GridView1[res.Index, Column].Font.RichTextHeight(GridView1[res.Index, Column].Text, GridView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (GridView1.Rows.Height - GridView1.Font.Height))
      GridView1[res.Index, Column].WordWrap = True

      Column = Column + 1
    Next
  Next
  GridView1.Row = 0

End

Public Sub btnBrCancel_Click()

  If GridView1.Rows.Selection.Count > 0 Then
    modDatabase.$myConn.Delete("tblgrouptest", "fldid=&1", GridView1[GridView1.Row, 0].Text)
    FillGroupGrid()
  Endif

End

Public Sub GridView1_Menu()

  mnuhide.Popup

End

Public Sub mnuchange_Click()

  Dim res As Result
  Dim xx As String

  If GridView1.Rows.Selection.Count Then
    xx = InputCombo("Select Test Method", "Laboratory", modFixLab.MethodsForLabTest(GridView1[GridView1.Row, 1].Text), GridView1[GridView1.Row, 3].Text, False)                             ''
    If xx Then
      res = modDatabase.$myConn.Edit("tblgrouptest", "fldid=&1", GridView1[GridView1.Row, 0].Text)
      res["fldactive"] = xx
      res.Update
      FillGroupGrid()
    Endif
  Endif

End

Public Sub txtcsv_Click()

  If Dialog.OpenFile() Then Return
  txtcsv.Text = Dialog.Path

End

Public Sub btnupload_Click()

  Dim hCSV As CsvFile
  Dim xcoll As Collection

  Dim res As Result
  Dim res1 As Result
  Dim xdelim As String

  If Trim(txtdelim.Text) Then
    xdelim = Trim(txtdelim.Text)
  Else
    xdelim = ";"
  Endif

  If Exist(txtcsv.Text) Then
    If Message.Question(("Are you sure ?"), ("No"), ("Yes")) = 2 Then

      Inc Application.Busy
      hCSV = New CsvFile(txtcsv.Text, xdelim)
      While hCSV.Eof = False
        xcoll = hCSV.Read()
        If modNonMedical.GetBillingCategory(Trim(xcoll["fldgroupname"])) = "Diagnostic Tests" Then

          res1 = modDatabase.$myConn.Exec("select fldgroupname from tblgrouptest where fldgroupname=&1", Trim(xcoll["fldgroupname"]))
          If res1.Available Then
          Else
            res = modDatabase.$myConn.Create("tblgrouptest")
            res["fldgroupname"] = Trim(xcoll["fldgroupname"])
            res["fldtestid"] = Trim(xcoll["fldtestid"])
            res["fldtesttype"] = Trim(xcoll["fldtesttype"])
            res["fldactive"] = Trim(xcoll["fldactive"])
            res.Update()
          Endif

        Endif
      Wend
      hCSV.Close()
      Dec Application.Busy

      FillGroupGrid()
      Balloon.Info(("Data Import completed"), btnupload)
      Balloon.Delay = modBasic.$BalloonDelay

    Endif
  Endif

End

Public Sub btnlistall_Click()

  Dim xPath As String

  Inc Application.Busy
  xPath = modRepoMaster.ShowLabGroupingListReport()
  Dec Application.Busy
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

Public Sub btnlistleft_Click()

  Dim res As Result
  Dim xPath As String

  Inc Application.Busy
  res = modDatabase.$myConn.Exec("select fldgroup,flditemname from tblservicecost where flditemtype=&1 and fldstatus=&2 and flditemname not in(select fldgroupname from tblgrouptest)", "Diagnostic Tests", "Active")
  xPath = modCHTMLReport.GeneralHTMLReport(res, ["Mode", "Particulars"], "PENDING TEST GROUPING", modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))
  Dec Application.Busy
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End
