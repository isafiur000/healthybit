' Gambas class file

Public Sub Form_Open()

  Dim xPrintList As String[]

  modGeneralMain.ArrangeFormCentre(Me)
  xPrintList = Printer.List
  cmblabel.List = xPrintList
  cmbinvoice.List = xPrintList
  cmbreport.List = xPrintList
  cmbscanmode.List = ["Lineart", "Gray", "Color"]
  cmbscanresolute.List = ["75dpi", "150dpi", "300dpi", "600dpi"]
  cmbscancomm.List = ["Exec", "Shell"]

  cmblabelmode.List = ["Line", "Text", "PDF", "PS", "Image", "Folder"]
  cmbinvmode.List = ["Line", "Text", "PDF", "PS", "Image", "Folder"]
  cmbreportmode.List = ["Line", "Text", "PDF", "PS", "Image", "Folder"]

  cmbfolderlabel.List = ["Line", "Text", "PDF", "Image"]
  cmbfolderinvoice.List = ["Line", "Text", "PDF", "Image"]
  cmbfolderreport.List = ["Line", "Text", "PDF", "Image"]

  cmblabelpdf.List = ["Default", "Custom"]
  cmbinvpdf.List = ["Default", "Custom"]
  cmbreportpdf.List = ["Default", "Custom"]

  cmbextralabel.List = modMisc.CustomReportList()
  cmbextrainvoice.List = modMisc.CustomReportList()
  cmbextrareport.List = modMisc.CustomReportList()

  cmbextlabelmode.List = ["LabelSize", "InvoiceSize", "ReportSize"]
  cmbextinvmode.List = ["LabelSize", "InvoiceSize", "ReportSize"]
  cmbextrepmode.List = ["LabelSize", "InvoiceSize", "ReportSize"]

  cmbautolabel.List = ["Print", "HTMLView", "Export", "None"]
  cmbautobill.List = ["Print", "HTMLView", "Export", "None"]
  cmbautoreport.List = ["Print", "HTMLView", "PDFView", "Export", "EMail", "PDFSave", "FTPLoad", "None"]

  cmblinefeed.List = ["Line Wise", "Whole"]

  SHowDefaultPrinter()

  ShowPDFPrint()
  ScannerSetting()
  ShowFOlderPrint()
  ShowAutoPrint()
  ShowPreformatting()
  LinePrintSetting()
  ShowExtraPrinting()

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub btnloadscanner_Click()

  cmbscanner.List = modApplication.ScannerList()

End

Public Sub btnscaninfoall_Click()

   Dim xx As String
  Dim yy As String

  If cmbscanner.Text Then
    xx = modApplication.ScannerInfoString(cmbscanner.Text)
    If xx Then
      yy = GetTextArea("Scanner Information", xx)
    Endif
  Endif

End

Public Sub btnscanhelp_Click()

  Dim xx As String
  Dim yy As String

  xx = modApplication.ScannerListString()
  If xx Then
    yy = GetTextArea("Scanner List", xx)
  Endif

End

Public Sub btnscaninfo_Click()

  Dim arcmd As String[]
  Dim xx As String
  Dim yy As String

  arcmd = ["scanimage", "-A"]
  modBasic.DebugString("Execute " & arcmd.Join(Space(1)))
  Exec arcmd To xx
  If xx Then
    yy = GetTextArea("Scanner List", xx)
  Endif

End

''''----------------------------------------------- Printer -----------------------------------------------------------
Public Sub btninfolabel_Click()

  Dim xx As String

  If cmblabel.Text Then
    xx = modPrint.GetPrinterInfo(cmblabel.Text)
    If xx Then
      Message.Info(xx, "OK")
    Endif
  Endif

End

Public Sub btninfoinvoice_Click()

  Dim xx As String

  If cmbinvoice.Text Then
    xx = modPrint.GetPrinterInfo(cmbinvoice.Text)
    If xx Then
      Message.Info(xx, "OK")
    Endif
  Endif

End

Public Sub btninforeport_Click()

  Dim xx As String

  If cmbreport.Text Then
    xx = modPrint.GetPrinterInfo(cmbreport.Text)
    If xx Then
      Message.Info(xx, "OK")
    Endif
  Endif

End

Public Sub btnlabel_Click()

  modSettings.SaveSettingsToFile("DefaultPrinter/LabelSize", cmblabel.Text)
  modSettings.SaveSettingsToFile("Label/PrintMode", cmblabelmode.Text)
  Balloon.Info(("Information updated"), btnlabel)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btninvoice_Click()

  modSettings.SaveSettingsToFile("DefaultPrinter/InvoiceSize", cmbinvoice.Text)
  modSettings.SaveSettingsToFile("Invoice/PrintMode", cmbinvmode.Text)
  Balloon.Info(("Information updated"), btninvoice)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnreport_Click()

  modSettings.SaveSettingsToFile("DefaultPrinter/ReportSize", cmbreport.Text)
  modSettings.SaveSettingsToFile("Report/PrintMode", cmbreportmode.Text)
  Balloon.Info(("Information updated"), btnreport)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsetdefault_Click()

  modSettings.EnterCheckSetting(chksetdefault, "DefaultPrinter/SetToDefault")
  Balloon.Info(("Information updated"), btnsetdefault)
  Balloon.Delay = modBasic.$BalloonDelay

End

Private Sub SHowDefaultPrinter()

  cmblabel.Text = modSettings.ShowSettingFromFIle("DefaultPrinter/LabelSize")
  cmblabelmode.Text = modSettings.ShowSettingFromFIle("Label/PrintMode")

  cmbinvoice.Text = modSettings.ShowSettingFromFIle("DefaultPrinter/InvoiceSize")
  cmbinvmode.Text = modSettings.ShowSettingFromFIle("Invoice/PrintMode")

  cmbreport.Text = modSettings.ShowSettingFromFIle("DefaultPrinter/ReportSize")
  cmbreportmode.Text = modSettings.ShowSettingFromFIle("Report/PrintMode")

  modSettings.ShowCheckBox(chksetdefault, "DefaultPrinter/SetToDefault")

End

Private Sub ScannerSetting()

  Dim xbright As String

  cmbscanner.Text = modSettings.ShowSettingFromFIle("ScannerDevice/Default")
  modSettings.ShowCheckBox(chkscanquote, "ScannerDevice/QuoteDevice")
  cmbscanmode.Text = modSettings.ShowSettingFromFIle("ScannerDevice/ScanMode")
  cmbscanresolute.Text = modSettings.ShowSettingFromFIle("ScannerDevice/Resolution")
  xbright = modSettings.ShowSettingFromFIle("ScannerDevice/Brightness")
  If xbright Then
    cmbscanbright.Value = CInt(xbright)
  Endif
  cmbscancomm.Text = modSettings.ShowSettingFromFIle("ScannerDevice/Command")

End

Public Sub btnscanner_Click()

  modSettings.SaveSettingsToFile("ScannerDevice/Default", cmbscanner.Text)
  modSettings.EnterCheckSetting(chkscanquote, "ScannerDevice/QuoteDevice")
  Balloon.Info(("Information updated"), btnscanner)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnscanmode_Click()

  modSettings.SaveSettingsToFile("ScannerDevice/ScanMode", cmbscanmode.Text)
  Balloon.Info(("Information updated"), btnscanmode)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnscanresolute_Click()

  modSettings.SaveSettingsToFile("ScannerDevice/Resolution", cmbscanresolute.Text)
  Balloon.Info(("Information updated"), btnscanresolute)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbrightscan_Click()

  modSettings.SaveSettingsToFile("ScannerDevice/Brightness", cmbscanbright.Value)
  Balloon.Info(("Information updated"), btnbrightscan)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnscancomm_Click()

  modSettings.SaveSettingsToFile("ScannerDevice/Command", cmbscancomm.Text)
  Balloon.Info(("Information updated"), btnscancomm)
  Balloon.Delay = modBasic.$BalloonDelay

End

''----------------------- PDF ---------------------------------------------------------------------
Public Sub btnlabelpdf_Click()

  modSettings.SaveSettingsToFile("Label/CommandType", cmblabelpdf.Text)
  modSettings.SaveSettingsToFile("Label/CommandText", txtlabelcmd.Text)
  Balloon.Info(("Information updated"), btnlabelpdf)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btninvpdf_Click()

  modSettings.SaveSettingsToFile("Invoice/CommandType", cmbinvpdf.Text)
  modSettings.SaveSettingsToFile("Invoice/CommandText", txtinvcmd.Text)
  Balloon.Info(("Information updated"), btninvpdf)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnreportpdf_Click()

  modSettings.SaveSettingsToFile("Report/CommandType", cmbreportpdf.Text)
  modSettings.SaveSettingsToFile("Report/CommandText", txtreportcmd.Text)
  Balloon.Info(("Information updated"), btnreportpdf)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txtlabelcmd_Click()

  txtlabelcmd.Text = CUPSCmd()

End

Public Sub txtinvcmd_Click()

  txtinvcmd.Text = CUPSCmd()

End

Public Sub txtreportcmd_Click()

  txtreportcmd.Text = CUPSCmd()

End

Private Sub ShowPDFPrint()

  cmblabelpdf.Text = modSettings.ShowSettingFromFIle("Label/CommandType")
  If modSettings.ShowSettingFromFIle("Label/CommandText") Then
    txtlabelcmd.Text = modSettings.ShowSettingFromFIle("Label/CommandText")
  Endif

  cmbinvpdf.Text = modSettings.ShowSettingFromFIle("Invoice/CommandType")
  If modSettings.ShowSettingFromFIle("Invoice/CommandText") Then
    txtinvcmd.Text = modSettings.ShowSettingFromFIle("Invoice/CommandText")
  Endif

  cmbreportpdf.Text = modSettings.ShowSettingFromFIle("Report/CommandType")
  If modSettings.ShowSettingFromFIle("Report/CommandText") Then
    txtreportcmd.Text = modSettings.ShowSettingFromFIle("Report/CommandText")
  Endif

End

''------------------------------- folder print ----------------------------------------------
Private Sub ShowFOlderPrint()

  txtdirlabel.Value = modSettings.ShowSettingFromFIle("Label/PrintFolder")
  txtdirinvoice.Value = modSettings.ShowSettingFromFIle("Invoice/PrintFolder")
  txtdirreport.Value = modSettings.ShowSettingFromFIle("Report/PrintFolder")

  cmbfolderlabel.Text = modSettings.ShowSettingFromFIle("Label/PrintFolderFormat")
  cmbfolderinvoice.Text = modSettings.ShowSettingFromFIle("Invoice/PrintFolderFormat")
  cmbfolderreport.Text = modSettings.ShowSettingFromFIle("Report/PrintFolderFormat")

End

Public Sub btnlabeldir_Click()

  modSettings.SaveSettingsToFile("Label/PrintFolder", txtdirlabel.Value)
  modSettings.SaveSettingsToFile("Label/PrintFolderFormat", cmbfolderlabel.Text)
  Balloon.Info(("Information updated"), btnlabeldir)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btninvoicedir_Click()

  modSettings.SaveSettingsToFile("Invoice/PrintFolder", txtdirinvoice.Value)
  modSettings.SaveSettingsToFile("Invoice/PrintFolderFormat", cmbfolderinvoice.Text)
  Balloon.Info(("Information updated"), btninvoicedir)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnreportdir_Click()

  modSettings.SaveSettingsToFile("Report/PrintFolder", txtdirreport.Value)
  modSettings.SaveSettingsToFile("Report/PrintFolderFormat", cmbfolderreport.Text)
  Balloon.Info(("Information updated"), btnreportdir)
  Balloon.Delay = modBasic.$BalloonDelay

End

''------------------------------- Extra Printing ---------------------------------------------------
Public Sub btnextralabel_Click()

  modSettings.SaveSettingsToFile("ExtraPrint/WithLabel", cmbextralabel.Text)
  modSettings.SaveSettingsToFile("ExtraPrintMode/WithLabel", cmbextlabelmode.Text)
  Balloon.Info(("Information updated"), btnextralabel)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnextrainvoice_Click()

  modSettings.SaveSettingsToFile("ExtraPrint/WithInvoice", cmbextrainvoice.Text)
  modSettings.SaveSettingsToFile("ExtraPrintMode/WithInvoice", cmbextinvmode.Text)
  Balloon.Info(("Information updated"), btnextrainvoice)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnextrareport_Click()

  modSettings.SaveSettingsToFile("ExtraPrint/WithReport", cmbextrareport.Text)
  modSettings.SaveSettingsToFile("ExtraPrintMode/WithReport", cmbextrepmode.Text)
  Balloon.Info(("Information updated"), btnextrareport)
  Balloon.Delay = modBasic.$BalloonDelay

End

Private Sub ShowExtraPrinting()

  cmbextralabel.Text = modSettings.ShowSettingFromFIle("ExtraPrint/WithLabel")
  cmbextlabelmode.Text = modSettings.ShowSettingFromFIle("ExtraPrintMode/WithLabel")

  cmbextrainvoice.Text = modSettings.ShowSettingFromFIle("ExtraPrint/WithInvoice")
  cmbextinvmode.Text = modSettings.ShowSettingFromFIle("ExtraPrintMode/WithInvoice")

  cmbextrareport.Text = modSettings.ShowSettingFromFIle("ExtraPrint/WithReport")
  cmbextrepmode.Text = modSettings.ShowSettingFromFIle("ExtraPrintMode/WithReport")

End

'''-------------------------------- Auto Printing ----------------------------------------
Public Sub btnautolabel_Click()

  modSettings.SaveSettingsToFile("Label/AutoPrint", cmbautolabel.Text)
  Balloon.Info(("Information updated"), btnautolabel)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnautobill_Click()

  modSettings.SaveSettingsToFile("Invoice/AutoPrint", cmbautobill.Text)
  Balloon.Info(("Information updated"), btnautobill)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnautoreport_Click()

  modSettings.SaveSettingsToFile("Report/AutoPrint", cmbautoreport.Text)
  Balloon.Info(("Information updated"), btnautoreport)
  Balloon.Delay = modBasic.$BalloonDelay

End

Private Sub ShowAutoPrint()

  cmbautolabel.Text = modSettings.ShowSettingFromFIle("Label/AutoPrint")
  cmbautobill.Text = modSettings.ShowSettingFromFIle("Invoice/AutoPrint")
  cmbautoreport.Text = modSettings.ShowSettingFromFIle("Report/AutoPrint")

End

''--------------------------------------------- formatting -------------------------------------------
Public Sub txtformatlabel_Click()

  If Dialog.OpenFile() Then Return
  txtformatlabel.Text = Dialog.Path

End

Public Sub txtformatbill_Click()

  If Dialog.OpenFile() Then Return
  txtformatbill.Text = Dialog.Path

End

Public Sub txtformatreport_Click()

  If Dialog.OpenFile() Then Return
  txtformatreport.Text = Dialog.Path

End

Public Sub btnformatlabel_Click()

  modSettings.EnterCheckSetting(chktranslabel, "PrePrintTranslate/LabelSize")
  modSettings.SaveSettingsToFile("PrePrintFormatScript/LabelSize", txtformatlabel.Text)
  modSettings.SaveSettingsToFile("PrePrintFormatExec/LabelSize", txtformscrlabel.Text)
  Balloon.Info(("Information updated"), btnformatlabel)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnformatbill_Click()

  modSettings.EnterCheckSetting(chktransinvoice, "PrePrintTranslate/InvoiceSize")
  modSettings.SaveSettingsToFile("PrePrintFormatScript/InvoiceSize", txtformatbill.Text)
  modSettings.SaveSettingsToFile("PrePrintFormatExec/InvoiceSize", txtformscrbill.Text)
  Balloon.Info(("Information updated"), btnformatbill)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnformatreport_Click()

  modSettings.EnterCheckSetting(chktransreport, "PrePrintTranslate/ReportSize")
  modSettings.SaveSettingsToFile("PrePrintFormatScript/ReportSize", txtformatreport.Text)
  modSettings.SaveSettingsToFile("PrePrintFormatExec/ReportSize", txtformscrreport.Text)
  Balloon.Info(("Information updated"), btnformatreport)
  Balloon.Delay = modBasic.$BalloonDelay

End

Private Sub ShowPreformatting()

  modSettings.ShowCheckBox(chktranslabel, "PrePrintTranslate/LabelSize")
  txtformatlabel.Text = modSettings.ShowSettingFromFIle("PrePrintFormatScript/LabelSize")
  txtformscrlabel.Text = modSettings.ShowSettingFromFIle("PrePrintFormatExec/LabelSize")

  modSettings.ShowCheckBox(chktransinvoice, "PrePrintTranslate/InvoiceSize")
  txtformatbill.Text = modSettings.ShowSettingFromFIle("PrePrintFormatScript/InvoiceSize")
  txtformscrbill.Text = modSettings.ShowSettingFromFIle("PrePrintFormatExec/InvoiceSize")

  modSettings.ShowCheckBox(chktransreport, "PrePrintTranslate/ReportSize")
  txtformatreport.Text = modSettings.ShowSettingFromFIle("PrePrintFormatScript/ReportSize")
  txtformscrreport.Text = modSettings.ShowSettingFromFIle("PrePrintFormatExec/ReportSize")

End

''-------------------------------- Help pages ------------------------------------
Public Sub btnhelp_Click()

  modControlSub.OpenBrowser("http://localhost:631/help/options.html")

End

Public Sub btnhelpformat_Click()

  Dim xx As String

  xx = "The Parent File path is <b>Application.Args[1]</b> or use commands"
  xx = xx & "<br>" & "======================================="
  xx = xx & "<br>" & "<b>" & Application.Name & " --lastoutput-label</b> for Last Label path"
  xx = xx & "<br>" & "<b>" & Application.Name & " --lastoutput-invoive</b> for Last Invoice path"
  xx = xx & "<br>" & "<b>" & Application.Name & " --lastoutput-report</b> for Last Report path"
  Message.Info(xx, "OK")

End

''=========================== Line Printing ========================
Private Sub LinePrintSetting()

  txtblank.Text = modSettings.ShowSettingFromFIle("LinePrinting/BlankLine")
  txtend.Text = modSettings.ShowSettingFromFIle("LinePrinting/EndBlankLine")
  txtstrcmd.Text = modSettings.ShowSettingFromFIle("LinePrinting/StartPrintCommand")
  txtendcmd.Text = modSettings.ShowSettingFromFIle("LinePrinting/EndPrintCommand")
  cmblinefeed.Text = modSettings.ShowSettingFromFIle("LinePrinting/TextFeed")

End

Public Sub btnblank_Click()

  modSettings.SaveSettingsToFile("LinePrinting/BlankLine", txtblank.Text)
  Balloon.Info(("Information updated"), btnblank)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnend_Click()

  modSettings.SaveSettingsToFile("LinePrinting/EndBlankLine", txtend.Text)
  Balloon.Info(("Information updated"), btnend)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txtstrcmd_Click()

  If Dialog.OpenFile() Then Return
  txtstrcmd.Text = Dialog.Path

End

Public Sub txtendcmd_Click()

  If Dialog.OpenFile() Then Return
  txtendcmd.Text = Dialog.Path

End

Public Sub btnlinefeed_Click()

  modSettings.SaveSettingsToFile("LinePrinting/TextFeed", cmblinefeed.Text)
  Balloon.Info(("Information updated"), btnlinefeed)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnstrcmd_Click()

  modSettings.SaveSettingsToFile("LinePrinting/StartPrintCommand", txtstrcmd.Text)
  Balloon.Info(("Information updated"), btnstrcmd)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnendcmd_Click()

  modSettings.SaveSettingsToFile("LinePrinting/EndPrintCommand", txtendcmd.Text)
  Balloon.Info(("Information updated"), btnendcmd)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnhelpepson_Click()

  modControlSub.OpenBrowser("http://www.lprng.com/RESOURCES/EPSON/epson.htm")

End

Public Sub btncannon_Click()

  FCannon.Close
  FCannon.Show

End

Public Sub btnfileformat_Click()

  fmReplace.Close
  fmReplace.ShowModal

End


