' Gambas class file

''controls
Private aIndexLabel As New Object[50]    ''aLab
Private aSpecLabel As New Object[50]       ''aObj
Private aNameLabel As New Object[50]       ''aObj
Private aAbnormCheck As New Object[50]       ''aObj2
Private aHTMLText As New Object[50]          ''aObj11
Private aLineText As New Object[50]
Private aUnitText As New Object[50]
Private aValueBox As New Object[50]
Private aQuantiBox As New Object[50]
Private aQuantiMax As New Object[50]
Private aQuantiMin As New Object[50]
Private aQuantiUnit As New Object[50]
Private aDateBox As New Object[50]
Private aBSDate As New Object[50]
Private aComboBox As New Object[50]
Private aDichoValue As New Object[50]
Private aLeftRight As New Object[50]
Private aGenTextArea As New Object[50]

''other variables
Private $encid As String
Private $sTable As String
Private AppFactor As Float
Private $xData As Variant[]
' Private $xIndex As Long[]   ''$xData[i][0]
' Private $xItem As String[]  ''$xData[i][1]
' Private $xSpecmn As String[]  ''$xData[i][2]
' Private $xOption As String[]  ''$xData[i][3]
' Private $xType As String[]  ''$xData[i][4]

''----------------------------------------- create controls -----------------------------------------
Public Sub _new(encid As String, sDepartment As String[], sTable As String)

  Dim ht As String

  $encid = encid
  cmbcategory.List = sDepartment
  $sTable = sTable

  AppFactor = modBasic.$AppScaleFactor
  ht = modSettings.ShowSettingFromFIle("MultipleTextBox/Height")
  If ht Then
    Slider1.Value = CInt(ht)
  Else
    Slider1.Value = 3
  Endif

End

Public Sub cmbcategory_Click()

  Dim xht As Integer

  lblitem.Text = cmbcategory.Text
  If lblitem.Text Then

    Try $xData.Clear()
    Frame1.Children.Clear()
    Wait
    GetAllListData()
    LoadFormData()

    xht = ($xData.Count * 25 * Slider1.Value + 30) * AppFactor
    If Frame1.Height < xht Then
      Frame1.Height = xht
    Endif
  Endif

End

Private Sub GetAllListData()

  Dim sql As String
  Dim xcomp As String
  Dim xstr As String
  Dim res As Result
  Dim xFldList As String[]

  If modBasic.$LabReportingComp Then
    xcomp = modBasic.$LabReportingComp
  Else
    xcomp = modBasic.$compID
  Endif
  If modBasic.$LabReportingFrom = "Not From" Then
    xstr = "fldcomp_sample not like "
  Else
    xstr = "fldcomp_sample like "
  Endif
  xFldList = ["fldid", "fldsampleid", "fldtestid", "fldsampletype", "fldtime_sample", "fldabnormal", "fldid", "fldtest_type", "fldreportquali", "fldreportquanti"]
  sql = "select " & xFldList.Join(",") & " from tblpatlabtest where fldencounterval=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and " & xstr & "&4"
  res = modDatabase.$myConn.Exec(sql, $encid, "Sampled", cmbcategory.Text, xcomp)

  $xData = New Variant[]
  If res.Available Then
    For Each res
      If res["fldtest_type"] = "Quantitative" Then
        $xData.Add([res["fldid"], res["fldtestid"], res["fldsampleid"], res["fldtest_type"], "Quantitative"])
      Else
        $xData.Add([res["fldid"], res["fldtestid"], res["fldsampleid"], res["fldtest_type"], modFixLab.GetLabTestOptionType(res["fldtestid"])])
      Endif
    Next
  Endif

End

Private Sub LoadFormData()

  Dim i As Integer

  For i = 0 To $xData.Count - 1
    If i < 49 Then

      aIndexLabel[i] = New ValueBox(Frame1) As "IndexLabel"
      aSpecLabel[i] = New TextLabel(Frame1) As "SpecimenLabel"
      aNameLabel[i] = New TextLabel(Frame1) As "NameLabel"
      aAbnormCheck[i] = New CheckBox(Frame1) As "CheckBoxgroup"
      If $xData[i][3] = "Quantitative" Then
        aQuantiBox[i] = New ValueBox(Frame1) As "QuantiGroup"
        aQuantiMax[i] = New ValueBox(Frame1) As "QuantiGroupMax"
        aQuantiMin[i] = New ValueBox(Frame1) As "QuantiGroupMin"
        aQuantiUnit[i] = New Label(Frame1)
      Else
        Select $xData[i][4]
          Case "Single Selection"
            aComboBox[i] = New ComboBox(Frame1) As "ComboGroup"
          Case "Dichotomous"
            aDichoValue[i] = New DichotomousValue(Frame1) As "DichoText"
          Case "Left and Right"
            aLeftRight[i] = New LeftRightTextArea(Frame1) As "LeftRightGroup"
          Case "Date Time", "BS Date"
            aDateBox[i] = New DateBox(Frame1) As "DateGroup"
            aBSDate[i] = New ToolButton(Frame1) As "BSButton"
          Case "Quantitative"
            aValueBox[i] = New ValueBox(Frame1) As "ValueGroup"
            aUnitText[i] = New TextBox(Frame1) As "UnitGroup"
          Case "Qualitative"
            aLineText[i] = New TextBox(Frame1) As "TextLineGroup"
          Case "RichText Area"
            aHTMLText[i] = New TextHTML(Frame1) As "TextHTMLgroup"
          Case "No Selection"
            aGenTextArea[i] = New TextArea(Frame1) As "GenAreaGroup"
          Case Else
        End Select
      Endif

    Endif
  Next
  DIsplayTextForm()

End

''------------------------ General form
Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me, "False")
  rbmetric.Value = True
  If cmbcategory.List.Count = 1 Then
    cmbcategory.Index = 0
    cmbcategory_Click()
  Endif

End

Public Sub Form_Close()

  modGeneralMain.DisableJavaScript()

End

Private Sub DIsplayTextForm()

  Dim i As Integer
  Dim xlimit As Float[]

  Frame1.Height = ($xData.Count * 25 * Slider1.Value + 30) * AppFactor
  Frame1.Width = 775 * AppFactor

  For i = 0 To $xData.Count - 1
    If i < 49 Then

      ''create index label
      With aIndexLabel[i]
        .X = 5 * AppFactor
        .Y = (i * 25 * Slider1.Value + 15) * AppFactor
        .Width = 5 * AppFactor
        .Height = 25 * AppFactor
        .Value = $xData[i][0]
        .Visible = False
        .Tag = i
      End With

      ''create specimen
      With aSpecLabel[i]
        .X = (5 + 5) * AppFactor
        .Y = (i * 25 * Slider1.Value + 15) * AppFactor
        .Width = 75 * AppFactor
        .Height = 25 * Slider1.Value * AppFactor
        .Text = $xData[i][2]
        .Tag = i
        .Wrap = True
      End With

      ''create Name Label
      With aNameLabel[i]
        .X = (85 + 25) * AppFactor
        .Y = (i * 25 * Slider1.Value + 15) * AppFactor
        .Width = 250 * AppFactor
        .Height = 25 * Slider1.Value * AppFactor
        .Text = $xData[i][1]
        .Tag = i
        .Wrap = True
      End With

      If $xData[i][3] = "Quantitative" Then
        xlimit = modLabTest.GetTestBothLimits($xData[i][0], modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
        ''create abnormal checkbox
        With aAbnormCheck[i]
          .X = (340 + 25) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 75 * AppFactor
          .Height = 25 * AppFactor
          .Text = "Abn"
          .Enabled = False
          .Tag = i
        End With

        ''create observation entry
        With aQuantiBox[i]
          .X = (420 + 25) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 75 * AppFactor
          .Height = 25 * AppFactor
          .Tag = i
        End With
        'min value
        With aQuantiMin[i]
          .X = (500 + 25) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 50 * AppFactor
          .Height = 25 * AppFactor
          .Enabled = False
          .Value = xlimit[0]
          .Tag = i
        End With
        ''max value
        With aQuantiMax[i]
          .X = (555 + 25) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 50 * AppFactor
          .Height = 25 * AppFactor
          .Enabled = False
          .Value = xlimit[1]
          .Tag = i
        End With
        With aQuantiUnit[i]
          .X = (610 + 25) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 75 * AppFactor
          .Height = 25 * AppFactor
          .Border = Border.Plain
          .Text = modLabTest.GetTestUnitSrting($xData[i][0], modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
          .Tag = i
        End With

      Else
        ''create abnormal checkbox
        With aAbnormCheck[i]
          .X = (340 + 25) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 75 * AppFactor
          .Height = 25 * AppFactor
          .Text = "Abn"
          .Tag = i
        End With

        ''create observation entry
        If $xData[i][4] = "Single Selection" Then
          With aComboBox[i]
            .X = (420 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 250 * AppFactor
            .Height = 25 * AppFactor
            .List = modAllExam.SelectExamOptionList("Test", $xData[i][1], $xData[i][4])
            .Tag = i
          End With

        Else If $xData[i][4] = "Dichotomous" Then
          With aDichoValue[i]
            .X = (420 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 250 * AppFactor
            .Height = 25 * AppFactor
            .List = modAllExam.SelectExamOptionList("Test", $xData[i][1], $xData[i][4])
            .Tag = i
          End With

        Else If $xData[i][4] = "Left and Right" Then
          With aLeftRight[i]
            .X = (420 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 300 * AppFactor
            .Height = 25 * Slider1.Value * AppFactor
            .Tag = i
          End With

        Else If $xData[i][4] = "Date Time" Then
          With aDateBox[i]
            .X = (420 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 200 * AppFactor
            .Height = 25 * AppFactor
            .Mode = DateChooser.DateTime
            .Tag = i
          End With
          With aBSDate[i]
            .X = (650 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 30 * AppFactor
            .Height = 25 * AppFactor
            .Picture = Picture["icon:/small/calendar"]
            .Tag = i
          End With

        Else If $xData[i][4] = "BS Date" Then
          With aDateBox[i]
            .X = (420 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 200 * AppFactor
            .Height = 25 * AppFactor
            .Mode = DateChooser.DateTime
            .Tag = i
          End With
          With aBSDate[i]
            .X = (650 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 30 * AppFactor
            .Height = 25 * AppFactor
            .Picture = Picture["icon:/small/calendar"]
            .Tag = i
          End With

        Else If $xData[i][4] = "Quantitative" Then
          With aValueBox[i]
            .X = (420 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 100 * AppFactor
            .Height = 25 * AppFactor
            .Tag = i
          End With
          With aUnitText[i]
            .X = (550 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 100 * AppFactor
            .Height = 25 * AppFactor
            .Tag = i
          End With

        Else If $xData[i][4] = "Qualitative" Then
          With aLineText[i]
            .X = (420 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 250 * AppFactor
            .Height = 25 * AppFactor
            .Tag = i
          End With

        Else If $xData[i][4] = "RichText Area" Then
          With aHTMLText[i]
            .X = (420 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 300 * AppFactor
            .Height = 25 * Slider1.Value * AppFactor
            .DictionaryPath = modBasic.$dictPathList
            .Tag = i
          End With

        Else If $xData[i][4] = "No Selection" Then
          With aGenTextArea[i]
            .X = (420 + 25) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 300 * AppFactor
            .Height = 25 * Slider1.Value * AppFactor
            .Wrap = True
            .Tag = i
          End With

        Else
        Endif
      Endif

    Endif
  Next

End

Private Sub GetFocusControl(i As Integer)

  If aHTMLText[i] Then
    ScrollView1.EnsureVisible(aHTMLText[i].X, aHTMLText[i].Y, aHTMLText[i].Width, aHTMLText[i].Height)
    aHTMLText[i].SetFocus
  Else If aLineText[i] Then
    ScrollView1.EnsureVisible(aLineText[i].X, aLineText[i].Y, aLineText[i].Width, aLineText[i].Height)
    aLineText[i].SetFocus
  Else If aValueBox[i] Then
    ScrollView1.EnsureVisible(aValueBox[i].X, aValueBox[i].Y, aValueBox[i].Width, aValueBox[i].Height)
    aValueBox[i].SetFocus
  Else If aDateBox[i] Then
    ScrollView1.EnsureVisible(aDateBox[i].X, aDateBox[i].Y, aDateBox[i].Width, aDateBox[i].Height)
    aDateBox[i].SetFocus
  Else If aQuantiBox[i] Then
    ScrollView1.EnsureVisible(aQuantiBox[i].X, aQuantiBox[i].Y, aQuantiBox[i].Width, aQuantiBox[i].Height)
    aQuantiBox[i].SetFocus
  Else If aComboBox[i] Then
    ScrollView1.EnsureVisible(aComboBox[i].X, aComboBox[i].Y, aComboBox[i].Width, aComboBox[i].Height)
    aComboBox[i].SetFocus
  Else If aGenTextArea[i] Then
    ScrollView1.EnsureVisible(aGenTextArea[i].X, aGenTextArea[i].Y, aGenTextArea[i].Width, aGenTextArea[i].Height)
    aGenTextArea[i].SetFocus
  Endif

End

Public Sub BSButton_Click()

  Dim j As Integer
  Dim xx As String

  j = Last.Tag
  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(aDateBox[j].Value))
  If xx Then
    aDateBox[j].Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub btnexectext_Click()

  Dim j As Integer

  Try j = Application.ActiveControl.Tag
  If aHTMLText[j] Then
    aHTMLText[j].RichText = aHTMLText[j].RichText & modCloudAI.GetPatCloudAIResponse($encid)
  Else If aGenTextArea[j] Then
    aGenTextArea[j].Text = aGenTextArea[j].Text & modCloudAI.GetPatCloudAIResponse($encid)
  Endif

End

Public Sub dctexectext_Click()

  Dim xx As String
  Dim j As Integer

  Try j = Application.ActiveControl.Tag
  If aHTMLText[j] Then
    xx = GetRichTextArea(aNameLabel[j].Text, aHTMLText[j].RichText)
    If xx Then
      aHTMLText[j].RichText = xx
    Endif
  Else If aGenTextArea[j] Then
    xx = GetTextArea(aNameLabel[j].Text, aGenTextArea[j].Text)
    If xx Then
      aGenTextArea[j].Text = xx
    Endif
  Endif

End

Public Sub btntemplsumm_Click()

  Dim j As Integer

  Try j = Application.ActiveControl.Tag
  If aHTMLText[j] Then
    aHTMLText[j].RichText = aHTMLText[j].RichText & DictionaryVIew(modBasic.$dictadvPath)
  Else If aGenTextArea[j] Then
    aGenTextArea[j].Text = aGenTextArea[j].Text & DictionaryVIew(modBasic.$dictadvPath)
  Endif

End

Public Sub btnrefresh_Click()

  modSettings.SaveSettingsToFile("MultipleTextBox/Height", Slider1.Value)
  Frame1.Children.Clear()
  LoadFormData()

End

Public Sub btnBrChange_Click()

  modGeneralMain.SaveFormArrangement(Me)
  Me.Close()

End

Public Sub btnBrOK_Click()

  FillGenExams()
  Balloon.Info(("Information saved"), btnBrOK)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub QuantiGroup_Change()

  Dim j As Integer

  j = Last.Tag
  If aQuantiBox[j].Value Then
    If aQuantiMin[j].Value <> aQuantiMax[j].Value Then
      If aQuantiBox[j].Value < aQuantiMin[j].Value Or If aQuantiBox[j].Value > aQuantiMax[j].Value Then
        aAbnormCheck[j].Value = True
      Else
        aAbnormCheck[j].Value = False
      Endif
    Else
      aAbnormCheck[j].Value = False
    Endif
  Else
    aAbnormCheck[j].Value = False
  Endif

  If aAbnormCheck[j].Value = True Then
    aAbnormCheck[j].Foreground = Color.Red
  Else
    aAbnormCheck[j].Foreground = Color.Default
  Endif

End

Private Sub FillGenExams()

  Dim i As Integer

  For i = 0 To $xData.Count - 1
    If i < 49 Then
      If $xData[i][3] = "Quantitative" Then
        If aQuantiBox[i].Value Then
          modLabSub.UpdateLabTestReportQuanti(aIndexLabel[i].Value, aQuantiBox[i].Value, aAbnormCheck[i].Value, modLabSub.GetTestUnitFromButton(rbsi, rbmetric), $sTable)
        Endif
      Else
        If $xData[i][4] = "Single Selection" Then
          If aComboBox[i].Text Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aComboBox[i].Text, aAbnormCheck[i].Value, "", $sTable)
          Endif
        Else If $xData[i][4] = "Dichotomous" Then
          If aDichoValue[i].Value Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aDichoValue[i].Value, aAbnormCheck[i].Value, "", $sTable)
          Endif
        Else If $xData[i][4] = "Left and Right" Then
          If aLeftRight[i].DataText Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aLeftRight[i].DataText, aAbnormCheck[i].Value, "", $sTable)
          Endif
        Else If $xData[i][4] = "Date Time" Then
          If aDateBox[i].Value Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, modDate.DateStringForExam(aDateBox[i].Value), aAbnormCheck[i].Value, "", $sTable)
          Endif
        Else If $xData[i][4] = "BS Date" Then
          If aDateBox[i].Value Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, modDate.ConvertToLocaldate(aDateBox[i].Value), aAbnormCheck[i].Value, "", $sTable)
          Endif
        Else If $xData[i][4] = "Quantitative" Then
          If aValueBox[i].Value Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, CStr(aValueBox[i].Value) & Space(1) & aUnitText[i].Text, aAbnormCheck[i].Value, "", $sTable)
          Endif
        Else If $xData[i][4] = "Qualitative" Then
          If aLineText[i].Text Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aLineText[i].Text, aAbnormCheck[i].Value, "", $sTable)
          Endif
        Else If $xData[i][4] = "RichText Area" Then
          If aHTMLText[i].Text Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aHTMLText[i].RichText, aAbnormCheck[i].Value, "", $sTable)
          Endif
        Else If $xData[i][4] = "No Selection" Then
          If aGenTextArea[i].Text Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aGenTextArea[i].Text, aAbnormCheck[i].Value, "", $sTable)
          Endif
        Endif
      Endif
    Endif
  Next

End

''------------------------------------- short cut keys ------------------------------
Public Sub Form_KeyRelease()

  Dim i As Integer
  Dim j As Integer

  If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
    '     modGeneralmain.GoToNextControlTab()
  Else If Key.Code = Key.Esc Then
    Me.Close
  Else

    If Application.ActiveControl Then
      If Not Application.ActiveControl.Tag Then
        j = 0
      Else
        j = Application.ActiveControl.Tag
      Endif
      If Key.Code = Key["S"] And If Key.Control Then
        btnBrOK_Click()
      Else If Key.Code = Key["A"] And If Key.Control Then
        If aAbnormCheck[j].Value = False Then
          aAbnormCheck[j].Value = True
        Else If aAbnormCheck[j].Value = True Then
          aAbnormCheck[j].Value = False
        Endif
      Endif
    Endif

    If Key.Code = Key.F1 Then
      i = 1
      GetFocusControl(i - 1)

    Else If Key.Code = Key.F2 Then
      i = 2
      GetFocusControl(i - 1)

    Else If Key.Code = Key.F3 Then
      i = 3
      GetFocusControl(i - 1)

    Else If Key.Code = Key.F4 Then
      i = 4
      GetFocusControl(i - 1)

    Else If Key.Code = Key.F5 Then
      i = 5
      GetFocusControl(i - 1)

    Else If Key.Code = Key.F6 Then
      i = 6
      GetFocusControl(i - 1)

    Else If Key.Code = Key.F7 Then
      i = 7
      GetFocusControl(i - 1)

    Else If Key.Code = Key.F8 Then
      i = 8
      GetFocusControl(i - 1)

    Else If Key.Code = Key.F9 Then
      i = 9
      GetFocusControl(i - 1)

    Else If Key.Code = Key.F10 Then
      i = 10
      GetFocusControl(i - 1)

    Else If Key.Code = Key.F11 Then
      i = 11
      GetFocusControl(i - 1)

    Else If Key.Code = Key.F12 Then
      i = 12
      GetFocusControl(i - 1)

    Endif

  Endif

End

''-----------------------------help options  --------------------------------------
Public Sub QuantiGroup_KeyRelease()

  Dim i As Integer

  If modBasic.$LabQuickMulti = "Yes" Then
    If Key.Code = Key.Return Or If Key.Code = Key.Enter Then
      i = Last.Tag
      Wait
      GetFocusControl(i + 1)
    Endif
  Endif

End

Public Sub ComboGroup_GotFocus()

  Dim j As Integer

  j = Last.Tag
  If modBasic.$TabletModeEnable = "Yes" Then
    If Not aComboBox[j].Text Then
      aComboBox[j].Popup
    Endif
  Endif

End

Public Sub ComboGroup_MouseWheel()

  Stop Event

End

Public Sub ComboGroup_KeyRelease()

  Dim j As Integer

  j = Last.Tag
  ''enable on chnaging ComboBoxNew to ComboBox
  modFillContainer.AutoFillComboBox(aComboBox[j])

End

Public Sub btnfill_Click()

  Dim i As Integer
  Dim res As Result

  For i = 0 To $xData.Count - 1
    If i < 49 Then
      res = modDatabase.$myConn.Exec("select flddetail from tbltest where fldtestid=&1", $xData[i][1])
      If res.Available Then

        If $xData[i][4] = "Single Selection" Then
          If Not aComboBox[i].Text Then
            aComboBox[i].Text = res["flddetail"]
          Endif
        Else If $xData[i][4] = "RichText Area" Then
          If Not aHTMLText[i].Text Then
            aHTMLText[i].RichText = res["flddetail"]
          Endif
        Else If $xData[i][4] = "No Selection" Then
          If Not aGenTextArea[i].Text Then
            aGenTextArea[i].Text = res["flddetail"]
          Endif
        Else If $xData[i][4] = "Dichotomous" Then
          If Not aDichoValue[i].Value Then
            aDichoValue[i].Value = res["flddetail"]
          Endif
        Endif

      Endif
    Endif
  Next

End
