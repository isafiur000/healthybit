' Gambas class file

Private $MacID As Integer
Private $RepoUpload As Boolean

Public Sub Form_Arrange()

  modAppSupport.SetWorkSpaceImage()

End

Public Sub Form_Open()

  modGeneralMain.GetFirstValues(ServerSocket1, ServerSocket2)
  modGeneralMain.LoadMainForms(Me, pnltop, pnlleft, Workspace1, pnlright, pnlbottom)
  DiaplayCustMenu()
  modLinkDB.LoadExtraDBSettings()
  modBasic.LoadLabRadioList()
  modBasic.LabRadiologySeting()
  modBasic.LoadCashierBillingSettings()
  modBasic.LoadRegistrationSetting()
  modBasic.DisplayPatientSettings()
  modBasic.LoadBillingLists()
  modBasic.LoadAutoBillingOptions()
  modBasic.SetAccountRules()
  modBasic.LoadClaimParametes()
  modBasic.LoadSSFClaim()
  modBasic.LoadClinicalLists()
  modBasic.ClinicalCommentSett()
  modBasic.RemoteLogInSetting()

  modBasic.InventoryUserAccessList()
  modBasic.ChartSettingsAll()
  modBasic.CloudAISettings()
  modBillLock.GetInvoicePrefixEnc("Counter Sales")
  modBasic.$ClinicTelemed = modGlobalSetting.ShowSettingFromDB("IPClinic/TelemedicineRequest")

  If MMain.$SISHAppMode = "HIS" Then
  Else
    mnuextra.Visible = False
  Endif
  If MMain.$CustomFormat = "Nobel" Then
    mnugetrequest.Visible = True
  Else
    mnugetrequest.Visible = False
  Endif

  If Exist(modHelpVariable.$appetcFolder &/ "labinterfacing.conf.7z") Then
    modInterface.GetInterfaceConn()
  Else If Exist(modHelpVariable.$appetcFolder &/ "labinterfacing.conf") Then
    modInterface.GetInterfaceConn()
  Endif
  $MacID = modMisc.GetFirstLetterInteger(modHelpVariable.$MACAddress)
  $RepoUpload = True
  If Exist(modHelpVariable.$appetcFolder &/ "sishrepository.conf.7z") Then
    Timer2.Enabled = True
  Endif

End

Public Sub Form_Close()

  modGeneralMain.ExitAllWindows()

End

''---------------------------------------- CustomAccount Reports -------------------------------------
Private Sub DiaplayCustMenu()

  If modSettings.ShowSettingForReport("Technician.CustomQuery1/Name") Then
    mnucust1.Caption = modSettings.ShowSettingForReport("Technician.CustomQuery1/Name")
    mnucust1.Tag = "Technician.CustomQuery1"
    mnucust1.Enabled = True
  Endif

  If modSettings.ShowSettingForReport("Technician.CustomQuery2/Name") Then
    mnucust2.Caption = modSettings.ShowSettingForReport("Technician.CustomQuery2/Name")
    mnucust2.Tag = "Technician.CustomQuery2"
    mnucust2.Enabled = True
  Endif

  If modSettings.ShowSettingForReport("Technician.CustomQuery3/Name") Then
    mnucust3.Caption = modSettings.ShowSettingForReport("Technician.CustomQuery3/Name")
    mnucust3.Tag = "Technician.CustomQuery3"
    mnucust3.Enabled = True
  Endif

  If modSettings.ShowSettingForReport("Technician.CustomQuery4/Name") Then
    mnucust4.Caption = modSettings.ShowSettingForReport("Technician.CustomQuery4/Name")
    mnucust4.Tag = "Technician.CustomQuery4"
    mnucust4.Enabled = True
  Endif

  If modSettings.ShowSettingForReport("Technician.CustomQuery5/Name") Then
    mnucust5.Caption = modSettings.ShowSettingForReport("Technician.CustomQuery5/Name")
    mnucust5.Tag = "Technician.CustomQuery5"
    mnucust5.Enabled = True
  Endif

End

Public Sub mnucust1_Click()

  Dim hForm As FmCustQueryTable

  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust1.Tag)
  modWorkSpace.Add(hForm)

End

Public Sub mnucust2_Click()

  Dim hForm As FmCustQueryTable

  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust2.Tag)
  modWorkSpace.Add(hForm)

End

Public Sub mnucust3_Click()

  Dim hForm As FmCustQueryTable

  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust3.Tag)
  modWorkSpace.Add(hForm)

End

Public Sub mnucust4_Click()

  Dim hForm As FmCustQueryTable

  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust4.Tag)
  modWorkSpace.Add(hForm)

End

Public Sub mnucust5_Click()

  Dim hForm As FmCustQueryTable

  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust5.Tag)
  modWorkSpace.Add(hForm)

End

Public Sub mnutestadd_Click()

  If modGlobalSetting.ShowSettingFromDB("GeneralSettings/Laboratory_TestAddition") = "Yes" Then
    modWorkSpace.Remove(fmSamplingFir)
    modWorkSpace.Add(fmSamplingFir)
  Endif

End

Public Sub mnugetrequest_Click()

  modWorkSpace.Remove(fmSampRemote)
  modWorkSpace.Add(fmSampRemote)

End

Public Sub mnusampling_Click()

  modWorkSpace.Remove(fmSampling)
  modWorkSpace.Add(fmSampling)

End

Public Sub mnuprereporting_Click()

  fmPreReporting.Close
  fmPreReporting.ShowModal

End

Public Sub mnureporting_Click()

  modWorkSpace.Remove(fmLabReporting)
  modWorkSpace.Add(fmLabReporting)

End

Public Sub mnuSetting_Click()

  Dim hForm As FmLabRepSettings

  hForm = New FmLabRepSettings("")
  modWorkSpace.Add(hForm)

End

Public Sub mnubarcode_Click()

  fmDeviceSetting.Close
  fmDeviceSetting.ShowModal

End

Public Sub mnuscreen_Click()

  If Dialog.SelectDirectory() Then Return
  Wait 2
  Desktop.Screenshot().Save(Dialog.Path &/ modString.GetNowString() & ".png")
  Message.Info(("Screen Shot saved in ") & Dialog.Path, ("OK"))

End

Public Sub mnuperpage_Click()

  modWorkSpace.Remove(fmPersonal)
  modWorkSpace.Add(fmPersonal)

End

Public Sub musermsg_Click()

  fmMail.Close
  fmMail.ShowModal

End

Public Sub mnuappset_Click()

  fmAppSetting.Close
  fmAppSetting.ShowModal

End

Public Sub mnuseract_Click()

  fmAppUser.Close
  fmAppUser.ShowModal

End

Public Sub mnutransfer_Click()

  modWorkSpace.Remove(fmTransfer)
  modWorkSpace.Add(fmTransfer)

End

Public Sub mnulock_Click()

  fmLock.Close
  fmLock.ShowModal

End

Public Sub mnubillprt_Click()

  fmReportSetting.Close
  fmReportSetting.ShowModal

End

Public Sub mnulabset_Click()

  fmLabsetting.Close
  fmLabsetting.Show

End

Public Sub ServerSocket1_Connection(RemoteHostIP As String)

  Dim hForm As FmChat

  If ServerSocket1.Status <= Net.Inactive Then Return
  hForm = New FmChat(modBasic.$lbluser, RemoteHostIP, "acc")
  hForm.Show

End

'''---------------------- transfer server -------------------------------------------------------
Public Sub ServerSocket2_Connection(RemoteHostIP As String)

  Dim Myket As Socket

  Myket = ServerSocket2.Accept()
  Myket.Blocking = False
  Print RemoteHostIP

End

Public Sub Socket_Read()

  Dim sCad As String

  If Last.Status <> Net.Connected Then Return
  Read #Last, sCad, Lof(Last)
  modControl.ShowTransferFile(Last.RemoteHost, sCad)

End

Public Sub Workspace1_Menu()

  If Workspace1.Windows.Count = 0 Then
    mnufile.Popup
  Endif

End

Public Sub mnubackground_Click()

  Dialog.Filter = ["*.jpg;*.jpeg;*.png;*.bmp", "Picture files"]
  If Dialog.OpenFile() Then Return
  modSettings.SaveSettingsToVar("AppSetting_DeskPicture/" & modBasic.$lbluser, Dialog.Path)
  modAppSupport.SetWorkSpaceImage()

End

Public Sub mnunewextra_Click()

  modWeb.ExecGeneralSub()

End

Public Sub mnuprinter_Click()

  fmPrinterSettings.Close
  fmPrinterSettings.ShowModal

End

Public Sub mnuembedder_Click()

  modExternal.RunExternalFixScript()

End

Public Sub mnuremoaccess_Click()

  fmStreaming.Close
  fmStreaming.ShowModal

End

Public Sub mnuregistsett_Click()

  fmRegistSetting.Close
  fmRegistSetting.ShowModal

End

Public Sub mnutranslate_Click()

  Dim hForm As FmTranslate

  hForm = New FmTranslate("Translate", Clipboard.Paste())
  hForm.ShowModal

End

Public Sub mnusamplingrep_Click()

  modWorkSpace.Remove(fmSampReport)
  modWorkSpace.Add(fmSampReport)

End

Public Sub mnusearrepo_Click()

  fmCheckFile.Close
  fmCheckFile.ShowModal()

End

Public Sub mnunotice_Click()

  fmCompNotice.Close
  fmCompNotice.ShowModal

End

Public Sub mnuclrlock_Click()

  modPatientSub.CLearAllEncounterLocks(modHelpVariable.$LogInCategory)

End

Public Sub mnuinvdb_Click()

  fmStockDB.Close
  fmStockDB.ShowModal

End

Public Sub mnuradioreport_Click()

  modWorkSpace.Remove(fmRadioReporting)
  modWorkSpace.Add(fmRadioReporting)

End

Public Sub mnuradioreprint_Click()

  Dim hForm As FmRadioRepPrint

  hForm = New FmRadioRepPrint("")
  modWorkSpace.Add(hForm)

End

Public Sub mnusampradio_Click()

  modWorkSpace.Remove(fmSampRadio)
  modWorkSpace.Add(fmSampRadio)

End

Public Sub mnucustom_Click()

  fmExtraReportSett.Close
  fmExtraReportSett.ShowModal

End

Public Sub mnusavedrepo_Click()

  Dim hForm As FmPatReports

  hForm = New FmPatReports("")
  modWorkSpace.Add(hForm)

End

Public Sub mnustoconsume_Click()

  modWorkSpace.Remove(fmConsume)
  modWorkSpace.Add(fmConsume)

End

Public Sub mnuclrcache_Click()

  modGeneralMain.CLearUserCollection()

End

Public Sub mnulabelsett_Click()

  fmLabelPrint.Close
  fmLabelPrint.ShowModal

End

Public Sub mnubloodinventory_Click()

  Dim hForm As FmMedItems

  hForm = New FmMedItems("Blood")
  modWorkSpace.Add(hForm)

End

Public Sub mnuchartsett_Click()

  fmChartSetting.Close
  fmChartSetting.ShowModal

End

Public Sub mnumodem_Click()

  fmodemCache.Close
  fmodemCache.ShowModal

End

Public Sub mnuaccrepset_Click()

  fmCusAccReport.Close
  fmCusAccReport.ShowModal

End

Public Sub mnupatprofile_Click()

  Dim hForm As FmIndexForm

  hForm = New FmIndexForm("", True, True)
  hForm.ShowModal

End

Public Sub mnuplaymedia_Click()

  modAppSupport.PlayMediaFile()

End

Public Sub mnuexit_Click()

  modGeneralMain.CloseAllWindows()

End

Public Sub mnupacs_Click()

  modWorkSpace.Remove(fmPacsReport)
  modWorkSpace.Add(fmPacsReport)

End

Public Sub mnubrowser_Click()

  Dim xURL As String
  Dim hForm As FmWebView

  xURL = modSettings.ShowSettingFromFIle("GeneralSettings/Browser_URL")
  If xURL Then
    hForm = New FmWebView(xURL)
    modWorkSpace.Add(hForm)
  Endif

End

Public Sub mnuradioshare_Click()

  Dim hForm As FmSetShare

  hForm = New FmSetShare("Radio Diagnostics", "Entry")
  hForm.ShowModal

End

Public Sub mnulabshare_Click()

  Dim hForm As FmSetShare

  hForm = New FmSetShare("Diagnostic Tests", "Entry")
  hForm.ShowModal

End

Public Sub mnuservshare_Click()

  Dim hForm As FmSetShare

  hForm = New FmSetShare("General Services", "Entry")
  hForm.ShowModal

End

''------------- saved
Public Sub mnulabsaved_Click()

  Dim hForm As FmSetShare

  hForm = New FmSetShare("Diagnostic Tests", "Saved")
  hForm.ShowModal

End

Public Sub mnuradiosaved_Click()

  Dim hForm As FmSetShare

  hForm = New FmSetShare("Radio Diagnostics", "Saved")
  hForm.ShowModal

End

Public Sub mnugenservsaved_Click()

  Dim hForm As FmSetShare

  hForm = New FmSetShare("General Services", "Saved")
  hForm.ShowModal

End

Public Sub mnutransreport_Click()

  modWorkSpace.Remove(fmmedTransfer)
  modWorkSpace.Add(fmmedTransfer)

End

Public Sub mnusensitivity_Click()

  modWorkSpace.Remove(fmSensiReport)
  modWorkSpace.Add(fmSensiReport)

End

Public Sub mnugodebug_Click()

  If mnugodebug.Caption = "Debug On" Then
    mnugodebug.Caption = "Debug Off"
    modBasic.$DebugMode = True
    modBasic.$DebugDB = True
    db.Debug = True

  Else If mnugodebug.Caption = "Debug Off" Then
    mnugodebug.Caption = "Debug On"
    modBasic.$DebugMode = False
    modBasic.$DebugDB = False
    db.Debug = False

  Endif

End

Public Sub Timer1_Timer()

  If Frac(Minute(Now()) / 10) = 0 Then
    If modBasic.$UploadLocalrepo = "Enable" Then
      modScript.GetDataLocalRepositoryUploader()
    Endif
  Endif

End

Public Sub Timer2_Timer()

  Dim xmin As Integer

  xmin = Minute(Now())
  If $MacID Then
    If xmin = $MacID Then

      If $RepoUpload = True Then
        $RepoUpload = False
        If modHelpVariable.$AutoRepoUpload = "Yes" Then
          modScript.GetClinicRepositoryUploader()
        Endif
        If modHelpVariable.$AutoImgRepoUpload = "Yes" Then
          modScript.GetImgRepositoryUploader()
        Endif
      Endif
      modRepoSync.UpdateAdvertiseContent()

    Else If xmin = 59 Then
      $RepoUpload = True
    Endif
  Endif

End

Public Sub mnubugreport_Click()

  modGeneralMain.SendBugReport(modBasic.$lbluser)

End
