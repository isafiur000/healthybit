' Gambas class file

Private $sType As String
Private $rData As Result
Private $aMyFields As String[]

Private $rData1 As Result
Private $aMyFields1 As String[]

Public Sub _new(sType As String)

  $sType = sType

End

Public Sub Form_Open()

  modGeneralMain.ArrangeEmbedForms(Me, Panel1, "Vertical")
  Me.Icon = Picture[modGeneralMain.$strLogo]
  Me.Title = $sType & " Inventory"
  lbldate.Value = Date()
  If $sType = "Blood" Then
    cmbitem.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditemcode as col from tblbloodstore"))
  Endif
  cmbitem.Text = "%"
  cmbstatus.List = ["Active", "Transferred", "Administered", "Returned", "Rejected", "Expired"]
  cmbstatus.Text = "Active"
  ShowBloodRequests()

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub Form_KeyRelease()

  If Key.Code = Key["R"] And If Key.Control Then
    btnrefresh_Click()
  Endif

End

Public Sub chkexpiry_Click()

  lbldate.Value = Now()

End

Public Sub chkseldate_Click()

  dtrequest.Value = Now()

End

''--------------------------- Requests ------------------------------------
Public Sub dtnepreq_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtrequest.Value))
  If xx Then
    dtrequest.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub btnpatrefresh_Click()

  ShowBloodRequests()

End

Private Sub ShowBloodRequests()

  Dim sql As String

  If chkseldate.Value = True Then
    sql = "select fldid,fldencounterval,fldencounterval,fldencounterval,fldencounterval,fldencounterval,flditem,fldtime_order,fldcomp_order from tblpatmeditem where fldcategory=&1 and fldorder=&2 and fldtime_order>=&3 and fldtime_order<=&4"
  Else
    sql = "select fldid,fldencounterval,fldencounterval,fldencounterval,fldencounterval,fldencounterval,flditem,fldtime_order,fldcomp_order from tblpatmeditem where fldcategory=&1 and fldorder=&2"
  Endif
  $rData1 = modDatabase.$myConn.Exec(sql, "Blood", "Requested", modDate.StartSqlDate(dtrequest.Value), modDate.EndSqlDate(dtrequest.Value))
  $aMyFields1 = New String[]
  modGridView.ReadSmallData(GridView2, $rData1, $aMyFields1)
  ResizePatientGrid()

End

Private Sub ResizePatientGrid()

  With GridView2
    .Columns[0].Width = 1
    .Columns[1].Width = 25 * modBasic.$AppWidthRatio
    .Columns[2].Width = 125 * modBasic.$AppWidthRatio
    .Columns[3].Width = 200 * modBasic.$AppWidthRatio
    .Columns[4].Width = 125 * modBasic.$AppWidthRatio
    .Columns[5].Width = 125 * modBasic.$AppWidthRatio
    .Columns[6].Width = 300 * modBasic.$AppWidthRatio
    .Columns[7].Width = 150 * modBasic.$AppWidthRatio
    .Columns[8].Width = 100 * modBasic.$AppWidthRatio

    .Columns[2].Text = "EncID"
    .Columns[3].Text = "Name"
    .Columns[4].Text = "Age/Sex"
    .Columns[5].Text = "Current"
    .Columns[6].Text = "Particulars"
    .Columns[7].Text = "Date"
    .Columns[8].Text = "Location"
  End With

End

Public Sub GridView2_Data(Row As Integer, Column As Integer)

  $rData1.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView2, Row)
  If Column = 1 Then
    GridView2.Data.Text = ""
    GridView2.Data.Background = modPatient.GetPatientColor($rData1[$aMyFields1[Column]])
  Else If Column = 3 Then
    GridView2.Data.Text = modPatient.GetPatientNameByEnc($rData1[$aMyFields1[Column]], modDatabase.$myConn)
  Else If Column = 4 Then
    GridView2.Data.Text = modPatient.GetPatientAgeString($rData1[$aMyFields1[Column]], Now()) & Space(1) & Left(modPatient.GetPatientSex($rData1[$aMyFields1[Column]], modDatabase.$myConn), 1)
  Else If Column = 5 Then
    GridView2.Data.Text = modPatient.GetPatientLocation($rData1[$aMyFields1[Column]], modDatabase.$myConn)
  Else If Column = 7 Then
    GridView2.Data.Text = modReportVar.GetDateTimeReport($rData1[$aMyFields1[Column]], gb.GeneralDate)
  Else
    GridView2.Data.Text = $rData1[$aMyFields1[Column]]
  Endif

End

Public Sub GridView2_Click()

  cmbitem.Text = GridView2[GridView2.Row, 6].Text
  cmbstatus.Text = "Active"
  btnrefresh_Click()

End

''-------------------------- Inventory ---------------------------------
Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(lbldate.Value))
  If xx Then
    lbldate.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub btnentry_Click()

  Dim hForm As FmBloodEntry

  hForm = New FmBloodEntry($sType)
  hForm.ShowModal
  FillPatDateGrid()

End

Private Sub FillPatDateGrid()

  Dim sql As String

  If chkexpiry.Value = True Then
    sql = "select fldid,fldcode,flditem,fldreceiver,fldencname,fldcollect,fldexpiry,fldstatus,fldcomment,fldid from tblmedinventory where fldcategory=&1 and flditem like &2 and fldstatus like &3 and fldexpiry<&4"                                                                              ''
  Else
    sql = "select fldid,fldcode,flditem,fldreceiver,fldencname,fldcollect,fldexpiry,fldstatus,fldcomment,fldid from tblmedinventory where fldcategory=&1 and flditem like &2 and fldstatus like &3"                                                                              ''
  Endif
  $rData = modDatabase.$myConn.Exec(sql, $sType, cmbitem.Text, cmbstatus.Text, lbldate.Value)
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
  ResizeGrid()

End

Private Sub ResizeGrid()

  With GridView1
    .Columns[0].Width = 1
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 300 * modBasic.$AppWidthRatio
    .Columns[3].Width = 125 * modBasic.$AppWidthRatio
    .Columns[4].Width = 175 * modBasic.$AppWidthRatio
    .Columns[5].Width = 150 * modBasic.$AppWidthRatio
    .Columns[6].Width = 150 * modBasic.$AppWidthRatio
    .Columns[7].Width = 100 * modBasic.$AppWidthRatio
    .Columns[8].Width = 225 * modBasic.$AppWidthRatio
    .Columns[9].Width = 1

    .Columns[1].Text = "Code"
    .Columns[2].Text = "Particulars"
    .Columns[3].Text = "Receiver"
    .Columns[4].Text = "Provider"
    .Columns[5].Text = "CollectDate"
    .Columns[6].Text = "ExpiryDate"
    .Columns[7].Text = "Status"
    .Columns[8].Text = "Comment"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer)

  $rData.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView1, Row)
  If Column = 5 Then
    GridView1.Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.GeneralDate)
  Else If Column = 6 Then
    If $rData[$aMyFields[Column]] <= Now() Then
      GridView1.Data.Foreground = modBasic.$HighLightColor
    Endif
    GridView1.Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.GeneralDate)
  Else
    GridView1.Data.Text = $rData[$aMyFields[Column]]
  Endif

End

''-----------------------------  button and menu ------------------------------------------------
Public Sub btnrefresh_Click()

  FillPatDateGrid()
  GridView1.SetFocus

End

Public Sub mnuprocalter_Click()

  Dim res As Result
  Dim xx As String
  Dim row As Integer
  Dim col As Integer

  row = GridView1.Row
  col = GridView1.Column
  If GridView1.Rows.Selection.Count Then
    xx = InputCombo("Status of the selected item", GridView1[GridView1.Row, 1].Text, ["Active", "Returned", "Rejected", "Expired"], GridView1[GridView1.Row, 7].Text, True)
    If xx Then
      res = modDatabase.$myConn.Edit("tblmedinventory", "fldid=&1 and fldcategory=&2 and (fldstatus<>&3 or fldstatus<>&4)", GridView1[GridView1.Row, 0].Text, $sType, "Transferred", "Administered")
      res["fldstatus"] = xx
      res["xyz"] = False
      res.Update
      FillPatDateGrid()
      GridView1.Row = row
      GridView1.Column = col
    Endif
  Endif

End

Public Sub mnuconsume_Click()

  Dim hForm As FmPatConsume

  If GridView1.Rows.Selection.Count > 0 Then
    hForm = New FmPatConsume(GridView1[GridView1.Row, 9].Text)
    hForm.ShowModal
    FillPatDateGrid()
  Endif

End

Public Sub mnuedit_Click()

  Dim hForm As FmBloodEdit
  Dim Row As Integer

  If GridView1.Rows.Selection.Count > 0 Then
    Row = GridView1.Row
    hForm = New FmBloodEdit($sType, GridView1[GridView1.Row, 1].Text)
    hForm.ShowModal
    FillPatDateGrid()
    GridView1.Row = Row
  Endif

End

Public Sub btnsearch_Click()

  Dim sql As String
  Dim enc As String

  If modBasic.$AutoEncPrefix Then
    enc = InputBox(("Encounter ID of Patient"), ("Search Patient"), modBasic.$EncIdPrefix)
  Else
    enc = InputBox(("Encounter ID of Patient"), ("Search Patient"), "")
  Endif
  If enc Then
    sql = "select fldid,fldcode,flditem,fldencounterval,fldencname,fldcollect,fldexpiry,fldstatus,fldcomment,fldid from tblmedinventory where fldcategory=&1 and fldreceiver=&2"
    $rData = modDatabase.$myConn.Exec(sql, $sType, enc)
    $aMyFields = New String[]
    modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
    ResizeGrid()
  Endif

End

Public Sub btnexport_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, $sType & " Report", modReportVar.GetDateTimeReport(lbldate.Value, gb.MediumDate))

End

''------------------------- Transfer --------------------------
Public Sub btntransfer_Click()

  Dim res1 As Result
  Dim res2 As Result

  If GridView1.Rows.Selection.Count And If GridView2.Rows.Selection.Count Then
    modDatabase.$myConn.Begin
    res1 = modDatabase.$myConn.Edit("tblpatmeditem", "fldid=&1 and fldencounterval=&2 and fldorder=&3", GridView2[GridView2.Row, 0].Text, GridView2[GridView2.Row, 2].Text, "Requested")
    res1["fldcode"] = GridView1[GridView1.Row, 1].Text
    res1["fldorder"] = "Done"
    res1["flduserid"] = modBasic.$lbluser
    res1["fldtime"] = Now()
    res1["fldcomp"] = modBasic.$compID
    res1["fldsave"] = True
    res1["xyz"] = False
    res1.Update

    res2 = modDatabase.$myConn.Edit("tblmedinventory", "fldid=&1", GridView1[GridView1.Row, 9].Text)
    res2["fldreceiver"] = GridView2[GridView2.Row, 2].Text
    res2["fldstatus"] = "Transferred"
    res2["fldsave"] = False
    res2["xyz"] = False
    res2.Update
    modDatabase.$myConn.Commit
    FillPatDateGrid()
    ShowBloodRequests()
  Endif

Catch
  modDatabase.$myConn.Rollback
  modHelpVariable.CreateErrorReport()

End
