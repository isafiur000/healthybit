' Gambas class file

Private $encid As String
Private $patNo As String
Private $rData As Result
Private $aMyFields As String[]

Private $rData1 As Result
Private $aMyFields1 As String[]

Private $tblpatlabtest As String
Private $tblpatlabsubtest As String

''---- group controls ----------
Private aIndexLabel As New Object[50]
Private aSpecLabel As New Object[50]
Private aNameLabel As New Object[50]
Private aAbnormCheck As New Object[50]
Private aHTMLText As New Object[50]
Private aLineText As New Object[50]
Private aUnitText As New Object[50]
Private aValueBox As New Object[50]
Private aQuantiBox As New Object[50]
Private aQuantiMax As New Object[50]
Private aQuantiMin As New Object[50]
Private aQuantiUnit As New Object[50]
Private aQuantiCalc As New Object[50]
Private aDateBox As New Object[50]
Private aBSDate As New Object[50]
Private aComboBox As New Object[50]
Private aChkLock As New Object[50]
Private aDichoValue As New Object[50]
Private aLeftRight As New Object[50]
Private aGenTextArea As New Object[50]
Private aButnFixed As New Object[50]
Private aButtonBox As New Object[50]

Private $xData As Variant[]

Public Sub Form_Open()
  
  Dim xoption As String
  Dim ht As String
  
  modGeneralMain.ArrangeEmbedForms(Me, Panel1, "Column")
  Me.Icon = Picture[modGeneralMain.$strLogo]
  btnhistory.Menu = "mnuhistory"
  cmbcategory.List = modMedicine.GetPathoCategoryList("Test")
  cmbcategory.Add("%")
  cmbcategory.Text = modSettings.ShowSettingFromFIle("Laboratory/DefaultDepartment")
  cmbspecimen.List = modBasic.$LabSpecimenList
  cmbspecimen.Add("%")
  cmbspecimen.Text = "%"
  
  modLabSub.DisplayDefaultTestUnit(rbsi, rbmetric)
  modSettings.ShowCheckBox(chkfreeview, "TestUnit/MixedView")
  modSettings.ShowCheckBox(chkall, "TestReporting/ShowAll")
  modSettings.ShowCheckBox(chkinfred, "TestReporting/Inform_Red")
  modSettings.ShowCheckBox(chkinfyellow, "TestReporting/Inform_Yellow")
  modSettings.ShowCheckBox(chkinfall, "TestReporting/Inform_All")
  
  dtselected.Value = Now()
  dtlisted.Value = Now()
  xoption = modSettings.ShowSettingFromFIle("EntrySetting/Laboratory_DateSelect")
  If xoption = "Yes" Then
    chkdate.Value = True
    chklist.Value = True
  Else If xoption = "No" Then
    chkdate.Value = False
    chklist.Value = False
  Endif
  DateSelectionSett()
  rballtype.Value = True
  ShowInputForm()
  modAccount.PasInvoiceSetting(cmbfiscal, False)
  LoadTableNames()
  
  If rbencounter.Value = True Then
    modGeneralMain.SetEncIDPrefix(txtencid)
  Else If rbinvoice.Value = True Then
    modGeneralMain.SetInvoicePrefix(txtencid)
  Endif
  
  ''----------- group controls ----
  ht = modSettings.ShowSettingFromFIle("MultipleTextBox/Height")
  If ht Then
    Slider1.Value = CInt(ht)
  Else
    Slider1.Value = 3
  Endif
  
End

Public Sub Form_Activate()
  
  If Not txtencid.Text Then
    txtencid.SetFocus
  Else If txtencid.Text = modBasic.$EncIdPrefix Then
    txtencid.SetFocus
  Else If txtencid.Text = modBasic.$InvoicePrefix Then
    txtencid.SetFocus
  Endif
  
End

Public Sub Form_KeyRelease()
  
  If Key.Code = Key["O"] And If Key.Control Then
    btnwebcam_Click()
  Else If Key.Code = Key["R"] And If Key.Control Then
    btnrefresh_Click()
  Else If Key.Code = Key["F"] And If Key.Control Then
    txtencid.Text = GetEncid()
  Else If Key.Code = Key["A"] And If Key.Control Then
    btncomponent_Click()
  Else If Key.Code = Key.Left Then
    GridView1.SetFocus
  Else If Key.Code = Key["B"] And If Key.Control Then
    Me.Close
    Wait
    modWorkSpace.Add(fmLabReporting)
  Else If Key.Code = Key["X"] And If Key.Control Then
    Me.Close()
  Else If Key.Code = Key.F1 Then
    TabPanel1.Index = 0
  Else If Key.Code = Key.F2 Then
    TabPanel1.Index = 1
  Else If Key.Code = Key.F12 Then
    btnBrOK_Click()
  Endif
  
End

Public Sub Form_Resize()
  
  modGeneralMain.ShowSelectedFormMenu(Me)
  txtencid.SetFocus
  
End

Public Sub mnublak_Click()
  
  Me.Close
  Wait
  modWorkSpace.Add(fmLabReporting)
  
End

Private Sub LoadTableNames()
  
  Dim res As Result
  
  If cmbfiscal.Text = "Current" Then
    $tblpatlabtest = "tblpatlabtest"
    $tblpatlabsubtest = "tblpatlabsubtest"
  Else
    res = modDatabase.$syConn.Exec("select fldpatlabtest,fldpatlabsubtest from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", cmbfiscal.Text, "Active")
    If res.Available Then
      If res["fldpatlabtest"] Then
        $tblpatlabtest = res["fldpatlabtest"]
      Else
        $tblpatlabtest = "tblpatlabtest"
      Endif
      If res["fldpatlabsubtest"] Then
        $tblpatlabsubtest = res["fldpatlabsubtest"]
      Else
        $tblpatlabsubtest = "tblpatlabsubtest"
      Endif
    Else
      $tblpatlabtest = "tblpatlabtest"
      $tblpatlabsubtest = "tblpatlabsubtest"
    Endif
  Endif
  
End

Public Sub cmbfiscal_Click()
  
  LoadTableNames()
  
End

Private Sub ShowInputForm()
  
  Dim xx As String
  
  xx = modSettings.ShowSettingFromFIle("Laboratory/InputFormat")
  If xx = "Sample" Then
    rbsample.Value = True
  Else If xx = "Invoice" Then
    rbinvoice.Value = True
  Else
    rbencounter.Value = True
  Endif
  
End

Public Sub rbencounter_Click()
  
  modSettings.SaveSettingsToFile("Laboratory/InputFormat", "Encounter")
  
End

Public Sub rbsample_Click()
  
  modSettings.SaveSettingsToFile("Laboratory/InputFormat", "Sample")
  
End

Public Sub rbinvoice_Click()
  
  modSettings.SaveSettingsToFile("Laboratory/InputFormat", "Invoice")
  
End

Public Sub rbsi_Click()
  
  modSettings.SaveSettingsToFile("TestUnit/Default", "SI")
  
End

Public Sub rbmetric_Click()
  
  modSettings.SaveSettingsToFile("TestUnit/Default", "Metric")
  
End

Public Sub Form_Close()
  
  modSettings.SaveSettingsToFile("Laboratory/DefaultDepartment", cmbcategory.Text)
  modGeneralMain.RecordFormExit(Me)
  
End

Public Sub dtnepselect_Click()
  
  Dim xx As String
  
  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtselected.Value))
  If xx Then
    dtselected.Value = modDate.ConvertToEnglishdate(xx)
  Endif
  
End

Public Sub dtneplist_Click()
  
  Dim xx As String
  
  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlisted.Value))
  If xx Then
    dtlisted.Value = modDate.ConvertToEnglishdate(xx)
  Endif
  
End

'''---------------------------------- Reporting List ----------------------------
Public Sub cmbcategory_KeyRelease()
  
  modFillContainer.AutoFillComboBox(cmbcategory)
  modFillContainer.RestrictComboToContent(cmbcategory)
  
End

Public Sub btnrefresh_Click()
  
  Inc Application.Busy
  FillReportList()
  Dec Application.Busy
  GridView1.SetFocus
  
End

Private Sub FillReportList()
  
  Dim str1 As String
  Dim xcomp As String
  Dim xstr As String
  
  If modBasic.$LabReportingComp Then
    xcomp = modBasic.$LabReportingComp
  Else
    xcomp = modBasic.$compID
  Endif
  If modBasic.$LabReportingFrom = "Not From" Then
    xstr = " and fldcomp_sample not like &3"
  Else
    xstr = " and fldcomp_sample like &3"
  Endif
  
  If chklist.Value = True Then
    If cmbcategory.Text = "%" Then
      If rbencounter.Value = True Then
        str1 = "select distinct(fldencounterval) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtime_sample>=&4 and fldtime_sample<=&5 and fldsampletype like &6 ORDER BY fldid ASC"
      Else If rbsample.Value = True Then
        str1 = "select distinct(fldsampleid) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtime_sample>=&4 and fldtime_sample<=&5 and fldsampletype like &6 ORDER BY fldid ASC"
      Else If rbinvoice.Value = True Then
        str1 = "select distinct(fldbillno) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtime_sample>=&4 and fldtime_sample<=&5 and fldsampletype like &6 ORDER BY fldid ASC"
      Endif
      $rData1 = modDatabase.$myConn.Exec(str1, "Sampled", True, xcomp, modDate.StartSqlDate(dtlisted.Value), modDate.EndSqlDate(DateAdd(dtlisted.Value, gb.Day, txtrange.Value)), cmbspecimen.Text)
    Else
      If rbencounter.Value = True Then
        str1 = "select distinct(fldencounterval) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7 ORDER BY fldid ASC"
      Else If rbsample.Value = True Then
        str1 = "select distinct(fldsampleid) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7 ORDER BY fldid ASC"
      Else If rbinvoice.Value = True Then
        str1 = "select distinct(fldbillno) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7 ORDER BY fldid ASC"
      Endif
      $rData1 = modDatabase.$myConn.Exec(str1, "Sampled", True, xcomp, cmbcategory.Text, modDate.StartSqlDate(dtlisted.Value), modDate.EndSqlDate(DateAdd(dtlisted.Value, gb.Day, txtrange.Value)), cmbspecimen.Text)
    Endif
    
  Else
    If cmbcategory.Text = "%" Then
      If rbencounter.Value = True Then
        str1 = "select distinct(fldencounterval) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldsampletype like &4 ORDER BY fldid ASC"
      Else If rbsample.Value = True Then
        str1 = "select distinct(fldsampleid) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldsampletype like &4 ORDER BY fldid ASC"
      Else If rbinvoice.Value = True Then
        str1 = "select distinct(fldbillno) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldsampletype like &4 ORDER BY fldid ASC"
      Endif
      $rData1 = modDatabase.$myConn.Exec(str1, "Sampled", True, xcomp, cmbspecimen.Text)
    Else
      If rbencounter.Value = True Then
        str1 = "select distinct(fldencounterval) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldsampletype like &5 ORDER BY fldid ASC"
      Else If rbsample.Value = True Then
        str1 = "select distinct(fldsampleid) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldsampletype like &5 ORDER BY fldid ASC"
      Else If rbinvoice.Value = True Then
        str1 = "select distinct(fldbillno) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldsampletype like &5 ORDER BY fldid ASC"
      Endif
      $rData1 = modDatabase.$myConn.Exec(str1, "Sampled", True, xcomp, cmbcategory.Text, cmbspecimen.Text)
    Endif
    
  Endif
  
  $aMyFields1 = New String[]
  modGridView.ReadSmallData(GridView1, $rData1, $aMyFields1)
  With GridView1
    .Columns[0].Width = 100 * modBasic.$AppWidthRatio
    .Columns[1].Width = 1
    .Columns[2].Width = 10 * modBasic.$AppWidthRatio
    .Columns[3].Width = 150 * modBasic.$AppWidthRatio
    .Columns[3].Text = "Name"
  End With
  
End

Public Sub GridView1_Data(Row As Integer, Column As Integer)
  
  $rData1.MoveTo(Row)
  modGeneralMain.GridViewDecoration(GridView1, Row)
  If Column = 2 Then
    GridView1.Data.Text = ""
    GridView1.Data.Background = modPatient.GetPatientColor($rData1[$aMyFields1[Column]])
  Else If Column = 3 Then
    GridView1.Data.Text = modPatient.GetPatientNameByEnc($rData1[$aMyFields1[Column]])
  Else
    GridView1.Data.Text = $rData1[$aMyFields1[Column]]
  Endif
  
End

Public Sub GridView1_Click()
  
  Dim xstatus As String
  
  If GridView1.Rows.Selection.Count > 0 Then
    modRepository.$RepoDataStatus = False
    btnshow.Enabled = False
    txtencid.Text = GridView1[GridView1.Row, 0].Text
    $encid = GridView1[GridView1.Row, 1].Text
    
    txtpatientname.Text = modPatient.GetPatientNameByEnc($encid)
    txtgender.Text = modPatient.GetPatientAgeString($encid, Now()) & "/" & modPatient.GetPatientSex($encid)
    txtpatientaddress.Text = modPatient.GetPatientAddressByEnc($encid)
    
    $patNo = modPatient.GetPatientNoByEnc($encid)
    xstatus = modPatient.CurrentAdmissionStatus($encid)
    txtlocation.Text = modPatient.GetLocationSetting($encid, xstatus)
    txtcolor.Background = modPatient.GetPatientColor($encid)
    txtpatlock.Text = modPatient.GetPatientLockMacAdd($encid)
    If chklist.Value = True Then
      dtselected.Value = dtlisted.Value
      txtdtrange.Value = txtrange.Value
      chkdate.Value = True
      Panel11.Enabled = True
    Else
      chkdate.Value = False
      Panel11.Enabled = False
    Endif
    modImage.ShowPhotoSplash("Patient", $patNo)
    TabPanel1.Index = 0
    FillLabtable()
    OpenPopEntry()
    TableView1.SetFocus
  Endif
  
End

Public Sub GridView1_Change()
  
  If GridView1.Rows.Selection.Count > 0 Then
    btnshow.Enabled = True
    txtencid.Text = GridView1[GridView1.Row, 0].Text
    $encid = GridView1[GridView1.Row, 1].Text
  Endif
  
End

Public Sub btnexpotree_Click()
  
  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  
  Dim sql As String
  Dim res As Result
  
  Dim xcomp As String
  Dim xstr As String
  
  If modBasic.$LabReportingComp Then
    xcomp = modBasic.$LabReportingComp
  Else
    xcomp = modBasic.$compID
  Endif
  If modBasic.$LabReportingFrom = "Not From" Then
    xstr = "fldcomp_sample not like &4"
  Else
    xstr = "fldcomp_sample like &4"
  Endif
  
  Inc Application.Busy
  $BillingReport = New CReportHTML([("SNo"), ("SampleTime"), ("Encounter"), ("PatientName"), ("SampleNo"), ("TestName"), ("Observation")], " ", "")
  $BillingReport.UserData.Add("TESTS TO REPORT", "PARAM1")
  $BillingReport.UserData.Add("Category : " & cmbcategory.Text, "PARAM2")
  
  sql = "select fldid,fldtime_sample,fldsampleid,fldtestid,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and " & xstr
  res = modDatabase.$myConn.Exec(sql, "Sampled", True, cmbcategory.Text, xcomp)
  For Each res
    With asx
      .Add(res!fldid)
      .Add(modReportVar.GetDateTimeReport(res!fldtime_sample, gb.GeneralDate))
      .Add(res!fldencounterval)
      .Add(modPatient.GetPatientNameByEnc(res!fldencounterval))
      .Add(res!fldsampleid)
      .Add(res!fldtestid)
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next
  Dec Application.Busy
  
  modControlSub.OpenHTMLPreview("", $BillingReport.NewHTMLPath(), "ReportSize")
  
End

''------------------------------------ individual patient tests ------------------------
Public Sub btnwebcam_Click()
  
  txtencid.Text = modDevice.ChooseBarCodeSource()
  txtencid.SetFocus
  txtencid.Pos = Len(txtencid.Text)
  
End

Public Sub btnshow_Click()
  
  Dim xstatus As String
  
  If Not txtencid.Text Then Return
  If modBasic.$EncIdPrefix And If txtencid.Text = modBasic.$EncIdPrefix Then
    txtencid.SetFocus
    Return
  Endif
  If txtencid.Text Then
    modRepository.$RepoDataStatus = False
    btnshow.Enabled = False
    If rbencounter.Value = True Then
      $encid = Trim(txtencid.Text)
    Else If rbsample.Value = True Then
      $encid = modLabTest.GetEncounterFromSampleID(txtencid.Text, $tblpatlabtest)
    Else If rbinvoice.Value = True Then
      $encid = modNonMedical.GetEncounterFromBillNo(txtencid.Text, cmbfiscal.Text)
    Endif
    txtpatientname.Text = modPatient.GetPatientNameByEnc($encid)
    txtgender.Text = modPatient.GetPatientAgeString($encid, Now()) & "/" & modPatient.GetPatientSex($encid)
    txtpatientaddress.Text = modPatient.GetPatientAddressByEnc($encid)
    
    $patNo = modPatient.GetPatientNoByEnc($encid)
    xstatus = modPatient.CurrentAdmissionStatus($encid)
    txtlocation.Text = modPatient.GetLocationSetting($encid, xstatus)
    txtcolor.Background = modPatient.GetPatientColor($encid)
    txtpatlock.Text = modPatient.GetPatientLockMacAdd($encid)
    modAppSupport.RecordPatientActivity("Patient Data", Me.Name, "EncounterID", $encid)
    If modPatientSub.AllowEncIDHistory($encid, modDatabase.$myConn) = True Then
      modImage.ShowPhotoSplash("Patient", $patNo)
      TabPanel1.Index = 0
      FillLabtable()
      OpenPopEntry()
      TableView1.SetFocus
    Else
      Me.Enabled = False
    Endif
  Endif
  
End

Private Sub OpenPopEntry()
  
  Dim hForm As FmEnterGroupTest
  Dim xList As String[]
  Dim xFinal As String[]
  Dim xtest As String
  Dim categList As String[]
  Dim xcateg As String
  
  If modBasic.$LabReportGroup = "Yes" Then
    If cmbcategory.Text = "%" Then
      xList = modControlSub.GetDirectFillresult(ExecuteQuery(["fldtestid as col"], False))
      If xList And If xList.Count Then
        xFinal = modString.BinaryDistinctStringArray(xList)
        categList = New String[]
        For Each xtest In xFinal
          xcateg = modFixLab.GetLabTestCategory(xtest)
          If xcateg Then
            categList.Add(xcateg)
          Endif
        Next
        hForm = New FmEnterGroupTest($encid, modString.BinaryDistinctStringArray(categList), $tblpatlabtest)
        hForm.ShowModal
      Endif
      
    Else
      categList = New String[]
      categList.Add(cmbcategory.Text)
      hForm = New FmEnterGroupTest($encid, categList, $tblpatlabtest)
      hForm.ShowModal
    Endif
  Endif
  
End

Public Sub txtencid_GotFocus()
  
  btnshow.Enabled = True
  
End

Public Sub chkall_Click()
  
  modSettings.EnterCheckSetting(chkall, "TestReporting/ShowAll")
  
End

Public Sub chkinfred_Click()
  
  modSettings.EnterCheckSetting(chkinfred, "TestReporting/Inform_Red")
  
End

Public Sub chkinfyellow_Click()
  
  modSettings.EnterCheckSetting(chkinfyellow, "TestReporting/Inform_Yellow")
  
End

Public Sub chkinfall_Click()
  
  modSettings.EnterCheckSetting(chkinfall, "TestReporting/Inform_All")
  
End

Private Sub DateSelectionSett()
  
  If chkdate.Value = True Then
    Panel11.Enabled = True
  Else
    Panel11.Enabled = False
  Endif
  
  If chklist.Value = True Then
    Panel13.Enabled = True
  Else
    Panel13.Enabled = False
  Endif
  
End

Public Sub chklist_Click()
  
  modSettings.EnterCheckSetting(chklist, "EntrySetting/Laboratory_DateSelect")
  DateSelectionSett()
  
End

Public Sub chkdate_Click()
  
  modSettings.EnterCheckSetting(chkdate, "EntrySetting/Laboratory_DateSelect")
  DateSelectionSett()
  
End

Private Function ExecuteQuery(xFldList As String[], xShowAll As Boolean) As Result
  
  Dim sql As String
  Dim xcomp As String
  Dim xstr As String
  Dim xload As String
  Dim res As Result
  
  If Not cmbcategory.Text Then
    cmbcategory.Text = "%"
  Endif
  If modBasic.$LabReportingComp Then
    xcomp = modBasic.$LabReportingComp
  Else
    xcomp = modBasic.$compID
  Endif
  If modBasic.$LabReportingFrom = "Not From" Then
    xstr = "fldcomp_sample not like "
  Else
    xstr = "fldcomp_sample like "
  Endif
  If rbloaded.Value = True Then
    xload = " and fldtime_start IS NOT NULL"
  Else
    xload = ""
  Endif
  If Not cmbspecimen.Text Then
    cmbspecimen.Text = "%"
  Endif
  
  If chkdate.Value = True Then
    If cmbcategory.Text = "%" Then
      If rbencounter.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and " & xstr & "&3 and fldtime_sample>=&4 and fldtime_sample<=&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and (fldstatus=&2 or fldstatus=&3) and " & xstr & "&4 and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")                             ''
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", "Reported", xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Endif
      Else If rbsample.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and (fldstatus=&2 or fldstatus=&3) and fldencounterval=&4 and " & xstr & "&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldsampletype like &8" & xload & modLabSub.GetLabRepoOrder("Test")                              ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Endif
      Else If rbinvoice.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and (fldstatus=&2 or fldstatus=&3) and fldencounterval=&4 and " & xstr & "&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldsampletype like &8" & xload & modLabSub.GetLabRepoOrder("Test")                               ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Endif
      Endif
    Else
      If rbencounter.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and " & xstr & "&4 and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", cmbcategory.Text, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and (fldstatus=&2 or fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and " & xstr & "&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldsampletype like &8" & xload & modLabSub.GetLabRepoOrder("Test")                            ''
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", "Reported", cmbcategory.Text, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Endif
      Else If rbsample.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldsampletype like &8" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and (fldstatus=&2 or fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldencounterval=&5 and " & xstr & "&6 and fldtime_sample>=&7 and fldtime_sample<=&8 and fldsampletype like &9" & xload & modLabSub.GetLabRepoOrder("Test")                               ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", cmbcategory.Text, $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Endif
      Else If rbinvoice.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldsampletype like &8" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and (fldstatus=&2 or fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldencounterval=&5 and " & xstr & "&6 and fldtime_sample>=&7 and fldtime_sample<=&8 and fldsampletype like &9" & xload & modLabSub.GetLabRepoOrder("Test")                               ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", cmbcategory.Text, $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Endif
      Endif
    Endif
    
  Else
    If cmbcategory.Text = "%" Then
      If rbencounter.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and " & xstr & "&3 and fldsampletype like &4" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", xcomp, cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and (fldstatus=&2 or fldstatus=&3) and " & xstr & "&4 and fldsampletype like &5" & xload & modLabSub.GetLabRepoOrder("Test")                              ''
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", "Reported", xcomp, cmbspecimen.Text)
        Endif
      Else If rbsample.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldsampletype like &5" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and (fldstatus=&2 or fldstatus=&3) and fldencounterval=&4 and " & xstr & "&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")                             ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", $encid, xcomp, cmbspecimen.Text)
        Endif
      Else If rbinvoice.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldsampletype like &5" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and (fldstatus=&2 or fldstatus=&3) and fldencounterval=&4 and " & xstr & "&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")                             ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", $encid, xcomp, cmbspecimen.Text)
        Endif
      Endif
    Else
      If rbencounter.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and " & xstr & "&4 and fldsampletype like &5" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", cmbcategory.Text, xcomp, cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and (fldstatus=&2 or fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and " & xstr & "&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")                            ''
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", "Reported", cmbcategory.Text, xcomp, cmbspecimen.Text)
        Endif
      Else If rbsample.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and (fldstatus=&2 or fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldencounterval=&5 and " & xstr & "&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")                              ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", cmbcategory.Text, $encid, xcomp, cmbspecimen.Text)
        Endif
      Else If rbinvoice.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and (fldstatus=&2 or fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldencounterval=&5 and " & xstr & "&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")                              ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", cmbcategory.Text, $encid, xcomp, cmbspecimen.Text)
        Endif
      Endif
    Endif
    
  Endif
  
  Return res
  
End

Private Sub FillLabtable()
  
  Dim xFldList As String[]
  
  If chkfreeview.Value = True Then
    xFldList = ["fldid", "fldsampleid", "fldtestid", "fldstatus", "fldsave_report", "fldabnormal", "fldreportquali", "fldtime_sample", "flvisible", "fldsampletype", "fldmethod", "fldtest_type", "fldcondition", "fldcomment", "fldtime_sample", "fldtime_report", "fldtime_start", "fldreportquali"]
  Else
    xFldList = ["fldid", "fldsampleid", "fldtestid", "fldstatus", "fldsave_report", "fldabnormal", "fldid", "fldtime_sample", "flvisible", "fldsampletype", "fldmethod", "fldtest_type", "fldcondition", "fldcomment", "fldtime_sample", "fldtime_report", "fldtime_start", "fldreportquali"]
  Endif
  
  $rData = ExecuteQuery(xFldList, chkall.Value)
  $aMyFields = New String[]
  modGridView.ReadSmallData(TableView1, $rData, $aMyFields)
  
  With TableView1
    .Columns[0].Width = 1
    .Columns[1].Width = 100 * modBasic.$AppWidthRatio
    .Columns[2].Width = 200 * modBasic.$AppWidthRatio
    .Columns[3].Width = 1
    .Columns[4].Width = 1
    .Columns[5].Width = 25 * modBasic.$AppWidthRatio
    .Columns[6].Width = 150 * modBasic.$AppWidthRatio
    .Columns[7].Width = 1
    .Columns[8].Width = 75 * modBasic.$AppWidthRatio
    .Columns[9].Width = 100 * modBasic.$AppWidthRatio
    .Columns[10].Width = 150 * modBasic.$AppWidthRatio
    .Columns[11].Width = 1
    .Columns[12].Width = 1
    .Columns[13].Width = 1
    .Columns[14].Width = 150 * modBasic.$AppWidthRatio
    .Columns[15].Width = 150 * modBasic.$AppWidthRatio
    .Columns[16].Width = 150 * modBasic.$AppWidthRatio
    .Columns[17].Width = 1
    
    .Columns[1].Text = "Sample"
    .Columns[2].Text = "Test Name"
    .Columns[6].Text = "Observation"
    .Columns[8].Text = "Visible"
    .Columns[9].Text = "Specimen"
    .Columns[10].Text = "Method"
    .Columns[14].Text = "Sample Time"
    .Columns[15].Text = "Report Time"
    .Columns[16].Text = "Load Time"
  End With
  modGridView.SetLabReportIconwithLoad(TableView1, 3, 5, 16, 5)
  
End

Public Sub TableView1_Data(Row As Integer, Column As Integer)
  
  $rData.MoveTo(Row)
  modGeneralMain.GridViewDecoration(TableView1, Row)
  If Column = 6 Then
    If chkfreeview.Value = True Then
      TableView1.Data.RichText = $rData[$aMyFields[Column]]
    Else
      TableView1.Data.RichText = modLabTest.GetLabTestValueString($rData["fldid"], modLabSub.GetTestUnitFromButton(rbsi, rbmetric), True, $encid, $tblpatlabtest)
    Endif
    If modBasic.$RichtextResizeRow = "Yes" Then
      TableView1.Rows[Row].Height = Max(TableView1.Rows[Row].Height, TableView1.Data.Font.RichTextHeight(TableView1.Data.RichText, TableView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (TableView1.Rows.Height - TableView1.Font.Height))
    Endif
  Else If Column = 14 Then
    TableView1.Data.Text = modReportVar.GetDateTimeReport($rData["fldtime_sample"], gb.GeneralDate)
  Else If Column = 15 Then
    TableView1.Data.Text = modReportVar.GetDateTimeReport($rData["fldtime_report"], gb.GeneralDate)
  Else If Column = 16 Then
    TableView1.Data.Text = modReportVar.GetDateTimeReport($rData["fldtime_start"], gb.GeneralDate)
  Else
    TableView1.Data.Text = $rData[$aMyFields[Column]]
  Endif
  TableView1.Rows[Row].Height = Max(TableView1.Rows[Row].Height, TableView1.Data.Font.RichTextHeight(TableView1.Data.Text, TableView1.Columns[Column].Width - 5 * modBasic.$AppWidthRatio) + (TableView1.Rows.Height - TableView1.Font.Height))
  TableView1.Data.WordWrap = True
  
End

Public Sub TableView1_Click()
  
  Dim xx As String
  Dim xopt As String[] = ["Visible", "Hidden"]
  Dim res As Result
  Dim Row As Integer
  
  If TableView1.Column = 6 Then
    EnterTextData()
    
  Else If TableView1.Column = 5 Then
    xx = InputCombo("Select Flag for the observation", "Change Flag", ["Normal", "Abnormal"], modMisc.GetIconValue(TableView1[TableView1.Row, 5].Picture), True)
    If xx Then
      Row = TableView1.Row
      res = modDatabase.$myConn.Edit($tblpatlabtest, "fldid=&1", TableView1[TableView1.Row, 0].Text)
      If xx = "Abnormal" Then
        res["fldabnormal"] = True
      Else
        res["fldabnormal"] = False
      Endif
      res["xyz"] = False
      res.Update
      FillLabtable()
      TableView1.Row = Row
    Endif
    
  Else If TableView1.Column = 8 Then
    xx = InputCombo("Set Visibility", TableView1[TableView1.Row, 2].Text, xopt, TableView1[TableView1.Row, 8].Text, True)
    If xx Then
      Row = TableView1.Row
      res = modDatabase.$myConn.Edit($tblpatlabtest, "fldid=&1", TableView1[TableView1.Row, 0].Text)
      res["flvisible"] = xx
      res["xyz"] = False
      res.Update
      FillLabtable()
      TableView1.Row = Row
    Endif
    
  Else If TableView1.Column = 9 Then
    If modBasic.$LabLockSpecimen = "No" Then
      xx = GetTextArea(("Specimen"), TableView1[TableView1.Row, 9].Text)
    Else
      xx = InputCombo(("Test Specimen"), TableView1[TableView1.Row, 2].Text, modBasic.$LabSpecimenList, TableView1[TableView1.Row, 9].Text, True)
    Endif
    If Trim(xx) Then
      Row = TableView1.Row
      modLabSub.UpdateSpecimenTest(TableView1[TableView1.Row, 0].Text, Trim(xx), $tblpatlabtest)
      FillLabtable()
      TableView1.Row = Row
    Endif
    
  Else If TableView1.Column = 10 Then
    xx = InputCombo(("Select Test Method"), TableView1[TableView1.Row, 2].Text, modFixLab.MethodsForLabTest(TableView1[TableView1.Row, 2].Text), TableView1[TableView1.Row, 10].Text, True)
    If xx Then
      Row = TableView1.Row
      modLabSub.UpdateEquipmentMethod(TableView1[TableView1.Row, 0].Text, xx, $tblpatlabtest)
      FillLabtable()
      TableView1.Row = Row
    Endif
    
  Endif
  
End

Public Sub TableView1_KeyRelease()
  
  If TableView1.Rows.Selection.Count > 0 Then
    If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
      EnterTextData()
    Endif
  Endif
  
End

Private Sub EnterTextData()
  
  Dim yqualival As Variant[]
  Dim hForm2 As FmLabQuantiVal
  Dim hForm3 As FmEnterMultiple
  Dim hFormTwo As FmEnterMultipleTwo
  Dim hForm33 As FmEnterMultipleVer
  Dim res As Result
  Dim sql As String
  Dim xData As Variant[]
  Dim xx As Integer
  Dim xunit As String
  Dim xType As String
  Dim xdate As Date
  
  Dim defstr As String
  Dim defVal As Float
  Dim xdeflt As String
  
  xx = TableView1.Row
  If TableView1[TableView1.Row, 11].Text = "Qualitative" Then
    xType = modFixLab.GetLabTestOptionType(TableView1[TableView1.Row, 2].Text)
    sql = "select fldid,fldsubtest,fldtanswertype,fldreport,fldabnormal,fldindex from " & $tblpatlabsubtest & " where fldtestid=&1"
    res = modDatabase.$myConn.Exec(sql, TableView1[TableView1.Row, 0].Text)
    If res.Available = False Then 
      If xType = "Clinical Scale" Then
        yqualival = modExamOption.GetClinScalePopUp("Test", TableView1[TableView1.Row, 2].Text)
        If yqualival Then
          modLabSub.UpdateLabQualiQuanti(TableView1[TableView1.Row, 0].Text, yqualival[1], CFloat(yqualival[0]), False, "", $tblpatlabtest)
        Endif
      Else If xType = "Left and Right" Then
        yqualival = CLeftRight(TableView1[TableView1.Row, 2].Text, TableView1[TableView1.Row, 17].Text, modFixClinic.GetLeftRightMainHeader("Test", TableView1[TableView1.Row, 2].Text))
        If yqualival Then
          modLabSub.UpdateLabTestReportQuali(TableView1[TableView1.Row, 0].Text, yqualival[0], yqualival[1], "", $tblpatlabtest)
        Endif
      Else If xType = "Date Time" Then
        xdate = GetDateValue(TableView1[TableView1.Row, 2].Text, ("Select Date Time"), Val(TableView1[TableView1.Row, 17].Text))
        If xdate Then
          modLabSub.UpdateLabTestReportQuali(TableView1[TableView1.Row, 0].Text, modDate.DateStringForExam(xdate), False, "", $tblpatlabtest)
        Endif
      Else If xType = "BS Date" Then
        xdate = GetDateValue(TableView1[TableView1.Row, 2].Text, ("Select Date Time"), modDate.ConvertToEnglishdate(TableView1[TableView1.Row, 17].Text))
        If xdate Then
          modLabSub.UpdateLabTestReportQuali(TableView1[TableView1.Row, 0].Text, modDate.ConvertToLocaldate(xdate), False, "", $tblpatlabtest)
        Endif
      Else If xType = "Qualitative" Then
        yqualival = GetQualiString(TableView1[TableView1.Row, 2].Text, TableView1[TableView1.Row, 17].Text, "Test")
        If yqualival Then
          modLabSub.UpdateLabTestReportQuali(TableView1[TableView1.Row, 0].Text, yqualival[0], yqualival[1], "", $tblpatlabtest)
        Endif
      Else If xType = "RichText Area" Then
        yqualival = GetQualiRich(TableView1[TableView1.Row, 2].Text, TableView1[TableView1.Row, 17].Text, "Test")
        If yqualival Then
          modLabSub.UpdateLabTestReportQuali(TableView1[TableView1.Row, 0].Text, yqualival[0], yqualival[1], yqualival[2], $tblpatlabtest)
        Endif
      Else If xType = "Calculated" Then
        xdeflt = TableView1[TableView1.Row, 17].Text
        If Not xdeflt Then
          defstr = modAllExam.GetExamDefaultValue("Test", TableView1[TableView1.Row, 2].Text)
          If defstr Then
            xdeflt = modReportVar.GetCalcValueVariant(defstr, $encid)
          Endif
        Endif
        yqualival = GetQualiValues(TableView1[TableView1.Row, 2].Text, xdeflt, "Test")
        If yqualival Then
          modLabSub.UpdateLabTestReportQuali(TableView1[TableView1.Row, 0].Text, yqualival[0], yqualival[1], "", $tblpatlabtest)
        Endif
      Else
        yqualival = GetQualiValues(TableView1[TableView1.Row, 2].Text, TableView1[TableView1.Row, 17].Text, "Test")
        If yqualival Then
          modLabSub.UpdateLabTestReportQuali(TableView1[TableView1.Row, 0].Text, yqualival[0], yqualival[1], "", $tblpatlabtest)
        Endif
      Endif
      
    Else If res.Available = True Then
      xData = New Variant[]
      For Each res
        xData.Add([res["fldsubtest"], res["fldreport"], res["fldid"], res["fldtanswertype"], res["fldabnormal"], res["fldindex"]])
      Next
      xData.Add(["Final Impression", TableView1[TableView1.Row, 17].Text, 0, "RichText Area", False, ""])
      If xType = "Left/Right Components" Then
        hFormTwo = New FmEnterMultipleTwo(TableView1[TableView1.Row, 0].Text, "Test", TableView1[TableView1.Row, 2].Text, xData, TableView1[TableView1.Row, 9].Text, cmbfiscal.Text)
        hFormTwo.ShowModal
      Else
        If modBasic.$FactorForm = "Vertical" Then
          hForm33 = New FmEnterMultipleVer(TableView1[TableView1.Row, 0].Text, "Test", TableView1[TableView1.Row, 2].Text, xData, TableView1[TableView1.Row, 9].Text, cmbfiscal.Text)
          hForm33.ShowModal
        Else
          hForm3 = New FmEnterMultiple(TableView1[TableView1.Row, 0].Text, "Test", TableView1[TableView1.Row, 2].Text, xData, TableView1[TableView1.Row, 9].Text, cmbfiscal.Text)
          hForm3.ShowModal
        Endif
      Endif 
    Endif
    
  Else If TableView1[TableView1.Row, 11].Text = "Quantitative" Then
    xunit = modLabSub.GetTestUnitFromButton(rbsi, rbmetric)
    defVal = modLabTest.GetTestQuantiValueLabID($encid, TableView1[TableView1.Row, 0].Text, xunit, $tblpatlabtest)
    If Not defVal Then
      xType = modFixLab.GetLabTestOptionType(TableView1[TableView1.Row, 2].Text)
      If xType = "Calculated" Then
        defstr = modAllExam.GetExamDefaultValue("Test", TableView1[TableView1.Row, 2].Text)
        If defstr Then
          defVal = modReportVar.GetCalcValueFloat(defstr, $encid)
        Endif
      Endif
    Endif
    hForm2 = New FmLabQuantiVal(TableView1[TableView1.Row, 0].Text, TableView1[TableView1.Row, 2].Text, defVal, xunit, TableView1[TableView1.Row, 9].Text, MACLabNotification(), $tblpatlabtest)
    hForm2.ShowModal
    
  Endif
  
  FillLabtable()
  TableView1.SetFocus
  TableView1.Row = xx
  
End

''-------------------------------------- button report -------------------------------------
Public Sub btnreport_Click()
  
  Dim hCls As CReportCustom
  Dim unt As String
  
  If rbsi.Value = True Then
    unt = "SI"
  Else
    unt = "Metric"
  Endif
  
  If $encid Then
    If modSettings.ShowSettingFromFIle("Diagnostic Help/Name") Then
      hCls = New CReportCustom($encid, "Diagnostic Help", "ReportSize", unt)
      hCls.Preview()
    Endif
  Endif
  
End

Public Sub btnfullrep_Click()
  
  If $encid Then
    modCHTMLReport.ExportGridToHTML(TableView1, "", "TEST REPORTING",, $encid)
  Endif
  
End

''------------------------- menu procedures -----------------------------------
Public Sub btnrepoprint_Click()
  
  Dim hForm As FmLabRepSettings
  
  If txtencid.Text Then
    hForm = New FmLabRepSettings(Trim(txtencid.Text))
    modAppSupport.FindWorSpace(modHelpVariable.$LogInCategory).Add(hForm)
  Endif
  
End

Public Sub mnulocal_Click()
  
  Dim xPath As String
  Dim xpatno As String
  
  If txtencid.Text Then
    xpatno = $patNo
    If modPatientSub.GetPatPassCheck(modDatabase.$myConn, xpatno) = True Then
      Inc Application.Busy
      xPath = modCHTMLPatient.ShowPatientAllLaboratoryReport($encid, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
      Dec Application.Busy
      modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
    Endif
  Endif
  
End

Public Sub mnuremote_Click()
  
  Dim xPath As String
  Dim xpatno As String
  Dim sCon As Connection
  Dim xCon As Connection
  
  If txtencid.Text Then
    xpatno = $patNo
    
    If modPatientSub.GetPatPassCheck(modDatabase.$myConn, xpatno) = True Then
      sCon = modDatabase.$myConn
      xCon = modDatabase.$syConn
      Inc Application.Busy
      modRepository.TransferRemoConn(xpatno)
      xPath = modCHTMLPatient.ShowPatientAllLaboratoryReport($encid, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
      Dec Application.Busy
      modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
      modDatabase.$myConn = sCon
      modDatabase.$syConn = xCon
      MMain.InitialAppMode()
    Endif
    
  Endif
  
End

Public Function MACLabNotification() As String
  
  Dim xall As Boolean
  Dim xmac As String
  
  If chkinfall.Value Then
    xall = True
  Else
    If txtcolor.Background = Color.Red Then
      If chkinfred.Value Then
        xall = True
      Else
        xall = False
      Endif
    Else If txtcolor.Background = Color.Yellow Then
      If chkinfyellow.Value Then
        xall = True
      Else
        xall = False
      Endif
    Endif
  Endif
  
  If xall = True Then
    xmac = txtpatlock.Text
  Else
    xmac = ""
  Endif
  
  Return xmac
  
End

Public Sub txtencid_KeyPress()
  
  If Key.Code = Key.Down Then
    If rbencounter.Value = True Then
      If Not txtencid.Text Then
        txtencid.Text = PatSearch("Encounter")
        txtencid.SetFocus
      Else
        If modBasic.$AutoEncSuffix = "Yes" Then
          txtencid.Text = txtencid.Text & modBasic.$HospCode
        Endif
      Endif
    Endif
  Else
    modGeneralMain.InputUpCaseOnly()
  Endif
  
End

Public Sub btncomponent_Click()
  
  Dim xxx As String[]
  Dim yyy As String[]
  
  If TableView1.Rows.Selection.Count > 0 Then
    If modFixLab.GetLabTestOptionType(TableView1[TableView1.Row, 2].Text) = "Custom Components" Then
      xxx = modFixLab.GetSubTestArray(TableView1[TableView1.Row, 2].Text)   'modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldsubtest) as col from tbltestquali where fldtestid=&1", TableView1[TableView1.Row, 2].Text))
      yyy = GridListView(("Select Components"), xxx)
      If yyy And If yyy.Count Then
        modLabSub.InsertLabSubTest($encid, TableView1[TableView1.Row, 0].Text, TableView1[TableView1.Row, 2].Text, yyy, $tblpatlabsubtest)
      Endif
    Endif
  Endif
  
End

Public Sub btncondi_Click()
  
  Dim xx As String
  Dim xRow As Integer
  
  If TableView1.Rows.Selection.Count > 0 Then
    xx = GetTextArea(("Condition"), TableView1[TableView1.Row, 12].Text)
    If xx Then
      xRow = TableView1.Row
      modLabSub.UpdateConditionTest(TableView1[TableView1.Row, 0].Text, xx, $tblpatlabtest)
      FillLabtable()
      TableView1.Row = xRow
    Endif
  Endif
  
End

Public Sub btncomment_Click()
  
  Dim xx As String
  Dim res As Result
  Dim xRow As Integer
  
  If TableView1.Rows.Selection.Count > 0 Then
    xx = GetTextArea(TableView1[TableView1.Row, 2].Text, TableView1[TableView1.Row, 13].Text)
    If xx Then
      xRow = TableView1.Row
      res = modDatabase.$myConn.Edit($tblpatlabtest, "fldid=&1", TableView1[TableView1.Row, 0].Text)
      res["fldcomment"] = xx
      res["xyz"] = False
      res.Update
      FillLabtable()
      TableView1.Row = xRow
    Endif
  Endif
  
End

Public Sub btnimage_Click()
  
  Dim hForm As FmTestImage
  
  If TableView1.Rows.Selection.Count > 0 Then
    hForm = New FmTestImage("IMAGE", $encid, TableView1[TableView1.Row, 0].Text, TableView1[TableView1.Row, 2].Text, "Laboratory", "")
    hForm.ShowModal
  Endif
  
End

Public Sub btndicom_Click()
  
  Dim hForm As FmTestImage
  
  If TableView1.Rows.Selection.Count > 0 Then
    hForm = New FmTestImage("DICOM", $encid, TableView1[TableView1.Row, 0].Text, TableView1[TableView1.Row, 2].Text, "Laboratory", "")
    hForm.ShowModal
  Endif
  
End

Public Sub btnsms_Click()
  
  Dim xmsg As String
  
  If TableView1.Rows.Selection.Count > 0 Then
    xmsg = modDevice.SendSMSLabPatient($encid, TableView1[TableView1.Row, 2].Text, modLabTest.GetLabTestValueString(TableView1[TableView1.Row, 0].Text, modLabSub.GetTestUnitFromButton(rbsi, rbmetric), False, $encid, $tblpatlabtest))
  Endif
  If xmsg Then
    Balloon.Info(xmsg, btnsms)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif
  
End

Public Sub chkfreeview_Click()
  
  modSettings.EnterCheckSetting(chkfreeview, "TestUnit/MixedView")
  
End

Public Sub btnchart_Click()
  
  Dim sql As String
  Dim xList As String[]
  Dim encid As String
  Dim hForm As FmClinChart
  Dim unt As String
  
  If rbsi.Value = True Then
    unt = "SI"
  Else
    unt = "Metric"
  Endif
  If TableView1.Rows.Selection.Count > 0 Then
    If TableView1[TableView1.Row, 11].Text = "Quantitative" Then
      sql = "select distinct(fldencounterval) as col from " & $tblpatlabtest & " where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldtestid=&2 and fldtest_type=&3 and (fldstatus=&4 or fldstatus=&5)"
      xList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec(sql, $patNo, TableView1[TableView1.Row, 2].Text, "Quantitative", "Reported", "Verified"))
      If xList.Count Then
        encid = InputCombo("Select Encounter ID", "Chart View", xList, $encid, True)
        If encid Then
          hForm = New FmClinChart("Test", TableView1[TableView1.Row, 2].Text, encid, unt)
          modWorkSpace.Add(hForm)
        Endif
      Endif
    Endif
  Endif
  
End

Public Sub btnchartall_Click()
  
  Dim sql As String
  Dim res As Result
  Dim xtitList As String[]
  Dim sTemp As String
  Dim unt As String
  Dim hForm As FmClinChartIm
  
  If rbsi.Value = True Then
    unt = "SI"
  Else
    unt = "Metric"
  Endif 
  xtitList = New String[]
  If TableView1.Rows.Selection.Count > 0 Then
    If TableView1[TableView1.Row, 11].Text = "Quantitative" Then
      sql = "select fldid,fldencounterval,fldtime_sample from " & $tblpatlabtest & " where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldtestid=&2 and fldtest_type=&3 and (fldstatus=&4 or fldstatus=&5) ORDER BY fldtime_sample"
      res = modDatabase.$myConn.Exec(sql, $patNo, TableView1[TableView1.Row, 2].Text, "Quantitative", "Reported", "Verified")
      If res.Available Then
        For Each res
          xtitList.Add(modReportVar.GetDateTimeReport(res["fldtime_sample"], gb.MediumDate) & gb.Tab & modLabTest.GetTestQuantiValueLabID(res["fldencounterval"], res["fldid"], unt, $tblpatlabtest))
        Next 
        sTemp = Temp()
        File.Save(sTemp, xtitList.Join(gb.NewLine))
      Endif
      
      If Exist(sTemp) Then
        hForm = New FmClinChartIm($encid, TableView1[TableView1.Row, 2].Text, sTemp)
        modWorkSpace.Add(hForm)
      Endif 
    Endif
  Endif
  
End

Public Sub TableView1_Menu()
  
  mnugridview.Popup
  
End

Public Sub mnupdatesub_Click()
  
  Dim xxx As String[]
  Dim xType As String
  
  If TableView1.Rows.Selection.Count Then
    Inc Application.Busy
    modDatabase.$myConn.Begin
    modDatabase.$myConn.Delete($tblpatlabsubtest, "fldtestid=&1", TableView1[TableView1.Row, 0].Text)
    xType = modFixLab.GetLabTestOptionType(TableView1[TableView1.Row, 2].Text)
    If xType = "Fixed Components" Or If xType = "Left/Right Components" Then
      xxx = modFixLab.GetSubTestArray(TableView1[TableView1.Row, 2].Text)     'modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldsubtest) as col from tbltestquali where fldtestid=&1", GridView1[Row, 3].Text))
      If xxx.Count Then
        modLabSub.InsertLabSubTest($encid, TableView1[TableView1.Row, 0].Text, TableView1[TableView1.Row, 2].Text, xxx, $tblpatlabsubtest)
      Endif
    Endif
    modDatabase.$myConn.Commit
    Dec Application.Busy
  Endif
  
Catch
  modDatabase.$myConn.Rollback
  Dec Application.Busy
  modHelpVariable.CreateErrorReport()
  
End

Public Sub btnmachineall_Click()
  
  Exec ["healthybit", "--sync-machine"]
  
End

Public Sub btnmachineday_Click()
  
  Exec ["healthybit", "--sync-machine-daily"]
  
End

Public Sub btnmachine_Click()
  
  Dim xList As String[]
  
  xList = New String[]
  For Each $rData
    If xList.Exist($rData["fldsampleid"]) = False Then
      xList.Add($rData["fldsampleid"])
    Endif
  Next
  
  If xList.Count Then
    modInterface.SyncInterfacingSelectedData(xList)
    FillLabtable()
    Balloon.Info(("Information copied"), btnmachine)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif
  
End

''-------------------- Group Data --------------------------
Private Function GroupExecuteQuery(xFldList As String[]) As Result
  
  Dim sql As String
  Dim xcomp As String
  Dim xstr As String
  Dim xload As String
  Dim res As Result
  
  If Not cmbcategory.Text Then
    cmbcategory.Text = "%"
  Endif
  If modBasic.$LabReportingComp Then
    xcomp = modBasic.$LabReportingComp
  Else
    xcomp = modBasic.$compID
  Endif
  If modBasic.$LabReportingFrom = "Not From" Then
    xstr = "fldcomp_sample not like "
  Else
    xstr = "fldcomp_sample like "
  Endif
  If rbloaded.Value = True Then
    xload = " and fldtime_start IS NOT NULL"
  Else
    xload = ""
  Endif
  If Not cmbspecimen.Text Then
    cmbspecimen.Text = "%"
  Endif
  
  If chkdate.Value = True Then
    If cmbcategory.Text = "%" Then
      If rbencounter.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and " & xstr & "&3 and fldtime_sample>=&4 and fldtime_sample<=&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
      Else If rbsample.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
      Else If rbinvoice.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
      Endif
    Else
      If rbencounter.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and " & xstr & "&4 and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", cmbcategory.Text, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
      Else If rbsample.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldsampletype like &8" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
      Else If rbinvoice.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldsampletype like &8" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
      Endif
    Endif
    
  Else
    If cmbcategory.Text = "%" Then
      If rbencounter.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and " & xstr & "&3 and fldsampletype like &4" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", xcomp, cmbspecimen.Text)
      Else If rbsample.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldsampletype like &5" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, cmbspecimen.Text)
      Else If rbinvoice.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldsampletype like &5" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, cmbspecimen.Text)
      Endif
    Else
      If rbencounter.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and " & xstr & "&4 and fldsampletype like &5" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", cmbcategory.Text, xcomp, cmbspecimen.Text)
      Else If rbsample.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, cmbspecimen.Text)
      Else If rbinvoice.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, cmbspecimen.Text)
      Endif
    Endif
    
  Endif
  
  Return res
  
End

''-------------------- Group controls ---------------------
Public Sub TabPanel1_Click()
  
  If TabPanel1.Index = 1 Then
    LoadGroupQuery()
    ShowGroupControls()
  Endif
  
End

Private Sub LoadGroupQuery()
  
  Dim xFldList As String[]
  Dim res As Result
  
  If chkfreeview.Value = True Then
    xFldList = ["fldid", "fldsampleid", "fldtestid", "fldstatus", "fldsave_report", "fldabnormal", "fldreportquali", "fldtime_sample", "flvisible", "fldsampletype", "fldmethod", "fldtest_type", "fldcondition", "fldcomment", "fldtime_sample", "fldtime_report", "fldtime_start", "fldreportquali"]
  Else
    xFldList = ["fldid", "fldsampleid", "fldtestid", "fldstatus", "fldsave_report", "fldabnormal", "fldid", "fldtime_sample", "flvisible", "fldsampletype", "fldmethod", "fldtest_type", "fldcondition", "fldcomment", "fldtime_sample", "fldtime_report", "fldtime_start", "fldreportquali"]
  Endif
  res = GroupExecuteQuery(xFldList)
  
  $xData = New Variant[]
  If res.Available Then
    For Each res
      If res["fldtest_type"] = "Quantitative" Then
        $xData.Add([res["fldid"], res["fldtestid"], res["fldsampleid"], res["fldtest_type"], "Quantitative"])
      Else
        $xData.Add([res["fldid"], res["fldtestid"], res["fldsampleid"], res["fldtest_type"], modFixLab.GetLabTestOptionType(res["fldtestid"])])
      Endif
    Next
  Endif
  
End

Private Sub ShowGroupControls()
  
  Dim xht As Integer
  
  Frame1.Children.Clear()
  Wait
  LoadFormData()
  
  xht = ($xData.Count * 25 * Slider1.Value + 30) * modBasic.$AppScaleFactor
  If Frame1.Height < xht Then
    Frame1.Height = xht
  Endif
  
End

Private Sub LoadFormData()
  
  Dim i As Integer
  
  For i = 0 To $xData.Count - 1
    If i < 49 Then
      
      aIndexLabel[i] = New ValueBox(Frame1) As "IndexLabel"
      aSpecLabel[i] = New TextLabel(Frame1) As "SpecimenLabel"
      aNameLabel[i] = New TextLabel(Frame1) As "NameLabel"
      aAbnormCheck[i] = New CheckBox(Frame1) As "CheckBoxgroup"
      If $xData[i][3] = "Quantitative" Then
        aQuantiBox[i] = New ValueBox(Frame1) As "QuantiGroup"
        aQuantiMax[i] = New ValueBox(Frame1) As "QuantiGroupMax"
        aQuantiMin[i] = New ValueBox(Frame1) As "QuantiGroupMin"
        aQuantiUnit[i] = New Label(Frame1)
        aQuantiCalc[i] = New ToolButton(Frame1) As "CalcButton"
      Else
        Select $xData[i][4]
          Case "Single Selection"
            aComboBox[i] = New ComboBox(Frame1) As "ComboGroup"
            aChkLock[i] = New CheckBox(Frame1) As "CheckLock"
          Case "Dichotomous"
            aDichoValue[i] = New DichotomousValue(Frame1) As "DichoText"
          Case "Left and Right"
            aLeftRight[i] = New LeftRightTextArea(Frame1) As "LeftRightGroup"
          Case "Date Time", "BS Date"
            aDateBox[i] = New DateBox(Frame1) As "DateGroup"
            aBSDate[i] = New ToolButton(Frame1) As "BSButton"
          Case "Quantitative"
            aValueBox[i] = New ValueBox(Frame1) As "ValueGroup"
            aUnitText[i] = New TextBox(Frame1) As "UnitGroup"
          Case "ImageValue"
            aButtonBox[i] = New ButtonBox(Frame1) As "ImageBoxGroup"
          Case "Qualitative"
            aLineText[i] = New TextBox(Frame1) As "TextLineGroup"
          Case "RichText Area"
            aHTMLText[i] = New TextHTML(Frame1) As "TextHTMLgroup"
          Case "No Selection"
            aGenTextArea[i] = New TextArea(Frame1) As "GenAreaGroup"
          Case "Fixed Components", "Left/Right Components"
            aButnFixed[i] = New ButtonBox(Frame1) As "FixButtonGroup"
          Case Else
        End Select
      Endif
      
    Endif
  Next
  DIsplayTextForm()
  
End

Private Sub DIsplayTextForm()
  
  Dim i As Integer
  Dim xlimit As Float[]
  Dim AppFactor As Float
  
  Dim xType As String
  Dim defstr As String
  
  AppFactor = modBasic.$AppScaleFactor
  Frame1.Height = ($xData.Count * 25 * Slider1.Value + 30) * AppFactor
  Frame1.Width = 700 * AppFactor
  
  For i = 0 To $xData.Count - 1
    If i < 49 Then
      
      ''create index label
      With aIndexLabel[i]
        .X = 5 * AppFactor
        .Y = (i * 25 * Slider1.Value + 15) * AppFactor
        .Width = 5 * AppFactor
        .Height = 25 * AppFactor
        .Value = $xData[i][0]
        .Visible = False
        .Tag = i
      End With
      
      ' ''create specimen
      ' With aSpecLabel[i]
      '   .X = (5 + 5) * AppFactor
      '   .Y = (i * 25 * Slider1.Value + 15) * AppFactor
      '   .Width = 75 * AppFactor
      '   .Height = 25 * Slider1.Value * AppFactor
      '   .Text = $xData[i][2]
      '   .Tag = i
      '   .Wrap = True
      ' End With
      
      ''create Name Label
      With aNameLabel[i]
        .X = (10 + 10) * AppFactor
        .Y = (i * 25 * Slider1.Value + 15) * AppFactor
        .Width = 250 * AppFactor
        .Height = 25 * Slider1.Value * AppFactor
        .Text = $xData[i][1]
        .Tag = i
        .Wrap = True
      End With
      
      If $xData[i][3] = "Quantitative" Then
        xlimit = modLabTest.GetTestBothLimits($xData[i][0], modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
        ''create abnormal checkbox
        With aAbnormCheck[i]
          .X = (270 + 10) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 50 * AppFactor
          .Height = 25 * AppFactor
          .Text = "Abn"
          .Enabled = False
          .Tag = i
        End With
        
        ''create observation entry
        With aQuantiBox[i]
          .X = (335 + 10) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 75 * AppFactor
          .Height = 25 * AppFactor
          .Tag = i
        End With
        'min value
        With aQuantiMin[i]
          .X = (420 + 10) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 50 * AppFactor
          .Height = 25 * AppFactor
          .Enabled = False
          .Value = xlimit[0]
          .Tag = i
        End With
        ''max value
        With aQuantiMax[i]
          .X = (480 + 10) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 50 * AppFactor
          .Height = 25 * AppFactor
          .Enabled = False
          .Value = xlimit[1]
          .Tag = i
        End With
        With aQuantiUnit[i]
          .X = (540 + 10) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 75 * AppFactor
          .Height = 25 * AppFactor
          .Border = Border.Plain
          .Text = modLabTest.GetTestUnitSrting($xData[i][0], modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
          .Tag = i
        End With
        With aQuantiCalc[i]
          .X = (625 + 10) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 25 * AppFactor
          .Height = 25 * AppFactor
          .Picture = Picture["icon:/small/calculator"]
          .Tag = i
        End With
        
        xType = modFixLab.GetLabTestOptionType($xData[i][1])
        If xType = "Calculated" Then
          defstr = modAllExam.GetExamDefaultValue("Test", $xData[i][1])
          If defstr Then
            With aQuantiBox[i]
              .Value = modReportVar.GetCalcValueFloat(defstr, $encid)
            End With
          Endif
        Endif
        
      Else
        ''create abnormal checkbox
        With aAbnormCheck[i]
          .X = (270 + 10) * AppFactor
          .Y = (i * 25 * Slider1.Value + 15) * AppFactor
          .Width = 50 * AppFactor
          .Height = 25 * AppFactor
          .Text = "Abn"
          .Tag = i
        End With
        
        ''create observation entry
        If $xData[i][4] = "Single Selection" Then
          With aComboBox[i]
            .X = (335 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 250 * AppFactor
            .Height = 25 * AppFactor
            .List = modAllExam.SelectExamOptionList("Test", $xData[i][1], $xData[i][4])
            .Tag = i
          End With
          With aChkLock[i]
            .X = (600 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 25 * AppFactor
            .Height = 25 * AppFactor
            .Value = False
            .Tag = i
          End With
          
        Else If $xData[i][4] = "Dichotomous" Then
          With aDichoValue[i]
            .X = (335 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 250 * AppFactor
            .Height = 25 * AppFactor
            .List = modAllExam.SelectExamOptionList("Test", $xData[i][1], $xData[i][4])
            .Tag = i
          End With
          
        Else If $xData[i][4] = "Left and Right" Then
          With aLeftRight[i]
            .X = (335 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 300 * AppFactor
            .Height = 25 * Slider1.Value * AppFactor
            .Tag = i
          End With
          
        Else If $xData[i][4] = "Date Time" Then
          With aDateBox[i]
            .X = (335 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 150 * AppFactor
            .Height = 25 * AppFactor
            .Mode = DateChooser.DateTime
            .Tag = i
          End With
          With aBSDate[i]
            .X = (500 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 25 * AppFactor
            .Height = 25 * AppFactor
            .Picture = Picture["icon:/small/calendar"]
            .Tag = i
          End With
          
        Else If $xData[i][4] = "BS Date" Then
          With aDateBox[i]
            .X = (335 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 150 * AppFactor
            .Height = 25 * AppFactor
            .Mode = DateChooser.DateTime
            .Tag = i
          End With
          With aBSDate[i]
            .X = (500 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 25 * AppFactor
            .Height = 25 * AppFactor
            .Picture = Picture["icon:/small/calendar"]
            .Tag = i
          End With
          
        Else If $xData[i][4] = "Quantitative" Then
          With aValueBox[i]
            .X = (335 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 100 * AppFactor
            .Height = 25 * AppFactor
            .Tag = i
          End With
          With aUnitText[i]
            .X = (450 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 125 * AppFactor
            .Height = 25 * AppFactor
            .Tag = i
          End With
          
        Else If $xData[i][4] = "ImageValue" Then
          With aButtonBox[i]
            .X = (335 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 250 * AppFactor
            .Height = 25 * AppFactor
            .Text = ""
            .Tag = i
          End With
          
        Else If $xData[i][4] = "Qualitative" Then
          With aLineText[i]
            .X = (335 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 250 * AppFactor
            .Height = 25 * AppFactor
            .Tag = i
          End With
          
        Else If $xData[i][4] = "RichText Area" Then
          With aHTMLText[i]
            .X = (335 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 300 * AppFactor
            .Height = 25 * Slider1.Value * AppFactor
            .DictionaryPath = modBasic.$dictPathList
            .Tag = i
          End With
          
        Else If $xData[i][4] = "Fixed Components" Then
          With aButnFixed[i]
            .X = (335 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 300 * AppFactor
            .Height = 25 * AppFactor
            .Picture = Picture["icon:/small/right"]
            .Tag = i
          End With
          
        Else If $xData[i][4] = "Left/Right Components" Then
          With aButnFixed[i]
            .X = (335 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 300 * AppFactor
            .Height = 25 * AppFactor
            .Picture = Picture["icon:/small/right"]
            .Tag = i
          End With
          
        Else If $xData[i][4] = "No Selection" Then
          With aGenTextArea[i]
            .X = (335 + 10) * AppFactor
            .Y = (i * 25 * Slider1.Value + 15) * AppFactor
            .Width = 300 * AppFactor
            .Height = 25 * Slider1.Value * AppFactor
            .Wrap = True
            .Tag = i
          End With
          
        Endif
      Endif
      
    Endif
  Next
  
  GetFocusControl(0)
  
End

Public Sub FixButtonGroup_Click()
  
  Dim j As Integer
  Dim sql As String
  Dim res As Result
  Dim aData As Variant[]
  Dim hForm3 As FmEnterMultiple
  Dim hFormTwo As FmEnterMultipleTwo
  Dim hForm33 As FmEnterMultipleVer
  Dim xType As String
  
  j = Last.Tag
  xType = modFixLab.GetLabTestOptionType($xData[j][1]) 
  sql = "select fldid,fldsubtest,fldtanswertype,fldreport,fldabnormal,fldindex from " & $tblpatlabsubtest & " where fldtestid=&1"
  res = modDatabase.$myConn.Exec(sql, $xData[j][0])
  If res.Available = True Then
    aData = New Variant[]
    For Each res
      aData.Add([res["fldsubtest"], res["fldreport"], res["fldid"], res["fldtanswertype"], res["fldabnormal"], res["fldindex"]])
    Next
    aData.Add(["Final Impression", "", 0, "RichText Area", False, ""])
    If xType = "Left/Right Components" Then 
      hFormTwo = New FmEnterMultipleTwo($xData[j][0], "Test", $xData[j][1], aData, "", cmbfiscal.Text)
      hFormTwo.ShowModal
    Else
      If modBasic.$FactorForm = "Vertical" Then
        hForm33 = New FmEnterMultipleVer($xData[j][0], "Test", $xData[j][1], aData, "", cmbfiscal.Text)
        hForm33.ShowModal
      Else
        hForm3 = New FmEnterMultiple($xData[j][0], "Test", $xData[j][1], aData, "", cmbfiscal.Text)
        hForm3.ShowModal
      Endif
    Endif 
  Endif
  
End

Public Sub btncntrlrefresh_Click()
  
  modSettings.SaveSettingsToFile("MultipleTextBox/Height", Slider1.Value)
  Frame1.Children.Clear()
  If TableView1.Rows.Count Then
    LoadFormData()
  Endif
  
End

Public Sub btnBrOK_Click()
  
  If $xData And If $xData.Count Then
    FillGenExams()
    Balloon.Info(("Information saved"), btnBrOK)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif
  
End

Private Sub FillGenExams()
  
  Dim i As Integer
  
  For i = 0 To $xData.Count - 1
    If i < 49 Then
      If $xData[i][3] = "Quantitative" Then
        If aQuantiBox[i].Value Then
          modLabSub.UpdateLabTestReportQuanti(aIndexLabel[i].Value, aQuantiBox[i].Value, aAbnormCheck[i].Value, modLabSub.GetTestUnitFromButton(rbsi, rbmetric), $tblpatlabtest)
        Endif
      Else
        If $xData[i][4] = "Single Selection" Then
          If aComboBox[i].Text Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aComboBox[i].Text, aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "Dichotomous" Then
          If aDichoValue[i].Value Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aDichoValue[i].Value, aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "Left and Right" Then
          If aLeftRight[i].DataText Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aLeftRight[i].DataText, aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "Date Time" Then
          If aDateBox[i].Value Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, modDate.DateStringForExam(aDateBox[i].Value), aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "BS Date" Then
          If aDateBox[i].Value Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, modDate.ConvertToLocaldate(aDateBox[i].Value), aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "Quantitative" Then
          If aValueBox[i].Value Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, CStr(aValueBox[i].Value) & Space(1) & aUnitText[i].Text, aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "ImageValue" Then
          If aButtonBox[i].Text Then
            
          Endif
        Else If $xData[i][4] = "Qualitative" Then
          If aLineText[i].Text Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aLineText[i].Text, aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "RichText Area" Then
          If aHTMLText[i].Text Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aHTMLText[i].RichText, aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "No Selection" Then
          If aGenTextArea[i].Text Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aGenTextArea[i].Text, aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Endif
      Endif
    Endif
  Next
  
End

Public Sub btnfill_Click()
  
  Dim i As Integer
  Dim res As Result
  
  If $xData And If $xData.Count Then
    For i = 0 To $xData.Count - 1
      If i < 49 Then
        res = modDatabase.$myConn.Exec("select flddetail from tbltest where fldtestid=&1", $xData[i][1])
        If res.Available Then
          
          If $xData[i][4] = "Single Selection" Then
            If Not aComboBox[i].Text Then
              aComboBox[i].Text = res["flddetail"]
            Endif
          Else If $xData[i][4] = "RichText Area" Then
            If Not aHTMLText[i].Text Then
              aHTMLText[i].RichText = res["flddetail"]
            Endif
          Else If $xData[i][4] = "No Selection" Then
            If Not aGenTextArea[i].Text Then
              aGenTextArea[i].Text = res["flddetail"]
            Endif
          Else If $xData[i][4] = "Dichotomous" Then
            If Not aDichoValue[i].Value Then
              aDichoValue[i].Value = res["flddetail"]
            Endif
          Else If $xData[i][4] = "Qualitative" Then
            If Not aLineText[i].Text Then
              aLineText[i].Text = res["flddetail"]
            Endif
          Endif
          
        Endif
      Endif
    Next
    
  Endif
  
End

Public Sub QuantiGroup_Change()
  
  Dim j As Integer
  
  j = Last.Tag
  If aQuantiBox[j].Value Then
    If aQuantiMin[j].Value <> aQuantiMax[j].Value Then
      If aQuantiBox[j].Value < aQuantiMin[j].Value Or If aQuantiBox[j].Value > aQuantiMax[j].Value Then
        aAbnormCheck[j].Value = True
      Else
        aAbnormCheck[j].Value = False
      Endif
    Else
      aAbnormCheck[j].Value = False
    Endif
  Else
    aAbnormCheck[j].Value = False
  Endif
  
  If aAbnormCheck[j].Value = True Then
    aAbnormCheck[j].Foreground = Color.Red
  Else
    aAbnormCheck[j].Foreground = Color.Default
  Endif
  
End

Public Sub QuantiGroup_KeyRelease()
  
  Dim i As Integer
  
  If Key.Code = Key.Return Or If Key.Code = Key.Enter Then
    If modBasic.$LabQuickMulti = "Yes" Then
      i = Last.Tag
      Wait
      GetFocusControl(i + 1)
    Endif
  Endif
  
End

Public Sub ComboGroup_GotFocus()
  
  Dim j As Integer
  
  j = Last.Tag
  If modBasic.$TabletModeEnable = "Yes" Then
    If Not aComboBox[j].Text Then
      aComboBox[j].Popup
    Endif
  Endif
  
End

Public Sub ComboGroup_MouseWheel()
  
  Stop Event
  
End

Public Sub ComboGroup_KeyRelease()
  
  Dim i As Integer
  
  If Key.Code = Key.Return Or If Key.Code = Key.Enter Then
    If modBasic.$LabQuickMulti = "Yes" Then
      i = Last.Tag
      Wait
      GetFocusControl(i + 1)
    Endif
    
  Else
    i = Last.Tag
    ''enable on chnaging ComboBoxNew to ComboBox
    modFillContainer.AutoFillComboBox(aComboBox[i])
  Endif
  
End

Public Sub ComboGroup_Click()
  
  Dim j As Integer
  
  j = Last.Tag
  SetQualitativeAbnormal(j)
  
End

Public Sub FixButtonGroup_KeyRelease()
  
  Dim i As Integer
  
  If Key.Code = Key.Return Or If Key.Code = Key.Enter Then
    If modBasic.$LabQuickMulti = "Yes" Then
      i = Last.Tag
      Wait
      GetFocusControl(i + 1)
    Endif
    
  Else If Key.Code = Key.Right Then
    FixButtonGroup_Click()
  Endif
  
End

Public Sub TextLineGroup_KeyRelease()
  
  Dim i As Integer
  
  If Key.Code = Key.Return Or If Key.Code = Key.Enter Then
    If modBasic.$LabQuickMulti = "Yes" Then
      i = Last.Tag
      Wait
      GetFocusControl(i + 1)
    Endif
  Endif
  
End

Public Sub DichoText_Click()
  
  Dim j As Integer
  
  j = Last.Tag
  SetQualitativeAbnormal(j)
  
End

Public Sub CheckLock_Click()
  
  Dim i As Integer
  
  i = Last.Tag
  If aChkLock[i].Value = True Then
    aComboBox[i].Enabled = False
  Else If aChkLock[i].Value = False Then
    aComboBox[i].Enabled = True
  Endif
  
End

Public Sub CalcButton_Click()
  
  Dim j As Integer
  Dim xsyscon As String
  Dim xval As Float
  
  j = Last.Tag
  If rbmetric.Value = True Then
    xsyscon = modFixLab.GetTestSysName($xData[j][1])
    If xsyscon Then
      xval = modSysCons.GetConstantValue(xsyscon, $encid)
      If xval Then
        aQuantiBox[j].Value = xval
      Endif
    Endif
  Endif
  
End

Private Sub SetQualitativeAbnormal(i As Integer)
  
  If $xData[i][4] = "Single Selection" Then
    If aComboBox[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Test", $xData[i][1], aComboBox[i].Text, $xData[i][4])
    Endif
  Else If $xData[i][4] = "Dichotomous" Then
    If aDichoValue[i].Value Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Test", $xData[i][1], aDichoValue[i].Value, $xData[i][4])
    Endif
  Else If $xData[i][4] = "Left and Right" Then
    If aLeftRight[i].DataText Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Test", $xData[i][1], aLeftRight[i].DataText, $xData[i][4])
    Endif
  Else If $xData[i][4] = "Qualitative" Then
    If aLineText[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Test", $xData[i][1], aLineText[i].Text, $xData[i][4])
    Endif
  Else If $xData[i][4] = "No Selection" Then
    If aGenTextArea[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Test", $xData[i][1], aGenTextArea[i].Text, $xData[i][4])
    Endif
  Endif
  
End

Private Sub GetFocusControl(i As Integer)
  
  If aHTMLText[i] Then
    ScrollView1.EnsureVisible(aHTMLText[i].X, aHTMLText[i].Y, aHTMLText[i].Width, aHTMLText[i].Height)
    aHTMLText[i].SetFocus
  Else If aLineText[i] Then
    ScrollView1.EnsureVisible(aLineText[i].X, aLineText[i].Y, aLineText[i].Width, aLineText[i].Height)
    aLineText[i].SetFocus
  Else If aValueBox[i] Then
    ScrollView1.EnsureVisible(aValueBox[i].X, aValueBox[i].Y, aValueBox[i].Width, aValueBox[i].Height)
    aValueBox[i].SetFocus
  Else If aDateBox[i] Then
    ScrollView1.EnsureVisible(aDateBox[i].X, aDateBox[i].Y, aDateBox[i].Width, aDateBox[i].Height)
    aDateBox[i].SetFocus
  Else If aQuantiBox[i] Then
    ScrollView1.EnsureVisible(aQuantiBox[i].X, aQuantiBox[i].Y, aQuantiBox[i].Width, aQuantiBox[i].Height)
    aQuantiBox[i].SetFocus
  Else If aComboBox[i] Then
    ScrollView1.EnsureVisible(aComboBox[i].X, aComboBox[i].Y, aComboBox[i].Width, aComboBox[i].Height)
    aComboBox[i].SetFocus
  Else If aGenTextArea[i] Then
    ScrollView1.EnsureVisible(aGenTextArea[i].X, aGenTextArea[i].Y, aGenTextArea[i].Width, aGenTextArea[i].Height)
    aGenTextArea[i].SetFocus
  Else If aButnFixed[i] Then
    ScrollView1.EnsureVisible(aButnFixed[i].X, aButnFixed[i].Y, aButnFixed[i].Width, aButnFixed[i].Height)
    aButnFixed[i].SetFocus
  Endif
  
Catch
  
End

Public Sub ImageBoxGroup_Click()
  
  Dim j As Integer
  
  j = Last.Tag
  Dialog.Filter = ["*.jpg;*.jpeg;*.png;*.bmp", "Picture files"]
  If Dialog.OpenFile() Then Return
  aButtonBox[j].Text = Dialog.Path
  
End
