' Gambas class file

Public Sub Form_Open()

  Dim xList As String[]

  modGeneralMain.ArrangeFormCentre(Me)

  cmbarsource.List = ["Image", "Video", "Hardware"]
  cmbartext.List = ["Yes", "No"]
  cmbarformat.List = BarCodeFormats()
  xList = modApplication.GetWebCamDevList()
  If xList.count Then
    Try txtdevice.List = xList
    Try txtbardevice.List = xList
  Else
    txtdevice.List = ["/dev/video0", "/dev/video1", "/dev/video2"]
    txtbardevice.List = ["/dev/video0", "/dev/video1", "/dev/video2"]
  Endif
  FillCombo(cmbarsize)
  FillCombo(cmbSizev)

  cmbcammethod.List = ["gstreamer", "video4linux"]
  cmbformat.List = ["jpeg", "png", "bmp"]
  cmbvideo.List = ["ppm", "pgm", "jpeg"]
  cmbgraycolor.List = ["GrayColor", "Black/White", "Composite Color"]
  cmboutputimg.List = ["Single", "Multiple"]

  cmbsmsmode.List = ["GSM Modem", "SMS API", "KDEConnect"]
  cmbmodem.List = modGSM.GetModemList()
  cmbproviderqrscan.List = ["nepalpay", "fonepay", "Chanakya"]

  cmbpacname.List = modMisc.PACSList()
  cmbpacsfind.List = ["dcmtk", "Dicomweb", "Orthanc"]
  cmbpacsget.List = ["dcmtk", "Dicomweb", "Orthanc"]
  cmbpacsssl.List = ["Enable", "Disable"]
  cmbdicomdesk.List = ["aeskulap", "ginkgocadx", "/opt/weasis/bin/Weasis"]
  cmbdicomweb.List = ["stone-webviewer", "osimis-viewer", "web-viewer", "dwv-plugin"]
  cmbrepofind.List = ["dcmtk", "Dicomweb", "Orthanc"]
  cmbrepoget.List = ["dcmtk", "Dicomweb", "Orthanc"]

  cmbimiscert.List = ["Enable", "Disable"]
  cmbimisquote.List = ["Yes", "No"]
  cmbclaimicdform.List = ["ICD10", "ICD11"]
  cmbautodoc.List = ["Enable", "AutoScan", "AutoDocs", "AddDocs", "Disable"]
  cmbautoclaim.List = ["Consultation", "None"]

  cmbssfcert.List = ["Enable", "Disable"]
  cmbssfquote.List = ["Yes", "No"]
  cmbssficdformat.List = ["ICD10", "ICD11"]
  cmbssflock.List = ["Enable", "Disable"]
  txturlright.List = ["{CAMUS_CHAT}", "{HI_IMIS_Page}", "{HI_CLAIMDOC_Page}", "{SSF_IMIS_Page}", "https://openimis.ssf.gov.np/", "https://imis.hib.gov.np/", "https://claimdoc.hib.gov.np/", "http://hmis.gov.np/hmis/dhis-web-commons/security/login.action"]

  cmbimagetopdf.List = ["imagemagick", "img2pdf"]
  cmbhtmltopdf.List = ["wkhtmltopdf", "chrome"]
  cmbnumtotext.List = ["number", "num2words"]

  cmbAIurl.List = ["https://api.groq.com/openai/v1/chat/completions"]

  BarCodeReader()
  ShowWebImage()

  ShowMiscSetting()

  ShowDefaultModem()
  ModemPlaySetting()

  ShowBarcodeSetting()

  ShowFTPParameter()
  SHowSMTPClient()

  DicomViewSetting()

  ShowClaimParam()
  ShowIMISParam()
  ShowSSFundParam()
  RightPanleWebSett()

  ShowQRSCanPay()
  GetOnlineBooking()

  SHowPDFSetting()

  DisplayCloudAI()

End

Public Sub btnmodemrefresh_Click()

  cmbmodem.List = modGSM.GetModemList()

End

Private Sub FillCombo(cmb As ComboBox)

  cmb.Clear
  cmb.Add("128x96")
  cmb.Add("160x120")
  cmb.Add("176x144")
  cmb.Add("320x240")
  cmb.Add("352x288")
  cmb.Add("640x480")
  cmb.Add("720x480")
  cmb.Add("1024x768")

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

''---------------------------------------- webcam bar code -----------------------------------------------------
Public Sub btnset_Click()

  modSettings.SaveSettingsToFile("BarCodeSettings/Device", txtbardevice.Text)
  modSettings.SaveSettingsToFile("BarCodeSettings/Source", cmbarsource.Text)
  modSettings.SaveSettingsToFile("BarCodeSettings/ImageSize", cmbarsize.Text)
  Balloon.Info(("Setting saved"), btnset)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub BarCodeReader()

  txtbardevice.Text = modSettings.ShowSettingFromFIle("BarCodeSettings/Device")
  cmbarsource.Text = modSettings.ShowSettingFromFIle("BarCodeSettings/Source")
  cmbarsize.Text = modSettings.ShowSettingFromFIle("BarCodeSettings/ImageSize")

End

''------------------------------ webcam for image and video -----------------------------------------------------------
Public Sub btnwebcam_Click()

  Dim xx As String

  xx = modImage.GetWebCamValue(txtdevice.Text)
  If xx Then
    modDevice.DesktopOpenFile(xx)
  Endif

End

Private Sub ShowWebImage()

  txtdevice.Text = modSettings.ShowSettingFromFIle("WebCamSettings/Device")
  cmbcammethod.Text = modSettings.ShowSettingFromFIle("WebCamSettings/Method")
  If modSettings.ShowSettingFromFIle("WebCamSettings/ImageQuality") Then
    spnquality.Value = CInt(modSettings.ShowSettingFromFIle("WebCamSettings/ImageQuality"))
  Endif

  cmbSizev.Text = modSettings.ShowSettingFromFIle("WebCamSettings/ImageSize")
  cmbformat.Text = modSettings.ShowSettingFromFIle("WebCamSettings/ImageFormat")

  cmbvideo.Text = modSettings.ShowSettingFromFIle("WebCamSettings/VideoFormat")
  If modSettings.ShowSettingFromFIle("WebCamSettings/FrameRate") Then
    spnrate.Value = CInt(modSettings.ShowSettingFromFIle("WebCamSettings/FrameRate"))
  Endif

  If modSettings.ShowSettingFromFIle("WebCamSettings/ImageThreshold") Then
    spnthreshold.Value = CInt(modSettings.ShowSettingFromFIle("WebCamSettings/ImageThreshold"))
  Endif
  If modSettings.ShowSettingFromFIle("WebCamSettings/ImageOpacity") Then
    spnopacity.Value = CInt(modSettings.ShowSettingFromFIle("WebCamSettings/ImageOpacity"))
  Endif

  cmbgraycolor.Text = modSettings.ShowSettingFromFIle("WebCamSettings/Conversion")
  cmboutputimg.Text = modSettings.ShowSettingFromFIle("WebCamSettings/OutputMode")

End

Public Sub btnvideo_Click()

  modSettings.SaveSettingsToFile("WebCamSettings/Device", txtdevice.Text)
  modSettings.SaveSettingsToFile("WebCamSettings/Method", cmbcammethod.Text)
  modSettings.SaveSettingsToFile("WebCamSettings/ImageQuality", CStr(spnquality.Value))

  modSettings.SaveSettingsToFile("WebCamSettings/ImageSize", cmbSizev.Text)
  modSettings.SaveSettingsToFile("WebCamSettings/ImageFormat", cmbformat.Text)

  modSettings.SaveSettingsToFile("WebCamSettings/VideoFormat", cmbvideo.Text)
  modSettings.SaveSettingsToFile("WebCamSettings/FrameRate", CStr(spnrate.Value))

  modSettings.SaveSettingsToFile("WebCamSettings/ImageOpacity", CStr(spnopacity.Value))
  modSettings.SaveSettingsToFile("WebCamSettings/ImageThreshold", CStr(spnthreshold.Value))

  modSettings.SaveSettingsToFile("WebCamSettings/Conversion", cmbgraycolor.Text)
  modSettings.SaveSettingsToFile("WebCamSettings/OutputMode", cmboutputimg.Text)

  modBasic.LoadWebCamVariables()
  Balloon.Info(("Settings saved"), btnvideo)
  Balloon.Delay = modBasic.$BalloonDelay

End

''--------------------------------- Miscellaneous -------------------------------------------------------------
Private Sub ShowMiscSetting()

  txtsshport.Text = modSettings.ShowSettingFromFIle("SSHAuthentication/Port")
  txtexpeak.Text = modSettings.ShowSettingFromFIle("TextToSpeech/CustomCommand")
  txtcamus.Text = modSettings.ShowSettingFromFIle("CamusChat/URL")

  cmbserialdevice.Text = modSettings.ShowSettingFromFIle("SerialPort/Device")
  txtserialclear.Text = modSettings.ShowSettingFromFIle("SerialPort/ClearString")

  txttelegramapi.Text = modSettings.ShowSettingFromFIle("Telegram/API")
  txttelegramlink.Text = modSettings.ShowSettingFromFIle("Telegram/Link")

End

''ssh port
Public Sub btnsshport_Click()

  modSettings.SaveSettingsToFile("SSHAuthentication/Port", txtsshport.Text)
  Balloon.Info(("Information saved"), btnsshport)
  Balloon.Delay = modBasic.$BalloonDelay

End

''speak text
Public Sub btnespeak_Click()

  modSettings.SaveSettingsToFile("TextToSpeech/CustomCommand", txtexpeak.Text)
  Balloon.Info(("Information saved"), btnespeak)
  Balloon.Delay = modBasic.$BalloonDelay

End

''camus
Public Sub btncamus_Click()

  modSettings.SaveSettingsToFile("CamusChat/URL", txtcamus.Text)
  Balloon.Info(("Information saved"), btncamus)
  Balloon.Delay = modBasic.$BalloonDelay

End

''serial port
Public Sub btnserialset_Click()

  modSettings.SaveSettingsToFile("SerialPort/Device", cmbserialdevice.Text)
  modBasic.$SerialPort = cmbserialdevice.Text
  modSettings.SaveSettingsToFile("SerialPort/ClearString", txtserialclear.Text)
  modBasic.$SerialClear = txtserialclear.Text
  Balloon.Info(("Information saved"), btnserialset)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btntelegramapi_Click()

  modSettings.SaveSettingsToFile("Telegram/API", txttelegramapi.Text)
  Balloon.Info(("Information saved"), btntelegramapi)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btntelegramlink_Click()

  modSettings.SaveSettingsToFile("Telegram/Link", txttelegramlink.Text)
  Balloon.Info(("Information saved"), btntelegramlink)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btncertdown_Click()

  Exec ["wget", "http://curl.haxx.se/ca/cacert.pem"] Wait
  Message.Info("Copy " & User.Home &/ "cacert.pem" & " To " & modHelpVariable.$appetcFolder, ("OK"))

End

'''------------------------------------------ modem settings ------------------------------------------
Public Sub btnsmsmode_Click()

  modSettings.SaveSettingsToFile("SMSMethod/Default", cmbsmsmode.Text)
  Balloon.Info(("Information saved"), btnsmsmode)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnkderefresh_Click()

  cmbkdedevice.List = modDevice.KDEConnDeviceList()

End

Public Sub btnkdedefault_Click()

  modSettings.SaveSettingsToFile("KDEConnect/DefaultPath", cmbkdedevice.Text)
  Balloon.Info(("Information saved"), btnkderefresh)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txtapipath_Click()

  If Dialog.OpenFile() Then Return
  txtapipath.Text = Dialog.Path

End

Public Sub btnapipath_Click()

  modSettings.SaveSettingsToFile("SMS_API/DefaultPath", txtapipath.Text)
  modSettings.SaveSettingsToFile("SMS_API/DefaultExec", txtapiexec.Text)
  Balloon.Info(("Information saved"), btnapipath)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnapihelp_Click()

  Dim xx As String

  xx = "Script file should contain " & "{SMSPhoneNumber}" & " for Phone Number"
  xx = xx & gb.NewLine & "Script file should contain " & "{SMSMessage}" & " for SMS Message"
  Message.Info(xx, ("OK"))

End

Public Sub btnmodem_Click()

  modSettings.SaveSettingsToFile("GSMModem/DefaultPath", cmbmodem.Text)
  Balloon.Info(("Information saved"), btnmodem)
  Balloon.Delay = modBasic.$BalloonDelay

End

Private Sub ShowDefaultModem()

  cmbsmsmode.Text = modSettings.ShowSettingFromFIle("SMSMethod/Default")
  txtapipath.Text = modSettings.ShowSettingFromFIle("SMS_API/DefaultPath")
  txtapiexec.Text = modSettings.ShowSettingFromFIle("SMS_API/DefaultExec")

  cmbmodem.Text = modSettings.ShowSettingFromFIle("GSMModem/DefaultPath")
  cmbkdedevice.Text = modSettings.ShowSettingFromFIle("KDEConnect/DefaultPath")

End

Private Sub ModemPlaySetting()

  If modGSM.$ModemEnabled = True Then
    btnmodemplay.Enabled = False
    btnmodemstop.Enabled = True
  Else
    btnmodemplay.Enabled = True
    btnmodemstop.Enabled = False
  Endif

End

Public Sub btnmodemplay_Click()

  modDevice.StartDefaultModem()
  ModemPlaySetting()

End

Public Sub btnmodemstop_Click()

  modGSM.StopDefaultModem()
  ModemPlaySetting()

End

Public Sub btnussd_Click()

  Dim xx As String
  Dim msg As String

  Inc Application.Busy
  xx = modGSM.$ModemIndex
  If modGSM.$ModemEnabled = True Then
    msg = modGSM.USSDSession(xx, txtussd.Text)
    Wait 1
  Endif
  Dec Application.Busy

  Message.Info(msg, ("OK"))

End

Public Sub btnsendall_Click()

  modAppSupport.SendSMSData(txtsmsnow)

End

Public Sub btnquerefresh_Click()

  Dim res As Result

  res = modDatabase.$myConn.Exec("select count(fldid) as col from tblsmslog where fldstatus=&1", "Waiting")
  If res.Available Then
    txtquesms.Value = res["col"]
  Endif

End

''----------------------------------- Bar Code -------------------------------------
Private Function BarCodeFormats() As String[]

  Dim xfile As String
  Dim xlist As String[]

  xfile = modHelpVariable.$localesDirectory &/ "zint"
  If Exist(xfile) Then
    xlist = modString.GetSelStringFieldFromCSV(xfile, 1, ";")
  Endif
  Return xlist

End

Private Sub ShowBarcodeSetting()

  cmbarformat.Text = modSettings.ShowSettingFromFIle("BarCodeFormat/FormatString")
  cmbartext.Text = modSettings.ShowSettingFromFIle("BarCodeFormat/DisplayText")

  If modSettings.ShowSettingFromFIle("BarCodeFormat/Width") Then
    txtbarscale.Value = CFloat(modSettings.ShowSettingFromFIle("BarCodeFormat/Width"))
  Endif
  If modSettings.ShowSettingFromFIle("BarCodeFormat/ForeGround") Then
    colbarfore.Value = CInt(modSettings.ShowSettingFromFIle("BarCodeFormat/ForeGround"))
  Endif
  If modSettings.ShowSettingFromFIle("BarCodeFormat/BackGround") Then
    colbarback.Value = CInt(modSettings.ShowSettingFromFIle("BarCodeFormat/BackGround"))
  Endif
  If modSettings.ShowSettingFromFIle("BarCodeFormat/WhiteSpace") Then
    txtbarwhite.Value = CInt(modSettings.ShowSettingFromFIle("BarCodeFormat/WhiteSpace"))
  Endif

  If modSettings.ShowSettingFromFIle("BarCodeFormat/PixelSize") Then
    txtbarpixel.Value = CInt(modSettings.ShowSettingFromFIle("BarCodeFormat/PixelSize"))
  Endif
  If modSettings.ShowSettingFromFIle("BarCodeFormat/ImageDPI") Then
    txtbardpi.Value = CInt(modSettings.ShowSettingFromFIle("BarCodeFormat/ImageDPI"))
  Endif
  If modSettings.ShowSettingFromFIle("BarCodeFormat/MarginWidth") Then
    txtbarmargin.Value = CInt(modSettings.ShowSettingFromFIle("BarCodeFormat/MarginWidth"))
  Endif

End

Public Sub btnbarformat_Click()

  modSettings.SaveSettingsToFile("BarCodeFormat/FormatString", cmbarformat.Text)
  modBasic.$BarCodeFormatString = cmbarformat.Text
  Balloon.Info(("Information saved"), btnbarformat)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbarwidth_Click()

  modSettings.SaveSettingsToFile("BarCodeFormat/Width", CStr(txtbarscale.Value))
  modBasic.$BarCodeWidth = txtbarscale.Value
  Balloon.Info(("Information saved"), btnbarwidth)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbarfore_Click()

  modSettings.SaveSettingsToFile("BarCodeFormat/ForeGround", colbarfore.Value)
  modBasic.$BarCodeForeGround = colbarfore.Value
  Balloon.Info(("Information saved"), btnbarfore)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbarback_Click()

  modSettings.SaveSettingsToFile("BarCodeFormat/BackGround", colbarback.Value)
  modBasic.$BarCodeBackGround = colbarback.Value
  Balloon.Info(("Information saved"), btnbarback)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbartext_Click()

  modSettings.SaveSettingsToFile("BarCodeFormat/DisplayText", cmbartext.Text)
  modBasic.$BarCodeDisplayText = cmbartext.Text
  Balloon.Info(("Information saved"), btnbartext)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbarwhite_Click()

  modSettings.SaveSettingsToFile("BarCodeFormat/WhiteSpace", CStr(txtbarwhite.Value))
  modBasic.$BarCodeWhiteSpace = txtbarwhite.Value
  Balloon.Info(("Information saved"), btnbarwhite)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbarpixel_Click()

  modSettings.SaveSettingsToFile("BarCodeFormat/PixelSize", CStr(txtbarpixel.Value))
  modBasic.$BarCodePixelSize = txtbarpixel.Value
  Balloon.Info(("Information saved"), btnbarpixel)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbardpi_Click()

  modSettings.SaveSettingsToFile("BarCodeFormat/ImageDPI", CStr(txtbardpi.Value))
  modBasic.$BarCodeImageDPI = txtbardpi.Value
  Balloon.Info(("Information saved"), btnbardpi)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbarmargin_Click()

  modSettings.SaveSettingsToFile("BarCodeFormat/MarginWidth", CStr(txtbarmargin.Value))
  modBasic.$BarCodeMarginWidth = txtbarmargin.Value
  Balloon.Info(("Information saved"), btnbarmargin)
  Balloon.Delay = modBasic.$BalloonDelay

End

'''---------------------------------- FTP --------------------------------------------------------------
Private Sub ShowFTPParameter()

  txtftphost.Text = modSettings.ShowSettingFromFIle("RemoteFTP/HostName")
  txtftpfolder.Text = modSettings.ShowSettingFromFIle("RemoteFTP/FTPFolder")
  If modSettings.ShowSettingFromFIle("RemoteFTP/UserName") Then
    txtftpuser.Text = UnBase64(modSettings.ShowSettingFromFIle("RemoteFTP/UserName"))
  Endif
  If modSettings.ShowSettingFromFIle("RemoteFTP/PassWord") Then
    txtftppass.Text = UnBase64(modSettings.ShowSettingFromFIle("RemoteFTP/PassWord"))
  Endif

End

Public Sub btnftphost_Click()

  modSettings.SaveSettingsToFile("RemoteFTP/HostName", txtftphost.Text)
  modBasic.$RepoManHost = txtftphost.Text
  Balloon.Info(("Information saved"), btnftphost)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnftpfolder_Click()

  modSettings.SaveSettingsToFile("RemoteFTP/FTPFolder", txtftpfolder.Text)
  modBasic.$RepoManFolder = txtftpfolder.Text
  Balloon.Info(("Information saved"), btnftpfolder)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnftpuser_Click()

  If txtftpuser.Text Then
    modSettings.SaveSettingsToFile("RemoteFTP/UserName", Base64(txtftpuser.Text))
    modBasic.$RepoManUser = txtftpuser.Text
    Balloon.Info(("Information saved"), btnftpuser)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnftppass_Click()

  If txtftppass.Text Then
    modSettings.SaveSettingsToFile("RemoteFTP/PassWord", Base64(txtftppass.Text))
    modBasic.$RepoManPass = txtftppass.Text
    Balloon.Info(("Information saved"), btnftppass)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

''------------------------------------- SMTP Client ---------------------------
Private Sub SHowSMTPClient()

  txtsmtphost.Text = modSettings.ShowSettingFromFIle("SMTPEmail/HostName")
  txtsmtpuser.Text = modSettings.ShowSettingFromFIle("SMTPEmail/UserName")
  If modSettings.ShowSettingFromFIle("SMTPEmail/PassWord") Then
    txtsmtppass.Text = UnBase64(modSettings.ShowSettingFromFIle("SMTPEmail/PassWord"))
  Endif
  txtsmtpfrom.Text = modSettings.ShowSettingFromFIle("SMTPEmail/SenderName")

End

Public Sub btnsmtphost_Click()

  modSettings.SaveSettingsToFile("SMTPEmail/HostName", txtsmtphost.Text)
  modBasic.$emailSMTPHost = txtsmtphost.Text
  Balloon.Info(("Information saved"), btnsmtphost)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsmtpuser_Click()

  modSettings.SaveSettingsToFile("SMTPEmail/UserName", txtsmtpuser.Text)
  modBasic.$emailSMTPUser = txtsmtpuser.Text
  Balloon.Info(("Information saved"), btnsmtpuser)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsmtppass_Click()

  If txtsmtppass.Text Then
    modSettings.SaveSettingsToFile("SMTPEmail/PassWord", Base64(txtsmtppass.Text))
    modBasic.$emailSMTPPass = txtsmtppass.Text
    Balloon.Info(("Information saved"), btnsmtppass)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnsmtpfrom_Click()

  modSettings.SaveSettingsToFile("SMTPEmail/SenderName", txtsmtpfrom.Text)
  modBasic.$emailSMTPFrom = txtsmtpfrom.Text
  Balloon.Info(("Information saved"), btnsmtpfrom)
  Balloon.Delay = modBasic.$BalloonDelay

End

''========================================
Public Sub cmbpacname_Click()

  If cmbpacname.Text Then
    ShowPacsConfiguration(cmbpacname.Text)
  Endif

End

Private Sub ShowPacsConfiguration(sServer As String)

  txtpacshost.Text = modSettings.ShowSettingFromFIle(sServer & "/" & "HostName")
  cmbpacsfind.Text = modSettings.ShowSettingFromFIle(sServer & "/" & "FindCommand")
  cmbpacsget.Text = modSettings.ShowSettingFromFIle(sServer & "/" & "GetCommand")
  cmbpacsssl.Text = modSettings.ShowSettingFromFIle(sServer & "/" & "UseSSL")
  txtpacsAET.Text = modSettings.ShowSettingFromFIle(sServer & "/" & "AETitle")
  txtpacsport.Text = modSettings.ShowSettingFromFIle(sServer & "/" & "Port")

  txtorthancport.Text = modSettings.ShowSettingFromFIle(sServer & "/" & "HTTPPort")
  If modSettings.ShowSettingFromFIle(sServer & "/" & "HTTPUser") Then
    txtpacsuser.Text = UnBase64(modSettings.ShowSettingFromFIle(sServer & "/" & "HTTPUser"))
  Endif
  If modSettings.ShowSettingFromFIle(sServer & "/" & "HTTPPass") Then
    txtpacspass.Text = UnBase64(modSettings.ShowSettingFromFIle(sServer & "/" & "HTTPPass"))
  Endif

End

Public Sub btnpacshost_Click()

  If cmbpacname.Text Then
    modSettings.SaveSettingsToFile(cmbpacname.Text & "/" & "HostName", txtpacshost.Text)
    Balloon.Info(("Information saved"), btnpacshost)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnpacsfind_Click()

  If cmbpacname.Text Then
    modSettings.SaveSettingsToFile(cmbpacname.Text & "/" & "FindCommand", cmbpacsfind.Text)
    Balloon.Info(("Information saved"), btnpacsfind)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnpacsget_Click()

  If cmbpacname.Text Then
    modSettings.SaveSettingsToFile(cmbpacname.Text & "/" & "GetCommand", cmbpacsget.Text)
    Balloon.Info(("Information saved"), btnpacsget)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnpacsssl_Click()

  If cmbpacname.Text Then
    modSettings.SaveSettingsToFile(cmbpacname.Text & "/" & "UseSSL", cmbpacsssl.Text)
    Balloon.Info(("Information saved"), btnpacsssl)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnpacsaet_Click()

  If cmbpacname.Text Then
    modSettings.SaveSettingsToFile(cmbpacname.Text & "/" & "AETitle", txtpacsAET.Text)
    Balloon.Info(("Information saved"), btnpacsaet)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnpacsport_Click()

  If cmbpacname.Text Then
    modSettings.SaveSettingsToFile(cmbpacname.Text & "/" & "Port", txtpacsport.Text)
    Balloon.Info(("Information saved"), btnpacsport)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnorthancport_Click()

  If cmbpacname.Text Then
    modSettings.SaveSettingsToFile(cmbpacname.Text & "/" & "HTTPPort", txtorthancport.Text)
    Balloon.Info(("Information saved"), btnorthancport)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnpacsuser_Click()

  If cmbpacname.Text Then
    If txtpacsuser.Text Then
      modSettings.SaveSettingsToFile(cmbpacname.Text & "/" & "HTTPUser", Base64(txtpacsuser.Text))
      Balloon.Info(("Information saved"), btnpacsuser)
      Balloon.Delay = modBasic.$BalloonDelay
    Endif
  Endif

End

Public Sub btnpacspass_Click()

  If cmbpacname.Text Then
    If txtpacspass.Text Then
      modSettings.SaveSettingsToFile(cmbpacname.Text & "/" & "HTTPPass", Base64(txtpacspass.Text))
      Balloon.Info(("Information saved"), btnpacspass)
      Balloon.Delay = modBasic.$BalloonDelay
    Endif
  Endif

End

Public Sub txtpacsupload_Click()

  If Dialog.OpenFile() Then Return
  txtpacsupload.Text = Dialog.Path

End

Public Sub btnpacsupload_Click()

  Dim xxx As String

  If txtpacshost.Text Then
    If Exist(txtpacsupload.Text) Then
      Inc Application.Busy
      xxx = modPACS.UploadDicomArchive(txtpacshost.Text, txtorthancport.Text, txtpacsupload.Text, txtpacsuser.Text, txtpacspass.Text, cmbpacsssl.Text)
      Dec Application.Busy
    Endif
  Endif

End

''============= viewer ----------------------
Private Sub DicomViewSetting()

  cmbdicomdesk.Text = modSettings.ShowSettingFromFIle("DicomViewer/Default")
  cmbdicomweb.Text = modSettings.ShowSettingFromFIle("DicomWebViewer/Default")
  cmbrepofind.Text = modSettings.ShowSettingFromFIle("Repository/FindCommand")
  cmbrepoget.Text = modSettings.ShowSettingFromFIle("Repository/GetCommand")
  cmbrepossl.Text = modSettings.ShowSettingFromFIle("Repository/UseSSL")

End

Public Sub btndicom_Click()

  If cmbdicomdesk.Text Then
    If System.Exist(cmbdicomdesk.Text) Then
    Else
      modApplSub.InstallSelectedApplication([cmbdicomdesk.Text])
    Endif
  Endif
  modSettings.SaveSettingsToFile("DicomViewer/Default", cmbdicomdesk.Text)
  Balloon.Info(("Information saved"), btndicom)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndicomdesk_Click()

  modSettings.SaveSettingsToFile("DicomWebViewer/Default", cmbdicomweb.Text)
  Balloon.Info(("Information saved"), btndicomdesk)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnrepofind_Click()

  modSettings.SaveSettingsToFile("Repository/FindCommand", cmbrepofind.Text)
  Balloon.Info(("Information saved"), btnrepofind)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnrepoget_Click()

  modSettings.SaveSettingsToFile("Repository/GetCommand", cmbrepoget.Text)
  Balloon.Info(("Information saved"), btnrepoget)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnrepossl_Click()

  modSettings.SaveSettingsToFile("Repository/UseSSL", cmbrepossl.Text)
  Balloon.Info(("Information saved"), btnrepossl)
  Balloon.Delay = modBasic.$BalloonDelay

End

''=================== Claim Doc ===========================
Private Sub ShowClaimParam()

  If modSettings.ShowSettingFromFIle("InsuranceClaim/UserName") Then
    txtclaimuser.Text = UnBase64(modSettings.ShowSettingFromFIle("InsuranceClaim/UserName"))
  Endif
  If modSettings.ShowSettingFromFIle("InsuranceClaim/PassWord") Then
    txtclaimpass.Text = UnBase64(modSettings.ShowSettingFromFIle("InsuranceClaim/PassWord"))
  Endif

  txtcheckurl.Text = modSettings.ShowSettingFromFIle("InsuranceClaim/CheckURL")
  txtsaveurl.Text = modSettings.ShowSettingFromFIle("InsuranceClaim/SaveURL")
  txtloadurl.Text = modSettings.ShowSettingFromFIle("InsuranceClaim/UploadLoadURL")
  cmbautodoc.Text = modSettings.ShowSettingFromFIle("InsuranceClaim/AutoUpload")

End

Public Sub txtcheckurl_Click()

  txtcheckurl.Text = "https://claimdoc.hib.gov.np:443/user/check.php"

End

Public Sub txtsaveurl_Click()

  txtsaveurl.Text = "https://claimdoc.hib.gov.np:443/claim/create.php"

End

Public Sub txtloadurl_Click()

  txtloadurl.Text = "https://claimdoc.hib.gov.np:443/claim/upload.php"

End

Public Sub btnclaimuser_Click()

  If txtclaimuser.Text Then
    modSettings.SaveSettingsToFile("InsuranceClaim/UserName", Base64(txtclaimuser.Text))
    modBasic.$ClaimUser = txtclaimuser.Text
    Balloon.Info(("Information saved"), btnclaimuser)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnclaimpass_Click()

  If txtclaimpass.Text Then
    modSettings.SaveSettingsToFile("InsuranceClaim/PassWord", Base64(txtclaimpass.Text))
    modBasic.$ClaimPass = txtclaimpass.Text
    Balloon.Info(("Information saved"), btnclaimpass)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btncheckurl_Click()

  modSettings.SaveSettingsToFile("InsuranceClaim/CheckURL", txtcheckurl.Text)
  modBasic.$ClaimCheckURL = txtcheckurl.Text
  Balloon.Info(("Information saved"), btncheckurl)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsaveurl_Click()

  modSettings.SaveSettingsToFile("InsuranceClaim/SaveURL", txtsaveurl.Text)
  modBasic.$ClaimSaveURL = txtsaveurl.Text
  Balloon.Info(("Information saved"), btnsaveurl)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnloadurl_Click()

  modSettings.SaveSettingsToFile("InsuranceClaim/UploadLoadURL", txtloadurl.Text)
  modBasic.$ClaimLoadURL = txtloadurl.Text
  Balloon.Info(("Information saved"), btnloadurl)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnautodocs_Click()

  modSettings.SaveSettingsToFile("InsuranceClaim/AutoUpload", cmbautodoc.Text)
  modBasic.$ClaimAutoDocs = cmbautodoc.Text
  Balloon.Info(("Information saved"), btnautodocs)
  Balloon.Delay = modBasic.$BalloonDelay

End

''============================= IMIS Parameters ===================
Private Sub ShowIMISParam()

  If modSettings.ShowSettingFromFIle("InsuranceMain/UserName") Then
    txtimisuser.Text = UnBase64(modSettings.ShowSettingFromFIle("InsuranceMain/UserName"))
  Endif
  If modSettings.ShowSettingFromFIle("InsuranceMain/Password") Then
    txtimispass.Text = UnBase64(modSettings.ShowSettingFromFIle("InsuranceMain/Password"))
  Endif
  If modSettings.ShowSettingFromFIle("InsuranceMain/RemoteUser") Then
    txtremouser.Text = UnBase64(modSettings.ShowSettingFromFIle("InsuranceMain/RemoteUser"))
  Endif

  txtimispatURL.Text = modSettings.ShowSettingFromFIle("InsuranceMain/PatientURL")
  txtimiseligURL.Text = modSettings.ShowSettingFromFIle("InsuranceMain/EligibleURL")
  txtimisrequesturl.Text = modSettings.ShowSettingFromFIle("InsuranceMain/ClaimURL")
  txtimisvalidateurl.Text = modSettings.ShowSettingFromFIle("InsuranceMain/ValidationURL")

  txtimishospuu.Text = modSettings.ShowSettingFromFIle("InsuranceMain/HospitalUUID")
  txtimisadminuu.Text = modSettings.ShowSettingFromFIle("InsuranceMain/ClaimAdminUUID")
  cmbimiscert.Text = modSettings.ShowSettingFromFIle("InsuranceMain/CACertificate")
  cmbimisquote.Text = modSettings.ShowSettingFromFIle("InsuranceMain/QuotePass")
  cmbclaimicdform.Text = modSettings.ShowSettingFromFIle("InsuranceMain/ICDFormat")
  txtimisagent.Text = modSettings.ShowSettingFromFIle("InsuranceMain/UserAgent")
  cmbautoclaim.Text = modSettings.ShowSettingFromFIle("InsuranceMain/AutoClaim")

End

Public Sub txtimispatURL_Click()

  txtimispatURL.Text = "https://imis.hib.gov.np/api/api_fhir/Patient/"

End

Public Sub txtimiseligURL_Click()

  txtimiseligURL.Text = "https://imis.hib.gov.np/api/api_fhir/EligibilityRequest/"

End

Public Sub txtimisrequesturl_Click()

  txtimisrequesturl.Text = "https://imis.hib.gov.np/api/api_fhir/Claim/"

End

Public Sub txtimisvalidateurl_Click()

  txtimisvalidateurl.Text = "https://imis.hib.gov.np/api/api_fhir/cap-validation"

End

Public Sub btnclaimicdform_Click()

  modSettings.SaveSettingsToFile("InsuranceMain/ICDFormat", cmbclaimicdform.Text)
  modBasic.$IMISICDForm = cmbclaimicdform.Text
  Balloon.Info(("Information saved"), btnclaimicdform)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnimisuser_Click()

  If txtimisuser.Text Then
    modSettings.SaveSettingsToFile("InsuranceMain/UserName", Base64(txtimisuser.Text))
    modBasic.$IMISUser = txtimisuser.Text
    Balloon.Info(("Information saved"), btnimisuser)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnimispass_Click()

  If txtimispass.Text Then
    modSettings.SaveSettingsToFile("InsuranceMain/Password", Base64(txtimispass.Text))
    modBasic.$IMISPass = txtimispass.Text
    Balloon.Info(("Information saved"), btnimispass)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnimisremouser_Click()

  If txtremouser.Text Then
    modSettings.SaveSettingsToFile("InsuranceMain/RemoteUser", Base64(txtremouser.Text))
    modBasic.$IMISRemoUser = txtremouser.Text
    Balloon.Info(("Information saved"), btnimisremouser)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnimispaturl_Click()

  modSettings.SaveSettingsToFile("InsuranceMain/PatientURL", txtimispatURL.Text)
  modBasic.$IMISPatientURL = txtimispatURL.Text
  Balloon.Info(("Information saved"), btnimispaturl)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnimiseligURL_Click()

  modSettings.SaveSettingsToFile("InsuranceMain/EligibleURL", txtimiseligURL.Text)
  modBasic.$IMISEligibleURL = txtimiseligURL.Text
  Balloon.Info(("Information saved"), btnimiseligURL)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnimisrequrl_Click()

  modSettings.SaveSettingsToFile("InsuranceMain/ClaimURL", txtimisrequesturl.Text)
  modBasic.$IMISClaimURL = txtimisrequesturl.Text
  Balloon.Info(("Information saved"), btnimisrequrl)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnimisvalidurl_Click()

  modSettings.SaveSettingsToFile("InsuranceMain/ValidationURL", txtimisvalidateurl.Text)
  modBasic.$IMISValidateURL = txtimisvalidateurl.Text
  Balloon.Info(("Information saved"), btnimisvalidurl)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnimishodpuu_Click()

  modSettings.SaveSettingsToFile("InsuranceMain/HospitalUUID", txtimishospuu.Text)
  modBasic.$IMISHospUUID = txtimishospuu.Text
  Balloon.Info(("Information saved"), btnimishodpuu)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnimisadminuu_Click()

  modSettings.SaveSettingsToFile("InsuranceMain/ClaimAdminUUID", txtimisadminuu.Text)
  modBasic.$IMISAdminUUID = txtimisadminuu.Text
  Balloon.Info(("Information saved"), btnimisadminuu)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnimiscert_Click()

  modSettings.SaveSettingsToFile("InsuranceMain/CACertificate", cmbimiscert.Text)
  modBasic.$IMISCACert = cmbimiscert.Text
  Balloon.Info(("Information saved"), btnimiscert)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnimisquote_Click()

  modSettings.SaveSettingsToFile("InsuranceMain/QuotePass", cmbimisquote.Text)
  modBasic.$IMISQuote = cmbimisquote.Text
  Balloon.Info(("Information saved"), btnimisquote)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnimisagent_Click()

  modSettings.SaveSettingsToFile("InsuranceMain/UserAgent", txtimisagent.Text)
  modBasic.$IMISAgent = txtimisagent.Text
  Balloon.Info(("Information saved"), btnimisagent)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnautoclaim_Click()

  modSettings.SaveSettingsToFile("InsuranceMain/AutoClaim", cmbautoclaim.Text)
  modBasic.$IMISAutoClaim = cmbautoclaim.Text
  Balloon.Info(("Information saved"), btnautoclaim)
  Balloon.Delay = modBasic.$BalloonDelay

End

''============================= SSF Parameters ===================
Private Sub ShowSSFundParam()

  If modSettings.ShowSettingFromFIle("SocialSecurityFund/UserName") Then
    txtssfuser.Text = UnBase64(modSettings.ShowSettingFromFIle("SocialSecurityFund/UserName"))
  Endif
  If modSettings.ShowSettingFromFIle("SocialSecurityFund/Password") Then
    txtssfpass.Text = UnBase64(modSettings.ShowSettingFromFIle("SocialSecurityFund/Password"))
  Endif
  If modSettings.ShowSettingFromFIle("SocialSecurityFund/RemoteUser") Then
    txtssfremouser.Text = UnBase64(modSettings.ShowSettingFromFIle("SocialSecurityFund/RemoteUser"))
  Endif

  txtssfpatURL.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/PatientURL")
  txtssfeligURL.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/EligibleURL")
  txtssfrequesturl.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/ClaimURL")
  txtssfimgURL.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/ImageURL")
  txtssfeplURL.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/EmployerURL")
  txtssffileURL.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/AttachmentURL")
  txtssfbookURL.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/BookingURL")

  txtssfhospuu.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/HospitalUUID")
  txtssfadminuu.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/ClaimAdminUUID")
  txtssfpractrole.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/PractRole")
  cmbssfcert.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/CACertificate")
  cmbssfquote.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/QuotePass")
  cmbssficdformat.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/ICDFormat")
  cmbssflock.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/BookingLock")
  txtssfagent.Text = modSettings.ShowSettingFromFIle("SocialSecurityFund/UserAgent")

End

Public Sub btnssfuser_Click()

  If txtssfuser.Text Then
    modSettings.SaveSettingsToFile("SocialSecurityFund/UserName", Base64(txtssfuser.Text))
    modBasic.$SSFUser = txtssfuser.Text
    Balloon.Info(("Information saved"), btnssfuser)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnssfpass_Click()

  If txtssfpass.Text Then
    modSettings.SaveSettingsToFile("SocialSecurityFund/Password", Base64(txtssfpass.Text))
    modBasic.$SSFPass = txtssfpass.Text
    Balloon.Info(("Information saved"), btnssfpass)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnssfremouser_Click()

  If txtssfremouser.Text Then
    modSettings.SaveSettingsToFile("SocialSecurityFund/RemoteUser", Base64(txtssfremouser.Text))
    modBasic.$SSFRemoUser = txtssfremouser.Text
    Balloon.Info(("Information saved"), btnssfremouser)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnssfpaturl_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/PatientURL", txtssfpatURL.Text)
  modBasic.$SSFPatientURL = txtssfpatURL.Text
  Balloon.Info(("Information saved"), btnssfpaturl)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnssfeligURL_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/EligibleURL", txtssfeligURL.Text)
  modBasic.$SSFEligibleURL = txtssfeligURL.Text
  Balloon.Info(("Information saved"), btnssfeligURL)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnssfrequrl_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/ClaimURL", txtssfrequesturl.Text)
  modBasic.$SSFClaimURL = txtssfrequesturl.Text
  Balloon.Info(("Information saved"), btnssfrequrl)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnssfimgurl_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/ImageURL", txtssfimgURL.Text)
  modBasic.$SSFImageURL = txtssfimgURL.Text
  Balloon.Info(("Information saved"), btnssfimgurl)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnssfemplURL_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/EmployerURL", txtssfeplURL.Text)
  modBasic.$SSFEmployerURL = txtssfeplURL.Text
  Balloon.Info(("Information saved"), btnssfemplURL)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnssffileurl_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/AttachmentURL", txtssffileURL.Text)
  modBasic.$SSFAttachURL = txtssffileURL.Text
  Balloon.Info(("Information saved"), btnssffileurl)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnssfbookURL_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/BookingURL", txtssfbookURL.Text)
  modBasic.$SSFBookingURL = txtssfbookURL.Text
  Balloon.Info(("Information saved"), btnssfbookURL)
  Balloon.Delay = modBasic.$BalloonDelay

End

''''
Public Sub btnssfhodpuu_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/HospitalUUID", txtssfhospuu.Text)
  modBasic.$SSFHospUUID = txtssfhospuu.Text
  Balloon.Info(("Information saved"), btnssfhodpuu)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnssfadminuu_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/ClaimAdminUUID", txtssfadminuu.Text)
  modBasic.$SSFAdminUUID = txtssfadminuu.Text
  Balloon.Info(("Information saved"), btnssfadminuu)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnssfpractrole_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/PractRole", txtssfpractrole.Text)
  modBasic.$SSFPracRole = txtssfpractrole.Text
  Balloon.Info(("Information saved"), btnssfpractrole)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnssfcert_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/CACertificate", cmbssfcert.Text)
  modBasic.$SSFCACert = cmbssfcert.Text
  Balloon.Info(("Information saved"), btnssfcert)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnssfquote_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/QuotePass", cmbssfquote.Text)
  modBasic.$SSFQuote = cmbssfquote.Text
  Balloon.Info(("Information saved"), btnssfquote)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnssficdform_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/ICDFormat", cmbssficdformat.Text)
  modBasic.$SSFICDForm = cmbssficdformat.Text
  Balloon.Info(("Information saved"), btnssficdform)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnssflock_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/BookingLock", cmbssflock.Text)
  modBasic.$SSFBookLock = cmbssflock.Text
  Balloon.Info(("Information saved"), btnssflock)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnssfagent_Click()

  modSettings.SaveSettingsToFile("SocialSecurityFund/UserAgent", txtssfagent.Text)
  modBasic.$SSFUserAgent = txtssfagent.Text
  Balloon.Info(("Information saved"), btnssfagent)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txtssfpatURL_Click()

  txtssfpatURL.Text = "https://openimis.ssf.gov.np/api/api_fhir_r4/Patient/"

End

Public Sub txtssfeligURL_Click()

  txtssfeligURL.Text = "https://openimis.ssf.gov.np/api/api_fhir_r4/CoverageEligibilityRequest/"

End

Public Sub txtssfrequesturl_Click()

  txtssfrequesturl.Text = "https://openimis.ssf.gov.np/api/api_fhir_r4/Claim/"

End

Public Sub txtssfimgURL_Click()

  txtssfimgURL.Text = "https://openimis.ssf.gov.np/api/api_fhir_r4/Images/Updated/"

End

Public Sub txtssfeplURL_Click()

  txtssfeplURL.Text = "https://openimis.ssf.gov.np/api/api_fhir_r4/Employee/"

End

Public Sub txtssffileURL_Click()

  txtssffileURL.Text = "https://openimis.ssf.gov.np/api/api_fhir_r4/attachments"

End

Public Sub txtssfbookURL_Click()

  txtssfbookURL.Text = "https://openimis.ssf.gov.np/api/api_fhir_r4/BookingService"

End

''---------------- right panel log in ------------------------
Private Sub RightPanleWebSett()

  txturlright.Text = modSettings.ShowSettingFromFIle("RightPanelWeb/URL")
  If modSettings.ShowSettingFromFIle("RightPanelWeb/UserName") Then
    txtpaneluser.Text = UnBase64(modSettings.ShowSettingFromFIle("RightPanelWeb/UserName"))
  Endif
  If modSettings.ShowSettingFromFIle("RightPanelWeb/PassWord") Then
    txtpanelpass.Text = UnBase64(modSettings.ShowSettingFromFIle("RightPanelWeb/PassWord"))
  Endif

  txturlimishi.Text = modSettings.ShowSettingFromFIle("HealthInsurance/imis_URL")
  If modSettings.ShowSettingFromFIle("HealthInsurance/imis_UserName") Then
    txtuserimishi.Text = UnBase64(modSettings.ShowSettingFromFIle("HealthInsurance/imis_UserName"))
  Endif
  If modSettings.ShowSettingFromFIle("HealthInsurance/imis_PassWord") Then
    txtpassimishi.Text = UnBase64(modSettings.ShowSettingFromFIle("HealthInsurance/imis_PassWord"))
  Endif

  txturldochi.Text = modSettings.ShowSettingFromFIle("HealthInsurance/claimdoc_URL")
  If modSettings.ShowSettingFromFIle("HealthInsurance/claimdoc_UserName") Then
    txtuserdochi.Text = UnBase64(modSettings.ShowSettingFromFIle("HealthInsurance/claimdoc_UserName"))
  Endif
  If modSettings.ShowSettingFromFIle("HealthInsurance/claimdoc_PassWord") Then
    txtpassdochi.Text = UnBase64(modSettings.ShowSettingFromFIle("HealthInsurance/claimdoc_PassWord"))
  Endif

  txturlimissf.Text = modSettings.ShowSettingFromFIle("SSFund/imis_URL")
  If modSettings.ShowSettingFromFIle("SSFund/imis_UserName") Then
    txtuserimissf.Text = UnBase64(modSettings.ShowSettingFromFIle("SSFund/imis_UserName"))
  Endif
  If modSettings.ShowSettingFromFIle("SSFund/imis_PassWord") Then
    txtpassimissf.Text = UnBase64(modSettings.ShowSettingFromFIle("SSFund/imis_PassWord"))
  Endif

End

Public Sub btnurlright_Click()

  modSettings.SaveSettingsToFile("RightPanelWeb/URL", Trim(txturlright.Text))
  modBasic.$RightPanelURL = Trim(txturlright.Text)
  modGeneralMain.LoadWebViewRight()
  Balloon.Info(("Information saved"), btnurlright)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnpanellogin_Click()

  If txtpaneluser.Text Then
    modSettings.SaveSettingsToFile("RightPanelWeb/UserName", Base64(txtpaneluser.Text))
    modBasic.$RightPanelUser = txtpaneluser.Text
  Endif
  If txtpanelpass.Text Then
    modSettings.SaveSettingsToFile("RightPanelWeb/PassWord", Base64(txtpanelpass.Text))
    modBasic.$RightPanelPass = txtpanelpass.Text
  Endif
  Balloon.Info(("Information saved"), btnpanellogin)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txturlimishi_Click()

  txturlimishi.Text = "https://imis.hib.gov.np/"

End

Public Sub btnurlimishi_Click()

  modSettings.SaveSettingsToFile("HealthInsurance/imis_URL", Trim(txturlimishi.Text))
  Balloon.Info(("Information saved"), btnurlimishi)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnloginimishi_Click()

  If txtuserimishi.Text Then
    modSettings.SaveSettingsToFile("HealthInsurance/imis_UserName", Base64(txtuserimishi.Text))
  Endif
  If txtpassimishi.Text Then
    modSettings.SaveSettingsToFile("HealthInsurance/imis_PassWord", Base64(txtpassimishi.Text))
  Endif
  Balloon.Info(("Information saved"), btnloginimishi)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txturldochi_Click()

  txturldochi.Text = "https://claimdoc.hib.gov.np/"

End

Public Sub btnurldochi_Click()

  modSettings.SaveSettingsToFile("HealthInsurance/claimdoc_URL", Trim(txturldochi.Text))
  Balloon.Info(("Information saved"), btnurldochi)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlogindochi_Click()

  If txtuserdochi.Text Then
    modSettings.SaveSettingsToFile("HealthInsurance/claimdoc_UserName", Base64(txtuserdochi.Text))
  Endif
  If txtpassdochi.Text Then
    modSettings.SaveSettingsToFile("HealthInsurance/claimdoc_PassWord", Base64(txtpassdochi.Text))
  Endif
  Balloon.Info(("Information saved"), btnlogindochi)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txturlimissf_Click()

  txturlimissf.Text = "https://openimis.ssf.gov.np/"

End

Public Sub btnurlimissf_Click()

  modSettings.SaveSettingsToFile("SSFund/imis_URL", Trim(txturlimissf.Text))
  Balloon.Info(("Information saved"), btnurlimissf)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnloginimissf_Click()

  If txtuserimissf.Text Then
    modSettings.SaveSettingsToFile("SSFund/imis_UserName", Base64(txtuserimissf.Text))
  Endif
  If txtpassimissf.Text Then
    modSettings.SaveSettingsToFile("SSFund/imis_PassWord", Base64(txtpassimissf.Text))
  Endif
  Balloon.Info(("Information saved"), btnloginimissf)
  Balloon.Delay = modBasic.$BalloonDelay

End

''======================== Payment ========================
Private Sub ShowQRSCanPay()

  cmbproviderqrscan.Text = modSettings.ShowSettingFromFIle("QRScan/Provider")
  txturlqrscan.Text = modSettings.ShowSettingFromFIle("QRScan/ImageURL")
  txtqueryqrscan.Text = modSettings.ShowSettingFromFIle("QRScan/QueryURL")
  If modSettings.ShowSettingFromFIle("QRScan/UserName") Then
    txtuserqrscan.Text = UnBase64(modSettings.ShowSettingFromFIle("QRScan/UserName"))
  Endif
  If modSettings.ShowSettingFromFIle("QRScan/Password") Then
    txtpassqrscan.Text = UnBase64(modSettings.ShowSettingFromFIle("QRScan/Password"))
  Endif
  txtkeyqrscan.Text = modSettings.ShowSettingFromFIle("QRScan/EncryptionKey")
  If modSettings.ShowSettingFromFIle("QRScan/EncryptionPass") Then
    txtkeypassqrscan.Text = UnBase64(modSettings.ShowSettingFromFIle("QRScan/EncryptionPass"))
  Endif
  txtqrscanroutine.Text = modSettings.ShowSettingFromFIle("QRScan/Routine")

  txtheadqrscan.Text = modSettings.ShowSettingFromFIle("QRScan/HeaderPath")
  If modSettings.ShowSettingFromFIle("QRScan/HeaderHeight") Then
    txtheadht.Value = CInt(modSettings.ShowSettingFromFIle("QRScan/HeaderHeight"))
  Endif

  txtfootqrscan.Text = modSettings.ShowSettingFromFIle("QRScan/FooterPath")
  If modSettings.ShowSettingFromFIle("QRScan/FooterHeight") Then
    txtfootht.Value = CInt(modSettings.ShowSettingFromFIle("QRScan/FooterHeight"))
  Endif

End

Public Sub btnproviderqrscan_Click()

  modSettings.SaveSettingsToFile("QRScan/Provider", cmbproviderqrscan.Text)
  Balloon.Info(("Information saved"), btnproviderqrscan)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnurlqrscan_Click()

  modSettings.SaveSettingsToFile("QRScan/ImageURL", Trim(txturlqrscan.Text))
  Balloon.Info(("Information saved"), btnurlqrscan)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnqueryscan_Click()

  modSettings.SaveSettingsToFile("QRScan/QueryURL", Trim(txtqueryqrscan.Text))
  Balloon.Info(("Information saved"), btnqueryscan)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnloginqrscan_Click()

  If txtuserqrscan.Text Then
    modSettings.SaveSettingsToFile("QRScan/UserName", Base64(txtuserqrscan.Text))
  Endif
  If txtpassqrscan.Text Then
    modSettings.SaveSettingsToFile("QRScan/Password", Base64(txtpassqrscan.Text))
  Endif
  Balloon.Info(("Information saved"), btnloginqrscan)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnkeyqrscan_Click()

  modSettings.SaveSettingsToFile("QRScan/EncryptionKey", txtkeyqrscan.Text)
  modSettings.SaveSettingsToFile("QRScan/EncryptionPass", Base64(txtkeypassqrscan.Text))
  Balloon.Info(("Information saved"), btnkeyqrscan)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txtkeyqrscan_Click()

  If Dialog.OpenFile() Then Return
  Try txtkeyqrscan.Text = Dialog.Path

End

Public Sub txturlqrscan_Click()

  If cmbproviderqrscan.Text = "nepalpay" Then
    txturlqrscan.Text = "https://opennpi.connectips.com/qr/generateQR"
  Else If cmbproviderqrscan.Text = "Chanakya" Then
    txturlqrscan.Text = "http://182.93.94.7:3333/api/backend-connect-ips-qr/generateQR"
  Endif

End

Public Sub txtqueryqrscan_Click()

  If cmbproviderqrscan.Text = "nepalpay" Then
    txtqueryqrscan.Text = "https://opennpi.connectips.com/nQR/v1/merchanttxnreport"
  Endif

End

Public Sub btnqrscandatabase_Click()

  Dim hForm As FmSetDatabase

  hForm = New FmSetDatabase("QRScan", "QRScanDatabase")
  hForm.ShowModal

End

Public Sub btnqrscanroutine_Click()

  modSettings.SaveSettingsToFile("QRScan/Routine", Trim(txtqrscanroutine.Text))
  Balloon.Info(("Information saved"), btnqrscanroutine)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnheadqrset_Click()

  modSettings.SaveSettingsToFile("QRScan/HeaderPath", txtheadqrscan.Text)
  modSettings.SaveSettingsToFile("QRScan/HeaderHeight", CStr(txtheadht.Value))
  Balloon.Info(("Information saved"), btnheadqrset)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnfootqrset_Click()

  modSettings.SaveSettingsToFile("QRScan/FooterPath", txtfootqrscan.Text)
  modSettings.SaveSettingsToFile("QRScan/FooterHeight", CStr(txtfootht.Value))
  Balloon.Info(("Information saved"), btnfootqrset)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txtheadqrscan_Click()

  Dialog.Filter = ["*.jpg;*.jpeg;*.png;*.bmp", "Picture files"]
  If Dialog.OpenFile() Then Return
  Try txtheadqrscan.Text = Dialog.Path

End

Public Sub txtfootqrscan_Click()

  Dialog.Filter = ["*.jpg;*.jpeg;*.png;*.bmp", "Picture files"]
  If Dialog.OpenFile() Then Return
  Try txtfootqrscan.Text = Dialog.Path

End

''------- Online booking
Private Sub GetOnlineBooking()

  txturlonline.Text = modSettings.ShowSettingFromFIle("OnlineBooking/RequestURL")
  txtonlineroutine.Text = modSettings.ShowSettingFromFIle("OnlineBooking/Routine")

End

Public Sub txturlonline_Click()

  txturlonline.Text = "http://182.93.94.7:3335/"

End

Public Sub btnurlonline_Click()

  modSettings.SaveSettingsToFile("OnlineBooking/RequestURL", Trim(txturlonline.Text))
  Balloon.Info(("Information saved"), btnurlonline)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnonlinedatabase_Click()

  Dim hForm As FmSetDatabase

  hForm = New FmSetDatabase("OnlineBooking", "OnlineBookBase")
  hForm.ShowModal

End

Public Sub btnonlineroutine_Click()

  modSettings.SaveSettingsToFile("OnlineBooking/Routine", Trim(txtonlineroutine.Text))
  Balloon.Info(("Information saved"), btnonlineroutine)
  Balloon.Delay = modBasic.$BalloonDelay

End

''=================== PDF setting ====================
Private Sub SHowPDFSetting()

  cmbimagetopdf.Text = modSettings.ShowSettingFromFIle("Converter/imagetopdf")
  cmbhtmltopdf.Text = modSettings.ShowSettingFromFIle("Converter/htmltopdf")
  txtchromepath.Text = modSettings.ShowSettingFromFIle("Converter/ChromePath")
  cmbnumtotext.Text = modSettings.ShowSettingFromFIle("Converter/NumberToText")

End

Public Sub btnimagetopdf_Click()

  modSettings.SaveSettingsToFile("Converter/imagetopdf", cmbimagetopdf.Text)
  modBasic.$ConvImagePDF = cmbimagetopdf.Text
  Balloon.Info(("Information saved"), btnimagetopdf)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnhtmltopdf_Click()

  modSettings.SaveSettingsToFile("Converter/htmltopdf", cmbhtmltopdf.Text)
  modBasic.$ConvHtmlPDF = cmbhtmltopdf.Text
  Balloon.Info(("Information saved"), btnhtmltopdf)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnchromepath_Click()

  modSettings.SaveSettingsToFile("Converter/ChromePath", txtchromepath.Text)
  modBasic.$ConvChromePath = txtchromepath.Text
  Balloon.Info(("Information saved"), btnchromepath)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txtchromepath_Click()

  If Dialog.OpenFile() Then Return
  txtchromepath.Text = Dialog.Path

End

Public Sub btnnumtotext_Click()

  modSettings.SaveSettingsToFile("Converter/NumberToText", cmbnumtotext.Text)
  modBasic.$ConvNumberText = cmbnumtotext.Text
  Balloon.Info(("Information saved"), btnnumtotext)
  Balloon.Delay = modBasic.$BalloonDelay

End

''------------------------- Cloud AI -------------------
Private Sub DisplayCloudAI()

  cmbAIurl.Text = modSettings.ShowSettingFromFIle("CloudAI/API_URL")
  cmbAImodel.Text = modSettings.ShowSettingFromFIle("CloudAI/Modality")
  txtAIkey.Text = modSettings.ShowSettingFromFIle("CloudAI/API_Key")
  txtAIqueryclin.Text = modSettings.ShowSettingFromFIle("CloudAI/Clinic_QueryList")
  txtAIquerydrug.Text = modSettings.ShowSettingFromFIle("CloudAI/Medicine_QueryList")

End

Public Sub btnfillAImodel_Click()

  cmbAImodel.Clear()
  If cmbAIurl.Text = "https://api.groq.com/openai/v1/chat/completions" Then
    cmbAImodel.List = modCloudAI.$GroqCloudModels
  Endif

End

Public Sub btnAIregister_Click()

  If cmbAIurl.Text = "https://api.groq.com/openai/v1/chat/completions" Then
    modDevice.DesktopOpenFile("https://console.groq.com/keys")
  Endif

End

Public Sub txtAIqueryclin_Click()

  If Dialog.OpenFile() Then Return
  txtAIqueryclin.Text = Dialog.Path

End

Public Sub txtAIquerydrug_Click()

  If Dialog.OpenFile() Then Return
  txtAIquerydrug.Text = Dialog.Path

End

Public Sub btnAIurl_Click()

  modSettings.SaveSettingsToFile("CloudAI/API_URL", cmbAIurl.Text)
  modBasic.$CloudAIURL = cmbAIurl.Text
  Balloon.Info(("Information saved"), btnAIurl)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnAImodel_Click()

  modSettings.SaveSettingsToFile("CloudAI/Modality", cmbAImodel.Text)
  modBasic.$CloudAIModel = cmbAImodel.Text
  Balloon.Info(("Information saved"), btnAImodel)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnAIkey_Click()

  modSettings.SaveSettingsToFile("CloudAI/API_Key", Trim(txtAIkey.Text))
  modBasic.$CloudAIKey = Trim(txtAIkey.Text)
  Balloon.Info(("Information saved"), btnAIkey)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnAIqueryclin_Click()

  modSettings.SaveSettingsToFile("CloudAI/Clinic_QueryList", txtAIqueryclin.Text)
  Balloon.Info(("Information saved"), btnAIqueryclin)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnAIquerydrug_Click()

  modSettings.SaveSettingsToFile("CloudAI/Medicine_QueryList", txtAIquerydrug.Text)
  Balloon.Info(("Information saved"), btnAIquerydrug)
  Balloon.Delay = modBasic.$BalloonDelay

End
