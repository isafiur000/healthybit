' Gambas class file

Private $sIndex As String
Private $sName As String

Public Sub _new(sIndex As String, sName As String)

  $sIndex = sIndex
  $sName = sName

End

Public Sub Form_Open()

  Me.Center
  cmbtype.List = ["sqlite3", "mysql", "postgresql", "odbc"]
  ShowSettingSaved()

End

Public Sub chkuser_Click()

  If chkuser.Value = True Then
    txtuser.Password = False
  Else If chkuser.Value = False Then
    txtuser.Password = True
  Endif

End

Public Sub chkpass_Click()

  If chkpass.Value = True Then
    txtpass.Password = False
  Else If chkpass.Value = False Then
    txtpass.Password = True
  Endif

End

Private Sub SaveRepoSettingsToFile(strSetting As String, strVal As String)

  Dim ConfFile As Settings

  ConfFile = New Settings(modHelpVariable.AppDirectory &/ $sName & ".conf")
  ConfFile[strSetting] = Trim(strVal)

End

Public Sub btnnewconn_Click()

  Dim sPass As String
  Dim xPath As String

  If cmbtype.Text And If txtserver.Text And If txtdb.Text Then
    SaveRepoSettingsToFile($sIndex & "/Service", cmbtype.Text)
    SaveRepoSettingsToFile($sIndex & "/Host", txtserver.Text)
    SaveRepoSettingsToFile($sIndex & "/Database", txtdb.Text)
    SaveRepoSettingsToFile($sIndex & "/User", Base64(txtuser.Text))
    SaveRepoSettingsToFile($sIndex & "/Password", Base64(txtpass.Text))
    SaveRepoSettingsToFile($sIndex & "/Port", txtport.Text)

    xPath = modHelpVariable.AppDirectory &/ $sName & ".conf"
    sPass = InputPassword(("Enter Password for Super User"), ("Super User"), "")
    modExternal.ReplaceFileAsRoot(xPath, modHelpVariable.$appetcFolder, sPass)
    Wait
  Endif

End

Private Sub ShowSettingSaved()

  Dim xfile As String

  xfile = modHelpVariable.$appetcFolder &/ $sName & ".conf"
  If Exist(xfile) Then
    chkuser.Enabled = False
    chkpass.Enabled = False
    cmbtype.Text = modControlSub.ShowSettingValue(xfile, $sIndex & "/Service")
    txtserver.Text = modControlSub.ShowSettingValue(xfile, $sIndex & "/Host")
    txtdb.Text = modControlSub.ShowSettingValue(xfile, $sIndex & "/Database")
    If modControlSub.ShowSettingValue(xfile, $sIndex & "/User") Then
      txtuser.Text = UnBase64(modControlSub.ShowSettingValue(xfile, $sIndex & "/User"))
    Endif
    If modControlSub.ShowSettingValue(xfile, $sIndex & "/Password") Then
      txtpass.Text = UnBase64(modControlSub.ShowSettingValue(xfile, $sIndex & "/Password"))
    Endif
    txtport.Text = modControlSub.ShowSettingValue(xfile, $sIndex & "/Port")
  Else
    chkuser.Enabled = True
    chkpass.Enabled = True
  Endif

End
