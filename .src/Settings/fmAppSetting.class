' Gambas class file

Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me)
  btnbackup.Menu = "mnubackup"
  btnrestore.Menu = "mnurestore"
  txtuser.Text = modBasic.$lbluser
  cmbspread.List = modMedicine.FillExportType()
  cmbmedview.List = ["ComboBox", "GridView"]
  cmbwriter.List = ["RichText", "WebKit"]
  cmbjavascript.List = ["Yes", "No"]
  cmbreportview.List = ["litehtml", "webkit"]
  cmbcompon.List = ["Horizontal", "Vertical"]

  cmbbothside.List = ["Yes", "No"]
  cmbrowheight.List = ["Yes", "No"]
  cmbrowser.List = ["BuiltIn", "External"]
  cmbmultimed.List = ["Embedded", "External"]
  cmbhelp.List = ["Offline", "Online"]
  cmbgnupg.List = modMisc.GetGNUPGKeyList()
  cmbheadtext.List = ["{HospitalName}", "{HospitalAddress}", "{Department}", "{CurrentDate}", "{CurrentUser}"]
  cmblocal.List = modApplication.GetLocaleList()
  cmbweek.List = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
  cmbwebfunc.List = ["Print", "PDF", "Archive", "Print/Archive"]
  cmbemailclient.List = ["SMTP Client", "Desktop Client"]
  cmbtheme.List = Stock.Themes
  cmbshellpath.List = ["/bin/sh", "/bin/bash", "/bin/dash"]
  txtmusicpath.Text = modHelpVariable.$mediaDirectory &/ "notify.ogg"
  cmblocalrepo.List = ["Enable", "Disable"]
  cmbreportpopup.List = ["Standard", "CSV File"]
  cmbftpupload.List = ["wput", "curl"]
  cmbcurlcacert.List = ["Enable", "Disable"]
  cmbencprefix.List = ["Select", "Write"]
  cmbwindowsbar.List = ["Enable", "Disable"]

  ShowDesignSetting()
  ShowPanelAdvertise()
  GetControlSettings()
  GeneralSetting()
  ShowScripting()
  ShowAllUserSetting()
  ShowOptionSettings()
  DisplayCacheTypes()

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

''======================== Upper Layer =============
Public Sub btnuserprofile_Click()

  Dim hForm As FmReportUsers

  hForm = New FmReportUsers(txtuser.Text)
  hForm.ShowModal

End

Public Sub mnubackcomp_Click()

  Dim sPass As String
  Dim xtar As String

  sPass = InputPassword(("Enter Password for Super User"), ("Super User"), "")
  If sPass Then
    xtar = Temp(modHelpVariable.AppName) & ".tar"
    modDevAll.GetTarCompression(Desktop.ConfigDir, modHelpVariable.AppName, xtar)
    modExternal.CopyFileAsRoot(xtar, modHelpVariable.$appetcFolder, sPass)
    Balloon.Info(("Setting File copied"), btnbackup)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub mnurestcomp_Click()

  modGeneralMain.RestoreConfigSettings()
  Balloon.Info(("Settings folder restored"), btnrestore)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub mnubackftp_Click()

  Dim xtar As String
  Dim xmsg As String

  xtar = Temp(modHelpVariable.AppName) & ".tar"
  modDevAll.GetTarCompression(Desktop.ConfigDir, modHelpVariable.AppName, xtar)
  xmsg = modFTPSub.SendFixFileToFTP(xtar, modBasic.$compID, "Settings")
  If xmsg Then
    Message.Warning(xmsg, "OK")
  Endif

End

Public Sub mnurestftp_Click()

  Dim sLink As String
  Dim sPath As String

  sLink = "Settings" &/ modBasic.$compID &/ modHelpVariable.AppName & ".tmp.tar"
  sPath = modFTPSub.GetFileFromLocalFTP(sLink)
  If Exist(sPath) Then
    modDevAll.GetTarExtraction(sPath, Desktop.ConfigDir)
    Balloon.Info(("Settings folder restored"), btnrestore)
    Balloon.Delay = modBasic.$BalloonDelay
  Else
    Message.Warning(sPath & " doesn't exist", "OK")
  Endif

End

Public Sub mnumountftp_Click()

  Dim xdir As String

  xdir = File.Dir(Temp())
  Mkdir xdir &/ "ftp"
  modFTPSub.GetMountFTPFolder("Settings" &/ modBasic.$compID, xdir &/ "ftp")
  modDevice.DesktopOpenFile(xdir &/ "ftp")

End

''================================ Controls =============================
Private Sub GetControlSettings()

  If modSettings.ShowSettingFromVar("AppSetting_DataViewEvenRowBackColor/" & modBasic.$lbluser) Then
    txtevenbackcolor.Value = CInt(modSettings.ShowSettingFromVar("AppSetting_DataViewEvenRowBackColor/" & modBasic.$lbluser))
  Endif
  If modSettings.ShowSettingFromVar("AppSetting_DataViewEvenRowForeColor/" & modBasic.$lbluser) Then
    txtevenforecolor.Value = CInt(modSettings.ShowSettingFromVar("AppSetting_DataViewEvenRowForeColor/" & modBasic.$lbluser))
  Endif
  If modSettings.ShowSettingFromVar("AppSetting_DataViewOddRowBackColor/" & modBasic.$lbluser) Then
    txtoddbackcolor.Value = CInt(modSettings.ShowSettingFromVar("AppSetting_DataViewOddRowBackColor/" & modBasic.$lbluser))
  Endif
  If modSettings.ShowSettingFromVar("AppSetting_DataViewOddRowForeColor/" & modBasic.$lbluser) Then
    txtoddforecolor.Value = CInt(modSettings.ShowSettingFromVar("AppSetting_DataViewOddRowForeColor/" & modBasic.$lbluser))
  Endif
  If modSettings.ShowSettingFromVar("AppSetting_DataViewPadding/" & modBasic.$lbluser) Then
    txtgridpadding.Value = CInt(modSettings.ShowSettingFromVar("AppSetting_DataViewPadding/" & modBasic.$lbluser))
  Endif
  txtgridfont.Value = modSettings.ShowSettingFromVar("AppSetting_DataViewFont/" & modBasic.$lbluser)

  txtlabelfont.Value = modSettings.ShowSettingFromVar("AppSetting_TextLabelFont/" & modBasic.$lbluser)
  If modSettings.ShowSettingFromVar("AppSetting_TextLabelForeColor/" & modBasic.$lbluser) Then
    txtlabelbackcolor.Value = modSettings.ShowSettingFromVar("AppSetting_TextLabelForeColor/" & modBasic.$lbluser)
  Endif

  txttxtboxfont.Value = modSettings.ShowSettingFromVar("AppSetting_TextBoxFont/" & modBasic.$lbluser)
  If modSettings.ShowSettingFromVar("AppSetting_TextBoxForeColor/" & modBasic.$lbluser) Then
    txttxtboxbackcolor.Value = modSettings.ShowSettingFromVar("AppSetting_TextBoxForeColor/" & modBasic.$lbluser)
  Endif

  txtcombofont.Value = modSettings.ShowSettingFromVar("AppSetting_TextComboFont/" & modBasic.$lbluser)
  If modSettings.ShowSettingFromVar("AppSetting_TextComboForeColor/" & modBasic.$lbluser) Then
    txtcombobackcolor.Value = modSettings.ShowSettingFromVar("AppSetting_TextComboForeColor/" & modBasic.$lbluser)
  Endif

  If modSettings.ShowSettingFromVar("AppSetting_FocusBackColor/" & modBasic.$lbluser) Then
    txtfocusback.Value = modSettings.ShowSettingFromVar("AppSetting_FocusBackColor/" & modBasic.$lbluser)
  Endif

End

Public Sub btnevenbackcolor_Click()

  modSettings.SaveSettingsToVar("AppSetting_DataViewEvenRowBackColor/" & modBasic.$lbluser, txtevenbackcolor.Value)
  modBasic.$DataEvenBackColor = txtevenbackcolor.Value
  Balloon.Info(("Information saved"), btnevenbackcolor)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnevenforecolor_Click()

  modSettings.SaveSettingsToVar("AppSetting_DataViewEvenRowForeColor/" & modBasic.$lbluser, txtevenforecolor.Value)
  modBasic.$DataEvenForeColor = txtevenforecolor.Value
  Balloon.Info(("Information saved"), btnevenforecolor)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnoddbackcolor_Click()

  modSettings.SaveSettingsToVar("AppSetting_DataViewOddRowBackColor/" & modBasic.$lbluser, txtoddbackcolor.Value)
  modBasic.$DataOddBackColor = txtoddbackcolor.Value
  Balloon.Info(("Information saved"), btnoddbackcolor)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnoddforecolor_Click()

  modSettings.SaveSettingsToVar("AppSetting_DataViewOddRowForeColor/" & modBasic.$lbluser, txtoddforecolor.Value)
  modBasic.$DataOddForeColor = txtoddforecolor.Value
  Balloon.Info(("Information saved"), btnoddforecolor)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btngridpadding_Click()

  modSettings.SaveSettingsToVar("AppSetting_DataViewPadding/" & modBasic.$lbluser, CStr(txtgridpadding.Value))
  modBasic.$DataViewPadding = CStr(txtgridpadding.Value)
  Balloon.Info(("Information saved"), btngridpadding)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btngridfont_Click()

  modSettings.SaveSettingsToVar("AppSetting_DataViewFont/" & modBasic.$lbluser, txtgridfont.Value)
  modBasic.$DataViewTextFont = txtgridfont.Value
  Balloon.Info(("Information saved"), btngridfont)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlabelbackcolor_Click()

  modSettings.SaveSettingsToVar("AppSetting_TextLabelForeColor/" & modBasic.$lbluser, txtlabelbackcolor.Value)
  modBasic.$LabelForeColor = txtlabelbackcolor.Value
  Balloon.Info(("Information saved"), btnlabelbackcolor)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlabelfont_Click()

  modSettings.SaveSettingsToVar("AppSetting_TextLabelFont/" & modBasic.$lbluser, txtlabelfont.Value)
  modBasic.$LabelTextFont = txtlabelfont.Value
  Balloon.Info(("Information saved"), btnlabelfont)
  Balloon.Delay = modBasic.$BalloonDelay

End

'---
Public Sub btntxtboxbackcolor_Click()

  modSettings.SaveSettingsToVar("AppSetting_TextBoxForeColor/" & modBasic.$lbluser, txttxtboxbackcolor.Value)
  modBasic.$TextBoxForeColor = txttxtboxbackcolor.Value
  Balloon.Info(("Information saved"), btntxtboxbackcolor)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btntxtboxfont_Click()

  modSettings.SaveSettingsToVar("AppSetting_TextBoxFont/" & modBasic.$lbluser, txttxtboxfont.Value)
  modBasic.$TextBoxTextFont = txttxtboxfont.Value
  Balloon.Info(("Information saved"), btntxtboxfont)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btncombobackcolor_Click()

  modSettings.SaveSettingsToVar("AppSetting_TextComboForeColor/" & modBasic.$lbluser, txtcombobackcolor.Value)
  modBasic.$ComboBoxForeColor = txtcombobackcolor.Value
  Balloon.Info(("Information saved"), btncombobackcolor)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btncombofont_Click()

  modSettings.SaveSettingsToVar("AppSetting_TextComboFont/" & modBasic.$lbluser, txtcombofont.Value)
  modBasic.$ComboBoxTextFont = txtcombofont.Value
  Balloon.Info(("Information saved"), btncombofont)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnfocusback_Click()

  modSettings.SaveSettingsToVar("AppSetting_FocusBackColor/" & modBasic.$lbluser, txtfocusback.Value)
  modBasic.$FocusBackColor = txtfocusback.Value
  Balloon.Info(("Information saved"), btnfocusback)
  Balloon.Delay = modBasic.$BalloonDelay

End

''================================== DESIGN ================================================
Private Sub ShowDesignSetting()

  txtimagpath.Text = modSettings.ShowSettingFromVar("AppSetting_DeskPicture/" & modBasic.$lbluser)
  If modSettings.ShowSettingFromVar("AppSetting_DeskBackColor/" & modBasic.$lbluser) Then
    txtdeskbackcolor.Value = CInt(modSettings.ShowSettingFromVar("AppSetting_DeskBackColor/" & modBasic.$lbluser))
  Endif

  txtformback.Text = modSettings.ShowSettingFromVar("AppSetting_FormPicture/" & modBasic.$lbluser)
  If modSettings.ShowSettingFromVar("AppSetting_FormBackColor/" & modBasic.$lbluser) Then
    txtformbackcolor.Value = CInt(modSettings.ShowSettingFromVar("AppSetting_FormBackColor/" & modBasic.$lbluser))
  Endif
  If modSettings.ShowSettingFromVar("AppSetting_FormForeColor/" & modBasic.$lbluser) Then
    txtformforecolor.Value = CInt(modSettings.ShowSettingFromVar("AppSetting_FormForeColor/" & modBasic.$lbluser))
  Endif

  cmbtab.Text = modSettings.ShowSettingFromVar("AppSetting_TabPosition/" & modBasic.$lbluser)

  If modSettings.ShowSettingFromVar("AppSetting_DeskHeaderHeight/" & modBasic.$lbluser) Then
    cmbheadsize.Value = CInt(modSettings.ShowSettingFromVar("AppSetting_DeskHeaderHeight/" & modBasic.$lbluser))
  Endif
  cmbheadtext.Text = modSettings.ShowSettingFromVar("AppSetting_DeskHeaderText/" & modBasic.$lbluser)
  txtheadimage.Text = modSettings.ShowSettingFromVar("AppSetting_DeskHeaderPicture/" & modBasic.$lbluser)
  If modSettings.ShowSettingFromVar("AppSetting_DeskHeaderFont/" & modBasic.$lbluser) Then
    txtheadfont.Value = modSettings.ShowSettingFromVar("AppSetting_DeskHeaderFont/" & modBasic.$lbluser)
  Endif

  If modSettings.ShowSettingFromVar("AppSetting_DeskHeaderBackColor/" & modBasic.$lbluser) Then
    txtheadbackcolor.Value = CInt(modSettings.ShowSettingFromVar("AppSetting_DeskHeaderBackColor/" & modBasic.$lbluser))
  Endif
  If modSettings.ShowSettingFromVar("AppSetting_DeskHeaderForeColor/" & modBasic.$lbluser) Then
    txtheadforecolor.Value = CInt(modSettings.ShowSettingFromVar("AppSetting_DeskHeaderForeColor/" & modBasic.$lbluser))
  Endif

End

'theme
Public Sub btndeskpict_Click()

  modSettings.SaveSettingsToVar("AppSetting_DeskPicture/" & modBasic.$lbluser, txtimagpath.Text)
  modAppSupport.SetWorkSpaceImage()
  Balloon.Info(("Information saved"), btndeskpict)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txtimagpath_Click()

  Dialog.Filter = ["*.jpg;*.jpeg;*.png;*.bmp", "Picture files"]
  If Dialog.OpenFile() Then Return
  Try txtimagpath.Text = Dialog.Path

End

Public Sub btndeskbackcolor_Click()

  modSettings.SaveSettingsToVar("AppSetting_DeskBackColor/" & modBasic.$lbluser, txtdeskbackcolor.Value)
  Balloon.Info(("Information saved"), btndeskbackcolor)
  Balloon.Delay = modBasic.$BalloonDelay

End

'tab position
Public Sub btnwinTab_Click()

  modSettings.SaveSettingsToVar("AppSetting_TabPosition/" & modBasic.$lbluser, cmbtab.Text)
  modAppSupport.SetWorkSpaceTabbing()
  Balloon.Info(("Information saved"), btnwinTab)
  Balloon.Delay = modBasic.$BalloonDelay

End

'form background
Public Sub txtformback_Click()

  Dialog.Filter = ["*.jpg;*.jpeg;*.png;*.bmp", "Picture files"]
  If Dialog.OpenFile() Then Return
  Try txtformback.Text = Dialog.Path

End

Public Sub btnformback_Click()

  modSettings.SaveSettingsToVar("AppSetting_FormPicture/" & modBasic.$lbluser, txtformback.Text)
  modBasic.$FormPicture = txtformback.Text
  Balloon.Info(("Information saved"), btnformback)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnformbackcolor_Click()

  modSettings.SaveSettingsToVar("AppSetting_FormBackColor/" & modBasic.$lbluser, txtformbackcolor.Value)
  modBasic.$FormBackColor = CStr(txtformbackcolor.Value)
  Balloon.Info(("Information saved"), btnformbackcolor)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnformforecolor_Click()

  modSettings.SaveSettingsToVar("AppSetting_FormForeColor/" & modBasic.$lbluser, txtformforecolor.Value)
  modBasic.$FormForeColor = CStr(txtformforecolor.Value)
  Balloon.Info(("Information saved"), btnformforecolor)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnheadsize_Click()

  modSettings.SaveSettingsToVar("AppSetting_DeskHeaderHeight/" & modBasic.$lbluser, CStr(cmbheadsize.Value))
  Balloon.Info(("Information saved"), btnheadsize)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txtheadimage_Click()

  If Dialog.OpenFile() Then Return
  txtheadimage.Text = Dialog.Path

End

Public Sub btnheadimage_Click()

  modSettings.SaveSettingsToVar("AppSetting_DeskHeaderPicture/" & modBasic.$lbluser, txtheadimage.Text)
  Balloon.Info(("Information saved"), btnheadimage)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnheadtext_Click()

  modSettings.SaveSettingsToVar("AppSetting_DeskHeaderText/" & modBasic.$lbluser, cmbheadtext.Text)
  Balloon.Info(("Information saved"), btnheadtext)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnheadfont_Click()

  modSettings.SaveSettingsToVar("AppSetting_DeskHeaderFont/" & modBasic.$lbluser, txtheadfont.Value)
  Balloon.Info(("Information saved"), btnheadfont)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnheadbackcolor_Click()

  modSettings.SaveSettingsToVar("AppSetting_DeskHeaderBackColor/" & modBasic.$lbluser, txtheadbackcolor.Value)
  Balloon.Info(("Information saved"), btnheadbackcolor)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnheadforecolor_Click()

  modSettings.SaveSettingsToVar("AppSetting_DeskHeaderForeColor/" & modBasic.$lbluser, txtheadforecolor.Value)
  Balloon.Info(("Information saved"), btnheadforecolor)
  Balloon.Delay = modBasic.$BalloonDelay

End

''================= Panel advertise ==========================
Private Sub ShowPanelAdvertise()

  modSettings.ShowCheckBox(chkadleft, "Advertise/Disable_Left")
  modSettings.ShowCheckBox(chkadright, "Advertise/Disable_Right")
  txtcusturlleft.Text = modSettings.ShowSettingFromFIle("Advertise/CustomURL_Left")
  txtcusturlright.Text = modSettings.ShowSettingFromFIle("Advertise/CustomURL_Right")

End

Public Sub btnadleft_Click()

  modSettings.EnterCheckSetting(chkadleft, "Advertise/Disable_Left")
  If chkadleft.Value = True Then
    modBasic.$FormLeftAdv = "Yes"
  Else
    modBasic.$FormLeftAdv = "No"
  Endif
  Balloon.Info(("Information saved"), btnadleft)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btncusturlleft_Click()

  modSettings.SaveSettingsToFile("Advertise/CustomURL_Left", txtcusturlleft.Text)
  modBasic.$FormLeftURL = txtcusturlleft.Text
  Balloon.Info(("Information saved"), btncusturlleft)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnadright_Click()

  modSettings.EnterCheckSetting(chkadright, "Advertise/Disable_Right")
  If chkadright.Value = True Then
    modBasic.$FormRightAdv = "Yes"
  Else
    modBasic.$FormRightAdv = "No"
  Endif
  Balloon.Info(("Information saved"), btnadright)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btncusturlright_Click()

  modSettings.SaveSettingsToFile("Advertise/CustomURL_Right", txtcusturlright.Text)
  modBasic.$FormRightURL = txtcusturlright.Text
  Balloon.Info(("Information saved"), btncusturlright)
  Balloon.Delay = modBasic.$BalloonDelay

End

''================================== USER SETTING ====================================================
Private Sub GeneralSetting()

  txtmusicpath.Text = modSettings.ShowSettingFromFIle("AppSetting/InformMusic")
  If txtmusicpath.Text = "" Then
    txtmusicpath.Text = modHelpVariable.$mediaDirectory &/ "notify.ogg"
  Endif
  If modSettings.ShowSettingFromFIle("AppSetting/VolumeMusic") Then
    txtvolmusic.Value = CInt(modSettings.ShowSettingFromFIle("AppSetting/VolumeMusic"))
  Endif
  txtdict.Text = modSettings.ShowSettingFromFIle("AppSetting/Dictionary")
  txtmediapath.Text = modSettings.ShowSettingFromFIle("AppSetting/MediaPath")

  If modSettings.ShowSettingFromFIle("AppSetting/LockTime") Then
    txtlock.Value = CFloat(modSettings.ShowSettingFromFIle("AppSetting/LockTime"))
  Endif

  If modSettings.ShowSettingFromFIle("AppSetting/ImageSplash") Then
    txtsplash.Value = CFloat(modSettings.ShowSettingFromFIle("AppSetting/ImageSplash"))
  Endif

  cmbspread.Text = modSettings.ShowSettingFromFIle("AppSetting/Spreadsheet")
  modSettings.ShowCheckBox(chkexport, "AppSetting/SpreadsheetView")
  cmbmedview.Text = modSettings.ShowSettingFromFIle("AppSetting/ItemView")
  modSettings.ShowCheckBox(chkgridpos, "AppSetting/ItemViewCentre")
  cmbrowser.Text = modSettings.ShowSettingFromFIle("AppSetting/ReportBrowser")
  cmbmultimed.Text = modSettings.ShowSettingFromFIle("AppSetting/MediaPlayerFormat")
  cmbwriter.Text = modSettings.ShowSettingFromFIle("AppSetting/TextWriter")
  cmbjavascript.Text = modSettings.ShowSettingFromFIle("AppSetting/EnableJS")
  cmbreportview.Text = modSettings.ShowSettingFromFIle("AppSetting/WebViewerApp")
  cmbcompon.Text = modSettings.ShowSettingFromFIle("AppSetting/ComponentForms")

End

'music path
Public Sub txtmusicpath_Click()

  Dialog.Filter = ["*.ogg;*.mp3", "Audio files"]
  If Dialog.OpenFile() Then Return
  Try txtmusicpath.Text = Dialog.Path

End

Public Sub btnmusic_Click()

  modSettings.SaveSettingsToFile("AppSetting/InformMusic", txtmusicpath.Text)
  If Exist(txtmusicpath.Text) Then
    modBasic.$InfoMusic = txtmusicpath.Text
  Endif
  modSettings.SaveSettingsToFile("AppSetting/VolumeMusic", CStr(txtvolmusic.Value))
  If txtvolmusic.Value Then
    modBasic.$InfoMusicVol = txtvolmusic.Value
  Endif
  Balloon.Info(("Information saved"), btnmusic)
  Balloon.Delay = modBasic.$BalloonDelay

End

'dictionary
Public Sub txtdict_Click()

  Dialog.Filter = ["*.csv;*.txt", "TextData Files"]
  If Dialog.OpenFile() Then Return
  txtdict.Text = Dialog.Path

End

Public Sub btndict_Click()

  modSettings.SaveSettingsToFile("AppSetting/Dictionary", txtdict.Text)
  If Exist(txtdict.Text) Then
    modBasic.$dictPathList = modString.GetStringArrayFromFile(txtdict.Text)
  Endif
  Balloon.Info(("Information saved"), btndict)
  Balloon.Delay = modBasic.$BalloonDelay

End

''media path
Public Sub txtmediapath_Click()

  If Dialog.OpenFile() Then Return
  txtmediapath.Text = Dialog.Path

End

Public Sub btnmediapath_Click()

  modSettings.SaveSettingsToFile("AppSetting/MediaPath", txtmediapath.Text)
  If Exist(txtmediapath.Text) Then
    modBasic.$mediaPath = txtmediapath.Text
    If modBasic.$MultiMediaFormat = "Embedded" Then
      fmMediaPlay.MediaView1.URL = modBasic.$mediaPath
      fmMediaPlay.Enabled = True
    Endif
  Endif
  Balloon.Info(("Information saved"), btnmediapath)
  Balloon.Delay = modBasic.$BalloonDelay

End

'select item view mode
Public Sub btnmedview_Click()

  modSettings.SaveSettingsToFile("AppSetting/ItemView", cmbmedview.Text)
  modSettings.EnterCheckSetting(chkgridpos, "AppSetting/ItemViewCentre")
  modBasic.$ItemListFormat = cmbmedview.Text
  If chkgridpos.Value = True Then
    modBasic.$ItemListModalCentre = "Yes"
  Else If chkgridpos.Value = False Then
    modBasic.$ItemListModalCentre = "No"
  Endif
  Balloon.Info(("Information saved"), btnmedview)
  Balloon.Delay = modBasic.$BalloonDelay

End

'lock time
Public Sub btnlock_Click()

  modSettings.SaveSettingsToFile("AppSetting/LockTime", CStr(txtlock.Value))
  modBasic.$LockInTime = CStr(txtlock.Value)
  Balloon.Info(("Information saved"), btnlock)
  Balloon.Delay = modBasic.$BalloonDelay

End

'pic splash shot
Public Sub btnsplash_Click()

  modSettings.SaveSettingsToFile("AppSetting/ImageSplash", CStr(txtsplash.Value))
  modBasic.$PatientImageSplash = txtsplash.Value
  Balloon.Info(("Information saved"), btnsplash)
  Balloon.Delay = modBasic.$BalloonDelay

End

'export options
Public Sub btnspread_Click()

  modSettings.SaveSettingsToFile("AppSetting/Spreadsheet", cmbspread.Text)
  modSettings.EnterCheckSetting(chkexport, "AppSetting/SpreadsheetView")
  Balloon.Info(("Information saved"), btnspread)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbrowser_Click()

  modSettings.SaveSettingsToFile("AppSetting/ReportBrowser", cmbrowser.Text)
  modBasic.$browserFormat = cmbrowser.Text
  Balloon.Info(("Information saved"), btnbrowser)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnmultimed_Click()

  modSettings.SaveSettingsToFile("AppSetting/MediaPlayerFormat", cmbmultimed.Text)
  modBasic.$MultiMediaFormat = cmbmultimed.Text
  Balloon.Info(("Information saved"), btnmultimed)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnwriter_Click()

  modSettings.SaveSettingsToFile("AppSetting/TextWriter", cmbwriter.Text)
  modBasic.$TextWriterControl = cmbwriter.Text
  Balloon.Info(("Information saved"), btnwriter)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnjavascript_Click()

  modSettings.SaveSettingsToFile("AppSetting/EnableJS", cmbjavascript.Text)
  modBasic.$WebktEnableJS = cmbjavascript.Text
  Balloon.Info(("Information saved"), btnjavascript)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btncompon_Click()

  modSettings.SaveSettingsToFile("AppSetting/ComponentForms", cmbcompon.Text)
  modBasic.$FactorForm = cmbcompon.Text
  Balloon.Info(("Information saved"), btncompon)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnreportview_Click()

  modSettings.SaveSettingsToFile("AppSetting/WebViewerApp", cmbreportview.Text)
  modBasic.$WebViewApp = cmbreportview.Text
  Balloon.Info(("Information saved"), btnreportview)
  Balloon.Delay = modBasic.$BalloonDelay

End

''======================================= SCRIPTS ===========================================
Private Sub ShowScripting()

  txtappstart.Text = modSettings.ShowSettingFromFIle("GeneralSettings/StartupScript")
  txtexecstart.Text = modSettings.ShowSettingFromFIle("GeneralSettings/StartupShell")
  txtappclose.Text = modSettings.ShowSettingFromFIle("GeneralSettings/ClosingScript")
  txtexeclose.Text = modSettings.ShowSettingFromFIle("GeneralSettings/ClosingShell")
  txtprintscript.Text = modSettings.ShowSettingFromFIle("GeneralSettings/BeforePrintScript")
  txtexecprint.Text = modSettings.ShowSettingFromFIle("GeneralSettings/BeforePrintShell")
  txtaftprintscr.Text = modSettings.ShowSettingFromFIle("GeneralSettings/AfterPrintScript")
  txtexecaftprint.Text = modSettings.ShowSettingFromFIle("GeneralSettings/AfterPrintShell")
  txttexthelpscr.Text = modSettings.ShowSettingFromFIle("GeneralSettings/TextHelpScript")
  txtexectexthelp.Text = modSettings.ShowSettingFromFIle("GeneralSettings/TextHelpShell")

  cmbgnupg.Text = modSettings.ShowSettingFromFIle("GeneralSettings/GnuPG_KeyID")
  modSettings.ShowCheckBox(chkgpg, "GeneralSettings/GnuPG_Enable")

  txtextapp.Text = modSettings.ShowSettingFromFIle("GeneralSettings/ExtApp_Path")
  txtextshell.Text = modSettings.ShowSettingFromFIle("GeneralSettings/ExtApp_Shell")

  txtkeyboard.Text = modSettings.ShowSettingFromFIle("GeneralSettings/KeyBoard_Path")
  txtshellkey.Text = modSettings.ShowSettingFromFIle("GeneralSettings/KeyBoard_Shell")

  txtcurlcert.Text = modSettings.ShowSettingFromFIle("GeneralSettings/CurlCertificate")
  txtbrowserurl.Text = modSettings.ShowSettingFromFIle("GeneralSettings/Browser_URL")
  txtpatportal.Text = modSettings.ShowSettingFromFIle("GeneralSettings/PatientPortalURL")

  txtdefviewpath.Text = modSettings.ShowSettingFromFIle("GeneralSettings/DefaultView_Path")
  txtdefviewshell.Text = modSettings.ShowSettingFromFIle("GeneralSettings/DefaultView_Shell")

End

Public Sub txtappstart_Click()

  If Dialog.OpenFile() Then Return
  txtappstart.Text = Dialog.Path

End

Public Sub txtappclose_Click()

  If Dialog.OpenFile() Then Return
  txtappclose.Text = Dialog.Path

End

Public Sub txtprintscript_Click()

  If Dialog.OpenFile() Then Return
  txtprintscript.Text = Dialog.Path

End

Public Sub txtaftprintscr_Click()

  If Dialog.OpenFile() Then Return
  txtaftprintscr.Text = Dialog.Path

End

Public Sub txttexthelpscr_Click()

  If Dialog.OpenFile() Then Return
  txttexthelpscr.Text = Dialog.Path

End

Public Sub txtcurlcert_Click()

  If Dialog.OpenFile() Then Return
  txtcurlcert.Text = Dialog.Path

End

'App startup script
Public Sub btnappstart_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/StartupScript", txtappstart.Text)
  modSettings.SaveSettingsToFile("GeneralSettings/StartupShell", txtexecstart.Text)
  Balloon.Info(("Information saved"), btnappstart)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnappclose_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/ClosingScript", txtappclose.Text)
  modSettings.SaveSettingsToFile("GeneralSettings/ClosingShell", txtexeclose.Text)
  Balloon.Info(("Information saved"), btnappclose)
  Balloon.Delay = modBasic.$BalloonDelay

End

'Print startup script
Public Sub btnprintscript_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/BeforePrintScript", txtprintscript.Text)
  modSettings.SaveSettingsToFile("GeneralSettings/BeforePrintShell", txtexecprint.Text)
  Balloon.Info(("Information saved"), btnprintscript)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnaftprintscr_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/AfterPrintScript", txtaftprintscr.Text)
  modSettings.SaveSettingsToFile("GeneralSettings/AfterPrintShell", txtexecaftprint.Text)
  Balloon.Info(("Information saved"), btnaftprintscr)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btntexthelpscr_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/TextHelpScript", txttexthelpscr.Text)
  modSettings.SaveSettingsToFile("GeneralSettings/TextHelpShell", txtexectexthelp.Text)
  Balloon.Info(("Information saved"), btntexthelpscr)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btngnupg_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/GnuPG_KeyID", cmbgnupg.Text)
  modSettings.EnterCheckSetting(chkgpg, "GeneralSettings/GnuPG_Enable")
  Balloon.Info(("Information saved"), btngnupg)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnexternalapp_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/ExtApp_Path", txtextapp.Text)
  modSettings.SaveSettingsToFile("GeneralSettings/ExtApp_Shell", txtextshell.Text)
  Balloon.Info(("Information saved"), btnexternalapp)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnkeyboard_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/KeyBoard_Path", txtkeyboard.Text)
  modSettings.SaveSettingsToFile("GeneralSettings/KeyBoard_Shell", txtshellkey.Text)
  Balloon.Info(("Information saved"), btnkeyboard)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btncurlcert_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/CurlCertificate", txtcurlcert.Text)
  Balloon.Info(("Information saved"), btncurlcert)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbrowserurl_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/Browser_URL", txtbrowserurl.Text)
  Balloon.Info(("Information saved"), btnbrowserurl)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnpatportal_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/PatientPortalURL", txtpatportal.Text)
  modBasic.$PatPortalURL = txtpatportal.Text
  Balloon.Info(("Information saved"), btnpatportal)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndefaultview_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/DefaultView_Path", txtdefviewpath.Text)
  modSettings.SaveSettingsToFile("GeneralSettings/DefaultView_Shell", txtdefviewshell.Text)
  modBasic.$DefaultViewPath = txtdefviewpath.Text
  modBasic.$DefaultViewShell = txtdefviewshell.Text
  Balloon.Info(("Information saved"), btndefaultview)
  Balloon.Delay = modBasic.$BalloonDelay

End

''-----------------------------------General--------------------------------------------------
Private Sub ShowAllUserSetting()

  cmblocal.Text = modSettings.ShowSettingFromFIle("Application/Localization")
  btnfont.Value = modSettings.ShowSettingFromFIle("Application/ApplicationFont")
  cmbweek.Text = modSettings.ShowSettingFromFIle("Application/WeekFirstDay")
  cmbtheme.Text = modSettings.ShowSettingFromFIle("Application/IconTheme")
  cmbshellpath.Text = modSettings.ShowSettingFromFIle("Application/ShellPath")
  cmbhelp.Text = modSettings.ShowSettingFromFIle("GeneralSettings/HelpMode")

  If modSettings.ShowSettingFromFIle("Application/DesktopScale") Then
    txtdeskscale.Value = CInt(modSettings.ShowSettingFromFIle("Application/DesktopScale"))
  Endif
  If modSettings.ShowSettingFromFIle("Application/ConnectionTimeOut") Then
    txtconntime.Value = CInt(modSettings.ShowSettingFromFIle("Application/ConnectionTimeOut"))
  Endif
  If modSettings.ShowSettingFromFIle("Application/LeftPanel_Width") Then
    txtleftpanel.Value = CInt(modSettings.ShowSettingFromFIle("Application/LeftPanel_Width"))
  Endif
  If modSettings.ShowSettingFromFIle("Application/WebView_Zoom") Then
    txtwebzoom.Value = CInt(modSettings.ShowSettingFromFIle("Application/WebView_Zoom"))
  Endif
  If modSettings.ShowSettingFromFIle("GeneralSettings/BalloonDelay") Then
    txtbaloon.Value = CInt(modSettings.ShowSettingFromFIle("GeneralSettings/BalloonDelay"))
  Endif
  If modSettings.ShowSettingFromFIle("Application/DeskHeightFactor") Then
    txtdeskht.Value = CInt(modSettings.ShowSettingFromFIle("Application/DeskHeightFactor"))
  Endif

  cmbwindowsbar.Text = modSettings.ShowSettingFromFIle("Application/ShowWindowTopBar")

End

Public Sub btnfontstyle_Click()

  modSettings.SaveSettingsToFile("Application/ApplicationFont", btnfont.Value)
  Balloon.Info(("Information saved"), btnfontstyle)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlocalization_Click()

  modSettings.SaveSettingsToFile("Application/Localization", cmblocal.Text)
  Balloon.Info(("Information saved"), btnlocalization)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnfirstday_Click()

  modSettings.SaveSettingsToFile("Application/WeekFirstDay", cmbweek.Text)
  Balloon.Info(("Information saved"), btnfirstday)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnapptheme_Click()

  modSettings.SaveSettingsToFile("Application/IconTheme", cmbtheme.Text)
  Balloon.Info(("Information saved"), btnapptheme)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnshellpath_Click()

  modSettings.SaveSettingsToFile("Application/ShellPath", cmbshellpath.Text)
  Balloon.Info(("Information saved"), btnshellpath)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnhelp_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/HelpMode", cmbhelp.Text)
  modBasic.$HelpMode = cmbhelp.Text
  Balloon.Info(("Information saved"), btnhelp)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndownhelp_Click()

  Dim sLink As String

  Inc Application.Busy
  sLink = modControlSub.ShowSettingValue(modHelpVariable.$appWebconfFile, "Remote/HelpFolder") &/ "help.tar"
  modDevAll.GetWgetFileToSelFolder(sLink, modHelpVariable.AppDirectory)
  Dec Application.Busy

End

Public Sub btnbaloon_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/BalloonDelay", CStr(txtbaloon.Value))
  If txtbaloon.Value Then
    modBasic.$BalloonDelay = txtbaloon.Value
  Endif
  Balloon.Info(("Information saved"), btnbaloon)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnscale_Click()

  txtdeskscale.Value = Desktop.Scale

End

Public Sub btndeskscale_Click()

  modSettings.SaveSettingsToFile("Application/DesktopScale", CStr(txtdeskscale.Value))
  Balloon.Info(("Information saved"), btndeskscale)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnconntime_Click()

  modSettings.SaveSettingsToFile("Application/ConnectionTimeOut", CStr(txtconntime.Value))
  Balloon.Info(("Information saved"), btnconntime)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnwebzoom_Click()

  modSettings.SaveSettingsToFile("Application/WebView_Zoom", CStr(txtwebzoom.Value))
  modBasic.$WebZoomValue = txtwebzoom.Value / 100
  Balloon.Info(("Information saved"), btnwebzoom)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnleftpanel_Click()

  If txtleftpanel.Value > (modGeneralMain.$DeskWidth - (960 * modBasic.$AppScaleFactor)) Then
    If Message.Question(("Forms will be pushed to left. Are you sure?"), ("No"), ("Yes")) = 2 Then
      SetLeftPanelWidth()
    Endif
  Else
    SetLeftPanelWidth()
  Endif

End

Private Sub SetLeftPanelWidth()

  modSettings.SaveSettingsToFile("Application/LeftPanel_Width", CStr(txtleftpanel.Value))
  modBasic.$FormLeftWidth = txtleftpanel.Value
  Balloon.Info(("Information saved"), btnleftpanel)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndeskht_Click()

  modSettings.SaveSettingsToFile("Application/DeskHeightFactor", CStr(txtdeskht.Value))
  Balloon.Info(("Information saved"), btndeskht)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnwindobar_Click()

  modSettings.SaveSettingsToFile("Application/ShowWindowTopBar", cmbwindowsbar.Text)
  Balloon.Info(("Information saved"), btnwindobar)
  Balloon.Delay = modBasic.$BalloonDelay

End

''============================= Options =====================
Private Sub ShowOptionSettings()

  Dim xuser As String

  cmbemailclient.Text = modSettings.ShowSettingFromFIle("GeneralSettings/EMailClient")
  cmblocalrepo.Text = modSettings.ShowSettingFromFIle("GeneralSettings/LocalRepoUpload")
  cmbreportpopup.Text = modSettings.ShowSettingFromFIle("GeneralSettings/ReportingOutput")
  cmbwebfunc.Text = modSettings.ShowSettingFromFIle("GeneralSettings/WebViewFunction")

  cmbbothside.Text = modSettings.ShowSettingFromFIle("GeneralSettings/GridViewSearch")
  cmbrowheight.Text = modSettings.ShowSettingFromFIle("GeneralSettings/ResizeRowheight")
  cmbftpupload.Text = modSettings.ShowSettingFromFIle("GeneralSettings/FTPUploader")
  cmbcurlcacert.Text = modSettings.ShowSettingFromFIle("GeneralSettings/cURLCACertificate")

  cmbencprefix.Text = modSettings.ShowSettingFromFIle("GeneralSettings/AutoEncounterPrefix")
  modSettings.ShowCheckBox(cmbtablet, "GeneralSettings/EnableTabletMode")
  modSettings.ShowCheckBox(chkautorefresh, "GeneralSettings/EnableAutoRefresh")
  modSettings.ShowCheckBox(chktooltip, "GeneralSettings/DisableToolTip")
  modSettings.ShowCheckBox(cmbencsuffix, "GeneralSettings/AutoEncounterSuffix")
  modSettings.ShowCheckBox(chkreadnotice, "GeneralSettings/ReadNotification")
  xuser = modSettings.ShowSettingFromFIle("GeneralSettings/GlobalUser")
  If xuser = modBasic.$lbluser Then
    chkglobal.Value = True
  Endif

  modSettings.ShowCheckBox(chkqcachedump, "GeneralSettings/LocalDataCaching_Dump")
  If modSettings.ShowSettingFromFIle("GeneralSettings/HighLightColor") Then
    txthighcolor.Value = CInt(modSettings.ShowSettingFromFIle("GeneralSettings/HighLightColor"))
  Endif
  modSettings.ShowCheckBox(chkdebugapp, "GeneralSettings/DebuggingMode_Enable")
  modSettings.ShowCheckBox(chkdebugdb, "GeneralSettings/DebuggingDB_Enable")
  modSettings.ShowCheckBox(chkdebugmsg, "GeneralSettings/DebuggingMessage_Enable")

End

Public Sub btnglobal_Click()

  Dim xuser As String

  If chkglobal.Value = True Then
    xuser = modBasic.$lbluser
  Else If chkglobal.Value = False Then
    xuser = ""
  Endif
  modSettings.SaveSettingsToFile("GeneralSettings/GlobalUser", xuser)
  modBasic.$GlobalUserID = xuser
  Balloon.Info(("Information saved"), btnglobal)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnhighcolor_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/HighLightColor", txthighcolor.Value)
  modBasic.$HighLightColor = txthighcolor.Value
  Balloon.Info(("Information saved"), btnhighcolor)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnqucachedump_Click()

  modSettings.EnterCheckSetting(chkqcachedump, "GeneralSettings/LocalDataCaching_Dump")
  If chkqcachedump.Value = True Then
    modBasic.$DumpCache = "Yes"
  Else If chkqcachedump.Value = False Then
    modBasic.$DumpCache = "No"
  Endif
  Balloon.Info(("Information saved"), btnqucachedump)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndebugapp_Click()

  modSettings.EnterCheckSetting(chkdebugapp, "GeneralSettings/DebuggingMode_Enable")
  Balloon.Info(("Information saved"), btndebugapp)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndebugdb_Click()

  modSettings.EnterCheckSetting(chkdebugdb, "GeneralSettings/DebuggingDB_Enable")
  Balloon.Info(("Information saved"), btndebugdb)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndebugmsg_Click()

  modSettings.EnterCheckSetting(chkdebugmsg, "GeneralSettings/DebuggingMessage_Enable")
  modBasic.$DebugMsg = chkdebugmsg.Value
  Balloon.Info(("Information saved"), btndebugmsg)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnencprefix_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/AutoEncounterPrefix", cmbencprefix.Text)
  modBasic.$AutoEncPrefix = cmbencprefix.Text
  Balloon.Info(("Information saved"), btnencprefix)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnencsuffix_Click()

  modSettings.EnterCheckSetting(cmbencsuffix, "GeneralSettings/AutoEncounterSuffix")
  If cmbencsuffix.Value = True Then
    modBasic.$AutoEncSuffix = "Yes"
  Else If cmbencsuffix.Value = False Then
    modBasic.$AutoEncSuffix = "No"
  Endif
  Balloon.Info(("Information saved"), btnencsuffix)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnreadnotice_Click()

  modSettings.EnterCheckSetting(chkreadnotice, "GeneralSettings/ReadNotification")
  If chkreadnotice.Value = True Then
    modBasic.$AutoReadNotice = "Yes"
  Else If chkreadnotice.Value = False Then
    modBasic.$AutoReadNotice = "No"
  Endif
  Balloon.Info(("Information saved"), btnreadnotice)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btntooltip_Click()

  modSettings.EnterCheckSetting(chktooltip, "GeneralSettings/DisableToolTip")
  Balloon.Info(("Information saved"), btntooltip)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btntablet_Click()

  modSettings.EnterCheckSetting(cmbtablet, "GeneralSettings/EnableTabletMode")
  If cmbtablet.Value = True Then
    modBasic.$TabletModeEnable = "Yes"
  Else If cmbtablet.Value = False Then
    modBasic.$TabletModeEnable = "No"
  Endif
  Balloon.Info(("Information saved"), btntablet)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnautorefresh_Click()

  modSettings.EnterCheckSetting(chkautorefresh, "GeneralSettings/EnableAutoRefresh")
  If chkautorefresh.Value = True Then
    modBasic.$AutoRefreshEnable = "Yes"
  Else If chkautorefresh.Value = False Then
    modBasic.$AutoRefreshEnable = "No"
  Endif
  Balloon.Info(("Information saved"), btnautorefresh)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnemailclient_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/EMailClient", cmbemailclient.Text)
  Balloon.Info(("Information saved"), btnemailclient)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbothside_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/GridViewSearch", cmbbothside.Text)
  modBasic.$SearchBothSide = cmbbothside.Text
  Balloon.Info(("Information saved"), btnbothside)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnrwheight_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/ResizeRowheight", cmbrowheight.Text)
  modBasic.$RichtextResizeRow = cmbrowheight.Text
  Balloon.Info(("Information saved"), btnrwheight)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btncurlcacert_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/cURLCACertificate", cmbcurlcacert.Text)
  modBasic.$cURLCACert = cmbcurlcacert.Text
  Balloon.Info(("Information saved"), btncurlcacert)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnftpupload_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/FTPUploader", cmbftpupload.Text)
  modBasic.$FtpUploader = cmbftpupload.Text
  Balloon.Info(("Information saved"), btnftpupload)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlocalrepo_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/LocalRepoUpload", cmblocalrepo.Text)
  modBasic.$UploadLocalrepo = cmblocalrepo.Text
  Balloon.Info(("Information saved"), btnlocalrepo)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnreportpopup_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/ReportingOutput", cmbreportpopup.Text)
  modBasic.$ReportingPopUp = cmbreportpopup.Text
  Balloon.Info(("Information saved"), btnreportpopup)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnwebfunc_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/WebViewFunction", cmbwebfunc.Text)
  modBasic.$WebViewFunction = cmbwebfunc.Text
  Balloon.Info(("Information saved"), btnwebfunc)
  Balloon.Delay = modBasic.$BalloonDelay

End

''============================= APP CACHE ===============================
Public Sub chkall_Click()

  Dim xobj As Control
  Dim xchk As CheckBox

  For Each xobj In IconPanel1[6].Children
    If xobj Is CheckBox Then
      xchk = xobj
      If chkall.Value = True Then
        xchk.Value = True
      Else If chkall.Value = False Then
        xchk.Value = False
      Endif
    Endif
  Next

End

Public Sub btnmedreport_Click()

  modSettings.EnterCheckSetting(chkpatdemoghraphic, "AppCacheEnable/PatientDemographics")
  modSettings.EnterCheckSetting(chkpatvisit, "AppCacheEnable/PatientVisits")
  modSettings.EnterCheckSetting(chklabnconst, "AppCacheEnable/LaboratoryConstants")
  modSettings.EnterCheckSetting(chktestmodify, "AppCacheEnable/TestValueModifiers")
  modSettings.EnterCheckSetting(chkexamconst, "AppCacheEnable/ExaminationConstants")
  modSettings.EnterCheckSetting(chkexammodify, "AppCacheEnable/ExamValueModifiers")
  modSettings.EnterCheckSetting(chkradioconst, "AppCacheEnable/RadiologyConstants")
  modSettings.EnterCheckSetting(chkpattest, "AppCacheEnable/PatientLabValues")
  modSettings.EnterCheckSetting(chkpathconst, "AppCacheEnable/PathologyConstants")
  modSettings.EnterCheckSetting(chkbillconst, "AppCacheEnable/BillingConstants")
  modSettings.EnterCheckSetting(chkmedconst, "AppCacheEnable/MedicineConstants")
  modSettings.EnterCheckSetting(chkinventparam, "AppCacheEnable/InventoryParameters")
  modSettings.EnterCheckSetting(chkdrugprobl, "AppCacheEnable/DrugRelatedProblems")
  modSettings.EnterCheckSetting(chkdatarepo, "AppCacheEnable/DataRepository")
  modSettings.EnterCheckSetting(chkdateconv, "AppCacheEnable/DateConversion")
  modSettings.EnterCheckSetting(chkscriptout, "AppCacheEnable/ScriptOutputs")
  modSettings.EnterCheckSetting(chkgeneralparam, "AppCacheEnable/GeneralParameters")
  modSettings.EnterCheckSetting(chkgriddata, "AppCacheEnable/GridViewData")
  modSettings.EnterCheckSetting(chkusershare, "AppCacheEnable/UserShareParameters")
  modSettings.EnterCheckSetting(chkappsettings, "AppCacheEnable/ApplicationSettings")

  modBasic.GetAppCacheSettings()
  Balloon.Info(("Information saved"), btnmedreport)
  Balloon.Delay = modBasic.$BalloonDelay

End

Private Sub DisplayCacheTypes()

  modSettings.ShowCheckBox(chkpatdemoghraphic, "AppCacheEnable/PatientDemographics")
  modSettings.ShowCheckBox(chkpatvisit, "AppCacheEnable/PatientVisits")
  modSettings.ShowCheckBox(chklabnconst, "AppCacheEnable/LaboratoryConstants")
  modSettings.ShowCheckBox(chktestmodify, "AppCacheEnable/TestValueModifiers")
  modSettings.ShowCheckBox(chkexamconst, "AppCacheEnable/ExaminationConstants")
  modSettings.ShowCheckBox(chkexammodify, "AppCacheEnable/ExamValueModifiers")
  modSettings.ShowCheckBox(chkradioconst, "AppCacheEnable/RadiologyConstants")
  modSettings.ShowCheckBox(chkpattest, "AppCacheEnable/PatientLabValues")
  modSettings.ShowCheckBox(chkpathconst, "AppCacheEnable/PathologyConstants")
  modSettings.ShowCheckBox(chkbillconst, "AppCacheEnable/BillingConstants")
  modSettings.ShowCheckBox(chkmedconst, "AppCacheEnable/MedicineConstants")
  modSettings.ShowCheckBox(chkinventparam, "AppCacheEnable/InventoryParameters")
  modSettings.ShowCheckBox(chkdrugprobl, "AppCacheEnable/DrugRelatedProblems")
  modSettings.ShowCheckBox(chkdatarepo, "AppCacheEnable/DataRepository")
  modSettings.ShowCheckBox(chkdateconv, "AppCacheEnable/DateConversion")
  modSettings.ShowCheckBox(chkscriptout, "AppCacheEnable/ScriptOutputs")
  modSettings.ShowCheckBox(chkgeneralparam, "AppCacheEnable/GeneralParameters")
  modSettings.ShowCheckBox(chkgriddata, "AppCacheEnable/GridViewData")
  modSettings.ShowCheckBox(chkusershare, "AppCacheEnable/UserShareParameters")
  modSettings.ShowCheckBox(chkappsettings, "AppCacheEnable/ApplicationSettings")

End
