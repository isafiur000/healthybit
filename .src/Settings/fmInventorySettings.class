' Gambas class file

Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me)
  cmbskipexpiry.List = ["Expired", "ExpireOnUse", "None"]
  cmbserialopen.List = ["Punching", "OnSave", "None"]
  cmbserialclose.List = ["OnSave", "FormClose", "None"]

  cmbstockalert.List = ["UnderStock", "StockRequest", "Expired", "Expire(1month)", "Expire(3month)"]
  cmbrequest.List = modBasic.$AllCompPerList
  cmbalertformat.List = ["fldcomp", "fldcomp_disp"]
  cmbrounding.List = ["Pack Size", "Tens", "None"]

  cmbautoup.List = ["Enable", "Disable"]
  cmbsales.List = ["Manual", "FEFO"]
  cmbretrn.List = ["Manual", "FEFO"]

  cmbpurcomplist.List = modMedicine.GetExtraDepartments()
  cmbpurextraparam.List = ["Enable", "Disable"]
  cmbtendersupply.List = ["Enable", "Disable"]

  cmbinvenreport.List = ["Enable", "Disable"]
  cmbinvamount.List = ["Exact", "Average", "Latest", "Fixed"]

  ShowGeneralSettings()
  ShowOutOrder()
  ShowDefProfit()
  ShowInventoryReport()
  ShowStoreRequest()

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

''------------------------- Purchase ---------------------
Private Sub ShowDefProfit()

  If modSettings.ShowSettingFromFIle("Purchase/Profit_Medicines") Then
    txtpurpromed.Value = CFloat(modSettings.ShowSettingFromFIle("Purchase/Profit_Medicines"))
  Endif
  If modSettings.ShowSettingFromFIle("Purchase/Profit_Surgicals") Then
    txtpurprosurg.Value = CFloat(modSettings.ShowSettingFromFIle("Purchase/Profit_Surgicals"))
  Endif

  cmbpurcomplist.Text = modSettings.ShowSettingFromFIle("Purchase/CompWiseList")
  cmbpurextraparam.Text = modSettings.ShowSettingFromFIle("Purchase/ExtraParameters")
  cmbtendersupply.Text = modSettings.ShowSettingFromFIle("Purchase/LockToTender")
  If modSettings.ShowSettingFromFIle("Purchase/ExpiryDays") Then
    txtlockpurchase.Value = CFloat(modSettings.ShowSettingFromFIle("Purchase/ExpiryDays"))
  Endif

End

Public Sub btnpurprofit_Click()

  modSettings.SaveSettingsToFile("Purchase/Profit_Medicines", CStr(txtpurpromed.Value))
  modBasic.$MedProfit = txtpurpromed.Value
  modSettings.SaveSettingsToFile("Purchase/Profit_Surgicals", CStr(txtpurprosurg.Value))
  modBasic.$SurgProfit = txtpurprosurg.Value
  Balloon.Info(("Information saved"), btnpurprofit)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnpurcomplist_Click()

  modSettings.SaveSettingsToFile("Purchase/CompWiseList", cmbpurcomplist.Text)
  modBasic.$PurCompList = cmbpurcomplist.Text
  Balloon.Info(("Information saved"), btnpurcomplist)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnpurextraparam_Click()

  modSettings.SaveSettingsToFile("Purchase/ExtraParameters", cmbpurextraparam.Text)
  modBasic.$PurExtraParam = cmbpurextraparam.Text
  Balloon.Info(("Information saved"), btnpurextraparam)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btntendersupply_Click()

  modSettings.SaveSettingsToFile("Purchase/LockToTender", cmbtendersupply.Text)
  modBasic.$PurLockToTender = cmbtendersupply.Text
  Balloon.Info(("Information saved"), btntendersupply)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlockpurchase_Click()

  modSettings.SaveSettingsToFile("Purchase/ExpiryDays", CStr(txtlockpurchase.Value))
  modBasic.$PurExpiryDay = txtlockpurchase.Value
  Balloon.Info(("Information saved"), btnlockpurchase)
  Balloon.Delay = modBasic.$BalloonDelay

End

''--------------------------------------------- out order --------------------------------------------------------
Private Sub ShowOutOrder()

  cmbautoup.Text = modSettings.ShowSettingFromFIle("InventorySetting/AutoOrderOnStartup")
  cmbsales.Text = modSettings.ShowSettingFromFIle("InventorySetting/SalesOutOrder")
  cmbretrn.Text = modSettings.ShowSettingFromFIle("InventorySetting/ReturnOutOrder")

End

Public Sub btnautoup_Click()

  modSettings.SaveSettingsToFile("InventorySetting/AutoOrderOnStartup", cmbautoup.Text)
  Balloon.Info(("Information saved"), btnautoup)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsales_Click()

  modSettings.SaveSettingsToFile("InventorySetting/SalesOutOrder", cmbsales.Text)
  modBasic.$SalesOutOrder = cmbsales.Text
  Balloon.Info(("Information saved"), btnsales)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnretrn_Click()

  modSettings.SaveSettingsToFile("InventorySetting/ReturnOutOrder", cmbretrn.Text)
  modBasic.$RetnOutOrder = cmbretrn.Text
  Balloon.Info(("Information saved"), btnretrn)
  Balloon.Delay = modBasic.$BalloonDelay

End

''------------------------------------------------
Private Sub ShowGeneralSettings()

  cmbskipexpiry.Text = modSettings.ShowSettingFromFIle("InventorySetting/SkipExpiry")
  If modSettings.ShowSettingFromFIle("InventorySetting/ReturnExpiry") Then
    txtlockreturn.Value = CFloat(modSettings.ShowSettingFromFIle("InventorySetting/ReturnExpiry"))
  Endif

  cmbserialopen.Text = modSettings.ShowSettingFromFIle("InventorySetting/ShowStorageLocation")
  cmbserialclose.Text = modSettings.ShowSettingFromFIle("InventorySetting/HideStorageLocation")

  txtfixedasset.Text = modSettings.ShowSettingFromFIle("FixedAssets/QRTemplete")

End

Public Sub btnskipexpiry_Click()

  modSettings.SaveSettingsToFile("InventorySetting/SkipExpiry", cmbskipexpiry.Text)
  modBasic.$SkipExpiry = cmbskipexpiry.Text
  Balloon.Info(("Information saved"), btnskipexpiry)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlockreturn_Click()

  modSettings.SaveSettingsToFile("InventorySetting/ReturnExpiry", txtlockreturn.Value)
  Balloon.Info(("Information saved"), btnlockreturn)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnserialopen_Click()

  modSettings.SaveSettingsToFile("InventorySetting/ShowStorageLocation", cmbserialopen.Text)
  modBasic.$ShowStorage = cmbserialopen.Text
  Balloon.Info(("Information saved"), btnserialopen)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnserialclose_Click()

  modSettings.SaveSettingsToFile("InventorySetting/HideStorageLocation", cmbserialclose.Text)
  modBasic.$HideStorage = cmbserialclose.Text
  Balloon.Info(("Information saved"), btnserialclose)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txtfixedasset_Click()

  Dialog.Title = "Select QR Code templete for Fixed Assets"
  If Dialog.OpenFile() Then Return
  txtfixedasset.Text = Dialog.Path

End

Public Sub btnfixedasset_Click()

  modSettings.SaveSettingsToFile("FixedAssets/QRTemplete", txtfixedasset.Text)
  Balloon.Info(("Information saved"), btnfixedasset)
  Balloon.Delay = modBasic.$BalloonDelay

End

''------------ Report -----------
Private Sub ShowInventoryReport()

  cmbinvenreport.Text = modSettings.ShowSettingFromFIle("InventorySetting/QuickInventory")
  cmbinvamount.Text = modSettings.ShowSettingFromFIle("InventorySetting/InventoryAmount")

End

Public Sub btninvenreport_Click()

  modSettings.SaveSettingsToFile("InventorySetting/QuickInventory", cmbinvenreport.Text)
  modBasic.$InvQuickReport = cmbinvenreport.Text
  Balloon.Info(("Information saved"), btninvenreport)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btninvamount_Click()

  modSettings.SaveSettingsToFile("InventorySetting/InventoryAmount", cmbinvamount.Text)
  modBasic.$InvReportCost = cmbinvamount.Text
  Balloon.Info(("Information saved"), btninvamount)
  Balloon.Delay = modBasic.$BalloonDelay

End

''---------------- Store request --------------------
Private Sub ShowStoreRequest()

  cmbstockalert.Text = modSettings.ShowSettingFromFIle("InventorySetting/InventoryAlert")

  cmbrequest.Text = modSettings.ShowSettingFromFIle("StoreAlert/TargetLocation")
  cmbalertformat.Text = modSettings.ShowSettingFromFIle("StoreAlert/TargetField")

  If modSettings.ShowSettingFromFIle("StoreAlert/AnalyzeddDays") Then
    txtanalyze.Value = CInt(modSettings.ShowSettingFromFIle("StoreAlert/AnalyzeddDays"))
  Endif
  If modSettings.ShowSettingFromFIle("StoreAlert/RequestedDays") Then
    txtrequest.Value = CInt(modSettings.ShowSettingFromFIle("StoreAlert/RequestedDays"))
  Endif

  cmbrounding.Text = modSettings.ShowSettingFromFIle("StoreAlert/QTYRounding")

End

Public Sub btnstockalert_Click()

  modSettings.SaveSettingsToFile("InventorySetting/InventoryAlert", cmbstockalert.Text)
  Balloon.Info(("Information saved"), btnstockalert)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnrequest_Click()

  modSettings.SaveSettingsToFile("StoreAlert/TargetLocation", cmbrequest.Text)
  modSettings.SaveSettingsToFile("StoreAlert/TargetField", cmbalertformat.Text)
  If txtanalyze.Value Then
    modSettings.SaveSettingsToFile("StoreAlert/AnalyzeddDays", CStr(txtanalyze.Value))
  Endif
  If txtrequest.Value Then
    modSettings.SaveSettingsToFile("StoreAlert/RequestedDays", CStr(txtrequest.Value))
  Endif
  modSettings.SaveSettingsToFile("StoreAlert/QTYRounding", cmbrounding.Text)

  Balloon.Info(("Information saved"), btnrequest)
  Balloon.Delay = modBasic.$BalloonDelay

End
