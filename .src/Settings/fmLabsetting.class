' Gambas class file

Private $hCalcForm As FmcustCalc
Private $hRadioForm As FmcustCalc

Public Sub Form_Open()

  Dim hForm As FmEvidence

  modGeneralMain.ArrangeFormCentre(Me)
  $hCalcForm = New FmcustCalc("Test", Panel1)
  $hRadioForm = New FmcustCalc("Radio", Panel3)
  hForm = New FmEvidence(Panel2)

  cmbsampauto.List = ["Yes", "No"]
  cmbgroupreport.List = ["Yes", "No"]
  cmbquickmulti.List = ["Yes", "No"]
  cmbarchive.List = ["Identification", "SampleID", "Section", "Section+SampleID"]

  cmbremote.List = ["SMS", "EMail", "SMS+EMail"]
  cmbuprepo.List = ["Enable", "Disable"]
  cmbpasstype.List = ["Encounter", "PatientID", "None"]
  cmbrepomethod.List = ["Instant", "Task"]

  cmbinterpret.List = ["Interpretation", "Comment", "None"]
  cmborder.List = ["ASC", "DESC", "Manual", "None"]

  cmbreportedby.List = ["Column1", "Column2", "Column3"]
  cmbverifiedby.List = ["Column1", "Column2", "Column3"]
  cmbreportedlast.List = ["First", "Last"]
  cmbverifiedlast.List = ["First", "Last"]
  cmbsensdata.List = ["Summary", "Table"]
  cmbrepolock.List = ["Reported", "Verified"]
  cmbreposection.List = ["Separate", "Combined"]
  cmbrepospecimn.List = ["Specimen", "Comment", "Invoice", "TestUnit", "None"]
  cmbarchlog.List = ["Enable", "Disable"]
  cmblocksms.List = ["Reported", "Verified", "None"]

  cmbextra3.List = ["Specimen", "SampleID", "InvoiceNo", "SampleDate", "ReportDate", "ReportLastDate", "VerifydDate", "VerifyLastDate", "ReferBy", "Condition", "SampleIDBarCode", "SampleIDQRCode", "InvoiceBarCode", "InvoiceQRCode"]
  cmbextra4.List = ["Specimen", "SampleID", "InvoiceNo", "SampleDate", "ReportDate", "ReportLastDate", "VerifydDate", "VerifyLastDate", "ReferBy", "Condition", "SampleIDBarCode", "SampleIDQRCode", "InvoiceBarCode", "InvoiceQRCode"]
  cmbextra2.List = ["Specimen", "SampleID", "InvoiceNo", "SampleDate", "ReportDate", "ReportLastDate", "VerifydDate", "VerifyLastDate", "ReferBy", "Condition", "SampleIDBarCode", "SampleIDQRCode", "InvoiceBarCode", "InvoiceQRCode"]
  cmbextra1.List = ["Specimen", "SampleID", "InvoiceNo", "SampleDate", "ReportDate", "ReportLastDate", "VerifydDate", "VerifyLastDate", "ReferBy", "Condition", "SampleIDBarCode", "SampleIDQRCode", "InvoiceBarCode", "InvoiceQRCode"]
  cmbextra5.List = ["Specimen", "SampleID", "InvoiceNo", "SampleDate", "ReportDate", "ReportLastDate", "VerifydDate", "VerifyLastDate", "ReferBy", "Condition", "SampleIDBarCode", "SampleIDQRCode", "InvoiceBarCode", "InvoiceQRCode"]
  cmbextra6.List = ["Specimen", "SampleID", "InvoiceNo", "SampleDate", "ReportDate", "ReportLastDate", "VerifydDate", "VerifyLastDate", "ReferBy", "Condition", "SampleIDBarCode", "SampleIDQRCode", "InvoiceBarCode", "InvoiceQRCode"]
  cmbextra7.List = ["Specimen", "SampleID", "InvoiceNo", "SampleDate", "ReportDate", "ReportLastDate", "VerifydDate", "VerifyLastDate", "ReferBy", "Condition", "SampleIDBarCode", "SampleIDQRCode", "InvoiceBarCode", "InvoiceQRCode"]
  cmbextra8.List = ["Specimen", "SampleID", "InvoiceNo", "SampleDate", "ReportDate", "ReportLastDate", "VerifydDate", "VerifyLastDate", "ReferBy", "Condition", "SampleIDBarCode", "SampleIDQRCode", "InvoiceBarCode", "InvoiceQRCode"]
  cmbshowlabel.List = ["Yes", "No"]
  cmbdateformat.List = ["DateOnly", "DateTime"]

  cmbfixfrom.List = ["From", "Not From"]
  cmbcompsample.List = modBasic.$AllCompPerList
  cmbfixrepofrom.List = ["From", "Not From"]
  cmbcompreport.List = modBasic.$AllCompPerList
  lstfooter.List = modLabSub.ListFooterNoteList()

  cmbwsheet.List = ["Continuous", "Categorical"]
  cmbhidden.List = modMedicine.GetPathoCategoryList("Test")
  cmbhidden.Add("All Departments")
  cmblockspec.List = ["Yes", "No"]
  cmbspecencid.List = ["Yes", "No"]
  cmbaddsource.List = ["Encounter", "Invoice"]
  cmautofooter.List = ["Database", "Folder", "None"]
  cmbautoload.List = ["All", "Machine", "None"]
  cmbautospecimen.List = ["Yes", "No"]
  cmbautosampleid.List = ["Yes", "No"]
  cmbspecsuffix.List = ["Yes", "No"]

  cmbbarcode.List = ["EncounterID", "SampleNo", "SampleNo@EncID"]
  cmbarformat.List = BarCodeFormats()
  cmbextrabar.List = ["Yes", "No"]
  cmbmultipdf.List = ["Continuous", "Separate"]
  cmbbarprint.List = ["Section", "TestName", "BillItem", "Section/BillItem", "None"]
  cmblabque.List = ["Department"]

  cmbintfacetype.List = ["sqlite3", "mysql", "postgresql", "odbc", "http"]
  cmbintfaceunit.List = ["Metric", "SI"]
  cmbintfacevendor.List = ["Charly Computers"]

  GeneralSetting()
  ShowLabReport()
  ShowExtraHeaders()
  SHowSamplingData()
  SampleBarCodeSet()
  FoterSeeting()
  ShowSMSSetting()
  SMSwithFTP()
  SHowInterfaceLocals()

End

Public Sub Form_Close()

  modGeneralMain.RecordFormExit(Me)

End

Public Sub txtsamprefix_KeyPress()

  modGeneralMain.InputUpCaseOnly()

End

Private Function BarCodeFormats() As String[]

  Dim xfile As String
  Dim xlist As String[]

  xfile = modHelpVariable.$localesDirectory &/ "zint"
  If Exist(xfile) Then
    xlist = modString.GetSelStringFieldFromCSV(xfile, 1, ";")
  Endif
  Return xlist

End

'''----------------------- General setting ---------------------------------------
Private Sub GeneralSetting()

  txtreferlist.Text = modSettings.ShowSettingFromFIle("Laboratory/ReferralList")

  cmbquickmulti.Text = modSettings.ShowSettingFromFIle("Laboratory/QuickMultiForm")
  cmbgroupreport.Text = modSettings.ShowSettingFromFIle("Laboratory/ReportingInGroup")
  cmbsampauto.Text = modSettings.ShowSettingFromFIle("Laboratory/SampleNoAutoincrement")
  txtsamprefix.Text = modSettings.ShowSettingFromFIle("Laboratory/SampleNoPrefix")
  txtradioprefix.Text = modSettings.ShowSettingFromFIle("Radiology/SamplePrefix")
  cmbarchive.Text = modSettings.ShowSettingFromFIle("Laboratory/ArchivingComment")

  cmbcompsample.Text = modSettings.ShowSettingFromFIle("Laboratory/FixSender_Sampling")
  cmbfixfrom.Text = modSettings.ShowSettingFromFIle("Laboratory/SenderType_Sampling")
  cmbcompreport.Text = modSettings.ShowSettingFromFIle("Laboratory/FixSender_Reporting")
  cmbfixrepofrom.Text = modSettings.ShowSettingFromFIle("Laboratory/SenderType_Reporting")

End

Public Sub btnarchive_Click()

  modSettings.SaveSettingsToFile("Laboratory/ArchivingComment", cmbarchive.Text)
  modBasic.$LabArchComment = cmbarchive.Text
  Balloon.Info(("Information saved"), btnarchive)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btngroupreport_Click()

  modSettings.SaveSettingsToFile("Laboratory/ReportingInGroup", cmbgroupreport.Text)
  modBasic.$LabReportGroup = cmbgroupreport.Text
  Balloon.Info(("Information saved"), btngroupreport)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnquickmulti_Click()

  modSettings.SaveSettingsToFile("Laboratory/QuickMultiForm", cmbquickmulti.Text)
  modBasic.$LabQuickMulti = cmbquickmulti.Text
  Balloon.Info(("Information saved"), btnquickmulti)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsampauto_Click()

  modSettings.SaveSettingsToFile("Laboratory/SampleNoAutoincrement", cmbsampauto.Text)
  modBasic.$LabAutoSampNo = cmbsampauto.Text
  Balloon.Info(("Information saved"), btnsampauto)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsamprefix_Click()

  modSettings.SaveSettingsToFile("Laboratory/SampleNoPrefix", txtsamprefix.Text)
  modBasic.$LabSamplePrefix = txtsamprefix.Text
  Balloon.Info(("Information saved"), btnsamprefix)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnradioprefix_Click()

  modSettings.SaveSettingsToFile("Radiology/SamplePrefix", txtradioprefix.Text)
  modBasic.$RadioSamplePrefix = txtradioprefix.Text
  Balloon.Info(("Information saved"), btnradioprefix)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnreferlist_Click()

  modSettings.SaveSettingsToFile("Laboratory/ReferralList", txtreferlist.Text)
  Balloon.Info(("Information saved"), btnreferlist)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txtreferlist_Click()

  Dialog.Title = "Select text file for Referral list"
  If Dialog.OpenFile() Then Return
  txtreferlist.Text = Dialog.Path

End

Public Sub btncompsample_Click()

  modSettings.SaveSettingsToFile("Laboratory/FixSender_Sampling", cmbcompsample.Text)
  modBasic.$LabSamplingComp = cmbcompsample.Text
  modSettings.SaveSettingsToFile("Laboratory/SenderType_Sampling", cmbfixfrom.Text)
  modBasic.$LabSamplingFrom = cmbfixfrom.Text
  Balloon.Info(("Information saved"), btncompsample)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btncompreport_Click()

  modSettings.SaveSettingsToFile("Laboratory/FixSender_Reporting", cmbcompreport.Text)
  modBasic.$LabReportingComp = cmbcompreport.Text
  modSettings.SaveSettingsToFile("Laboratory/SenderType_Reporting", cmbfixrepofrom.Text)
  modBasic.$LabReportingFrom = cmbfixrepofrom.Text
  Balloon.Info(("Information saved"), btncompreport)
  Balloon.Delay = modBasic.$BalloonDelay

End

''---------------------------------- REPORT ----------------------------------------
Private Sub ShowLabReport()

  cmbinterpret.Text = modSettings.ShowSettingFromFIle("Laboratory/Observation_Comment")
  cmborder.Text = modSettings.ShowSettingFromFIle("Laboratory/Report_Order")
  cmbreportedby.Text = modSettings.ShowSettingFromFIle("Laboratory/Footer_ReportedBy")
  cmbverifiedby.Text = modSettings.ShowSettingFromFIle("Laboratory/Footer_VerifiedBy")
  cmbreportedlast.Text = modSettings.ShowSettingFromFIle("Laboratory/Footer_ReportedPos")
  cmbverifiedlast.Text = modSettings.ShowSettingFromFIle("Laboratory/Footer_VerifiedPos")
  cmbsensdata.Text = modSettings.ShowSettingFromFIle("Laboratory/SensitivityReport")
  cmbrepolock.Text = modSettings.ShowSettingFromFIle("Laboratory/OutputLock")
  cmbreposection.Text = modSettings.ShowSettingFromFIle("Laboratory/ReportSections")
  cmbrepospecimn.Text = modSettings.ShowSettingFromFIle("Laboratory/ExtraColumn")
  cmbarchlog.Text = modSettings.ShowSettingFromFIle("Laboratory/ArchiveLogReport")
  cmblocksms.Text = modSettings.ShowSettingFromFIle("Laboratory/LockSMSReport")

End

Public Sub btnsensdata_Click()

  modSettings.SaveSettingsToFile("Laboratory/SensitivityReport", cmbsensdata.Text)
  Balloon.Info(("Information saved"), btnsensdata)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnreposection_Click()

  modSettings.SaveSettingsToFile("Laboratory/ReportSections", cmbreposection.Text)
  Balloon.Info(("Information saved"), btnreposection)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnrepospecmn_Click()

  modSettings.SaveSettingsToFile("Laboratory/ExtraColumn", cmbrepospecimn.Text)
  Balloon.Info(("Information saved"), btnrepospecmn)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnrepolock_Click()

  modSettings.SaveSettingsToFile("Laboratory/OutputLock", cmbrepolock.Text)
  Balloon.Info(("Information saved"), btnrepolock)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btninterpret_Click()

  modSettings.SaveSettingsToFile("Laboratory/Observation_Comment", cmbinterpret.Text)
  Balloon.Info(("Information saved"), btninterpret)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnorder_Click()

  modSettings.SaveSettingsToFile("Laboratory/Report_Order", cmborder.Text)
  modBasic.$LabTestOrdering = cmborder.Text
  Balloon.Info(("Information saved"), btnorder)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnarchlog_Click()

  modSettings.SaveSettingsToFile("Laboratory/ArchiveLogReport", cmbarchlog.Text)
  modBasic.$LabArchieveLog = cmbarchlog.Text
  Balloon.Info(("Information saved"), btnarchlog)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlocksms_Click()

  modSettings.SaveSettingsToFile("Laboratory/LockSMSReport", cmblocksms.Text)
  modBasic.$LabSMSReportLock = cmblocksms.Text
  Balloon.Info(("Information saved"), btnlocksms)
  Balloon.Delay = modBasic.$BalloonDelay

End

''---------------------------
Public Sub btnreportedby_Click()

  modSettings.SaveSettingsToFile("Laboratory/Footer_ReportedBy", cmbreportedby.Text)
  Balloon.Info(("Information saved"), btnreportedby)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnveriby_Click()

  modSettings.SaveSettingsToFile("Laboratory/Footer_VerifiedBy", cmbverifiedby.Text)
  Balloon.Info(("Information saved"), btnveriby)
  Balloon.Delay = modBasic.$BalloonDelay

End

''--------------------------------------
Public Sub btnreportedlast_Click()

  modSettings.SaveSettingsToFile("Laboratory/Footer_ReportedPos", cmbreportedlast.Text)
  Balloon.Info(("Information saved"), btnreportedlast)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnverifiedlast_Click()

  modSettings.SaveSettingsToFile("Laboratory/Footer_VerifiedPos", cmbverifiedlast.Text)
  Balloon.Info(("Information saved"), btnverifiedlast)
  Balloon.Delay = modBasic.$BalloonDelay

End

''-------------------------------
Private Sub ShowExtraHeaders()

  cmbextra1.Text = modSettings.ShowSettingFromFIle("Laboratory/EXTRA1")
  cmbextra2.Text = modSettings.ShowSettingFromFIle("Laboratory/EXTRA2")
  cmbextra3.Text = modSettings.ShowSettingFromFIle("Laboratory/EXTRA3")
  cmbextra4.Text = modSettings.ShowSettingFromFIle("Laboratory/EXTRA4")
  cmbextra5.Text = modSettings.ShowSettingFromFIle("Laboratory/EXTRA5")
  cmbextra6.Text = modSettings.ShowSettingFromFIle("Laboratory/EXTRA6")
  cmbextra7.Text = modSettings.ShowSettingFromFIle("Laboratory/EXTRA7")
  cmbextra8.Text = modSettings.ShowSettingFromFIle("Laboratory/EXTRA8")
  cmbshowlabel.Text = modSettings.ShowSettingFromFIle("Laboratory/Show_ExtraLabel")
  cmbdateformat.Text = modSettings.ShowSettingFromFIle("Laboratory/DateContent")

End

Public Sub btnsampdate_Click()

  modSettings.SaveSettingsToFile("Laboratory/EXTRA3", cmbextra3.Text)
  Balloon.Info(("Information saved"), btnsampdate)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnreportdate_Click()

  modSettings.SaveSettingsToFile("Laboratory/EXTRA4", cmbextra4.Text)
  Balloon.Info(("Information saved"), btnreportdate)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsamid_Click()

  modSettings.SaveSettingsToFile("Laboratory/EXTRA2", cmbextra2.Text)
  Balloon.Info(("Information saved"), btnsamid)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsamtype_Click()

  modSettings.SaveSettingsToFile("Laboratory/EXTRA1", cmbextra1.Text)
  Balloon.Info(("Information saved"), btnsamtype)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnreferby_Click()

  modSettings.SaveSettingsToFile("Laboratory/EXTRA5", cmbextra5.Text)
  Balloon.Info(("Information saved"), btnreferby)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btncondi_Click()

  modSettings.SaveSettingsToFile("Laboratory/EXTRA6", cmbextra6.Text)
  Balloon.Info(("Information saved"), btncondi)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsampbarcode_Click()

  modSettings.SaveSettingsToFile("Laboratory/EXTRA7", cmbextra7.Text)
  Balloon.Info(("Information saved"), btnsampbarcode)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsampqrcode_Click()

  modSettings.SaveSettingsToFile("Laboratory/EXTRA8", cmbextra8.Text)
  Balloon.Info(("Information saved"), btnsampqrcode)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnshowlabel_Click()

  modSettings.SaveSettingsToFile("Laboratory/Show_ExtraLabel", cmbshowlabel.Text)
  Balloon.Info(("Information saved"), btnshowlabel)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndateformat_Click()

  modSettings.SaveSettingsToFile("Laboratory/DateContent", cmbdateformat.Text)
  Balloon.Info(("Information saved"), btndateformat)
  Balloon.Delay = modBasic.$BalloonDelay

End

'''----------------------------------------------- SMS FTP -------------------------------------
Public Sub btnvarpatient_Click()

  Dim hform As FmMedVariableEdit

  hform = New FmMedVariableEdit(modString.GetLastWordPosition(txtpatientsms.Text), txtpatientsms, 2)
  hform.ShowModal

End

Public Sub btnvarpatientinfo_Click()

  Dim xx As String

  xx = "Test Result pair is " & "{TestName}: {TestResultValue}"
  xx = xx & gb.NewLine & "Password based on PatientID is: {WebPatPassword}"
  xx = xx & gb.NewLine & "Password based on Encounter is: {WebEncPassword}"
  Message.Info(xx, ("OK"))

End

Public Sub btnsms_Click()

  modSettings.SaveSettingsToFile("Laboratory/Messaging_Format", cmbremote.Text)
  modSettings.SaveSettingsToFile("Laboratory/PatientSMS_SMSText", txtpatientsms.Text)
  Balloon.Info(("Information saved"), btnsms)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnuprepo_Click()

  modSettings.SaveSettingsToFile("Laboratory/FileUpload_Repo", cmbuprepo.Text)
  Balloon.Info(("Information saved"), btnuprepo)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnrepomethod_Click()

  modSettings.SaveSettingsToFile("Laboratory/FileUpload_Method", cmbrepomethod.Text)
  Balloon.Info(("Information saved"), btnrepomethod)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnpatportal_Click()

  modSettings.SaveSettingsToFile("GeneralSettings/PatientPortalURL", txtpatportal.Text)
  modBasic.$PatPortalURL = txtpatportal.Text
  Balloon.Info(("Information saved"), btnpatportal)
  Balloon.Delay = modBasic.$BalloonDelay

End

Private Sub ShowSMSSetting()

  cmbremote.Text = modSettings.ShowSettingFromFIle("Laboratory/Messaging_Format")
  txtpatientsms.Text = modSettings.ShowSettingFromFIle("Laboratory/PatientSMS_SMSText")
  cmbuprepo.Text = modSettings.ShowSettingFromFIle("Laboratory/FileUpload_Repo")
  txtpatportal.Text = modSettings.ShowSettingFromFIle("GeneralSettings/PatientPortalURL")
  cmbrepomethod.Text = modSettings.ShowSettingFromFIle("Laboratory/FileUpload_Method")

End

Private Sub SMSwithFTP()

  cmbpasstype.Text = modSettings.ShowSettingFromFIle("RemoteLogIn/PatientSMS_UserType")
  If modSettings.ShowSettingFromFIle("RemoteLogIn/PatientSMS_PassValidity") Then
    txtpassvalid.Value = CInt(modSettings.ShowSettingFromFIle("RemoteLogIn/PatientSMS_PassValidity"))
  Endif
  If modSettings.ShowSettingFromFIle("RemoteLogIn/PatientSMS_PassLength") Then
    txtpasslength.Value = CInt(modSettings.ShowSettingFromFIle("RemoteLogIn/PatientSMS_PassLength"))
  Endif

End

''-------------------------------------- Footer List -------------------------------------------
Public Sub txtfootlink_Click()

  If Dialog.OpenFile() Then Return
  txtfootlink.Text = Dialog.Path

End

Public Sub btnfootadd_Click()

  modSettings.SaveSettingsToFile("FooterNote/Name_" & CStr(lstfooter.List.Count + 1), txtfootname.Text)
  modSettings.SaveSettingsToFile("FooterNote/Link_" & CStr(lstfooter.List.Count + 1), txtfootlink.Text)
  lstfooter.List = modLabSub.ListFooterNoteList()
  Balloon.Info(("Information saved"), btnfootadd)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub lstfooter_Click()

  txtfootindex.Text = CStr(lstfooter.Index)
  txtfootname.Text = modSettings.ShowSettingFromFIle("FooterNote/Name_" & CStr(lstfooter.Index + 1))
  txtfootlink.Text = modSettings.ShowSettingFromFIle("FooterNote/Link_" & CStr(lstfooter.Index + 1))

End

Public Sub btnfootedit_Click()

  If txtfootindex.Text Then
    modSettings.SaveSettingsToFile("FooterNote/Name_" & CStr(CInt(txtfootindex.Text) + 1), txtfootname.Text)
    modSettings.SaveSettingsToFile("FooterNote/Link_" & CStr(CInt(txtfootindex.Text) + 1), txtfootlink.Text)
    Balloon.Info(("Information updated"), btnfootedit)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Private Sub FoterSeeting()

  cmautofooter.Text = modSettings.ShowSettingFromFIle("FooterNote/AutoFillSource")
  txttestalert.Text = modSettings.ShowSettingFromFIle("Laboratory/TestAlertList")
  txtradioalert.Text = modSettings.ShowSettingFromFIle("Laboratory/RadioAlertList")

End

Public Sub btnautofooter_Click()

  modSettings.SaveSettingsToFile("FooterNote/AutoFillSource", cmautofooter.Text)
  modBasic.$LabAutoFooter = cmautofooter.Text
  Balloon.Info(("Information updated"), btnautofooter)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txttestalert_Click()

  Dialog.Title = "Select text file for Alert list"
  If Dialog.OpenFile() Then Return
  txttestalert.Text = Dialog.Path

End

Public Sub btntestalert_Click()

  modSettings.SaveSettingsToFile("Laboratory/TestAlertList", txttestalert.Text)
  modBasic.$AlertTestList = txttestalert.Text
  Balloon.Info(("Information saved"), btntestalert)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txtradioalert_Click()

  Dialog.Title = "Select text file for Alert list"
  If Dialog.OpenFile() Then Return
  txtradioalert.Text = Dialog.Path

End

Public Sub btnradioalert_Click()

  modSettings.SaveSettingsToFile("Laboratory/RadioAlertList", txtradioalert.Text)
  modBasic.$AlertRadioList = txtradioalert.Text
  Balloon.Info(("Information saved"), btnradioalert)
  Balloon.Delay = modBasic.$BalloonDelay

End

''------------------------ Sampling -----------------------
Private Sub SHowSamplingData()

  cmbautospecimen.Text = modSettings.ShowSettingFromFIle("TestAddition/AutoSpecimen")
  cmbautosampleid.Text = modSettings.ShowSettingFromFIle("TestAddition/AutoSampleID")
  cmbspecsuffix.Text = modSettings.ShowSettingFromFIle("TestAddition/AutoSampleSuffix")
  cmbwsheet.Text = modSettings.ShowSettingFromFIle("LabWorksheet/PrintMode")
  cmbhidden.Text = modSettings.ShowSettingFromFIle("TestAddition/HiddenMode")
  cmblockspec.Text = modSettings.ShowSettingFromFIle("TestAddition/LockSpecimen")
  cmbspecencid.Text = modSettings.ShowSettingFromFIle("TestAddition/AutoEncounterF1")
  cmbaddsource.Text = modSettings.ShowSettingFromFIle("TestAddition/SourceFormat")
  cmbautoload.Text = modSettings.ShowSettingFromFIle("TestAddition/AutoSampleLoad")

End

''-----------------------
Public Sub btnautospecimen_Click()

  modSettings.SaveSettingsToFile("TestAddition/AutoSpecimen", cmbautospecimen.Text)
  modBasic.$LabAutoSpecimen = cmbautospecimen.Text
  Balloon.Info(("Information saved"), btnautospecimen)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnautosampleid_Click()

  modSettings.SaveSettingsToFile("TestAddition/AutoSampleID", cmbautosampleid.Text)
  modBasic.$LabAutoSampleID = cmbautosampleid.Text
  Balloon.Info(("Information saved"), btnautosampleid)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnspecsuffix_Click()

  modSettings.SaveSettingsToFile("TestAddition/AutoSampleSuffix", cmbspecsuffix.Text)
  modBasic.$LabAutoSampleSuffix = cmbspecsuffix.Text
  Balloon.Info(("Information saved"), btnspecsuffix)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnwsheet_Click()

  modSettings.SaveSettingsToFile("LabWorksheet/PrintMode", cmbwsheet.Text)
  modBasic.$LabWorkSheet = cmbwsheet.Text
  Balloon.Info(("Information saved"), btnwsheet)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnhidden_Click()

  modSettings.SaveSettingsToFile("TestAddition/HiddenMode", cmbhidden.Text)
  modBasic.$LabAddHidden = cmbhidden.Text
  Balloon.Info(("Information saved"), btnhidden)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlockspecs_Click()

  modSettings.SaveSettingsToFile("TestAddition/LockSpecimen", cmblockspec.Text)
  modBasic.$LabLockSpecimen = cmblockspec.Text
  Balloon.Info(("Information saved"), btnlockspecs)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnspecencid_Click()

  modSettings.SaveSettingsToFile("TestAddition/AutoEncounterF1", cmbspecencid.Text)
  modBasic.$AutoEncounterF1 = cmbspecencid.Text
  Balloon.Info(("Information saved"), btnspecencid)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnaddsource_Click()

  modSettings.SaveSettingsToFile("TestAddition/SourceFormat", cmbaddsource.Text)
  modBasic.$TestAddSource = cmbaddsource.Text
  Balloon.Info(("Information saved"), btnaddsource)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnautoload_Click()

  modSettings.SaveSettingsToFile("TestAddition/AutoSampleLoad", cmbautoload.Text)
  modBasic.$AutoSampleLoad = cmbautoload.Text
  Balloon.Info(("Information saved"), btnautoload)
  Balloon.Delay = modBasic.$BalloonDelay

End

''-----------bar code
Private Sub SampleBarCodeSet()

  cmbbarcode.Text = modSettings.ShowSettingFromFIle("SampleBarcode/DataContent")
  cmbbarprint.Text = modSettings.ShowSettingFromFIle("SampleBarcode/Separation")
  txtbarpath.Text = modSettings.ShowSettingFromFIle("SampleBarcode/Templete")
  cmbextrabar.Text = modSettings.ShowSettingFromFIle("SampleBarcode/ExtraPrint")
  cmblabque.Text = modSettings.ShowSettingFromFIle("SampleBarcode/QueFormat")

  If modSettings.ShowSettingFromFIle("SampleBarcode/Count") Then
    txtprintcount.Value = CInt(modSettings.ShowSettingFromFIle("SampleBarcode/Count"))
  Endif

  cmbarformat.Text = modSettings.ShowSettingFromFIle("SampleBarcode/FormatString")
  modSettings.ShowCheckBox(chkbartext, "SampleBarcode/DisplayText")
  If modSettings.ShowSettingFromFIle("SampleBarcode/Width") Then
    txtbarscale.Value = CFloat(modSettings.ShowSettingFromFIle("SampleBarcode/Width"))
  Endif
  If modSettings.ShowSettingFromFIle("SampleBarcode/WhiteSpace") Then
    txtbarwhite.Value = CInt(modSettings.ShowSettingFromFIle("SampleBarcode/WhiteSpace"))
  Endif
  cmbmultipdf.Text = modSettings.ShowSettingFromFIle("SampleBarcode/PDF_MultiPage")

End

Public Sub btnbarcode_Click()

  modSettings.SaveSettingsToFile("SampleBarcode/DataContent", cmbbarcode.Text)
  modBasic.$LabBarCode = cmbbarcode.Text
  Balloon.Info(("Information saved"), btnbarcode)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbarprint_Click()

  modSettings.SaveSettingsToFile("SampleBarcode/Separation", cmbbarprint.Text)
  modBasic.$LabBarPrint = cmbbarprint.Text
  Balloon.Info(("Information saved"), btnbarprint)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlabque_Click()

  modSettings.SaveSettingsToFile("SampleBarcode/QueFormat", cmblabque.Text)
  modBasic.$LabQueFormat = cmblabque.Text
  Balloon.Info(("Information updated"), btnlabque)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnextrabar_Click()

  modSettings.SaveSettingsToFile("SampleBarcode/ExtraPrint", cmbextrabar.Text)
  modBasic.$LabExtraPrint = cmbextrabar.Text
  Balloon.Info(("Information saved"), btnextrabar)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub txtbarpath_Click()

  If Dialog.OpenFile() Then Return
  txtbarpath.Text = Dialog.Path

End

Public Sub btnsamplemodel_Click()

  txtbarpath.Text = modHelpVariable.$htmlDirectory &/ "samplingbarcode.tpl"

End

Public Sub btnbarpath_Click()

  modSettings.SaveSettingsToFile("SampleBarcode/Templete", txtbarpath.Text)
  modBasic.$LabBarPath = txtbarpath.Text
  Balloon.Info(("Information saved"), btnbarpath)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnhelpsample_Click()

  Dim xx As String

  xx = "You can design Barcode containing HTML file using following variables" & gb.NewLine
  xx = xx & "{SampleID} For Sample No" & gb.NewLine
  xx = xx & "{Specimen} For Specimen" & gb.NewLine
  xx = xx & "{SampleQueNo} For Que Number" & gb.NewLine
  xx = xx & "{SampleBookingDate} For Que Number" & gb.NewLine
  xx = xx & "{Separation} For Separation variable" & gb.NewLine
  xx = xx & "{SampleBarcode} For Barcode image Path" & gb.NewLine
  xx = xx & "{SearchVariable} For Search Variable"
  Message.Info(xx, ("OK"))

End

Public Sub btnbarformat_Click()

  modSettings.SaveSettingsToFile("SampleBarcode/FormatString", cmbarformat.Text)
  modSettings.EnterCheckSetting(chkbartext, "SampleBarcode/DisplayText")
  modBasic.$LabBarFormat = cmbarformat.Text
  If chkbartext.Value = True Then
    modBasic.$LabBarDisplayText = "Yes"
  Else
    modBasic.$LabBarDisplayText = "No"
  Endif

  Balloon.Info(("Information saved"), btnbarformat)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbarwidth_Click()

  modSettings.SaveSettingsToFile("SampleBarcode/Width", CStr(txtbarscale.Value))
  modBasic.$LabBarWidth = txtbarscale.Value
  Balloon.Info(("Information saved"), btnbarwidth)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbarwhite_Click()

  modSettings.SaveSettingsToFile("SampleBarcode/WhiteSpace", CStr(txtbarwhite.Value))
  modBasic.$LabBarWhiteSpace = txtbarwhite.Value
  Balloon.Info(("Information saved"), btnbarwhite)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnprintcount_Click()

  If txtprintcount.Value Then
    modSettings.SaveSettingsToFile("SampleBarcode/Count", txtprintcount.Value)
    modBasic.$LabSamplePrint = txtprintcount.Value
    Balloon.Info(("Information saved"), btnprintcount)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnmultipdf_Click()

  modSettings.SaveSettingsToFile("SampleBarcode/PDF_MultiPage", cmbmultipdf.Text)
  modBasic.$LabBarMultiPrint = cmbmultipdf.Text
  Balloon.Info(("Information updated"), btnmultipdf)
  Balloon.Delay = modBasic.$BalloonDelay

End

''------------------------- Interfacing -----------------------------------
Private Sub SaveRepoSettingsToFile(strSetting As String, strVal As String)

  Dim ConfFile As Settings

  ConfFile = New Settings(modHelpVariable.AppDirectory &/ "/labinterfacing.conf")
  ConfFile[strSetting] = Trim(strVal)

End

Public Sub btnintfacesave_Click()

  Dim sPass As String
  Dim xdir As String
  Dim xPath As String
  Dim xfile As String

  SaveRepoSettingsToFile("Interface/Vendor", cmbintfacevendor.Text)
  SaveRepoSettingsToFile("Interface/Service", cmbintfacetype.Text)
  If cmbintfacetype.Text = "http" Then
    SaveRepoSettingsToFile("Interface/URL", txtintfaceserver.Text)
  Else
    SaveRepoSettingsToFile("Interface/Host", txtintfaceserver.Text)
  Endif
  SaveRepoSettingsToFile("Interface/User", txtintfaceuser.Text)
  SaveRepoSettingsToFile("Interface/Password", modPassword.EncryptDBPass(txtintfacepass.Text, False))
  SaveRepoSettingsToFile("Interface/Database", txtintfacedb.Text)
  If txtintfaceport.Value Then
    SaveRepoSettingsToFile("Interface/Port", CStr(txtintfaceport.Value))
  Endif
  SaveRepoSettingsToFile("Interface/Unit", cmbintfaceunit.Text)

  If chkintfaceencrypt.Value = True Then
    If System.Exist("7z") Then
      xfile = "labinterfacing.conf"
      xdir = modHelpVariable.AppCacheDir
      modExternal.CreateNewCacheFile(xdir, xfile)
      modDevAll.Get7ZCompression(modHelpVariable.AppDirectory &/ xfile, modHelpVariable.$CryptZip, xdir &/ xfile & ".7z")
      xPath = xdir &/ xfile & ".7z"
      Kill modHelpVariable.AppDirectory &/ xfile
    Else
      modApplSub.InstallSelectedApplication(["p7zip-full"])
    Endif
  Else
    xPath = modHelpVariable.AppDirectory &/ "/labinterfacing.conf"
  Endif

  sPass = InputPassword(("Enter Password for Super User"), ("Super User"), "")
  modExternal.ReplaceFileAsRoot(xPath, modHelpVariable.$appetcFolder, sPass)
  Wait
  If Exist(xdir) Then
    modExternal.DeleteFolderRecursive(xdir)
  Endif

End

Public Sub btnintfaceshow_Click()

  modInterface.ReadIntfaceConfig()
  cmbintfacevendor.Text = modInterface.$IntfaceVendor
  cmbintfacetype.Text = modInterface.$IntfaceService
  If modInterface.$IntfaceService = "http" Then
    txtintfaceserver.Text = modInterface.$IntfaceURL
  Else
    txtintfaceserver.Text = modInterface.$IntfaceHost
  Endif
  txtintfaceuser.Text = modInterface.$IntfaceUser
  txtintfacepass.Text = modInterface.$IntfacePassword
  txtintfacedb.Text = modInterface.$IntfaceDatabase
  If modInterface.$IntfacePort Then
    txtintfaceport.Value = CInt(modInterface.$IntfacePort)
  Endif
  cmbintfaceunit.Text = modInterface.$IntfaceUnit
  ListBox1.List = ShowMachineTestList()

End

Private Function ShowMachineTestList() As String[]

  Dim xList As String[]

  If cmbintfacevendor.Text Then
    xList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldtestid as col from tbltestmachine where fldvendor=&1", cmbintfacevendor.Text))
  Endif
  Return xList

End

Public Sub btnadd_Click()

  Dim xList As String[]
  Dim hForm As FmAddVariableCombo

  If cmbintfacevendor.Text Then
    xList = modMedicine.FillLabTestCombo("%")
    hForm = New FmAddVariableCombo("fldtestid", "fldvendor", cmbintfacevendor.Text, "tbltestmachine", xList, True)
    hForm.ShowModal
    ListBox1.List = ShowMachineTestList()
  Endif

End

Public Sub btndel_Click()

  If cmbintfacevendor.Text Then
    modDatabase.$myConn.Delete("tbltestmachine", "fldtestid=&1 and fldvendor=&2", ListBox1.Text, cmbintfacevendor.Text)
    ListBox1.List = ShowMachineTestList()
  Endif

End

Public Sub btninterfereporting_Click()

  modSettings.EnterCheckSetting(chkinterfreporting, "Interface/ReportingDate")
  If chkinterfreporting.Value = True Then
    modBasic.$LabInterfaceCompDate = "Yes"
  Else If chkinterfreporting.Value = False Then
    modBasic.$LabInterfaceCompDate = "No"
  Endif
  Balloon.Info(("Information saved"), btninterfereporting)
  Balloon.Delay = modBasic.$BalloonDelay

End

Private Sub SHowInterfaceLocals()

  modSettings.ShowCheckBox(chkinterfreporting, "Interface/ReportingDate")

End
