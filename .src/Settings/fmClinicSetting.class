' Gambas class file

Private $linkCon As Connection

Public Sub btnshowsetting_Click()

  If cmbtarget.Text Then
    IconPanel1.Enabled = True

    GeneralSettings()
    ShowDataEntry()
    GetClinActivity()
    ShowOutcomeSett()
    ShowTelemedicineSett()
    ShowUserAccessRestriction()
    DataSyncSetting()
  Endif

End

Public Sub Form_Open()

  Dim xList As String[]

  modGeneralMain.ArrangeFormCentre(Me)
  cmbtarget.List = modBasic.$AllCompList
  cmbtarget.Text = modBasic.$compID

  cmbdeptdefault.List = modGeneral.GetDepartmentAllList("%")
  cmbdeptlock.List = ["Yes", "No"]
  cmbdoctorlock.List = ["Yes", "No"]
  cmblockproced.List = ["Yes", "No"]
  cmbbedrelease.List = ["Enable", "Disable"]
  cmbdeparttype.List = ["Location", "Service"]
  cmbsympscale.List = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select fldexamid as col from tblexam where fldoption=&1 and fldstatus=&2", "Clinical Scale", "Active"))        ''

  cmblockexam.List = ["Yes", "No"]
  cmblocksymptom.List = ["Yes", "No"]
  cmblockdiagno.List = ["Yes", "No"]
  cmblockdelinput.List = ["Yes", "No"]
  cmblockprocinput.List = ["Yes", "No"]
  cmblockanestech.List = ["Yes", "No"]
  cmbpathistory.List = ["Single", "Multiple"]
  cmbdietapprove.List = ["Enable", "Disable"]
  cmbicdgroup.List = ["Enable", "Disable"]
  cmbhistdisch.List = ["Selected", "All"]

  cmbtriage.List = ["Manual", "Dynamic"]
  cmbdosing.List = ["Enable", "Disable"]
  xList = modControlSub.GetDirectFillresultNoNull(modDatabase.$myConn.Exec("select distinct(flddept) as col from tbldeptexam"))
  cmbdefopdexam.List = xList
  cmbdefipdexam.List = xList

  cmbtelemed.List = ["Partial", "Complete", "Disable"]
  cmbvideopass.List = ["Enable", "Disable"]
  cmbconsultsource.List = ["Remote", "Local"]

  cmbtype.List = ["sqlite3", "mysql", "postgresql", "odbc", "http"]
  cmbsynctype.List = ["medicine-data", "medicine-problems", "medicine-compounding", "examination-data", "examination-factors", "laboratory-data", "laboratory-factors", "radiology-data", "nutrition-data", "diagnosis-data", "demographics-data", "billing-data"]                  ''

  cmbsyncmedbrand.List = ["Yes", "No"]
  cmbsyncexam.List = ["Yes", "No"]
  cmbsynclabtest.List = ["Yes", "No"]
  cmbsyncradio.List = ["Yes", "No"]
  cmbsyncnutrit.List = ["Yes", "No"]

  cmbsyncmedprob.List = ["Yes", "No"]
  cmbsynfactexam.List = ["Yes", "No"]
  cmbsyncfactlab.List = ["Yes", "No"]
  cmbsyncmedcomp.List = ["Yes", "No"]
  cmbsyncdiagno.List = ["Yes", "No"]
  cmbsyncbilling.List = ["Yes", "No"]
  cmbsyncdemograp.List = ["Yes", "No"]

  cmbdischdiagno.List = ["Yes", "No"]
  cmbopdoutdiagno.List = ["Provisional", "Final"]

End

Public Sub Form_Resize()

  modGeneralMain.ShowSelectedFormMenu(Me)

End

Public Sub Form_Close()

  MMain.InitialAppMode()
  modGeneralMain.RecordFormExit(Me)

End

Public Sub cmbtarget_Click()

  lblcomp.Text = modGeneral.GetCompNameFromCompID(cmbtarget.Text)

End

''----------------------------- General settings -----------------------------
Private Sub GeneralSettings()

  cmbdeptdefault.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/FixedDepartment", cmbtarget.Text)
  cmbdeptlock.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/LockToOwnDepartment", cmbtarget.Text)
  cmbdoctorlock.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/LockToOwnConsultant", cmbtarget.Text)
  cmblockproced.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/LockToOwnProcedures", cmbtarget.Text)
  cmbbedrelease.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/MidBedRelease", cmbtarget.Text)
  cmbdeparttype.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/DepartmentType", cmbtarget.Text)

  cmbsympscale.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/SymptomCauseScale", cmbtarget.Text)

End

Public Sub btndeptdefault_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/FixedDepartment", cmbdeptdefault.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btndeptdefault)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndeptlock_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/LockToOwnDepartment", cmbdeptlock.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btndeptlock)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndoctorlock_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/LockToOwnConsultant", cmbdoctorlock.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btndoctorlock)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlockproced_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/LockToOwnProcedures", cmblockproced.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btndeptdefault)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsympscale_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/SymptomCauseScale", cmbsympscale.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnsympscale)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbedrelease_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/MidBedRelease", cmbbedrelease.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnbedrelease)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndeparttype_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/DepartmentType", cmbdeparttype.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btndeparttype)
  Balloon.Delay = modBasic.$BalloonDelay

End

''--------------------------------- Activity ------------------------
Private Sub GetClinActivity()

  Dim xdosing As String

  cmbtriage.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/TriageColorValue", cmbtarget.Text)
  xdosing = modGlobalSetting.ShowSettingFromDBAny("IPClinic/VitalsInterval", cmbtarget.Text)
  If xdosing Then
    txtvitalinterval.Value = CInt(xdosing)
  Else
    txtvitalinterval.Value = 0
  Endif
  cmbdosing.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/RestrictToDoseTime", cmbtarget.Text)

  cmbdefopdexam.Text = modGlobalSetting.ShowSettingFromDBAny("ClinicForms/OPDExaminations", cmbtarget.Text)
  cmbdefipdexam.Text = modGlobalSetting.ShowSettingFromDBAny("ClinicForms/IPDExaminations", cmbtarget.Text)

End

Public Sub btntriage_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/TriageColorValue", cmbtriage.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btntriage)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnvitalinterval_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/VitalsInterval", CStr(txtvitalinterval.Value), cmbtarget.Text)
  Balloon.Info(("Information saved"), btnvitalinterval)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndosing_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/RestrictToDoseTime", cmbdosing.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btndosing)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndefopdexam_Click()

  modGlobalSetting.SaveSettingToDB("ClinicForms/OPDExaminations", cmbdefopdexam.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btndefopdexam)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndefipdexam_Click()

  modGlobalSetting.SaveSettingToDB("ClinicForms/IPDExaminations", cmbdefipdexam.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btndefipdexam)
  Balloon.Delay = modBasic.$BalloonDelay

End

''--------------------------------------- Data entry -------------------------------------------
Private Sub ShowDataEntry()

  cmblockexam.Text = modGlobalSetting.ShowSettingFromDBAny("ClinicForms/ExamList_Lock", cmbtarget.Text)
  cmblocksymptom.Text = modGlobalSetting.ShowSettingFromDBAny("ClinicForms/SymptomList_Lock", cmbtarget.Text)
  cmblockdiagno.Text = modGlobalSetting.ShowSettingFromDBAny("ClinicForms/Diagnosis_Lock", cmbtarget.Text)
  cmblockdelinput.Text = modGlobalSetting.ShowSettingFromDBAny("ClinicForms/DeliveryType_InputLock", cmbtarget.Text)
  cmblockprocinput.Text = modGlobalSetting.ShowSettingFromDBAny("ClinicForms/ProcedureComp_InputLock", cmbtarget.Text)
  cmblockanestech.Text = modGlobalSetting.ShowSettingFromDBAny("ClinicForms/AnesTechnique_InputLock", cmbtarget.Text)
  cmbpathistory.Text = modGlobalSetting.ShowSettingFromDBAny("ClinicForms/History_InputFormat", cmbtarget.Text)
  cmbdietapprove.Text = modGlobalSetting.ShowSettingFromDBAny("ClinicForms/User_DietApproval", cmbtarget.Text)
  cmbicdgroup.Text = modGlobalSetting.ShowSettingFromDBAny("ClinicForms/ICDGroup_Diagnosis", cmbtarget.Text)
  cmbhistdisch.Text = modGlobalSetting.ShowSettingFromDBAny("ClinicForms/History_Discharge_Variables", cmbtarget.Text)

End

Public Sub btnlocksymp_Click()

  modGlobalSetting.SaveSettingToDB("ClinicForms/SymptomList_Lock", cmblocksymptom.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnlocksymp)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlockexam_Click()

  modGlobalSetting.SaveSettingToDB("ClinicForms/ExamList_Lock", cmblockexam.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnlockexam)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlockdiagno_Click()

  modGlobalSetting.SaveSettingToDB("ClinicForms/Diagnosis_Lock", cmblockdiagno.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnlockdiagno)
  Balloon.Delay = modBasic.$BalloonDelay

End

''
Public Sub btnlockdelinput_Click()

  modGlobalSetting.SaveSettingToDB("ClinicForms/DeliveryType_InputLock", cmblockdelinput.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnlockdelinput)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlockprocinput_Click()

  modGlobalSetting.SaveSettingToDB("ClinicForms/ProcedureComp_InputLock", cmblockprocinput.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnlockprocinput)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnlockanesinput_Click()

  modGlobalSetting.SaveSettingToDB("ClinicForms/AnesTechnique_InputLock", cmblockanestech.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnlockanesinput)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnpathistory_Click()

  modGlobalSetting.SaveSettingToDB("ClinicForms/History_InputFormat", cmbpathistory.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnpathistory)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btndietapprove_Click()

  modGlobalSetting.SaveSettingToDB("ClinicForms/User_DietApproval", cmbdietapprove.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btndietapprove)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnicdgroup_Click()

  modGlobalSetting.SaveSettingToDB("ClinicForms/ICDGroup_Diagnosis", cmbicdgroup.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnicdgroup)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnhistdisch_Click()

  modGlobalSetting.SaveSettingToDB("ClinicForms/History_Discharge_Variables", cmbhistdisch.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnhistdisch)
  Balloon.Delay = modBasic.$BalloonDelay

End

''----------------------------------- Data Synchronization ----------------------------------
Private Sub DataSyncSetting()

  cmbsyncmedbrand.Text = modGlobalSetting.ShowSettingFromDBAny("DataSynchronization/MedicineData", cmbtarget.Text)
  cmbsyncexam.Text = modGlobalSetting.ShowSettingFromDBAny("DataSynchronization/ExaminationData", cmbtarget.Text)
  cmbsynclabtest.Text = modGlobalSetting.ShowSettingFromDBAny("DataSynchronization/LaboratoryData", cmbtarget.Text)
  cmbsyncradio.Text = modGlobalSetting.ShowSettingFromDBAny("DataSynchronization/RadiologyData", cmbtarget.Text)
  cmbsyncnutrit.Text = modGlobalSetting.ShowSettingFromDBAny("DataSynchronization/NutritionData", cmbtarget.Text)

  cmbsyncmedprob.Text = modGlobalSetting.ShowSettingFromDBAny("DataSynchronization/Medicine_Problems", cmbtarget.Text)
  cmbsynfactexam.Text = modGlobalSetting.ShowSettingFromDBAny("DataSynchronization/Examination_Factors", cmbtarget.Text)
  cmbsyncfactlab.Text = modGlobalSetting.ShowSettingFromDBAny("DataSynchronization/Laboratory_Factors", cmbtarget.Text)
  cmbsyncmedcomp.Text = modGlobalSetting.ShowSettingFromDBAny("DataSynchronization/Medicine_Compounding", cmbtarget.Text)
  cmbsyncdiagno.Text = modGlobalSetting.ShowSettingFromDBAny("DataSynchronization/DiagnosisData", cmbtarget.Text)
  cmbsyncbilling.Text = modGlobalSetting.ShowSettingFromDBAny("DataSynchronization/BillingData", cmbtarget.Text)
  cmbsyncdemograp.Text = modGlobalSetting.ShowSettingFromDBAny("DataSynchronization/DemographicsData", cmbtarget.Text)

End

Public Sub btnsyncmedbrand_Click()

  modGlobalSetting.SaveSettingToDB("DataSynchronization/MedicineData", cmbsyncmedbrand.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnsyncmedbrand)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsyncexam_Click()

  modGlobalSetting.SaveSettingToDB("DataSynchronization/ExaminationData", cmbsyncexam.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnsyncexam)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsynctest_Click()

  modGlobalSetting.SaveSettingToDB("DataSynchronization/LaboratoryData", cmbsynclabtest.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnsynctest)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsyncradio_Click()

  modGlobalSetting.SaveSettingToDB("DataSynchronization/RadiologyData", cmbsyncradio.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnsyncradio)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsyncnutrit_Click()

  modGlobalSetting.SaveSettingToDB("DataSynchronization/NutritionData", cmbsyncnutrit.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnsyncnutrit)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsyncmedprob_Click()

  modGlobalSetting.SaveSettingToDB("DataSynchronization/Medicine_Problems", cmbsyncmedprob.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnsyncmedprob)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsyncfactexam_Click()

  modGlobalSetting.SaveSettingToDB("DataSynchronization/Examination_Factors", cmbsynfactexam.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnsyncfactexam)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsyncfactlab_Click()

  modGlobalSetting.SaveSettingToDB("DataSynchronization/Laboratory_Factors", cmbsyncfactlab.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnsyncfactlab)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsyncmedcomp_Click()

  modGlobalSetting.SaveSettingToDB("DataSynchronization/Medicine_Compounding", cmbsyncmedcomp.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnsyncmedcomp)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsyncdiagno_Click()

  modGlobalSetting.SaveSettingToDB("DataSynchronization/DiagnosisData", cmbsyncdiagno.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnsyncdiagno)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsyncbilling_Click()

  modGlobalSetting.SaveSettingToDB("DataSynchronization/BillingData", cmbsyncbilling.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnsyncbilling)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsyncdemograp_Click()

  modGlobalSetting.SaveSettingToDB("DataSynchronization/DemographicsData", cmbsyncdemograp.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnsyncdemograp)
  Balloon.Delay = modBasic.$BalloonDelay

End

''-------------------------- Outcome -----------------------
Private Sub ShowOutcomeSett()

  cmbdischdiagno.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/FixDiagnosisDischarge", cmbtarget.Text)
  cmbopdoutdiagno.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/FixDiagnosisOPDOutcome", cmbtarget.Text)

End

Public Sub btndischdiagno_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/FixDiagnosisDischarge", cmbdischdiagno.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btndischdiagno)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnopdoutdiagno_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/FixDiagnosisOPDOutcome", cmbopdoutdiagno.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnopdoutdiagno)
  Balloon.Delay = modBasic.$BalloonDelay

End

''-------------------------- Telemedicine --------------------
Private Sub ShowTelemedicineSett()

  cmbtelemed.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/TelemedicineRequest", cmbtarget.Text)
  txtvidchat.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/TelemedicineServer", cmbtarget.Text)
  cmbvideopass.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/TelemedicinePassword", cmbtarget.Text)
  cmbconsultsource.Text = modGlobalSetting.ShowSettingFromDBAny("IPClinic/TelemedicineConsultant", cmbtarget.Text)

End

Public Sub btntelemed_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/TelemedicineRequest", cmbtelemed.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btntelemed)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnvidchat_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/TelemedicineServer", txtvidchat.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnvidchat)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnvideopass_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/TelemedicinePassword", cmbvideopass.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnvideopass)
  Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnconsultsource_Click()

  modGlobalSetting.SaveSettingToDB("IPClinic/TelemedicineConsultant", cmbconsultsource.Text, cmbtarget.Text)
  Balloon.Info(("Information saved"), btnconsultsource)
  Balloon.Delay = modBasic.$BalloonDelay

End

'''------------------------- User Access Restriction ------------------------
Private Sub ShowUserAccessRestriction()

  modGlobalSetting.ShowCheckBoxFromDBAny(chkaccessclinical, "ClinicRestriction/ClinicalForms", cmbtarget.Text)
  modGlobalSetting.ShowCheckBoxFromDBAny(chkaccessproced, "ClinicRestriction/ProcedureForms", cmbtarget.Text)
  modGlobalSetting.ShowCheckBoxFromDBAny(chkaccessspecial, "ClinicRestriction/SpecializedForms", cmbtarget.Text)
  modGlobalSetting.ShowCheckBoxFromDBAny(chkaccessstruct, "ClinicRestriction/StructuredForms", cmbtarget.Text)
  modGlobalSetting.ShowCheckBoxFromDBAny(chkaccessOPD, "ClinicRestriction/OutPatientList", cmbtarget.Text)
  modGlobalSetting.ShowCheckBoxFromDBAny(chkaccessIPD, "ClinicRestriction/InPatientList", cmbtarget.Text)

End

Public Sub btnsaveaccess_Click()

  modGlobalSetting.EnterSettingFromDB(chkaccessclinical, "ClinicRestriction/ClinicalForms", cmbtarget.Text)
  modGlobalSetting.EnterSettingFromDB(chkaccessproced, "ClinicRestriction/ProcedureForms", cmbtarget.Text)
  modGlobalSetting.EnterSettingFromDB(chkaccessspecial, "ClinicRestriction/SpecializedForms", cmbtarget.Text)
  modGlobalSetting.EnterSettingFromDB(chkaccessstruct, "ClinicRestriction/StructuredForms", cmbtarget.Text)
  modGlobalSetting.EnterSettingFromDB(chkaccessOPD, "ClinicRestriction/OutPatientList", cmbtarget.Text)
  modGlobalSetting.EnterSettingFromDB(chkaccessIPD, "ClinicRestriction/InPatientList", cmbtarget.Text)

End

''------------------- list ---------------------
Public Sub btnsettall_Click()

  Dim xList As String[]
  Dim xPath As String

  xList = New String[]
  xList.Add("IPClinic/FixedDepartment")
  xList.Add("IPClinic/LockToOwnDepartment")
  xList.Add("IPClinic/LockToOwnConsultant")
  xList.Add("IPClinic/LockToOwnProcedures")
  xList.Add("IPClinic/MidBedRelease")
  xList.Add("IPClinic/DepartmentType")
  xList.Add("IPClinic/SymptomCauseScale")

  xList.Add("IPClinic/TriageColorValue")
  xList.Add("IPClinic/VitalsInterval")
  xList.Add("IPClinic/RestrictToDoseTime")
  xList.Add("ClinicForms/OPDExaminations")
  xList.Add("ClinicForms/IPDExaminations")

  xList.Add("ClinicForms/ExamList_Lock")
  xList.Add("ClinicForms/SymptomList_Lock")
  xList.Add("ClinicForms/Diagnosis_Lock")
  xList.Add("ClinicForms/DeliveryType_InputLock")
  xList.Add("ClinicForms/ProcedureComp_InputLock")
  xList.Add("ClinicForms/AnesTechnique_InputLock")
  xList.Add("ClinicForms/History_InputFormat")
  xList.Add("ClinicForms/User_DietApproval")
  xList.Add("ClinicForms/ICDGroup_Diagnosis")
  xList.Add("ClinicForms/History_Discharge_Variables")

  xList.Add("IPClinic/FixDiagnosisDischarge")
  xList.Add("IPClinic/FixDiagnosisOPDOutcome")

  xList.Add("IPClinic/TelemedicineRequest")
  xList.Add("IPClinic/TelemedicineServer")
  xList.Add("IPClinic/TelemedicinePassword")
  xList.Add("IPClinic/TelemedicineConsultant")

  xList.Add("ClinicRestriction/ClinicalForms")
  xList.Add("ClinicRestriction/ProcedureForms")
  xList.Add("ClinicRestriction/SpecializedForms")
  xList.Add("ClinicRestriction/StructuredForms")
  xList.Add("ClinicRestriction/OutPatientList")
  xList.Add("ClinicRestriction/InPatientList")

  xList.Add("DataSynchronization/MedicineData")
  xList.Add("DataSynchronization/ExaminationData")
  xList.Add("DataSynchronization/LaboratoryData")
  xList.Add("DataSynchronization/RadiologyData")
  xList.Add("DataSynchronization/NutritionData")

  xList.Add("DataSynchronization/Medicine_Problems")
  xList.Add("DataSynchronization/Examination_Factors")
  xList.Add("DataSynchronization/Laboratory_Factors")
  xList.Add("DataSynchronization/Medicine_Compounding")
  xList.Add("DataSynchronization/DiagnosisData")
  xList.Add("DataSynchronization/BillingData")
  xList.Add("DataSynchronization/DemographicsData")

  Inc Application.Busy
  xPath = modGENReport.ShowSelectSetting(xList)
  Dec Application.Busy
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

''======================================== SYNC SERVER ==========================
Private Sub SaveRepoSettingsToFile(strSetting As String, strVal As String)

  Dim ConfFile As Settings

  ConfFile = New Settings(modHelpVariable.AppDirectory &/ "/syncrepository.conf")
  ConfFile[strSetting] = Trim(strVal)

End

Public Sub btnsave_Click()

  Dim sPass As String
  Dim xdir As String
  Dim xPath As String
  Dim xfile As String

  SaveRepoSettingsToFile("SyncServer/UseOpenSSL", "Yes")
  SaveRepoSettingsToFile("SyncServer/Service", cmbtype.Text)
  SaveRepoSettingsToFile("SyncServer/Host", txtserver.Text)
  SaveRepoSettingsToFile("SyncServer/User", txtuser.Text)
  SaveRepoSettingsToFile("SyncServer/Password", modPassword.EncryptDBPass(txtpass.Text, True))
  SaveRepoSettingsToFile("SyncServer/Database", txtdb.Text)
  SaveRepoSettingsToFile("SyncServer/Port", txtport.Value)

  xfile = "syncrepository.conf"
  If System.Exist("7z") Then
    xdir = modHelpVariable.AppCacheDir
    modExternal.CreateNewCacheFile(xdir, xfile)
    modDevAll.Get7ZCompression(modHelpVariable.AppDirectory &/ xfile, modHelpVariable.$CryptRepoZip, xdir &/ xfile & ".7z")
    xPath = xdir &/ xfile & ".7z"
    Kill modHelpVariable.AppDirectory &/ xfile

    sPass = InputPassword(("Enter Password for Super User"), ("Super User"), "")
    modExternal.ReplaceFileAsRoot(xPath, modHelpVariable.$appetcFolder, sPass)
    Wait
    If Exist(xdir) Then
      modExternal.DeleteFolderRecursive(xdir)
    Endif

  Else
    modApplSub.InstallSelectedApplication(["p7zip-full"])
  Endif

End

Private Sub SHowDBParam()

  modRepoSync.ReadSyncConfig()
  cmbtype.Text = modRepoSync.$SyncService
  txtserver.Text = modRepoSync.$SyncHost
  txtuser.Text = modRepoSync.$SyncUser
  txtpass.Text = modRepoSync.$SyncPassword
  txtdb.Text = modRepoSync.$SyncDatabase
  If modRepoSync.$SyncPort Then
    txtport.Value = CInt(modRepoSync.$SyncPort)
  Endif

End

Public Sub btnload_Click()

  If chksish.Value = True Then
    modRepository.ReadRepoConfig()
    cmbtype.Text = modRepository.$RepoService
    If modRepository.$RepoService = "http" Then
      txtserver.Text = modRepository.$RepoURL
    Else
      txtserver.Text = modRepository.$RepoHost
    Endif
    txtuser.Text = modRepository.$RepoUser
    txtpass.Text = modRepository.$RepoPassword
    txtdb.Text = modRepository.$RepoDatabase
    If modRepository.$RepoPort Then
      txtport.Value = CInt(modRepository.$RepoPort)
    Endif
  Else
    SHowDBParam()
  Endif

End

Public Sub btnconnect_Click()

  If cmbtype.Text = "http" Then
    btnsynctransfer.Enabled = True
  Else
    $linkCon = modDBApp.OpenConnection(cmbtype.Text, txtserver.Text, txtdb.Text, txtuser.Text, txtpass.Text)
    If $linkCon.Opened = True Then
      btnsynctransfer.Enabled = True
      Balloon.Info(("Connection Successful"), btnconnect)
      Balloon.Delay = modBasic.$BalloonDelay
    Endif
  Endif

End

Public Sub btnsynctransfer_Click()

  If cmbsynctype.Text Then
    If cmbtype.Text = "http" Then
      Inc Application.Busy
      modRepoSync.DataSyncAPIDownload("--" & cmbsynctype.Text, True)
      Dec Application.Busy
    Else
      If $linkCon.Opened = True Then
        Inc Application.Busy
        modRepoSync.DataSyncDownload("--" & cmbsynctype.Text, True, $linkCon)
        Dec Application.Busy
      Endif
    Endif
    Balloon.Info(("Transfer Completed"), btnsynctransfer)
    Balloon.Delay = modBasic.$BalloonDelay
  Endif

End
