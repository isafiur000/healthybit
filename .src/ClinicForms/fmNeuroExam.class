' Gambas class file

Private $encid As String
Private $sExam As String
Private $sType As String

Public Sub _new(encid As String, sExam As String, sType As String)

  $encid = encid
  $sExam = sExam
  $sType = sType

End

Public Sub Form_Open()

  modGeneralMain.ArrangeFormCentre(Me, "False")
  Me.Icon = Picture[modGeneralMain.$strLogo]
  Me.Title = "ENC: " & $encid
  PictureBox1.Picture = Image.Load("Images/neuro.png").Stretch(PictureBox1.Width, PictureBox1.Height).Picture
  GetDefaultValue()

End

Public Sub btncredits_Click()

  Dim xx As String

  xx = "[Credits]<br><br><b> Dr Lekhjung Thapa</b><br> DM (Neurology)"
  Message.Info(xx, ("OK"))

End

Private Sub GetDefaultValue()

  ''GCS
  txtgcsE.Value = 4
  txtgcsV.Value = 5
  txtgcsM.Value = 6

  ''Reflex
  txtbicepR.Value = 2
  txtbicepL.Value = 2

  txtbicepR.Value = 2
  txttricepL.Value = 2

  txtsupiR.Value = 2
  txtsupiL.Value = 2

  txtkneeR.Value = 2
  txtkneeL.Value = 2

  txtankleR.Value = 2
  txtankleL.Value = 2

  ''Motor Power
  txtmototupProxR.Value = 5
  txtmototupProxL.Value = 5

  txtmototupDistR.Value = 5
  txtmototupDistL.Value = 5

  txtmotorLowProxR.Value = 5
  txtmotorLowProxL.Value = 5

  txtmotorLowDIstR.Value = 5
  txtmotorLowDistL.Value = 5

  txtmotorLowEHLR.Value = 5
  txtmotorLowEHLL.Value = 5

  txtmotorLowFHLR.Value = 5
  txtmotorLowFHLL.Value = 5

  ''MMSE
  txtmmseval.Value = 30

End

Public Sub btndraw_Click()

  Dim sPath As String
  Dim xxx As String[]
  Dim xval As String

  xxx = CustomDraw()
  If xxx Then
    sPath = xxx[0]
    If sPath Then
      xval = modImage.SaveClinicScreenDraw($encid, xxx[1], sPath)
    Endif
  Endif

End

Public Sub btnvitals_Click()

  Dim hForm As FmVital

  hForm = New FmVital($encid)
  hForm.ShowModal

End

Public Sub btnsymptom_Click()

  Dim sName As String[]

  sName = GridListView(("Select Symptoms"), modMedicine.GetSymptomAllTypeList(), TextArea1)
  If sName And If sName.Count Then
    TextArea1.Text = sName.Join(gb.NewLine)
  Endif

End

Public Sub btnicd_Click()

  Dim sName As String[]

  If $encid Then
    sName = ICDTree(modDatabase.$icdConn, "Disease", modBasic.$ClinDiagnoSelectGrouped, modBasic.$ClinDiagnoSelectERGroup, modBasic.$ClinDiagnoChapterGrouped, modBasic.$DefaultDiagnoGroup)
    If sName Then
      If sName[1] And If sName[0] Then
        modPatientGeneral.AddPatientFindings("Provisional Diagnosis", $encid, sName[0], sName[1], sName[2])
      Endif
    Endif
  Endif

End

Public Sub btncervical_Click()

  Dim xList As String[] = ["Normal", "Tenderness", "Deformity"]
  Dim xx As String

  xx = InputCombo("Select Observation", "Cervical Spine", xList, "", True)
  If xx Then
    btncervical.Tag = xx
  Endif

End

Public Sub btnthoracic_Click()

  Dim xList As String[] = ["Normal", "Tenderness", "Deformity"]
  Dim xx As String

  xx = InputCombo("Select Observation", "Thoracic Spine", xList, "", True)
  If xx Then
    btnthoracic.Tag = xx
  Endif

End

Public Sub btnlumbar_Click()

  Dim xList As String[] = ["Normal", "Tenderness", "Deformity"]
  Dim xx As String

  xx = InputCombo("Select Observation", "Lumbar Spine", xList, "", True)
  If xx Then
    btnlumbar.Tag = xx
  Endif

End

Public Sub btnsacro_Click()

  Dim xList As String[] = ["Normal", "Tenderness", "Deformity"]
  Dim xx As String

  xx = InputCombo("Select Observation", "Sacrococcygeal Spine", xList, "", True)
  If xx Then
    btnsacro.Tag = xx
  Endif

End

''====================== Save ====================
Private Sub AddLeftRightParam(sItem As String, sRight As Variant, sLeft As Variant, sIndex As Long)

  Dim res As Result

  If sLeft = "Norm" Then
    sLeft = "Normal"
  Else If sLeft = "Abnorm" Then
    sLeft = "Abnormal"
  Endif
  If sRight = "Norm" Then
    sRight = "Normal"
  Else If sRight = "Abnorm" Then
    sRight = "Abnormal"
  Endif

  res = modDatabase.$myConn.Create("tblpatientsubexam")
  res["fldencounterval"] = $encid
  res["fldsubtexam"] = sItem
  res["fldheadid"] = sIndex
  res["fldparent"] = $sExam & " [Two-sided Examinations]"
  res["fldreport"] = modString.GetLefRightJSON(sLeft, sRight)
  res["fldsave"] = True
  res["fldabnormal"] = False
  res["flduserid"] = modBasic.$lbluser
  res["fldtime"] = Now()
  res["xyz"] = False
  res.Update()

End

Public Sub btnsave_Click()

  Dim xboolean As Boolean
  Dim xleftright As String
  Dim xhash As String
  Dim sIndex As Long

  Dim gcstot As Integer
  Dim gcsColl As Collection
  Dim xgait As String

  If modBasic.$ClinHistoryInput = "Single" Then
    xboolean = True
  Else
    xboolean = False
  Endif
  xhash = $encid & ":" & $sExam & ":" & modMisc.GetWebIndexStr(modString.GetDateString(Now()))

  ''General Complaints
  If TextArea1.Text Then
    modPatientGeneral.AddExamGeneralQualiData($encid, "History", "General Complaints", "", TextArea1.Text, xboolean)
  Endif

  ''GCS
  gcstot = txtgcsE.Value + txtgcsV.Value + txtgcsM.Value
  gcsColl = New Collection
  gcsColl.Add(txtgcsE.Value, txtgcsE.Tag)
  gcsColl.Add(txtgcsV.Value, txtgcsV.Tag)
  gcsColl.Add(txtgcsM.Value, txtgcsM.Tag)
  modClinSub.AddClinicExam($encid, "", "GCS", "Clinical Scale", JSON.Encode(gcsColl), gcstot, False, $sType, "", "Regular", xhash)

  ''"MMSE",
  modClinSub.AddClinicExam($encid, "", "MMSE", "", txtmmse.Value, txtmmseval.Value, False, $sType, "", "Regular", xhash)
  ''"Nystagmus",
  modClinSub.AddClinicExam($encid, "", "Nystagmus", "Dichotomous", txtnystagmus.Value, 0, False, $sType, "", "Regular", xhash)
  ''"Neck Rigidity"
  modClinSub.AddClinicExam($encid, "", "Neck Rigidity", "Dichotomous", txtneckrigidity.Value, 0, False, $sType, "", "Regular", xhash)

  modClinSub.AddClinicExam($encid, "", $sExam & " [Two-sided Examinations]", "Left/Right Components", "", 0, False, $sType, "", "Regular", xhash)
  sIndex = modClinic.GetExamIndexFromFilePath(xhash, $encid, $sExam & " [Two-sided Examinations]")
  If sIndex Then
    For Each xleftright In modNeuroSpec.$NeuroTwin
      Select xleftright
        Case "Cranial Nerves"
          AddLeftRightParam(xleftright, txtcranialR.Value, txtcranialL.Value, sIndex)
        Case "Upper Proximal Motor Power"
          AddLeftRightParam(xleftright, txtmototupProxR.Value, txtmototupProxL.Value, sIndex)
        Case "Upper Distal Motor Power"
          AddLeftRightParam(xleftright, txtmototupDistR.Value, txtmototupDistL.Value, sIndex)
        Case "Sensory Function C5"
          AddLeftRightParam(xleftright, txtC5SensoryR.Value, txtC5SensoryL.Value, sIndex)
        Case "Sensory Function C6"
          AddLeftRightParam(xleftright, txtC6SensoryR.Value, txtC6SensoryL.Value, sIndex)
        Case "Sensory Function C7"
          AddLeftRightParam(xleftright, txtC7SensoryR.Value, txtC7SensoryL.Value, sIndex)
        Case "Sensory Function C8"
          AddLeftRightParam(xleftright, txtC8SensoryR.Value, txtC8SensoryL.Value, sIndex)
        Case "Finger-Nose Test"
          AddLeftRightParam(xleftright, txtfingernoseR.Value, txtfingernoseL.Value, sIndex)
        Case "Bicep Jerk"
          AddLeftRightParam(xleftright, txtbicepR.Value, txtbicepL.Value, sIndex)
        Case "Tricep Jerk"
          AddLeftRightParam(xleftright, txttricepR.Value, txttricepL.Value, sIndex)
        Case "Supinator Jerk"
          AddLeftRightParam(xleftright, txtsupiR.Value, txtsupiL.Value, sIndex)
        Case "FLAIR"
          AddLeftRightParam(xleftright, txtflairR.Value, txtflairL.Value, sIndex)
        Case "FABER"
          AddLeftRightParam(xleftright, txtfaberR.Value, txtfaberL.Value, sIndex)
        Case "Lower Proximal Motor Power"
          AddLeftRightParam(xleftright, txtmotorLowProxR.Value, txtmotorLowProxL.Value, sIndex)
        Case "Lower Distal Motor Power"
          AddLeftRightParam(xleftright, txtmotorLowDIstR.Value, txtmotorLowDistL.Value, sIndex)
        Case "EHL"
          AddLeftRightParam(xleftright, txtmotorLowEHLR.Value, txtmotorLowEHLL.Value, sIndex)
        Case "FHL"
          AddLeftRightParam(xleftright, txtmotorLowFHLR.Value, txtmotorLowFHLL.Value, sIndex)
        Case "Sensory Function L2"
          AddLeftRightParam(xleftright, txtL2SensoryR.Value, txtL2SensoryL.Value, sIndex)
        Case "Sensory Function L3"
          AddLeftRightParam(xleftright, txtL3SensoryR.Value, txtL3SensoryL.Value, sIndex)
        Case "Sensory Function L4"
          AddLeftRightParam(xleftright, txtL4SensoryR.Value, txtL4SensoryL.Value, sIndex)
        Case "Sensory Function L5"
          AddLeftRightParam(xleftright, txtL5SensoryR.Value, txtL5SensoryL.Value, sIndex)
        Case "Sensory Function S1"
          AddLeftRightParam(xleftright, txtS1SensoryR.Value, txtS1SensoryL.Value, sIndex)
        Case "Sensory Function S2"
          AddLeftRightParam(xleftright, txtS2SensoryR.Value, txtS2SensoryL.Value, sIndex)
        Case "Heel-Shin Test"
          AddLeftRightParam(xleftright, txtHeelShinR.Value, txtHeelShinL.Value, sIndex)
        Case "Knee Jerk"
          AddLeftRightParam(xleftright, txtkneeR.Value, txtkneeL.Value, sIndex)
        Case "Ankle Jerk"
          AddLeftRightParam(xleftright, txtankleR.Value, txtankleL.Value, sIndex)
        Case "Straight Leg Raise Test"
          AddLeftRightParam(xleftright, txtSLResR.Value, txtSLResL.Value, sIndex)
        Case "Plantar Response"
          AddLeftRightParam(xleftright, txtplantarR.Value, txtplantarL.Value, sIndex)
      End Select
    Next
  Endif

  ''"Cervical Spine"
  modClinSub.AddClinicExam($encid, "", "Cervical Spine", "Single Selection", btncervical.Tag, 0, False, $sType, "", "Regular", xhash)
  ''"Thoracic Spine"
  modClinSub.AddClinicExam($encid, "", "Thoracic Spine", "Single Selection", btnthoracic.Tag, 0, False, $sType, "", "Regular", xhash)
  ''"Lumbar Spine"
  modClinSub.AddClinicExam($encid, "", "Lumbar Spine", "Single Selection", btnlumbar.Tag, 0, False, $sType, "", "Regular", xhash)
  ''"Sacrococcygeal Spine"
  modClinSub.AddClinicExam($encid, "", "Sacrococcygeal Spine", "Single Selection", btnsacro.Tag, 0, False, $sType, "", "Regular", xhash)
  ''"Tandem Gait"
  If txttendemgait.Value = "Norm" Then
    xgait = "Normal"
  Else If txttendemgait.Value = "Abnorm" Then
    xgait = "Abnormal"
  Endif
  modClinSub.AddClinicExam($encid, "", "Tandem Gait", "Dichotomous", xgait, 0, False, $sType, "", "Regular", xhash)

  Message.Info("Information saved", ("OK"))
  btnsave.Enabled = False

End

Public Sub btnreport_Click()

  Dim xPath As String
  Dim res As Result
  Dim xxx As String[]
  Dim xval As String[]

  If $encid Then
    xxx = New String[]
    res = modDatabase.$syConn.Exec("select fldfilepath,fldtime from tblpatientexam where fldencounterval=&1 and fldinput=&2 and fldhead=&3", $encid, $sType, $sExam & " [Two-sided Examinations]")
    If res.Available Then
      For Each res
        xxx.Add(modReportVar.GetDateTimeReport(res["fldtime"], gb.GeneralDate) & "|" & res["fldfilepath"])
      Next
      xval = DualGridValue("Select", xxx, True)
      If xval Then
        Inc Application.Busy
        xPath = modNeuroSpec.GetNeurologyReport($encid, $sExam, xval[0], $sType)
        Dec Application.Busy
        modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
      Endif
    Endif
  Endif

End
