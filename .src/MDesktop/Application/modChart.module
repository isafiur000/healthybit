' Gambas module file

''----------------------------------- GNUPLOT SCRIPTS ------------------------------
Public Function FrequencyBarPlot(sFile As String, Optional title As String, Optional xlabel As String, Optional ylabel As String) As String

  Dim xx As String

  xx = modChartFix.GetGNUPlotScript("barplot", sFile, title, xlabel, ylabel)
  Return xx

End

Public Function FrequencyChart(sFile As String, Optional title As String, Optional xlabel As String, Optional ylabel As String) As String

  Dim xx As String

  xx = modChartFix.GetGNUPlotScript("frequency", sFile, title, xlabel, ylabel)
  Return xx

End

Public Function HistogramChart(sFile As String, Optional title As String, Optional xlabel As String, Optional ylabel As String) As String

  Dim xx As String

  xx = modChartFix.GetGNUPlotScript("histogram", sFile, title, xlabel, ylabel)
  Return xx

End

Public Function GetProportionChartOnly(xpath As String, Optional title As String) As String

  Dim xx As String

  xx = modChartFix.GetGNUPlotScript("proportion", xpath, title)
  Return xx

End

Public Function ProportionChart(sFile As String, Optional title As String, Optional xlabel As String, Optional ylabel As String) As String

  Dim xx As String
  Dim xpath As String

  xpath = modChartFix.GetCrossTabFormating(sFile)
  xx = modChartFix.GetGNUPlotScript("proportion", xpath, title, xlabel, ylabel)
  Return xx

End

'NOTE: --------------------------------- General Chart ---------------------------------------
Public Function GetDateIntegerFromSetting() As Integer

  Dim xx As Integer

  If modBasic.$InvChDataGrouping Then
    If modBasic.$InvChDataGrouping = "Day" Then
      xx = gb.Day
    Else If modBasic.$InvChDataGrouping = "Week" Then
      xx = gb.Week
    Else If modBasic.$InvChDataGrouping = "Month" Then
      xx = gb.Month
    Else If modBasic.$InvChDataGrouping = "Year" Then
      xx = gb.Year
    Endif
  Else
    xx = gb.Day
  Endif
  Return xx

End

Public Function GetQTYValueChart() As Integer

  Dim xx As Integer

  If modBasic.$InvChQTYGrouping Then
    If modBasic.$InvChQTYGrouping = "Units" Then
      xx = 1
    Else If modBasic.$InvChQTYGrouping = "Tens" Then
      xx = 10
    Else If modBasic.$InvChQTYGrouping = "Hundreds" Then
      xx = 100
    Else If modBasic.$InvChQTYGrouping = "Thousands" Then
      xx = 1000
    Endif
  Else
    xx = 1
  Endif
  Return xx

End

Public Function GetQTYLabelChart() As String

  Dim xx As String

  If modBasic.$InvChQTYGrouping Then
    xx = modBasic.$InvChQTYGrouping
  Else
    xx = "Units"
  Endif
  Return xx

End

Public Function GetAMTValueChart() As Integer

  Dim xx As Integer

  If modBasic.$InvChAMTGrouping Then
    If modBasic.$InvChAMTGrouping = "Units" Then
      xx = 1
    Else If modBasic.$InvChAMTGrouping = "Tens" Then
      xx = 10
    Else If modBasic.$InvChAMTGrouping = "Hundreds" Then
      xx = 100
    Else If modBasic.$InvChAMTGrouping = "Thousands" Then
      xx = 1000
    Endif
  Else
    xx = 1
  Endif
  Return xx

End

Public Function GetAMTLabelChart() As String

  Dim xx As String

  If modBasic.$InvChAMTGrouping Then
    xx = modBasic.$InvChAMTGrouping
  Else
    xx = "Units"
  Endif
  Return xx

End

''======================== ONLY FOR DESKTOP APPLICATION =====================
'NOTE: ----------------------- Clinical chart --------------------------------------
Public Function ClinicalChart(drwHt As Integer, encid As String, pointsArr_x As Date[], pointsArr_y As Float[], maxval As Float, minval As Float, normval As Float) As String                                                         ''

  Dim drwchart As SvgImage
  Dim tempFile As String

  Dim diffhr As Float
  Dim xadmis As Date
  Dim dcons As Float
  Dim xdiff As Float
  Dim k As Integer
  Dim dt As String

  Dim wid As Float
  Dim mul As Float
  Dim nul As Float
  Dim i As Integer

  Dim maxobs As Float
  Dim minobs As Float

  Dim sVal As Integer
  Dim xVal As Integer
  Dim xdf As Float
  Dim xdate As Date
  Dim xhr As String

  xhr = modSettings.ShowSettingFromFIle("ClinicalChart/HourDifference")
  If xhr Then
    xdf = CInt(xhr) / 60
  Else
    xdf = 0.25
  Endif

  xadmis = modPatient.GetAdmissionDate(encid)
  If xadmis Then
    xdate = xadmis
  Else
    xdate = modPatient.GetRecordDate(encid)
  Endif

  Inc Application.Busy
  maxobs = modString.GetMaxValueArray(pointsArr_y)
  minobs = modString.GetMinValueArray(pointsArr_y)

  If maxobs = minobs Then
    mul = drwHt / 2
  Else
    mul = (drwHt - 30) / (maxobs - minobs)
    nul = 15
  Endif

  dcons = Floor((DateDiff(modDate.StartSqlDate(xdate), pointsArr_x[0], gb.Minute)) / 1440) * 1440
  diffhr = DateDiff(modDate.StartSqlDate(xdate), pointsArr_x[pointsArr_x.Max], gb.Minute) - dcons
  xdiff = Fix(diffhr / 60)

  If diffhr < 1440 Then
    diffhr = 1440
  Endif
  wid = (xdf * (diffhr + 6)) + 50 'multiply x-coordinate by 20 for clear view

  tempFile = Temp() & ".svg"
  drwchart = New SvgImage(wid, drwHt)

  Paint.Begin(drwchart)

  If modBasic.$ClinChartShowNormal = "No" Then
  Else
    If modBasic.$ClinColorNormal Then
      Paint.Brush = Paint.Color(modBasic.$ClinColorNormal)
    Else
      Paint.Brush = Paint.Color(Color.Green)
    Endif
    Paint.LineWidth = 0.5
    sVal = drwHt - (mul * (normval - minobs) + nul)
    Paint.MoveTo(1, sVal)
    Paint.LineTo(wid - 1, sVal)
    Paint.Stroke
  Endif

  If modBasic.$ClinChartShowUpper = "No" Then
  Else
    If modBasic.$ClinColorUpper Then
      Paint.Brush = Paint.Color(modBasic.$ClinColorUpper)
    Else
      Paint.Brush = Paint.Color(Color.Red)
    Endif
    Paint.LineWidth = 0.5
    sVal = drwHt - (mul * (maxval - minobs) + nul)
    Paint.MoveTo(1, sVal)
    Paint.LineTo(wid - 1, sVal)
    Paint.Stroke
  Endif

  If modBasic.$ClinChartShowLower = "No" Then
  Else
    If modBasic.$ClinColorLower Then
      Paint.Brush = Paint.Color(modBasic.$ClinColorLower)
    Else
      Paint.Brush = Paint.Color(Color.Red)
    Endif
    Paint.LineWidth = 0.5
    sVal = drwHt - (mul * (minval - minobs) + nul)
    Paint.MoveTo(1, sVal)
    Paint.LineTo(wid - 1, sVal)
    Paint.Stroke
  Endif

  'main chart
  If modBasic.$ClinChartDataCurve = "No" Then
  Else
    If modBasic.$ClinColorData Then
      Paint.Brush = Paint.Color(modBasic.$ClinColorData)
    Else
      Paint.Brush = Paint.Color(Color.DarkGray)
    Endif
    Paint.LineWidth = 1
    Paint.Font.Size = 10
    For i = 0 To pointsArr_x.Max
      xVal = DateDiff(modDate.StartSqlDate(xdate), pointsArr_x[i], gb.Minute) - dcons
      sVal = drwHt - (mul * (pointsArr_y[i] - minobs) + nul)
      If i = 0 Then
        Paint.MoveTo(xdf * xVal, sVal)
      Else
        Paint.LineTo(xdf * xVal, sVal)
      Endif
    Next
    Paint.Stroke
  Endif

  'numbers
  If modBasic.$ClinChartShowLabel = "No" Then
  Else
    If modBasic.$ClinColorLabel Then
      Paint.Brush = Paint.Color(modBasic.$ClinColorLabel)
    Else
      Paint.Brush = Paint.Color(Color.Black)
    Endif
    For i = 0 To pointsArr_x.Max
      xVal = DateDiff(modDate.StartSqlDate(xdate), pointsArr_x[i], gb.Minute) - dcons
      sVal = drwHt - (mul * (pointsArr_y[i] - minobs) + nul)
      Paint.Text(pointsArr_y[i], xdf * xVal, sVal - 3)
    Next
    Paint.Fill
  Endif

  'points
  If modBasic.$ClinChartShowPoint = "No" Then
  Else
    If modBasic.$ClinColorPoints Then
      Paint.Brush = Paint.Color(modBasic.$ClinColorPoints)
    Else
      Paint.Brush = Paint.Color(Color.Black)
    Endif
    For i = 0 To pointsArr_x.Max
      xVal = DateDiff(modDate.StartSqlDate(xdate), pointsArr_x[i], gb.Minute) - dcons
      sVal = drwHt - (mul * (pointsArr_y[i] - minobs) + nul)
      Paint.Arc(xdf * xVal, sVal, 3)
    Next
    Paint.Fill
  Endif

  ''for grids
  If modBasic.$ClinChartShowHourGrid = "No" Then
  Else
    Paint.Font.Size = 10
    For i = 0 To xdiff + 6
      If Frac(i / 24) = 0 Then
        Paint.LineWidth = 1
        If modBasic.$ClinColorDayGrid Then
          Paint.Brush = Paint.Color(modBasic.$ClinColorDayGrid)
        Else
          Paint.Brush = Paint.Color(Color.Green)
        Endif
      Else
        Paint.LineWidth = 0.25
        If modBasic.$ClinColorHourGrid Then
          Paint.Brush = Paint.Color(modBasic.$ClinColorHourGrid)
        Else
          Paint.Brush = Paint.Color(Color.Blue)
        Endif
      Endif
      Paint.MoveTo(i * 60 * xdf, 0)
      Paint.LineTo(i * 60 * xdf, drwchart.Height)
      Paint.Stroke
    Next
  Endif

  If modBasic.$ClinChartShowGridLabel = "No" Then
  Else
    If modBasic.$ClinColorGridLabel Then
      Paint.Brush = Paint.Color(modBasic.$ClinColorGridLabel)
    Else
      Paint.Brush = Paint.Color(Color.Blue)
    Endif
    Paint.LineWidth = 0.25
    Paint.Font.Size = 10
    For k = 0 To xdiff + 6
      If k = 0 Then
        dt = "D:" & CStr(k + (dcons / 1440) + 1)
      Else If Frac(k / 24) = 0 Then
        dt = "D:" & CStr(k / 24 + (dcons / 1440) + 1)
      Else
        dt = "" ' "H:" & k
      Endif
      Paint.Text(dt, k * 60 * xdf, drwchart.Height - 2)
    Next
    Paint.Fill
  Endif

  Paint.End()
  drwchart.Save(tempFile)
  Dec Application.Busy

  Return tempFile

End

Public Function GetBlankImage(sWid As Integer, sHt As Integer) As String

  Dim drwchart As SvgImage
  Dim tempFile As String

  tempFile = Temp() & ".svg"
  drwchart = New SvgImage(sWid, sHt)
  Paint.Begin(drwchart)
  Paint.End()
  drwchart.Save(tempFile)
  Return tempFile

End

Public Sub DrawClinicalChart(drwchart As DrawingArea, encid As String, pointsArr_x As Date[], pointsArr_y As Float[], maxval As Float, minval As Float, normval As Float)                                                       ''

  Dim diffhr As Float
  Dim xadmis As Date
  Dim dcons As Float
  Dim xdiff As Float
  Dim k As Integer
  Dim dt As String

  Dim wid As Float
  Dim mul As Float
  Dim nul As Float
  Dim i As Integer

  Dim maxobs As Float
  Dim minobs As Float

  Dim sVal As Integer
  Dim xVal As Integer
  Dim xdf As Float
  Dim xdate As Date
  Dim drwHt As Integer
  Dim xhr As String

  xhr = modSettings.ShowSettingFromFIle("ClinicalChart/HourDifference")
  If xhr Then
    xdf = CInt(xhr) / 60
  Else
    xdf = 0.25
  Endif

  xadmis = modPatient.GetAdmissionDate(encid)
  If xadmis Then
    xdate = xadmis
  Else
    xdate = modPatient.GetRecordDate(encid)
  Endif

  Inc Application.Busy
  maxobs = modString.GetMaxValueArray(pointsArr_y)
  minobs = modString.GetMinValueArray(pointsArr_y)

  drwHt = drwchart.Height
  If maxobs = minobs Then
    mul = drwHt / 2
  Else
    mul = (drwHt - 30) / (maxobs - minobs)
    nul = 15
  Endif

  dcons = Floor((DateDiff(modDate.StartSqlDate(xdate), pointsArr_x[0], gb.Minute)) / 1440) * 1440
  diffhr = DateDiff(modDate.StartSqlDate(xdate), pointsArr_x[pointsArr_x.Max], gb.Minute) - dcons
  xdiff = Fix(diffhr / 60)

  If diffhr < 1440 Then
    diffhr = 1440
  Endif
  wid = (xdf * (diffhr + 6)) + 50 'multiply x-coordinate by 20 for clear view
  drwchart.Width = wid
  drwchart.Background = Color.White

  Paint.Begin(drwchart)

  If modBasic.$ClinChartShowNormal = "No" Then
  Else
    If modBasic.$ClinColorNormal Then
      Paint.Brush = Paint.Color(modBasic.$ClinColorNormal)
    Else
      Paint.Brush = Paint.Color(Color.Green)
    Endif
    Paint.LineWidth = 0.5
    sVal = drwHt - (mul * (normval - minobs) + nul)
    Paint.MoveTo(1, sVal)
    Paint.LineTo(wid - 1, sVal)
    Paint.Stroke
  Endif

  If modBasic.$ClinChartShowUpper = "No" Then
  Else
    If modBasic.$ClinColorUpper Then
      Paint.Brush = Paint.Color(modBasic.$ClinColorUpper)
    Else
      Paint.Brush = Paint.Color(Color.Red)
    Endif
    Paint.LineWidth = 0.5
    sVal = drwHt - (mul * (maxval - minobs) + nul)
    Paint.MoveTo(1, sVal)
    Paint.LineTo(wid - 1, sVal)
    Paint.Stroke
  Endif

  If modBasic.$ClinChartShowLower = "No" Then
  Else
    If modBasic.$ClinColorLower Then
      Paint.Brush = Paint.Color(modBasic.$ClinColorLower)
    Else
      Paint.Brush = Paint.Color(Color.Red)
    Endif
    Paint.LineWidth = 0.5
    sVal = drwHt - (mul * (minval - minobs) + nul)
    Paint.MoveTo(1, sVal)
    Paint.LineTo(wid - 1, sVal)
    Paint.Stroke
  Endif

  'main chart
  If modBasic.$ClinChartDataCurve = "No" Then
  Else
    If modBasic.$ClinColorData Then
      Paint.Brush = Paint.Color(modBasic.$ClinColorData)
    Else
      Paint.Brush = Paint.Color(Color.DarkGray)
    Endif
    Paint.LineWidth = 1
    Paint.Font.Size = 10
    For i = 0 To pointsArr_x.Max
      xVal = DateDiff(modDate.StartSqlDate(xdate), pointsArr_x[i], gb.Minute) - dcons
      sVal = drwHt - (mul * (pointsArr_y[i] - minobs) + nul)
      If i = 0 Then
        Paint.MoveTo(xdf * xVal, sVal)
      Else
        Paint.LineTo(xdf * xVal, sVal)
      Endif
    Next
    Paint.Stroke
  Endif

  'numbers
  If modBasic.$ClinChartShowLabel = "No" Then
  Else
    If modBasic.$ClinColorLabel Then
      Paint.Brush = Paint.Color(modBasic.$ClinColorLabel)
    Else
      Paint.Brush = Paint.Color(Color.Black)
    Endif
    For i = 0 To pointsArr_x.Max
      xVal = DateDiff(modDate.StartSqlDate(xdate), pointsArr_x[i], gb.Minute) - dcons
      sVal = drwHt - (mul * (pointsArr_y[i] - minobs) + nul)
      Paint.Text(pointsArr_y[i], xdf * xVal, sVal - 3)
    Next
    Paint.Fill
  Endif

  'points
  If modBasic.$ClinChartShowPoint = "No" Then
  Else
    If modBasic.$ClinColorPoints Then
      Paint.Brush = Paint.Color(modBasic.$ClinColorPoints)
    Else
      Paint.Brush = Paint.Color(Color.Black)
    Endif
    For i = 0 To pointsArr_x.Max
      xVal = DateDiff(modDate.StartSqlDate(xdate), pointsArr_x[i], gb.Minute) - dcons
      sVal = drwHt - (mul * (pointsArr_y[i] - minobs) + nul)
      Paint.Arc(xdf * xVal, sVal, 3)
    Next
    Paint.Fill
  Endif

  ''for grids
  If modBasic.$ClinChartShowHourGrid = "No" Then
  Else
    Paint.Font.Size = 10
    For i = 0 To xdiff + 6
      If Frac(i / 24) = 0 Then
        Paint.LineWidth = 1
        If modBasic.$ClinColorDayGrid Then
          Paint.Brush = Paint.Color(modBasic.$ClinColorDayGrid)
        Else
          Paint.Brush = Paint.Color(Color.Green)
        Endif
      Else
        Paint.LineWidth = 0.25
        If modBasic.$ClinColorHourGrid Then
          Paint.Brush = Paint.Color(modBasic.$ClinColorHourGrid)
        Else
          Paint.Brush = Paint.Color(Color.Blue)
        Endif
      Endif
      Paint.MoveTo(i * 60 * xdf, 0)
      Paint.LineTo(i * 60 * xdf, drwchart.Height)
      Paint.Stroke
    Next
  Endif

  If modBasic.$ClinChartShowGridLabel = "No" Then
  Else
    If modBasic.$ClinColorGridLabel Then
      Paint.Brush = Paint.Color(modBasic.$ClinColorGridLabel)
    Else
      Paint.Brush = Paint.Color(Color.Blue)
    Endif
    Paint.LineWidth = 0.25
    Paint.Font.Size = 10
    For k = 0 To xdiff + 6
      If k = 0 Then
        dt = "D:" & CStr(k + (dcons / 1440) + 1)
      Else If Frac(k / 24) = 0 Then
        dt = "D:" & CStr(k / 24 + (dcons / 1440) + 1)
      Else
        dt = "" ' "H:" & k
      Endif
      Paint.Text(dt, k * 60 * xdf, drwchart.Height - 2)
    Next
    Paint.Fill
  Endif

  Paint.End()

  Dec Application.Busy

End

''---------------------------- Using gb.chart ---------------------------------------
''Private xchart As Chart
''DrawingArea with cached = true

''Dim sTitle As String
''Dim titles As String[]
''Dim strval As Long[]
''sTitle = "[Quantity in Units]"
''xchart = modChart.GetInventoryChart(sTitle, titles, strval)
''grwchart.Cached = False
''xchart.Resize(grwchart.ClientWidth, grwchart.ClientHeight)

''Public Sub grwchart_Draw()
''xchart.Draw
Public Function GetInventoryChart(sTitle As String, xcol As String[], ycol As Float[]) As Chart

  Dim xchart As Chart

  xchart = New Chart
  If ycol.Count < 1 Then Return

  xchart.Headers.Values = xcol
  xchart.CountDataSets = 1
  xchart[0].Values = ycol
  xchart[0].Color = Color.Gray
  xchart.Colors.values = [Color.blue, Color.Yellow]
  xchart.Title.Text = sTitle
  xchart.Title.Font.Size = 10
  xchart.Type = ChartType.LinesSymbols

  xchart.BackGround = Color.White
  xchart.YAxe.AutoScale = True
  xchart.Border = True
  xchart.Legend.Visible = False

  If modBasic.$InvChShowXLabel = "No" Then
    xchart.XAxe.Visible = False
  Else
    xchart.XAxe.Visible = True
  Endif
  xchart.XAxe.Arrange = True

  If modBasic.$InvChShowYLabel = "No" Then
    xchart.YAxe.Visible = False
  Else
    xchart.YAxe.Visible = True
  Endif

  If modSettings.ShowSettingFromFIle("InventoryChart/ShowYInterlines") = "Yes" Then
    xchart.YAxe.ShowIntervalLines = True
  Else
    xchart.YAxe.ShowIntervalLines = False
  Endif

  xchart.ShowLabels = True

  Return xchart

Catch
  modBasic.DebugString(Error.Text)

End
