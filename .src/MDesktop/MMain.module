' Gambas module file

''========================================================
''بسم الله الرحمن الرحيم''
''+++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Public $CustomFormat As String ''= "Nobel","Patan"
Public $IsPolice As Boolean
Public $IsDrugInfo As Boolean
Public $AutoIDFiscal As Boolean

Public $GovtApp As String
Public $Ayurveda As String  ''"Yes" if Ayurvedic EMR
Public $SISHAppMode As String

Public $WebReport As String ''"Multiple" if Report selection by district/municipality/hospital. "Single" otherwise
Public $RepoReportMode As Boolean ''True if Report format as Repository
Public $WebEntry As Boolean  ''True if data entry from online (extra fields like browser and hosp code saved)

Public $IsGUIApp As Boolean
Private $isdebug As Boolean

Public $defUnit As String = "Metric"

''HMIS/Repo Range Variables
Public $AppLogCategory As String
Public $AppLogString As String

Public Sub Main()

  $GovtApp = "Yes"
  $Ayurveda = "No"
  $WebEntry = False
  If Application.Args.Count = 1 Then
    Print Base64("بسم الله الرحمن الرحيم")
    $IsGUIApp = True
    $isdebug = True
    GUIMode()
  Else
    $IsGUIApp = False
    modCommand.DoCommandLineSub()
  Endif

End

Public Sub InitialAppMode()

  If MMain.$SISHAppMode = "REP" Then
    MMain.$WebReport = "Multiple"
    MMain.$RepoReportMode = True
    MMain.$WebEntry = True
  Else
    MMain.$WebReport = "Single"
    MMain.$RepoReportMode = False
    MMain.$WebEntry = False
  Endif

End

Private Sub GUIMode()

  Dim xdebug As String
  Dim xdebDB As String
  Dim xdebugAPI As String
  Dim xdebugmsg As String
  Dim xshel As String
  Dim xlocal As String

  'display both unity and local menu
  Application.Env["APPMENU_DISPLAY_BOTH"] = "1"

  'creating/setting directories
  modHelpVariable.MakeWorkingDir()
  modHelpVariable.CreateWorkingDir(True)
  modHelpVariable.SetAppConfigFile()

  xlocal = modSettings.ShowSettingFromFIle("Application/Localization")
  If xlocal Then
    System.Language = xlocal
  Else
    System.Language = "en_US.UTF-8"
  Endif
  Print "STARTING " & UCase(Application.Name) & " . . . . . . "

  'choose debug mode
  xdebug = modSettings.ShowSettingFromFIle("GeneralSettings/DebuggingMode_Enable")
  xdebDB = modSettings.ShowSettingFromFIle("GeneralSettings/DebuggingDB_Enable")
  xdebugAPI = modSettings.ShowSettingFromFIle("GeneralSettings/DebuggingAPI_Enable")
  xdebugmsg = modSettings.ShowSettingFromFIle("GeneralSettings/DebuggingMessage_Enable")
  If xdebug = "Yes" Then
    modBasic.$DebugMode = True
  Endif
  If xdebDB = "Yes" Then
    modBasic.$DebugDB = True
  Endif
  If xdebugAPI = "Yes" Then
    modBasic.$DebugAPI = True
  Endif
  If xdebugmsg = "Yes" Then
    modBasic.$DebugMsg = True
  Endif
  'set shell to use
  xshel = modSettings.ShowSettingFromFIle("Application/ShellPath")
  If xshel Then
    System.Shell = xshel
  Endif

  StartDesktopAppGUI()

  '----------------------choose HIS or Pharmacy or Laboratoryb-----------------------------------
  $SISHAppMode = modMisc.GetApplicationType()
  If modSettings.ShowSettingFromFIle("TermsOfUse/Accept") = "Yes" Then
    modBasic.DebugString("User has accepted Terms and Conditions for using " & Application.Name & "-" & Application.Version)
    If $SISHAppMode = "HIS" Or If $SISHAppMode = "REP" Then
      ' WebForm.Current = fmLogIn
      fmLogIn.Show
    Else If $SISHAppMode = "PHM" Then
      ' WebForm.Current = fmLogInRE
      fmLogInRE.Show
    Else If $SISHAppMode = "LAB" Then
      ' WebForm.Current = fmLabLogIn
      fmLabLogIn.Show
    Else If $SISHAppMode = "POL" Then
      ' WebForm.Current = fmPolyLogIn
      fmPolyLogIn.Show
    Endif
  Else
    ' WebForm.Current = fmAccept
    fmAccept.Show
  Endif

End

Private Sub StartDesktopAppGUI()

  Dim xfont As String
  Dim xfirday As String
  Dim xtooltip As String
  Dim xtheme As String

  'choose first day of week
  xfirday = modSettings.ShowSettingFromFIle("Application/WeekFirstDay")
  If xfirday Then
    System.FirstDayOfWeek = modDate.GetDayCode(xfirday)
  Else
    System.FirstDayOfWeek = gb.Sunday
  Endif

  'choose font for application
  xfont = modSettings.ShowSettingFromFIle("Application/ApplicationFont")
  If xfont Then
    Application.Font = Font[xfont]
  Endif

  'choose icon theme
  xtheme = modSettings.ShowSettingFromFIle("Application/IconTheme")
  If xtheme Then
    Application.Theme = xtheme
  Endif

  'disable tooltip
  xtooltip = modSettings.ShowSettingFromFIle("GeneralSettings/DisableToolTip")
  If xtooltip = "Yes" Then
    Application.ShowTooltips = False
  Endif

End

Public Sub GetApplVersionType()

  Dim xList As String[]

  xList = modDBApp.GetFIeldsinTable("tblautoid", True, modDatabase.$myConn)
  If xList.Exist("fldfiscal") = True Then
    $AutoIDFiscal = True
  Else
    $AutoIDFiscal = False
  Endif

End

Public Sub Application_Error()

  If Error.Text Then
    ' WebForm.PrintLog(Format(Now(), "yyyy-mm-dd hh:nn:ss:uu") & ": " & Application.Name & ": v" & Application.Version & ": " & "Error Text: " & Error.Text & " [" & Error.Where & "]")
    If MMain.$IsGUIApp = True Then
      Error Format(Now(), "yyyy-mm-dd hh:nn:ss:uu") & ": " & Application.Name & ": v" & Application.Version & ": " & "Error Text: " & Error.Text & " [" & Error.Where & "]"
      Message.Warning(("Application Error") & gb.NewLine & ("Please restart your application."), ("OK"))
    Else
      modHelpVariable.PrintLog(Format(Now(), "yyyy-mm-dd hh:nn:ss:uu") & ": " & Application.Name & ": v" & Application.Version & ": " & "Error Text: " & Error.Text & " [" & Error.Where & "]")
    Endif
    modSettings.SaveValuesToLog("Application Error/" & Format(Now(), gb.GeneralDate), Error.Text & " [" & Error.Where & "]")
  Endif

  If db.Current Then
    If db.Error Then
      ' WebForm.PrintLog(Format(Now(), "yyyy-mm-dd hh:nn:ss:uu") & ": " & Application.Name & ": v" & Application.Version & ": " & "Error Text: " & db.Error)
      If MMain.$IsGUIApp = True Then
        Error Format(Now(), "yyyy-mm-dd hh:nn:ss:uu") & ": " & Application.Name & ": v" & Application.Version & ": " & "Error Text: " & db.Error
        Message.Warning(("Database Error") & gb.NewLine & ("Please restart your application."), ("OK"))
      Else
        modHelpVariable.PrintLog(Format(Now(), "yyyy-mm-dd hh:nn:ss:uu") & ": " & Application.Name & ": v" & Application.Version & ": " & "Error Text: " & db.Error)
      Endif
      modSettings.SaveValuesToLog("Database Error/" & Format(Now(), gb.GeneralDate), db.Error)
    Endif
  Endif

End
