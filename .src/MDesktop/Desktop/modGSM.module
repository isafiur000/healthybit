' Gambas module file

Public $ModemIndex As String
Public $ModemEnabled As Boolean

'NOTE: -------------------------------------- GSM Modem ----------------------------------------------------------
Public Function GetModemList() As String[]

  Dim xx As String
  Dim yy As String
  Dim sLine As String[]
  Dim modPath As String[]
  Dim arcmd As String[]

  modPath = New String[]
  If System.Exist("mmcli") = True Then
    arcmd = ["mmcli", "-L"]
    modBasic.DebugString("Execute " & arcmd.Join(Space(1)))
    Exec arcmd To xx
    sLine = Split(xx, gb.NewLine)
    For Each yy In sLine
      If Left(Trim(yy), 1) = "/" Then
        modPath.Add(Trim(yy))
      Endif
    Next
  Else
    modApplSub.InstallSelectedApplication(["modemmanager"])
  Endif
  Return modPath

End

Public Function USSDSession(sIndex As String, sCmd As String) As String

  Dim xx As String
  Dim yy As String
  Dim arcmd As String[]

  If System.Exist("mmcli") = True Then
    arcmd = ["mmcli", "-m", sIndex, "--3gpp-ussd-initiate='" & sCmd & "'"]
    modBasic.DebugString("Execute " & arcmd.Join(Space(1)))
    Shell arcmd.Join(Space(1)) To xx
    yy = Replace(xx, "USSD session initiated; new reply from network:", "")
  Else
    modApplSub.InstallSelectedApplication(["modemmanager"])
  Endif
  Return yy

End

Private Function GetSingleModemIndex() As String

  Dim xx As String
  Dim sLine As String[]
  Dim sIndex As String[]
  Dim arcmd As String[]

  If System.Exist("mmcli") = True Then
    arcmd = ["mmcli", "-L"]
    modBasic.DebugString("Execute " & arcmd.Join(Space(1)))
    Exec arcmd To xx
    sLine = Split(xx, gb.NewLine)
    If Trim(sLine[1]) = "No modems were found" Then
      Message.Warning(("No modems were found"), ("OK"))
    Else If Trim(sLine[1]) = "Found 1 modems:" Then
      sIndex = Split(Trim(sLine[2]), Space(1))
      Return sIndex[0]
    Else
      Message.Info(("Multiple modems detected. Please select the default modem"), ("OK"))
    Endif
  Else
    modApplSub.InstallSelectedApplication(["modemmanager"])
  Endif

End

Private Function GetDefaultModemIndex() As String

  Dim sIndex As String[]
  Dim xx As String
  Dim xpath As String

  xpath = modSettings.ShowSettingFromFIle("GSMModem/DefaultPath")
  If xpath Then
    sIndex = Split(xpath, Space(1))
    xx = sIndex[0]
  Else
    xx = GetSingleModemIndex()
  Endif
  Return xx

End

''-------------------------------- Enable/Disable Modem ------------------------
Private Sub EnableSelModem(sIndex As String)

  Dim arcmd As String[]

  If System.Exist("mmcli") = True Then
    arcmd = ["mmcli", "-e", "-m", sIndex]
    modBasic.DebugString("Execute " & arcmd.Join(Space(1)))
    Exec arcmd Wait
  Else
    modApplSub.InstallSelectedApplication(["modemmanager"])
  Endif

End

Public Sub StartDefaultModem()

  Dim xx As String

  If $ModemEnabled = False Then
    If modSettings.ShowSettingFromFIle("SMSMethod/Default") = "GSM Modem" Then
      xx = GetDefaultModemIndex()
      If xx Then
        $ModemIndex = xx
        EnableSelModem(xx)
        $ModemEnabled = True
        Wait 1
      Endif
    Else
      $ModemEnabled = True
    Endif
  Endif

End

Private Sub DisableSelModem(sIndex As String)

  Dim arcmd As String[]

  If System.Exist("mmcli") = True Then
    arcmd = ["mmcli", "-d", "-m", sIndex]
    modBasic.DebugString("Execute " & arcmd.Join(Space(1)))
    Exec arcmd Wait
  Else
    modApplSub.InstallSelectedApplication(["modemmanager"])
  Endif

End

Public Sub StopDefaultModem()

  If $ModemEnabled = True Then
    If modSettings.ShowSettingFromFIle("SMSMethod/Default") = "GSM Modem" Then
      DisableSelModem($ModemIndex)
      $ModemEnabled = False

    Else
      $ModemEnabled = False

    Endif
  Endif

End